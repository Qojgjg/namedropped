---
http_interactions:
- request:
    method: get
    uri: https://rss.art19.com/the-daily
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=45, public
      Content-Md5:
      - uJLgxAdfVtsXebZUjE0vuA==
      Content-Type:
      - application/rss+xml; charset=utf-8
      Last-Modified:
      - Wed, 05 Feb 2020 12:52:14 GMT
      Server:
      - nginx/1.17.3
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Via:
      - 1.1 varnish
      - 1.1 varnish
      Content-Length:
      - '2476005'
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 06 Feb 2020 09:19:41 GMT
      Age:
      - '73453'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-sjc10039-SJC, cache-mad22041-MAD
      X-Cache:
      - HIT, HIT
      X-Cache-Hits:
      - 1, 1
      Vary:
      - Accept, Accept-Encoding, Accept-Language
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:art19="https://art19.com/xmlns/rss-extensions/1.0" xmlns:googleplay="https://www.google.com/schemas/play-podcasts/1.0/">
  <channel>
    <title>The Daily</title>
    <description>
      <![CDATA[<p>This is what the news should sound like. The biggest stories of our time, told by the best journalists in the world. Hosted by Michael Barbaro. Twenty minutes a day, five days a week, ready by 6 a.m.</p>]]>
    </description>
    <managingEditor>thedaily@nytimes.com (The New York Times)</managingEditor>
    <copyright>© 2018-2019 THE NEW YORK TIMES COMPANY; The New York Times encourages the use of RSS feeds for personal use in a news reader or as part of a non-commercial blog, subject to your agreement to our Terms of Service. Any commercial use of the RSS feed, and thus our content accessible via it, is prohibited without a written specific permission from The New York Times . We require proper format and attribution whenever New York Times content is posted on other's properties, and we reserve the right to require that you cease distributing our content.</copyright>
    <generator>ART19</generator>
    <atom:link href="https://rss.art19.com/the-daily" rel="self" type="application/rss+xml"/>
    <link>https://www.nytimes.com/the-daily</link>
    <itunes:owner>
      <itunes:name>The New York Times</itunes:name>
      <itunes:email>thedaily@nytimes.com</itunes:email>
    </itunes:owner>
    <itunes:author>The New York Times</itunes:author>
    <itunes:summary>
      <![CDATA[<p>This is what the news should sound like. The biggest stories of our time, told by the best journalists in the world. Hosted by Michael Barbaro. Twenty minutes a day, five days a week, ready by 6 a.m.</p>]]>
    </itunes:summary>
    <language>en</language>
    <itunes:explicit>no</itunes:explicit>
    <itunes:category text="News">
      <itunes:category text="Daily News"/>
    </itunes:category>
    <itunes:type>episodic</itunes:type>
    <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
    <image>
      <url>https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg</url>
      <link>https://www.nytimes.com/the-daily</link>
      <title>The Daily</title>
    </image>
    <item>
      <title>The State of the Union</title>
      <description>
        <![CDATA[<p>Hours after Iowa kicked off the process to choose President Trump’s 2020 opponent, and just a day before the verdict is expected in his Senate impeachment trial, the president gave his third State of the Union address. Today, we take you to The New York Times’s Washington bureau, where we examined the speech — and the unique moment in which it was delivered.</p><p>Guest: <a href="https://www.nytimes.com/by/maggie-haberman?smid=pc-thedaily" target="_blank">Maggie Haberman</a>, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Though Mr. Trump didn’t mention impeachment,<a href="https://www.nytimes.com/2020/02/04/us/politics/pelosi-trump-handshake.html?action=click&amp;module=Spotlight&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> the process hung over his address</a>, and his refusal to shake Speaker Nancy Pelosi’s hand put the bitterness between them on full display.</li><li><a href="https://www.nytimes.com/2020/02/05/us/politics/trump-state-of-the-union.html?action=click&amp;module=Spotlight&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">The speech sounded like a re-election pitch</a>, with the president claiming&nbsp;credit for a “great American comeback.”</li></ul>]]>
      </description>
      <itunes:title>The State of the Union</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Hours after Iowa kicked off the process to choose President Trump’s 2020 opponent, and just a day before the verdict is expected in his Senate impeachment trial, the president gave his third State of the Union address. Today, we take you to The New York Times’s Washington bureau, where we examined the speech — and the unique moment in which it was delivered.

Guest: Maggie Haberman, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Though Mr. Trump didn’t mention impeachment, the process hung over his address, and his refusal to shake Speaker Nancy Pelosi’s hand put the bitterness between them on full display.The speech sounded like a re-election pitch, with the president claiming credit for a “great American comeback.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Hours after Iowa kicked off the process to choose President Trump’s 2020 opponent, and just a day before the verdict is expected in his Senate impeachment trial, the president gave his third State of the Union address. Today, we take you to The New York Times’s Washington bureau, where we examined the speech — and the unique moment in which it was delivered.</p><p>Guest: <a href="https://www.nytimes.com/by/maggie-haberman?smid=pc-thedaily" target="_blank">Maggie Haberman</a>, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Though Mr. Trump didn’t mention impeachment,<a href="https://www.nytimes.com/2020/02/04/us/politics/pelosi-trump-handshake.html?action=click&amp;module=Spotlight&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> the process hung over his address</a>, and his refusal to shake Speaker Nancy Pelosi’s hand put the bitterness between them on full display.</li><li><a href="https://www.nytimes.com/2020/02/05/us/politics/trump-state-of-the-union.html?action=click&amp;module=Spotlight&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">The speech sounded like a re-election pitch</a>, with the president claiming&nbsp;credit for a “great American comeback.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Z94LjDj86rZ312SvFoEW-xM_alvsVIaPIHOltgoet6U</guid>
      <pubDate>Wed, 05 Feb 2020 10:55:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/30418e73-06b3-4344-942f-e152540f05d5.mp3" type="audio/mpeg" length="23561613"/>
    </item>
    <item>
      <title>The Latest: What Happened in Iowa?</title>
      <description>
        <![CDATA[<p>After a night of chaos and confusion at the Iowa caucuses, and nearly a full day since the results were initially expected, the state’s Democratic Party has announced only partial numbers, from 62 percent of precincts. We look at what the debacle in Iowa will mean for the results — when they’re finally released.</p><p><em>“The Latest,” from the team behind “The Daily,” brings you the most important developments on today’s biggest news stories. You can find more information about it </em><a href="https://www.nytimes.com/column/the-latest" target="_blank"><em>here</em></a><em>. </em></p>]]>
      </description>
      <itunes:title>The Latest: What Happened in Iowa?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After a night of chaos and confusion at the Iowa caucuses, and nearly a full day since the results were initially expected, the state’s Democratic Party has announced only partial numbers, from 62 percent of precincts. We look at what the debacle in Iowa will mean for the results — when they’re finally released.

“The Latest,” from the team behind “The Daily,” brings you the most important developments on today’s biggest news stories. You can find more information about it here. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>After a night of chaos and confusion at the Iowa caucuses, and nearly a full day since the results were initially expected, the state’s Democratic Party has announced only partial numbers, from 62 percent of precincts. We look at what the debacle in Iowa will mean for the results — when they’re finally released.</p><p><em>“The Latest,” from the team behind “The Daily,” brings you the most important developments on today’s biggest news stories. You can find more information about it </em><a href="https://www.nytimes.com/column/the-latest" target="_blank"><em>here</em></a><em>. </em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QcuK8nbERYpfhCzAnTyHbnSJELprpzxXGF9d8lmRoLc</guid>
      <pubDate>Wed, 05 Feb 2020 03:16:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3b828d33-2afc-40a7-9626-253defbc6313.mp3" type="audio/mpeg" length="5879431"/>
    </item>
    <item>
      <title>A Very Long Night In Iowa</title>
      <description>
        <![CDATA[<p>The kickoff to the 2020 voting was undercut Monday night by major delays in the reporting of the Iowa caucus results. We traveled to Johnston, Iowa, to tell the story of the day — from the perspective of one caucus in a middle school gym. Guests: <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times and <a href="https://www.nytimes.com/by/reid-j-epstein?smid=pc-thedaily" target="_blank">Reid J. Epstein</a>, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A<a href="https://www.nytimes.com/2020/02/03/us/politics/iowa-caucus-app.html?smid=pc-thedaily" target="_blank"> new system of reporting caucus results</a> led to confusion and few solid numbers — forcing the Iowa Democratic Party to<a href="https://www.nytimes.com/2020/02/03/us/politics/iowa-caucuses.html?smid=pc-thedaily" target="_blank"> delay the release of results</a> until a winner could be verified later Tuesday.</li><li><a href="https://www.nytimes.com/interactive/2020/02/03/us/elections/results-iowa-caucus-democrats.html?smid=pc-thedaily" target="_blank">Here’s where you can see live results</a> as they become available.</li></ul>]]>
      </description>
      <itunes:title>A Very Long Night In Iowa</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The kickoff to the 2020 voting was undercut Monday night by major delays in the reporting of the Iowa caucus results. We traveled to Johnston, Iowa, to tell the story of the day — from the perspective of one caucus in a middle school gym. Guests: Alexander Burns, who covers national politics for The New York Times and Reid J. Epstein, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A new system of reporting caucus results led to confusion and few solid numbers — forcing the Iowa Democratic Party to delay the release of results until a winner could be verified later Tuesday.Here’s where you can see live results as they become available.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The kickoff to the 2020 voting was undercut Monday night by major delays in the reporting of the Iowa caucus results. We traveled to Johnston, Iowa, to tell the story of the day — from the perspective of one caucus in a middle school gym. Guests: <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times and <a href="https://www.nytimes.com/by/reid-j-epstein?smid=pc-thedaily" target="_blank">Reid J. Epstein</a>, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A<a href="https://www.nytimes.com/2020/02/03/us/politics/iowa-caucus-app.html?smid=pc-thedaily" target="_blank"> new system of reporting caucus results</a> led to confusion and few solid numbers — forcing the Iowa Democratic Party to<a href="https://www.nytimes.com/2020/02/03/us/politics/iowa-caucuses.html?smid=pc-thedaily" target="_blank"> delay the release of results</a> until a winner could be verified later Tuesday.</li><li><a href="https://www.nytimes.com/interactive/2020/02/03/us/elections/results-iowa-caucus-democrats.html?smid=pc-thedaily" target="_blank">Here’s where you can see live results</a> as they become available.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/TPxa4yRLCCo7sVVMnHWIxFYEz898BGNMOLAPfy56nME</guid>
      <pubDate>Tue, 04 Feb 2020 10:54:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/46e6985c-5da9-4880-bb3a-e79ae12d5b57.mp3" type="audio/mpeg" length="32073769"/>
    </item>
    <item>
      <title>The Field: Iowa’s Electability Complex</title>
      <description>
        <![CDATA[<p>With Iowa voters making their choice and the 2020 election getting underway, we’re introducing a new show: one covering the country and its voters in the lead up to Nov. 3. In our first episode of “The Field,” we ask Democratic caucusgoers how they’re feeling about the election. Traveling around the state, we found anxious Iowans asking one question over and over: Who can beat President Trump? <em>Note: This episode contains strong language.</em></p><p>Guests: <a href="https://www.nytimes.com/by/astead-w-herndon?smid=pc-thedaily" target="_blank">Astead W. Herndon</a>, who covers national politics for The New York Times, and Austin Mitchell and Andy Mills, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Confused by the Iowa caucuses?<a href="https://www.nytimes.com/interactive/2020/01/31/us/politics/what-is-iowa-caucus.html?smid=pc-thedaily" target="_blank"> Here’s how they work</a>.</li><li>The New York Times polled 584 Democrats likely to caucus in Iowa. Fifteen of them agreed to talk to us on camera.<a href="https://www.nytimes.com/interactive/2020/01/30/us/politics/iowa-poll-voters.html?smid=pc-thedaily" target="_blank"> Here is what they told us</a>.</li><li>The state with a huge influence in picking presidential candidates doesn’t look much like the country as a whole, except in one very striking way:<a href="https://www.nytimes.com/2020/02/02/us/politics/iowa-economy-2020.html?smid=pc-thedaily" target="_blank"> a rapidly aging population</a>.</li></ul>]]>
      </description>
      <itunes:title>The Field: Iowa’s Electability Complex</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With Iowa voters making their choice and the 2020 election getting underway, we’re introducing a new show: one covering the country and its voters in the lead up to Nov. 3. In our first episode of “The Field,” we ask Democratic caucusgoers how they’re feeling about the election. Traveling around the state, we found anxious Iowans asking one question over and over: Who can beat President Trump? Note: This episode contains strong language.

Guests: Astead W. Herndon, who covers national politics for The New York Times, and Austin Mitchell and Andy Mills, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Confused by the Iowa caucuses? Here’s how they work.The New York Times polled 584 Democrats likely to caucus in Iowa. Fifteen of them agreed to talk to us on camera. Here is what they told us.The state with a huge influence in picking presidential candidates doesn’t look much like the country as a whole, except in one very striking way: a rapidly aging population.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>With Iowa voters making their choice and the 2020 election getting underway, we’re introducing a new show: one covering the country and its voters in the lead up to Nov. 3. In our first episode of “The Field,” we ask Democratic caucusgoers how they’re feeling about the election. Traveling around the state, we found anxious Iowans asking one question over and over: Who can beat President Trump? <em>Note: This episode contains strong language.</em></p><p>Guests: <a href="https://www.nytimes.com/by/astead-w-herndon?smid=pc-thedaily" target="_blank">Astead W. Herndon</a>, who covers national politics for The New York Times, and Austin Mitchell and Andy Mills, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Confused by the Iowa caucuses?<a href="https://www.nytimes.com/interactive/2020/01/31/us/politics/what-is-iowa-caucus.html?smid=pc-thedaily" target="_blank"> Here’s how they work</a>.</li><li>The New York Times polled 584 Democrats likely to caucus in Iowa. Fifteen of them agreed to talk to us on camera.<a href="https://www.nytimes.com/interactive/2020/01/30/us/politics/iowa-poll-voters.html?smid=pc-thedaily" target="_blank"> Here is what they told us</a>.</li><li>The state with a huge influence in picking presidential candidates doesn’t look much like the country as a whole, except in one very striking way:<a href="https://www.nytimes.com/2020/02/02/us/politics/iowa-economy-2020.html?smid=pc-thedaily" target="_blank"> a rapidly aging population</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qn4Ll7u7lZg9tUUcud1vQlN5SFWZ2IGMpQ7ldGmOTls</guid>
      <pubDate>Mon, 03 Feb 2020 10:52:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:37:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3b6d1159-d48b-40b7-8f8d-2b3aedb10232.mp3" type="audio/mpeg" length="35609286"/>
    </item>
    <item>
      <title>The Latest: No Witnesses</title>
      <description>
        <![CDATA[<p>In a 51-to-49 vote, Republicans shut down an effort by Democrats to bring new witnesses and documents into the Senate impeachment trial. As they cleared a path toward acquittal, some Republicans stepped forward to explain why they voted as they did — even though they believed what President Trump did was wrong.</p><p><em>“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2020/02/01/podcasts/the-latest-senate-trial-witness-vote.html" target="_blank"><em>here</em></a><em>. </em></p>]]>
      </description>
      <itunes:title>The Latest: No Witnesses</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a 51-to-49 vote, Republicans shut down an effort by Democrats to bring new witnesses and documents into the Senate impeachment trial. As they cleared a path toward acquittal, some Republicans stepped forward to explain why they voted as they did — even though they believed what President Trump did was wrong.

“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it here. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a 51-to-49 vote, Republicans shut down an effort by Democrats to bring new witnesses and documents into the Senate impeachment trial. As they cleared a path toward acquittal, some Republicans stepped forward to explain why they voted as they did — even though they believed what President Trump did was wrong.</p><p><em>“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2020/02/01/podcasts/the-latest-senate-trial-witness-vote.html" target="_blank"><em>here</em></a><em>. </em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/M-kiJAllGlgDM4r2GLrYSpZhzlozxwUFqyJhHAzX58Y</guid>
      <pubDate>Sat, 01 Feb 2020 05:42:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/937eb6ad-9594-4a42-864b-74086c15edd3.mp3" type="audio/mpeg" length="5937946"/>
    </item>
    <item>
      <title>The Lessons of 2016</title>
      <description>
        <![CDATA[<p>The media’s coverage of the 2016 presidential campaign has come to be criticized for operating under three key assumptions: that Hillary Clinton was certain to be the Democratic nominee, that Donald Trump was unlikely to be the Republican nominee, and that once Clinton and Trump had become their party’s nominees, she would win.</p><p>With voting for 2020 set to begin in Iowa on Monday, “The Daily” sat down with<a href="https://www.nytco.com/person/dean-baquet/?smid=pc-thedaily" target="_blank"> Dean Baquet</a>, the executive editor of The New York Times, to discuss the lessons he — and the organization — learned from 2016. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/news-event/2020-election?smid=pc-thedaily" target="_blank">This is our guide</a> to the 2020 election.</li><li>We’ve <a href="https://www.nytimes.com/2019/10/13/reader-center/politics-reporters.html?smid=pc-thedaily" target="_blank">sent reporters to every corner of the country</a> and told them<a href="https://www.nytimes.com/2019/04/16/business/media/2020-campaign-journalism-advice.html?smid=pc-thedaily" target="_blank"> not to make any assumptions</a> in this election cycle. Here are some of the<a href="https://www.nytimes.com/interactive/2019/10/14/reader-center/2020-election-coverage.html?smid=pc-thedaily" target="_blank"> most in-depth stories we’ve told</a> in an effort to help the country understand itself.</li><li>As part of a new approach to election coverage, The Times’s editorial board has re-examined how — and why — it<a href="https://www.nytimes.com/2020/01/13/reader-center/political-endorsements.html?smid=pc-thedaily" target="_blank"> makes presidential endorsements</a>.</li></ul>]]>
      </description>
      <itunes:title>The Lessons of 2016</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The media’s coverage of the 2016 presidential campaign has come to be criticized for operating under three key assumptions: that Hillary Clinton was certain to be the Democratic nominee, that Donald Trump was unlikely to be the Republican nominee, and that once Clinton and Trump had become their party’s nominees, she would win.

With voting for 2020 set to begin in Iowa on Monday, “The Daily” sat down with Dean Baquet, the executive editor of The New York Times, to discuss the lessons he — and the organization — learned from 2016. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: This is our guide to the 2020 election.We’ve sent reporters to every corner of the country and told them not to make any assumptions in this election cycle. Here are some of the most in-depth stories we’ve told in an effort to help the country understand itself.As part of a new approach to election coverage, The Times’s editorial board has re-examined how — and why — it makes presidential endorsements.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The media’s coverage of the 2016 presidential campaign has come to be criticized for operating under three key assumptions: that Hillary Clinton was certain to be the Democratic nominee, that Donald Trump was unlikely to be the Republican nominee, and that once Clinton and Trump had become their party’s nominees, she would win.</p><p>With voting for 2020 set to begin in Iowa on Monday, “The Daily” sat down with<a href="https://www.nytco.com/person/dean-baquet/?smid=pc-thedaily" target="_blank"> Dean Baquet</a>, the executive editor of The New York Times, to discuss the lessons he — and the organization — learned from 2016. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/news-event/2020-election?smid=pc-thedaily" target="_blank">This is our guide</a> to the 2020 election.</li><li>We’ve <a href="https://www.nytimes.com/2019/10/13/reader-center/politics-reporters.html?smid=pc-thedaily" target="_blank">sent reporters to every corner of the country</a> and told them<a href="https://www.nytimes.com/2019/04/16/business/media/2020-campaign-journalism-advice.html?smid=pc-thedaily" target="_blank"> not to make any assumptions</a> in this election cycle. Here are some of the<a href="https://www.nytimes.com/interactive/2019/10/14/reader-center/2020-election-coverage.html?smid=pc-thedaily" target="_blank"> most in-depth stories we’ve told</a> in an effort to help the country understand itself.</li><li>As part of a new approach to election coverage, The Times’s editorial board has re-examined how — and why — it<a href="https://www.nytimes.com/2020/01/13/reader-center/political-endorsements.html?smid=pc-thedaily" target="_blank"> makes presidential endorsements</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Onnmz2It0iF0Eo51uEDnbdVZNHFKgEKV14JStffuBkE</guid>
      <pubDate>Fri, 31 Jan 2020 10:51:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:52:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/46f4da4e-57ff-4e07-8bc8-2a450da6c559.mp3" type="audio/mpeg" length="50531683"/>
    </item>
    <item>
      <title>A Virus’s Journey Across China</title>
      <description>
        <![CDATA[<p>Nearly two decades ago, China was at the heart of a public health crisis over a deadly new virus. It said it had made lifesaving reforms since. So why is the Wuhan coronavirus now spreading so rapidly across the world? Our correspondent went to the center of the outbreak to find out. Guest: <a href="https://www.nytimes.com/by/javier-c-hernandez?smid=pc-thedaily" target="_blank">Javier C. Hernández</a>, a New York Times correspondent based in Beijing. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/article/what-is-coronavirus.html?action=click&amp;pgtype=Article&amp;state=default&amp;module=styln-coronavirus&amp;variant=show&amp;region=TOP_BANNER&amp;context=Menu?smid=pc-thedaily" target="_blank">What is the coronavirus</a>? And <a href="https://www.nytimes.com/2020/01/29/health/china-coronavirus-outbreak.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">why is China struggling</a> to control its spread around the world?</li><li>Unless you are at high risk for catching the disease, it may be a good idea to <a href="https://www.nytimes.com/2020/01/29/health/coronavirus-masks-hoarding.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">avoid buying a face mask</a>. There is now a shortage of masks, leaving health care workers unprotected and expediting the spread of the disease.</li></ul>]]>
      </description>
      <itunes:title>A Virus’s Journey Across China</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nearly two decades ago, China was at the heart of a public health crisis over a deadly new virus. It said it had made lifesaving reforms since. So why is the Wuhan coronavirus now spreading so rapidly across the world? Our correspondent went to the center of the outbreak to find out. Guest: Javier C. Hernández, a New York Times correspondent based in Beijing. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: What is the coronavirus? And why is China struggling to control its spread around the world?Unless you are at high risk for catching the disease, it may be a good idea to avoid buying a face mask. There is now a shortage of masks, leaving health care workers unprotected and expediting the spread of the disease.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nearly two decades ago, China was at the heart of a public health crisis over a deadly new virus. It said it had made lifesaving reforms since. So why is the Wuhan coronavirus now spreading so rapidly across the world? Our correspondent went to the center of the outbreak to find out. Guest: <a href="https://www.nytimes.com/by/javier-c-hernandez?smid=pc-thedaily" target="_blank">Javier C. Hernández</a>, a New York Times correspondent based in Beijing. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/article/what-is-coronavirus.html?action=click&amp;pgtype=Article&amp;state=default&amp;module=styln-coronavirus&amp;variant=show&amp;region=TOP_BANNER&amp;context=Menu?smid=pc-thedaily" target="_blank">What is the coronavirus</a>? And <a href="https://www.nytimes.com/2020/01/29/health/china-coronavirus-outbreak.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">why is China struggling</a> to control its spread around the world?</li><li>Unless you are at high risk for catching the disease, it may be a good idea to <a href="https://www.nytimes.com/2020/01/29/health/coronavirus-masks-hoarding.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">avoid buying a face mask</a>. There is now a shortage of masks, leaving health care workers unprotected and expediting the spread of the disease.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8mYnc7P8jVsRi-FASqSl3_UFqO7vCBQqyUVSBiCmEyU</guid>
      <pubDate>Thu, 30 Jan 2020 10:53:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/db3f554d-50df-4b05-a693-2cb135f1d1e8.mp3" type="audio/mpeg" length="22506684"/>
    </item>
    <item>
      <title>The Latest: The ‘Public Interest’</title>
      <description>
        <![CDATA[<p>In the question-and-answer stage of the Senate impeachment trial, Alan Dershowitz, the celebrity lawyer on President Trump’s legal team, made an argument that stunned many who heard it. Say that Mr. Trump did extend a quid pro quo to Ukraine, and that he did it to improve his own re-election prospects. Says Mr. Dershowitz: What’s wrong with that?</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2020/01/30/podcasts/the-latest-impeachment-alan-dershowitz.html" target="_blank"><em>here</em></a><em>. </em></p>]]>
      </description>
      <itunes:title>The Latest: The ‘Public Interest’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the question-and-answer stage of the Senate impeachment trial, Alan Dershowitz, the celebrity lawyer on President Trump’s legal team, made an argument that stunned many who heard it. Say that Mr. Trump did extend a quid pro quo to Ukraine, and that he did it to improve his own re-election prospects. Says Mr. Dershowitz: What’s wrong with that?

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the question-and-answer stage of the Senate impeachment trial, Alan Dershowitz, the celebrity lawyer on President Trump’s legal team, made an argument that stunned many who heard it. Say that Mr. Trump did extend a quid pro quo to Ukraine, and that he did it to improve his own re-election prospects. Says Mr. Dershowitz: What’s wrong with that?</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2020/01/30/podcasts/the-latest-impeachment-alan-dershowitz.html" target="_blank"><em>here</em></a><em>. </em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XxQppFhx4_RS0TrC9Av3xrkrbPAbmrgHCBTTN3hQ6g8</guid>
      <pubDate>Thu, 30 Jan 2020 05:05:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:08:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3e8e82e3-6dd1-43f5-8619-16793c75fdb3.mp3" type="audio/mpeg" length="7965048"/>
    </item>
    <item>
      <title>Chuck Schumer on Impeachment, Witnesses and the Truth</title>
      <description>
        <![CDATA[<p>Today, we sit down with <a href="https://www.nytimes.com/topic/person/charles-e-schumer?smid=pc-thedaily" target="_blank">Senator Chuck Schumer</a>, the minority leader, to discuss what it’s like to be the leader of a party out of power at this moment in the impeachment trial of President Trump. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>"Look, is it an uphill fight? Yes.” he said. “Are we making progress? Yes.” Why Mr. Schumer<a href="https://www.nytimes.com/2020/01/12/us/politics/chuck-schumer-impeachment.html?smid=pc-thedaily" target="_blank"> believes he can persuade his Republican colleagues</a> to allow new witnesses in the trial.</li><li><a href="https://www.nytimes.com/live/2020/impeachment-trial-live-01-28?smid=pc-thedaily" target="_blank">Here are the latest updates</a> on impeachment, including the Senate’s response to a<a href="https://www.nytimes.com/2020/01/27/us/politics/john-bolton-trump-book-barr.html?smid=pc-thedaily" target="_blank"> Times investigation revealing new claims</a> about the president’s conduct from his former national security adviser John Bolton.</li></ul>]]>
      </description>
      <itunes:title>Chuck Schumer on Impeachment, Witnesses and the Truth</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today, we sit down with Senator Chuck Schumer, the minority leader, to discuss what it’s like to be the leader of a party out of power at this moment in the impeachment trial of President Trump. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: "Look, is it an uphill fight? Yes.” he said. “Are we making progress? Yes.” Why Mr. Schumer believes he can persuade his Republican colleagues to allow new witnesses in the trial.Here are the latest updates on impeachment, including the Senate’s response to a Times investigation revealing new claims about the president’s conduct from his former national security adviser John Bolton.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today, we sit down with <a href="https://www.nytimes.com/topic/person/charles-e-schumer?smid=pc-thedaily" target="_blank">Senator Chuck Schumer</a>, the minority leader, to discuss what it’s like to be the leader of a party out of power at this moment in the impeachment trial of President Trump. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>"Look, is it an uphill fight? Yes.” he said. “Are we making progress? Yes.” Why Mr. Schumer<a href="https://www.nytimes.com/2020/01/12/us/politics/chuck-schumer-impeachment.html?smid=pc-thedaily" target="_blank"> believes he can persuade his Republican colleagues</a> to allow new witnesses in the trial.</li><li><a href="https://www.nytimes.com/live/2020/impeachment-trial-live-01-28?smid=pc-thedaily" target="_blank">Here are the latest updates</a> on impeachment, including the Senate’s response to a<a href="https://www.nytimes.com/2020/01/27/us/politics/john-bolton-trump-book-barr.html?smid=pc-thedaily" target="_blank"> Times investigation revealing new claims</a> about the president’s conduct from his former national security adviser John Bolton.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4kdgNJCYMM-YZuCwlRdVAE62UPihod94ySLQzNjpy8Q</guid>
      <pubDate>Wed, 29 Jan 2020 10:53:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6f6bf1e5-664f-42c3-b75c-7a5dc6bd19f9.mp3" type="audio/mpeg" length="22365413"/>
    </item>
    <item>
      <title>What John Bolton Knows</title>
      <description>
        <![CDATA[<p>A firsthand account by John R. Bolton, the former national security adviser, directly linked President Trump to a quid pro quo in the Ukraine affair, undercutting a central plank of the defense’s argument. What could that mean for the final phase of the impeachment trial? Guests: <a href="https://www.nytimes.com/by/maggie-haberman?smid=pc-thedaily" target="_blank">Maggie Haberman</a>, who covers the White House and <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A Times investigation revealed that Mr. Bolton privately expressed concern to the attorney general last year that the president was<a href="https://www.nytimes.com/2020/01/27/us/politics/john-bolton-trump-book-barr.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> effectively granting personal favors</a> to autocratic leaders around the world.</li><li>Republican senators had been ready to swiftly acquit President Trump. But Mr. Bolton’s revelations in the manuscript of his new book<a href="https://www.nytimes.com/2020/01/27/us/politics/john-bolton-impeachment-witness.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> could change the calculus.</a></li></ul>]]>
      </description>
      <itunes:title>What John Bolton Knows</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A firsthand account by John R. Bolton, the former national security adviser, directly linked President Trump to a quid pro quo in the Ukraine affair, undercutting a central plank of the defense’s argument. What could that mean for the final phase of the impeachment trial? Guests: Maggie Haberman, who covers the White House and Michael S. Schmidt, who covers national security and federal investigations for The New York Times.

For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A Times investigation revealed that Mr. Bolton privately expressed concern to the attorney general last year that the president was effectively granting personal favors to autocratic leaders around the world.Republican senators had been ready to swiftly acquit President Trump. But Mr. Bolton’s revelations in the manuscript of his new book could change the calculus.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A firsthand account by John R. Bolton, the former national security adviser, directly linked President Trump to a quid pro quo in the Ukraine affair, undercutting a central plank of the defense’s argument. What could that mean for the final phase of the impeachment trial? Guests: <a href="https://www.nytimes.com/by/maggie-haberman?smid=pc-thedaily" target="_blank">Maggie Haberman</a>, who covers the White House and <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A Times investigation revealed that Mr. Bolton privately expressed concern to the attorney general last year that the president was<a href="https://www.nytimes.com/2020/01/27/us/politics/john-bolton-trump-book-barr.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> effectively granting personal favors</a> to autocratic leaders around the world.</li><li>Republican senators had been ready to swiftly acquit President Trump. But Mr. Bolton’s revelations in the manuscript of his new book<a href="https://www.nytimes.com/2020/01/27/us/politics/john-bolton-impeachment-witness.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> could change the calculus.</a></li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wn-8Vhe_cns32bV3-rfsU3JqOnzlz9RxK18kejr4o0Y</guid>
      <pubDate>Tue, 28 Jan 2020 10:50:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/674c84f7-8f4c-4bff-b845-6fea8e3722ec.mp3" type="audio/mpeg" length="21508597"/>
    </item>
    <item>
      <title>A Small Town’s Fight Over America’s Biggest Sport</title>
      <description>
        <![CDATA[<p>Across the United States, parents and school districts have been wrestling with the question of whether the country’s most popular and profitable sport is too dangerous for children. Today, we explore how that dispute is playing out in one Texas town. Guests: <a href="https://www.nytimes.com/by/ken-belson?smid=pc-thedaily" target="_blank">Ken Belson</a>, who covers the N.F.L. for The New York Times, spoke with Jim Harris and Spencer Taylor in Marshall, Texas. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Repeated blows to the head while playing<a href="https://www.nytimes.com/interactive/2017/07/25/sports/football/nfl-cte.html" target="_blank"> football have been linked</a> to a degenerative brain disease called C.T.E.</li><li>Football is a powerful, cultural force in Marshall, a city of about 24,000 people in East Texas. But residents, coaches and educators have<a href="https://www.nytimes.com/2019/11/16/sports/youth-tackle-football-marshall-texas.html" target="_blank"> questioned the safety of a sport</a> they cannot imagine living without.</li></ul>]]>
      </description>
      <itunes:title>A Small Town’s Fight Over America’s Biggest Sport</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Across the United States, parents and school districts have been wrestling with the question of whether the country’s most popular and profitable sport is too dangerous for children. Today, we explore how that dispute is playing out in one Texas town. Guests: Ken Belson, who covers the N.F.L. for The New York Times, spoke with Jim Harris and Spencer Taylor in Marshall, Texas. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Repeated blows to the head while playing football have been linked to a degenerative brain disease called C.T.E.Football is a powerful, cultural force in Marshall, a city of about 24,000 people in East Texas. But residents, coaches and educators have questioned the safety of a sport they cannot imagine living without.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Across the United States, parents and school districts have been wrestling with the question of whether the country’s most popular and profitable sport is too dangerous for children. Today, we explore how that dispute is playing out in one Texas town. Guests: <a href="https://www.nytimes.com/by/ken-belson?smid=pc-thedaily" target="_blank">Ken Belson</a>, who covers the N.F.L. for The New York Times, spoke with Jim Harris and Spencer Taylor in Marshall, Texas. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Repeated blows to the head while playing<a href="https://www.nytimes.com/interactive/2017/07/25/sports/football/nfl-cte.html" target="_blank"> football have been linked</a> to a degenerative brain disease called C.T.E.</li><li>Football is a powerful, cultural force in Marshall, a city of about 24,000 people in East Texas. But residents, coaches and educators have<a href="https://www.nytimes.com/2019/11/16/sports/youth-tackle-football-marshall-texas.html" target="_blank"> questioned the safety of a sport</a> they cannot imagine living without.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/37lJesVh13MkIOghXciPVXZY9r1qz8ABEqFknirMxn0</guid>
      <pubDate>Mon, 27 Jan 2020 10:55:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a86952bd-5d10-4678-8b64-62b9b003d667.mp3" type="audio/mpeg" length="29902471"/>
    </item>
    <item>
      <title>The Swing Issue That Could Win a Swing State</title>
      <description>
        <![CDATA[<p>Three Rust Belt swing states are critical to winning the presidency this year — Wisconsin, Michigan and Pennsylvania. In Pennsylvania, there is one issue that could be decisive: fracking natural gas.</p><p>Opposition to fracking could be fatal for a candidate in the state, yet front-runners for the Democratic nomination have committed to banning fracking nationwide if elected. We went to western Pennsylvania, where fracking affects residents daily, to see whether electability in the state could really be reduced to this single issue.</p><p>Guests: <a href="https://www.nytimes.com/by/shane-goldmacher?smid=pc-thedaily" target="_blank">Shane Goldmacher</a>, a national political reporter for The New York Times, traveled to Pennsylvania with Andy Mills and Monika Evstatieva, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Our investigative team revealed how<a href="https://www.nytimes.com/interactive/2019/12/12/climate/texas-methane-super-emitters.html?smid=pc-thedaily" target="_blank"> immense amounts of methane</a>, the primary gas acquired by fracking, are escaping from<a href="https://www.nytimes.com/2018/10/27/climate/trump-fracking-drilling-oil-gas.html?smid=pc-thedaily" target="_blank"> oil and gas sites nationwide</a>, worsening global warming.</li><li><a href="https://archive.nytimes.com/www.nytimes.com/gwire/2011/05/13/13greenwire-baffled-about-fracking-youre-not-alone-44383.html?pagewanted=all?smid=pc-thedaily" target="_blank">What is fracking</a>? And why is it<a href="https://www.nytimes.com/2018/07/31/books/review/eliza-griswold-amity-and-prosperity.html?smid=pc-thedaily" target="_blank"> so harmful to the communities</a> that come in contact with the toxins it leaves behind?</li></ul>]]>
      </description>
      <itunes:title>The Swing Issue That Could Win a Swing State</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Three Rust Belt swing states are critical to winning the presidency this year — Wisconsin, Michigan and Pennsylvania. In Pennsylvania, there is one issue that could be decisive: fracking natural gas.

Opposition to fracking could be fatal for a candidate in the state, yet front-runners for the Democratic nomination have committed to banning fracking nationwide if elected. We went to western Pennsylvania, where fracking affects residents daily, to see whether electability in the state could really be reduced to this single issue.

Guests: Shane Goldmacher, a national political reporter for The New York Times, traveled to Pennsylvania with Andy Mills and Monika Evstatieva, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Our investigative team revealed how immense amounts of methane, the primary gas acquired by fracking, are escaping from oil and gas sites nationwide, worsening global warming.What is fracking? And why is it so harmful to the communities that come in contact with the toxins it leaves behind?</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Three Rust Belt swing states are critical to winning the presidency this year — Wisconsin, Michigan and Pennsylvania. In Pennsylvania, there is one issue that could be decisive: fracking natural gas.</p><p>Opposition to fracking could be fatal for a candidate in the state, yet front-runners for the Democratic nomination have committed to banning fracking nationwide if elected. We went to western Pennsylvania, where fracking affects residents daily, to see whether electability in the state could really be reduced to this single issue.</p><p>Guests: <a href="https://www.nytimes.com/by/shane-goldmacher?smid=pc-thedaily" target="_blank">Shane Goldmacher</a>, a national political reporter for The New York Times, traveled to Pennsylvania with Andy Mills and Monika Evstatieva, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Our investigative team revealed how<a href="https://www.nytimes.com/interactive/2019/12/12/climate/texas-methane-super-emitters.html?smid=pc-thedaily" target="_blank"> immense amounts of methane</a>, the primary gas acquired by fracking, are escaping from<a href="https://www.nytimes.com/2018/10/27/climate/trump-fracking-drilling-oil-gas.html?smid=pc-thedaily" target="_blank"> oil and gas sites nationwide</a>, worsening global warming.</li><li><a href="https://archive.nytimes.com/www.nytimes.com/gwire/2011/05/13/13greenwire-baffled-about-fracking-youre-not-alone-44383.html?pagewanted=all?smid=pc-thedaily" target="_blank">What is fracking</a>? And why is it<a href="https://www.nytimes.com/2018/07/31/books/review/eliza-griswold-amity-and-prosperity.html?smid=pc-thedaily" target="_blank"> so harmful to the communities</a> that come in contact with the toxins it leaves behind?</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RzyE09SESJuHQCxB1ABK4Q8d9vI2LbIrMT1XfWWsUDk</guid>
      <pubDate>Fri, 24 Jan 2020 11:02:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/267bf350-311d-4570-b4e8-4b555d028a6b.mp3" type="audio/mpeg" length="30502243"/>
    </item>
    <item>
      <title>Harry and Meghan. (And Why Their Saga Matters.)</title>
      <description>
        <![CDATA[<p>In a moment of national insecurity, with the future of the United Kingdom seemingly hanging in the balance, a new royal couple offered the vision of a unified, progressive future. But the same forces that pushed for Britain to leave the European Union have now pushed Harry and Meghan, the Duke and Duchess of Sussex, to leave the country.</p><p>Guest: <a href="https://www.nytimes.com/by/mark-landler?smid=pc-thedaily" target="_blank">Mark Landler</a>, the London bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A wish to carve out more “progressive” roles has led to the<a href="https://www.nytimes.com/2020/01/19/world/europe/harry-meghan-royal.html?smid=pc-thedaily" target="_blank"> loss of perks, privileges and titles</a> — a more thorough break than the Duke and Duchess of Sussex seem to have expected.</li><li>The couple’s push for greater independence has<a href="https://www.nytimes.com/2020/01/15/world/europe/harry-meghan-megxit-brexit.html?smid=pc-thedaily" target="_blank"> resurfaced the same questions that animated the Brexit debate</a>.</li><li><a href="https://www.nytimes.com/2020/01/10/world/europe/harry-meghan-markle-racism.html?smid=pc-thedaily" target="_blank">Black Britons expressed support for Harry and Meghan</a>. “Thank God they are free,” one Londoner said. “All of this is about her race. I know it because as a Caribbean woman who did not grow up here, I have experienced it myself.”</li></ul>]]>
      </description>
      <itunes:title>Harry and Meghan. (And Why Their Saga Matters.)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a moment of national insecurity, with the future of the United Kingdom seemingly hanging in the balance, a new royal couple offered the vision of a unified, progressive future. But the same forces that pushed for Britain to leave the European Union have now pushed Harry and Meghan, the Duke and Duchess of Sussex, to leave the country.

Guest: Mark Landler, the London bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A wish to carve out more “progressive” roles has led to the loss of perks, privileges and titles — a more thorough break than the Duke and Duchess of Sussex seem to have expected.The couple’s push for greater independence has resurfaced the same questions that animated the Brexit debate.Black Britons expressed support for Harry and Meghan. “Thank God they are free,” one Londoner said. “All of this is about her race. I know it because as a Caribbean woman who did not grow up here, I have experienced it myself.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a moment of national insecurity, with the future of the United Kingdom seemingly hanging in the balance, a new royal couple offered the vision of a unified, progressive future. But the same forces that pushed for Britain to leave the European Union have now pushed Harry and Meghan, the Duke and Duchess of Sussex, to leave the country.</p><p>Guest: <a href="https://www.nytimes.com/by/mark-landler?smid=pc-thedaily" target="_blank">Mark Landler</a>, the London bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A wish to carve out more “progressive” roles has led to the<a href="https://www.nytimes.com/2020/01/19/world/europe/harry-meghan-royal.html?smid=pc-thedaily" target="_blank"> loss of perks, privileges and titles</a> — a more thorough break than the Duke and Duchess of Sussex seem to have expected.</li><li>The couple’s push for greater independence has<a href="https://www.nytimes.com/2020/01/15/world/europe/harry-meghan-megxit-brexit.html?smid=pc-thedaily" target="_blank"> resurfaced the same questions that animated the Brexit debate</a>.</li><li><a href="https://www.nytimes.com/2020/01/10/world/europe/harry-meghan-markle-racism.html?smid=pc-thedaily" target="_blank">Black Britons expressed support for Harry and Meghan</a>. “Thank God they are free,” one Londoner said. “All of this is about her race. I know it because as a Caribbean woman who did not grow up here, I have experienced it myself.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/41VD4_XhgHqptdYCmAQkwh-JKLQ4AvbySmqCN_in5Rw</guid>
      <pubDate>Thu, 23 Jan 2020 11:00:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4c918921-0e7b-4c68-8cf2-fd5a7424b8ab.mp3" type="audio/mpeg" length="26452636"/>
    </item>
    <item>
      <title>The Latest: ‘Let Us Begin’</title>
      <description>
        <![CDATA[<p>Opening arguments in the Senate impeachment trial are underway. For House impeachment managers, that means an opportunity to formally make their case, uninterrupted, for three straight days. For President Trump’s lawyers and Republican allies, that means three straight days of sitting in the Senate chamber, bound by a vow of silence.</p><p><em>“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2020/01/22/podcasts/the-latest-impeachment-senate-trial-schiff.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: ‘Let Us Begin’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Opening arguments in the Senate impeachment trial are underway. For House impeachment managers, that means an opportunity to formally make their case, uninterrupted, for three straight days. For President Trump’s lawyers and Republican allies, that means three straight days of sitting in the Senate chamber, bound by a vow of silence.

“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Opening arguments in the Senate impeachment trial are underway. For House impeachment managers, that means an opportunity to formally make their case, uninterrupted, for three straight days. For President Trump’s lawyers and Republican allies, that means three straight days of sitting in the Senate chamber, bound by a vow of silence.</p><p><em>“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2020/01/22/podcasts/the-latest-impeachment-senate-trial-schiff.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/yzAv1iQT2U7WCw8V3BOxKw4RVOHlThqKDRMopwnTBFk</guid>
      <pubDate>Thu, 23 Jan 2020 03:43:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:05:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4b417980-be3f-4fb6-aa03-e7106efcc8ed.mp3" type="audio/mpeg" length="4969534"/>
    </item>
    <item>
      <title>The Moderates’ Impeachment Moment </title>
      <description>
        <![CDATA[<p>After nearly 12 hours of vicious debate, the Senate voted early Wednesday to adopt the rules that will govern the rest of the impeachment trial. But in a Republican-controlled chamber, why weren’t they the rules that Senator Mitch McConnell, the majority leader, had originally wanted?</p><p>Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, congressional editor for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>Voting along party lines,<a href="https://www.nytimes.com/2020/01/21/us/politics/senate-impeachment-republicans-democrats.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> Senate Republicans blocked Democrats’ efforts</a> to subpoena witnesses and documents related to President Trump’s dealings with Ukraine.</li><li>As the trial began in earnest,<a href="https://www.nytimes.com/2020/01/21/business/trump-davos.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> Mr. Trump was 4,000 miles away</a>, touting the United States’ economic growth at the World Economic Forum, an elite gathering of business leaders in Davos, Switzerland.</li></ul>]]>
      </description>
      <itunes:title>The Moderates’ Impeachment Moment </itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After nearly 12 hours of vicious debate, the Senate voted early Wednesday to adopt the rules that will govern the rest of the impeachment trial. But in a Republican-controlled chamber, why weren’t they the rules that Senator Mitch McConnell, the majority leader, had originally wanted?

Guest: Julie Hirschfeld Davis, congressional editor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: Voting along party lines, Senate Republicans blocked Democrats’ efforts to subpoena witnesses and documents related to President Trump’s dealings with Ukraine.As the trial began in earnest, Mr. Trump was 4,000 miles away, touting the United States’ economic growth at the World Economic Forum, an elite gathering of business leaders in Davos, Switzerland.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After nearly 12 hours of vicious debate, the Senate voted early Wednesday to adopt the rules that will govern the rest of the impeachment trial. But in a Republican-controlled chamber, why weren’t they the rules that Senator Mitch McConnell, the majority leader, had originally wanted?</p><p>Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, congressional editor for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>Voting along party lines,<a href="https://www.nytimes.com/2020/01/21/us/politics/senate-impeachment-republicans-democrats.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> Senate Republicans blocked Democrats’ efforts</a> to subpoena witnesses and documents related to President Trump’s dealings with Ukraine.</li><li>As the trial began in earnest,<a href="https://www.nytimes.com/2020/01/21/business/trump-davos.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> Mr. Trump was 4,000 miles away</a>, touting the United States’ economic growth at the World Economic Forum, an elite gathering of business leaders in Davos, Switzerland.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/f1N3FM09uEdie40a4t9pdeJLyI-xSXOwL4Ukzu-tijs</guid>
      <pubDate>Wed, 22 Jan 2020 10:50:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2fd713b2-f841-4734-b149-3cc902458148.mp3" type="audio/mpeg" length="22643774"/>
    </item>
    <item>
      <title>Lessons From the Last Impeachment Trial</title>
      <description>
        <![CDATA[<p>As President Trump’s impeachment trial resumes this afternoon, we look back two decades to a time when Google was in its infancy, Y2K was stoking anxiety and partisanship in Congress was not quite so entrenched. That year, 1999, was the last time the Senate considered whether a president had committed high crimes and misdemeanors. So what has changed since the Senate trial of President Bill Clinton, and why is this impeachment such a different story?</p><p>Guest: <a href="https://www.nytimes.com/by/peter-baker?smid=pc-thedaily" target="_blank">Peter Baker</a>, chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>Four journalists at The Times<a href="https://www.nytimes.com/2019/12/17/reader-center/impeachment-clinton-trump.html?smid=pc-thedaily" target="_blank"> tell their stories</a> of covering the last impeachment trial.</li><li>Senator Mitch McConnell, the Republican majority leader, announced rules to try to<a href="https://www.nytimes.com/2020/01/20/us/politics/mcconnell-pushes-to-speed-impeachment-trial-as-trump-requests-swift-acquittal.html?smid=pc-thedaily" target="_blank"> implement a speedy trial</a>. Here’s<a href="https://www.nytimes.com/2020/01/20/us/politics/mcconnell-impeachment-rules-modify-clinton-precedent.html?smid=pc-thedaily" target="_blank"> how the framework differs</a> from the Clinton precedent.</li></ul>]]>
      </description>
      <itunes:title>Lessons From the Last Impeachment Trial</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As President Trump’s impeachment trial resumes this afternoon, we look back two decades to a time when Google was in its infancy, Y2K was stoking anxiety and partisanship in Congress was not quite so entrenched. That year, 1999, was the last time the Senate considered whether a president had committed high crimes and misdemeanors. So what has changed since the Senate trial of President Bill Clinton, and why is this impeachment such a different story?

Guest: Peter Baker, chief White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: Four journalists at The Times tell their stories of covering the last impeachment trial.Senator Mitch McConnell, the Republican majority leader, announced rules to try to implement a speedy trial. Here’s how the framework differs from the Clinton precedent.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As President Trump’s impeachment trial resumes this afternoon, we look back two decades to a time when Google was in its infancy, Y2K was stoking anxiety and partisanship in Congress was not quite so entrenched. That year, 1999, was the last time the Senate considered whether a president had committed high crimes and misdemeanors. So what has changed since the Senate trial of President Bill Clinton, and why is this impeachment such a different story?</p><p>Guest: <a href="https://www.nytimes.com/by/peter-baker?smid=pc-thedaily" target="_blank">Peter Baker</a>, chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>Four journalists at The Times<a href="https://www.nytimes.com/2019/12/17/reader-center/impeachment-clinton-trump.html?smid=pc-thedaily" target="_blank"> tell their stories</a> of covering the last impeachment trial.</li><li>Senator Mitch McConnell, the Republican majority leader, announced rules to try to<a href="https://www.nytimes.com/2020/01/20/us/politics/mcconnell-pushes-to-speed-impeachment-trial-as-trump-requests-swift-acquittal.html?smid=pc-thedaily" target="_blank"> implement a speedy trial</a>. Here’s<a href="https://www.nytimes.com/2020/01/20/us/politics/mcconnell-impeachment-rules-modify-clinton-precedent.html?smid=pc-thedaily" target="_blank"> how the framework differs</a> from the Clinton precedent.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/eXEbrJrL7fS9bjfEvItrhZKjJG_T9iVaGlfxDCOa27o</guid>
      <pubDate>Tue, 21 Jan 2020 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/83222263-a3c0-44fc-b41c-2e6bf8ebb2bc.mp3" type="audio/mpeg" length="33886876"/>
    </item>
    <item>
      <title>Bernie's Big Bet</title>
      <description>
        <![CDATA[<p>The Obama coalition has become almost mythic within the Democratic Party for having united first-time voters, people of color and moderates to win the presidency in 2008. This year, Senator Bernie Sanders is betting that he can win with the support of young voters and people of color — but without the moderates.</p><p>To do that, he’s counting on winning over and energizing the Latino vote. The ultimate test of whether he will be able to do that is in California, where Latinos are the single biggest nonwhite voting bloc. While young Latinos in California overwhelmingly support Mr. Sanders, to become the Democratic nominee, he will need the support of their parents and grandparents as well.</p><p>Guests: <a href="https://www.nytimes.com/by/jennifer-medina?smid=pc-thedaily" target="_blank">Jennifer Medina</a>, a national political correspondent who is covering the 2020 presidential campaign for The New York Times, traveled to California with Jessica Cheung and Monika Evstatieva, producers on “The Daily,” to speak with Latino voters. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>Though Mr. Sanders is a<a href="https://www.nytimes.com/2019/12/06/podcasts/the-daily/bernie-sanders.html?smid=pc-thedaily" target="_blank"> 78-year-old white senator from Vermont</a>, in California,<a href="https://www.nytimes.com/2019/11/08/us/bernie-sanders-latino-voters.html?smid=pc-thedaily" target="_blank"> some Latino supporters are calling him “Tío Bernie,”</a> as if he were an uncle or a family friend.</li><li>Mr. Sanders and Senator Elizabeth Warren, the two leading progressive candidates,<a href="https://www.nytimes.com/2020/01/16/us/politics/bernie-sanders-elizabeth-warren.html?smid=pc-thedaily" target="_blank"> sparred publicly in the last debate</a>.</li></ul>]]>
      </description>
      <itunes:title>Bernie's Big Bet</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Obama coalition has become almost mythic within the Democratic Party for having united first-time voters, people of color and moderates to win the presidency in 2008. This year, Senator Bernie Sanders is betting that he can win with the support of young voters and people of color — but without the moderates.

To do that, he’s counting on winning over and energizing the Latino vote. The ultimate test of whether he will be able to do that is in California, where Latinos are the single biggest nonwhite voting bloc. While young Latinos in California overwhelmingly support Mr. Sanders, to become the Democratic nominee, he will need the support of their parents and grandparents as well.

Guests: Jennifer Medina, a national political correspondent who is covering the 2020 presidential campaign for The New York Times, traveled to California with Jessica Cheung and Monika Evstatieva, producers on “The Daily,” to speak with Latino voters. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: Though Mr. Sanders is a 78-year-old white senator from Vermont, in California, some Latino supporters are calling him “Tío Bernie,” as if he were an uncle or a family friend.Mr. Sanders and Senator Elizabeth Warren, the two leading progressive candidates, sparred publicly in the last debate.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Obama coalition has become almost mythic within the Democratic Party for having united first-time voters, people of color and moderates to win the presidency in 2008. This year, Senator Bernie Sanders is betting that he can win with the support of young voters and people of color — but without the moderates.</p><p>To do that, he’s counting on winning over and energizing the Latino vote. The ultimate test of whether he will be able to do that is in California, where Latinos are the single biggest nonwhite voting bloc. While young Latinos in California overwhelmingly support Mr. Sanders, to become the Democratic nominee, he will need the support of their parents and grandparents as well.</p><p>Guests: <a href="https://www.nytimes.com/by/jennifer-medina?smid=pc-thedaily" target="_blank">Jennifer Medina</a>, a national political correspondent who is covering the 2020 presidential campaign for The New York Times, traveled to California with Jessica Cheung and Monika Evstatieva, producers on “The Daily,” to speak with Latino voters. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>Though Mr. Sanders is a<a href="https://www.nytimes.com/2019/12/06/podcasts/the-daily/bernie-sanders.html?smid=pc-thedaily" target="_blank"> 78-year-old white senator from Vermont</a>, in California,<a href="https://www.nytimes.com/2019/11/08/us/bernie-sanders-latino-voters.html?smid=pc-thedaily" target="_blank"> some Latino supporters are calling him “Tío Bernie,”</a> as if he were an uncle or a family friend.</li><li>Mr. Sanders and Senator Elizabeth Warren, the two leading progressive candidates,<a href="https://www.nytimes.com/2020/01/16/us/politics/bernie-sanders-elizabeth-warren.html?smid=pc-thedaily" target="_blank"> sparred publicly in the last debate</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vyRgaF9fXhGdDn3V6SRgitPEQTEdrYYRKduDRn8hoxQ</guid>
      <pubDate>Fri, 17 Jan 2020 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:36:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fde2a39d-a2e1-45bf-97f2-6032efd2ba2e.mp3" type="audio/mpeg" length="35327164"/>
    </item>
    <item>
      <title>The Impeachment Trial Begins</title>
      <description>
        <![CDATA[<p>The impeachment trial of President Trump begins this morning. Today, we answer all of your questions about what will happen next — including how it will work and what is likely to happen. Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2020/01/15/us/politics/impeachment-managers.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">The House’s long-anticipated vote</a> to send the articles of impeachment to the Senate fell largely along party lines, setting the stage for what promises to be <a href="https://www.nytimes.com/2020/01/15/us/politics/impeachment-managers.html?smid=pc-thedaily" target="_blank">a fiercely partisan trial</a>.</li><li><a href="https://www.nytimes.com/2020/01/13/us/politics/trump-impeachment-trial-process.html?smid=pc-thedaily" target="_blank">Here’s a step-by-step guide</a> to the process.</li></ul>]]>
      </description>
      <itunes:title>The Impeachment Trial Begins</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The impeachment trial of President Trump begins this morning. Today, we answer all of your questions about what will happen next — including how it will work and what is likely to happen. Guest: Nicholas Fandos, who covers Congress for The New York Times.

For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The House’s long-anticipated vote to send the articles of impeachment to the Senate fell largely along party lines, setting the stage for what promises to be a fiercely partisan trial.Here’s a step-by-step guide to the process.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The impeachment trial of President Trump begins this morning. Today, we answer all of your questions about what will happen next — including how it will work and what is likely to happen. Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2020/01/15/us/politics/impeachment-managers.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">The House’s long-anticipated vote</a> to send the articles of impeachment to the Senate fell largely along party lines, setting the stage for what promises to be <a href="https://www.nytimes.com/2020/01/15/us/politics/impeachment-managers.html?smid=pc-thedaily" target="_blank">a fiercely partisan trial</a>.</li><li><a href="https://www.nytimes.com/2020/01/13/us/politics/trump-impeachment-trial-process.html?smid=pc-thedaily" target="_blank">Here’s a step-by-step guide</a> to the process.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4je_6EgZKLILlNin4BqyDNjfG9p1ItO1zWUKeXRvxfg</guid>
      <pubDate>Thu, 16 Jan 2020 10:55:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0143dbf8-0018-4c08-8ad5-4590ded84baa.mp3" type="audio/mpeg" length="24205270"/>
    </item>
    <item>
      <title>The Russian Hacking Plan for 2020</title>
      <description>
        <![CDATA[<p>At the heart of President Trump’s impeachment is his request that Ukraine investigate how his political rival, former Vice President Joseph R. Biden Jr., could be connected to an energy company called Burisma. New reporting from The Times suggests that Russian hackers may be trying to fulfill that request — and potentially hack into the 2020 election itself. Guests: <a href="https://www.nytimes.com/by/nicole-perlroth?smid=pc-thedaily" target="_blank">Nicole Perlroth</a>, who covers cybersecurity for The Times, spoke with Oren Falkowitz, a former analyst at the National Security Agency and co-founder of the cybersecurity company Area 1. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Times has evidence that the same Russian military hackers that stole emails from Hillary Clinton’s campaign in 2016 <a href="https://www.nytimes.com/2020/01/13/us/politics/russian-hackers-burisma-ukraine.html?smid=pc-thedaily" target="_blank">have been infiltrating Burisma, the energy company</a> at the center of the Ukraine affair. Here’s <a href="https://www.nytimes.com/interactive/2017/01/06/us/russian-hack-evidence.html?smid=pc-thedaily" target="_blank">what we know about the hackers</a>.</li><li>New details emerged on Tuesday of <a href="https://www.nytimes.com/2020/01/14/us/politics/trump-impeachment-articles.html?smid=pc-thedaily" target="_blank">Mr. Trump’s pressure campaign on Ukraine</a>, intensifying demands on Senate Republicans to include witness testimony and additional documents in the impeachment trial.</li></ul>]]>
      </description>
      <itunes:title>The Russian Hacking Plan for 2020</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At the heart of President Trump’s impeachment is his request that Ukraine investigate how his political rival, former Vice President Joseph R. Biden Jr., could be connected to an energy company called Burisma. New reporting from The Times suggests that Russian hackers may be trying to fulfill that request — and potentially hack into the 2020 election itself. Guests: Nicole Perlroth, who covers cybersecurity for The Times, spoke with Oren Falkowitz, a former analyst at the National Security Agency and co-founder of the cybersecurity company Area 1. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The Times has evidence that the same Russian military hackers that stole emails from Hillary Clinton’s campaign in 2016 have been infiltrating Burisma, the energy company at the center of the Ukraine affair. Here’s what we know about the hackers.New details emerged on Tuesday of Mr. Trump’s pressure campaign on Ukraine, intensifying demands on Senate Republicans to include witness testimony and additional documents in the impeachment trial.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At the heart of President Trump’s impeachment is his request that Ukraine investigate how his political rival, former Vice President Joseph R. Biden Jr., could be connected to an energy company called Burisma. New reporting from The Times suggests that Russian hackers may be trying to fulfill that request — and potentially hack into the 2020 election itself. Guests: <a href="https://www.nytimes.com/by/nicole-perlroth?smid=pc-thedaily" target="_blank">Nicole Perlroth</a>, who covers cybersecurity for The Times, spoke with Oren Falkowitz, a former analyst at the National Security Agency and co-founder of the cybersecurity company Area 1. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Times has evidence that the same Russian military hackers that stole emails from Hillary Clinton’s campaign in 2016 <a href="https://www.nytimes.com/2020/01/13/us/politics/russian-hackers-burisma-ukraine.html?smid=pc-thedaily" target="_blank">have been infiltrating Burisma, the energy company</a> at the center of the Ukraine affair. Here’s <a href="https://www.nytimes.com/interactive/2017/01/06/us/russian-hack-evidence.html?smid=pc-thedaily" target="_blank">what we know about the hackers</a>.</li><li>New details emerged on Tuesday of <a href="https://www.nytimes.com/2020/01/14/us/politics/trump-impeachment-articles.html?smid=pc-thedaily" target="_blank">Mr. Trump’s pressure campaign on Ukraine</a>, intensifying demands on Senate Republicans to include witness testimony and additional documents in the impeachment trial.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7nKCEPn_Blu60hQG7Oez3P82SttY3F8h8un_MczvPL0</guid>
      <pubDate>Wed, 15 Jan 2020 10:51:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ea3fb48f-7bef-4e25-9534-07aecd1cb9ea.mp3" type="audio/mpeg" length="22757877"/>
    </item>
    <item>
      <title>The Escape of Carlos Ghosn</title>
      <description>
        <![CDATA[<p>Carlos Ghosn’s trial was poised to be one of the most closely watched in Japanese history — a case involving claims of corporate greed, wounded national pride and a rigged legal system. Then the former Nissan chief pulled off an unimaginable escape. Guest: <a href="https://www.nytimes.com/by/ben-dooley?smid=pc-thedaily" target="_blank">Ben Dooley</a>, a business reporter for The New York Times based in Japan. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Mr. Ghosn leaves behind a contentious history at one of the world’s largest car manufacturers, a record which is now unlikely to be<a href="https://www.nytimes.com/2020/01/05/business/japan-carlos-ghosn.html" target="_blank"> scrutinized in Japanese courts</a>. “Nobody’s going to take it from me,”<a href="https://www.nytimes.com/2020/01/08/business/carlos-ghosn-interview.html?smid=pc-thedaily" target="_blank"> Mr. Ghosn said of his legacy</a>.</li><li>The tycoon’s<a href="https://www.nytimes.com/2020/01/06/business/carlos-ghosn-escape.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> escape preparations spanned the globe</a>, revealing the means by which the well-connected can evade legal accountability.</li></ul>]]>
      </description>
      <itunes:title>The Escape of Carlos Ghosn</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Carlos Ghosn’s trial was poised to be one of the most closely watched in Japanese history — a case involving claims of corporate greed, wounded national pride and a rigged legal system. Then the former Nissan chief pulled off an unimaginable escape. Guest: Ben Dooley, a business reporter for The New York Times based in Japan. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Mr. Ghosn leaves behind a contentious history at one of the world’s largest car manufacturers, a record which is now unlikely to be scrutinized in Japanese courts. “Nobody’s going to take it from me,” Mr. Ghosn said of his legacy.The tycoon’s escape preparations spanned the globe, revealing the means by which the well-connected can evade legal accountability.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Carlos Ghosn’s trial was poised to be one of the most closely watched in Japanese history — a case involving claims of corporate greed, wounded national pride and a rigged legal system. Then the former Nissan chief pulled off an unimaginable escape. Guest: <a href="https://www.nytimes.com/by/ben-dooley?smid=pc-thedaily" target="_blank">Ben Dooley</a>, a business reporter for The New York Times based in Japan. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Mr. Ghosn leaves behind a contentious history at one of the world’s largest car manufacturers, a record which is now unlikely to be<a href="https://www.nytimes.com/2020/01/05/business/japan-carlos-ghosn.html" target="_blank"> scrutinized in Japanese courts</a>. “Nobody’s going to take it from me,”<a href="https://www.nytimes.com/2020/01/08/business/carlos-ghosn-interview.html?smid=pc-thedaily" target="_blank"> Mr. Ghosn said of his legacy</a>.</li><li>The tycoon’s<a href="https://www.nytimes.com/2020/01/06/business/carlos-ghosn-escape.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> escape preparations spanned the globe</a>, revealing the means by which the well-connected can evade legal accountability.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8ETtAQRaFp7ZpTiK2tYLQN0kTFQQAH4Bs-iMK1vSaKk</guid>
      <pubDate>Tue, 14 Jan 2020 10:55:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cd316b55-cb6e-4c4f-842c-033909cecf78.mp3" type="audio/mpeg" length="26386599"/>
    </item>
    <item>
      <title>Why Australia Is Burning</title>
      <description>
        <![CDATA[<p>Wildfires are devastating Australia, incinerating an area roughly the size of West Virginia and killing 24 people and as many as half a billion animals. Today, we look at the human and environmental costs of the disaster, its connection to climate change and why so many Australians are frustrated by Prime Minister Scott Morrison’s response.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/livia-albeck-ripka?smid=pc-thedaily" target="_blank">Livia Albeck-Ripka</a>, a reporter for The Times in Melbourne a reporter for The Times in Melbourne who spoke with Susan Pulis, a woman who fled the fires with kangaroos and koalas in her car. For more information on today’s episode, visit <a href="https://www.nytimes.com/column/the-daily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>After Australia’s hottest and driest year on record, Mr. Morrison has minimized the connection between the<a href="https://www.nytimes.com/2020/01/04/world/australia/fires-scott-morrison.html?searchResultPosition=2?smid=pc-thedaily" target="_blank"> wildfire crisis and climate change</a> and declined to make moves to<a href="https://www.nytimes.com/2020/01/12/world/australia/fires-bushfires-scott-morrison-interview.html?smid=pc-thedaily" target="_blank"> curb the country’s carbon emissions</a>.</li><li>Many Australians entered the new year under<a href="https://www.nytimes.com/2020/01/08/world/australia/fires-readers-escape.html?smid=pc-thedaily" target="_blank"> apocalyptic blood-red skies</a> as smoke from the fires choked the country’s southeastern coast. “I look outside and it’s like the end of the world. Armageddon is here,” one woman in Canberra said.</li><li>The fires have burned through dozens of towns, destroying at least 3,000 homes. Now, unbridled by continuous fire fighting, the<a href="https://www.nytimes.com/2020/01/09/world/australia/fires.html?smid=pc-thedaily" target="_blank"> blazes have returned</a> to some scorched areas to level what is left.&nbsp;</li><li>Rupert Murdoch controls the largest news company in Australia, and his newspapers have contributed to a<a href="https://www.nytimes.com/2020/01/08/world/australia/fires-murdoch-disinformation.html?searchResultPosition=2?smid=pc-thedaily" target="_blank"> wave of misinformation</a> about the cause of the fires.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>Why Australia Is Burning</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Wildfires are devastating Australia, incinerating an area roughly the size of West Virginia and killing 24 people and as many as half a billion animals. Today, we look at the human and environmental costs of the disaster, its connection to climate change and why so many Australians are frustrated by Prime Minister Scott Morrison’s response. 

Guest: Livia Albeck-Ripka, a reporter for The Times in Melbourne a reporter for The Times in Melbourne who spoke with Susan Pulis, a woman who fled the fires with kangaroos and koalas in her car. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: After Australia’s hottest and driest year on record, Mr. Morrison has minimized the connection between the wildfire crisis and climate change and declined to make moves to curb the country’s carbon emissions.Many Australians entered the new year under apocalyptic blood-red skies as smoke from the fires choked the country’s southeastern coast. “I look outside and it’s like the end of the world. Armageddon is here,” one woman in Canberra said.The fires have burned through dozens of towns, destroying at least 3,000 homes. Now, unbridled by continuous fire fighting, the blazes have returned to some scorched areas to level what is left. Rupert Murdoch controls the largest news company in Australia, and his newspapers have contributed to a wave of misinformation about the cause of the fires. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Wildfires are devastating Australia, incinerating an area roughly the size of West Virginia and killing 24 people and as many as half a billion animals. Today, we look at the human and environmental costs of the disaster, its connection to climate change and why so many Australians are frustrated by Prime Minister Scott Morrison’s response.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/livia-albeck-ripka?smid=pc-thedaily" target="_blank">Livia Albeck-Ripka</a>, a reporter for The Times in Melbourne a reporter for The Times in Melbourne who spoke with Susan Pulis, a woman who fled the fires with kangaroos and koalas in her car. For more information on today’s episode, visit <a href="https://www.nytimes.com/column/the-daily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>After Australia’s hottest and driest year on record, Mr. Morrison has minimized the connection between the<a href="https://www.nytimes.com/2020/01/04/world/australia/fires-scott-morrison.html?searchResultPosition=2?smid=pc-thedaily" target="_blank"> wildfire crisis and climate change</a> and declined to make moves to<a href="https://www.nytimes.com/2020/01/12/world/australia/fires-bushfires-scott-morrison-interview.html?smid=pc-thedaily" target="_blank"> curb the country’s carbon emissions</a>.</li><li>Many Australians entered the new year under<a href="https://www.nytimes.com/2020/01/08/world/australia/fires-readers-escape.html?smid=pc-thedaily" target="_blank"> apocalyptic blood-red skies</a> as smoke from the fires choked the country’s southeastern coast. “I look outside and it’s like the end of the world. Armageddon is here,” one woman in Canberra said.</li><li>The fires have burned through dozens of towns, destroying at least 3,000 homes. Now, unbridled by continuous fire fighting, the<a href="https://www.nytimes.com/2020/01/09/world/australia/fires.html?smid=pc-thedaily" target="_blank"> blazes have returned</a> to some scorched areas to level what is left.&nbsp;</li><li>Rupert Murdoch controls the largest news company in Australia, and his newspapers have contributed to a<a href="https://www.nytimes.com/2020/01/08/world/australia/fires-murdoch-disinformation.html?searchResultPosition=2?smid=pc-thedaily" target="_blank"> wave of misinformation</a> about the cause of the fires.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/X0pi6ehMR__EqQOi7I1xJNLC--Ei6_EpofdCiLJnyZ8</guid>
      <pubDate>Mon, 13 Jan 2020 10:57:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/332864a9-7b1f-4702-9080-19d446d66bd3.mp3" type="audio/mpeg" length="25608777"/>
    </item>
    <item>
      <title>The Case Against Harvey Weinstein, Part 2</title>
      <description>
        <![CDATA[<p><em>Note: This episode contains descriptions of sexual violence.&nbsp;</em></p><p>Yesterday on “The Daily,” we heard the story of Lucia Evans, whose allegation of sexual violence against Harvey Weinstein helped launch his criminal trial in New York. After Ms. Evans was dropped from the case, questions were raised about how a man accused of sexual misconduct by more than 80 women could end up facing so few of them in court. In the second half of this series, what happened next in the case against Harvey Weinstein. Guests: <a href="https://www.nytimes.com/by/jodi-kantor?smid=pc-thedaily" target="_blank">Jodi Kantor</a> and<a href="https://www.nytimes.com/by/megan-twohey?smid=pc-thedaily" target="_blank"> Megan Twohey</a>, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Weinstein built a<a href="https://www.nytimes.com/interactive/2017/12/05/us/harvey-weinstein-complicity.html?smid=pc-thedaily" target="_blank"> network of complicity</a> that dozens of women say kept them silent for years.&nbsp;</li><li>Opening statements in the trial have yet to be made, as this week has focused on<a href="https://www.nytimes.com/2020/01/08/nyregion/harvey-weinstein-trial-jury-selection.html?searchResultPosition=7?smid=pc-thedaily" target="_blank"> jury selection</a> and<a href="https://www.nytimes.com/2020/01/09/nyregion/harvey-weinstein-trial.html?searchResultPosition=4?smid=pc-thedaily" target="_blank"> clashes over the rules of decorum in court</a>.</li></ul>]]>
      </description>
      <itunes:title>The Case Against Harvey Weinstein, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Note: This episode contains descriptions of sexual violence. 

Yesterday on “The Daily,” we heard the story of Lucia Evans, whose allegation of sexual violence against Harvey Weinstein helped launch his criminal trial in New York. After Ms. Evans was dropped from the case, questions were raised about how a man accused of sexual misconduct by more than 80 women could end up facing so few of them in court. In the second half of this series, what happened next in the case against Harvey Weinstein. Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Weinstein built a network of complicity that dozens of women say kept them silent for years. Opening statements in the trial have yet to be made, as this week has focused on jury selection and clashes over the rules of decorum in court.</itunes:summary>
      <content:encoded>
        <![CDATA[<p><em>Note: This episode contains descriptions of sexual violence.&nbsp;</em></p><p>Yesterday on “The Daily,” we heard the story of Lucia Evans, whose allegation of sexual violence against Harvey Weinstein helped launch his criminal trial in New York. After Ms. Evans was dropped from the case, questions were raised about how a man accused of sexual misconduct by more than 80 women could end up facing so few of them in court. In the second half of this series, what happened next in the case against Harvey Weinstein. Guests: <a href="https://www.nytimes.com/by/jodi-kantor?smid=pc-thedaily" target="_blank">Jodi Kantor</a> and<a href="https://www.nytimes.com/by/megan-twohey?smid=pc-thedaily" target="_blank"> Megan Twohey</a>, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Weinstein built a<a href="https://www.nytimes.com/interactive/2017/12/05/us/harvey-weinstein-complicity.html?smid=pc-thedaily" target="_blank"> network of complicity</a> that dozens of women say kept them silent for years.&nbsp;</li><li>Opening statements in the trial have yet to be made, as this week has focused on<a href="https://www.nytimes.com/2020/01/08/nyregion/harvey-weinstein-trial-jury-selection.html?searchResultPosition=7?smid=pc-thedaily" target="_blank"> jury selection</a> and<a href="https://www.nytimes.com/2020/01/09/nyregion/harvey-weinstein-trial.html?searchResultPosition=4?smid=pc-thedaily" target="_blank"> clashes over the rules of decorum in court</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_cbOrjOcDx13DdiOB2Y9RpZg97glCC04m3IE51wAZUo</guid>
      <pubDate>Fri, 10 Jan 2020 10:59:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e163ee32-7ae9-453e-a81e-a8c4e60a4c96.mp3" type="audio/mpeg" length="31953815"/>
    </item>
    <item>
      <title>The Case Against Harvey Weinstein, Part 1</title>
      <description>
        <![CDATA[<p><em>Note: This episode contains descriptions of sexual violence.&nbsp;</em></p><p>The story of Harvey Weinstein is a story of patterns. Scores of women — more than 80 — have given eerily similar accounts of abuse and harassment by the powerful movie mogul.</p><p>This week, two years after those allegations were first reported in The New York Times, Mr. Weinstein’s trial opens in New York. In the first part of a two-part series, we investigate why the case went from 80 potential plaintiffs to two.</p><p>Guest: <a href="https://www.nytimes.com/by/megan-twohey?smid=pc-thedaily" target="_blank">Megan Twohey</a>, an investigative reporter for The Times and co-author of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Weinstein’s reputation preceded him as he stepped into a Manhattan courthouse this week to face charges of rape and criminal sexual activity, making it <a href="https://www.nytimes.com/2020/01/08/nyregion/harvey-weinstein-trial-jury-selection.html?searchResultPosition=5?smid=pc-thedaily" target="_blank">difficult to find jurors</a> who did not already have strong opinions about the case.</li><li>The reporters who broke the first investigation into Mr. Weinstein<a href="https://www.nytimes.com/2020/01/05/us/harvey-weinstein-trial.html?searchResultPosition=6?smid=pc-thedaily" target="_blank"> explain why the trial rests on a narrow legal case</a> with an already fraught back story and why the result is highly unpredictable.</li><li>On the first day of Mr. Weinstein’s trial, two other criminal allegations against him<a href="https://www.nytimes.com/2020/01/06/nyregion/harvey-weinstein-trial.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> were released in Los Angeles</a>.</li></ul>]]>
      </description>
      <itunes:title>The Case Against Harvey Weinstein, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Note: This episode contains descriptions of sexual violence. 

The story of Harvey Weinstein is a story of patterns. Scores of women — more than 80 — have given eerily similar accounts of abuse and harassment by the powerful movie mogul.

This week, two years after those allegations were first reported in The New York Times, Mr. Weinstein’s trial opens in New York. In the first part of a two-part series, we investigate why the case went from 80 potential plaintiffs to two.

Guest: Megan Twohey, an investigative reporter for The Times and co-author of “She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Weinstein’s reputation preceded him as he stepped into a Manhattan courthouse this week to face charges of rape and criminal sexual activity, making it difficult to find jurors who did not already have strong opinions about the case.The reporters who broke the first investigation into Mr. Weinstein explain why the trial rests on a narrow legal case with an already fraught back story and why the result is highly unpredictable.On the first day of Mr. Weinstein’s trial, two other criminal allegations against him were released in Los Angeles.</itunes:summary>
      <content:encoded>
        <![CDATA[<p><em>Note: This episode contains descriptions of sexual violence.&nbsp;</em></p><p>The story of Harvey Weinstein is a story of patterns. Scores of women — more than 80 — have given eerily similar accounts of abuse and harassment by the powerful movie mogul.</p><p>This week, two years after those allegations were first reported in The New York Times, Mr. Weinstein’s trial opens in New York. In the first part of a two-part series, we investigate why the case went from 80 potential plaintiffs to two.</p><p>Guest: <a href="https://www.nytimes.com/by/megan-twohey?smid=pc-thedaily" target="_blank">Megan Twohey</a>, an investigative reporter for The Times and co-author of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Weinstein’s reputation preceded him as he stepped into a Manhattan courthouse this week to face charges of rape and criminal sexual activity, making it <a href="https://www.nytimes.com/2020/01/08/nyregion/harvey-weinstein-trial-jury-selection.html?searchResultPosition=5?smid=pc-thedaily" target="_blank">difficult to find jurors</a> who did not already have strong opinions about the case.</li><li>The reporters who broke the first investigation into Mr. Weinstein<a href="https://www.nytimes.com/2020/01/05/us/harvey-weinstein-trial.html?searchResultPosition=6?smid=pc-thedaily" target="_blank"> explain why the trial rests on a narrow legal case</a> with an already fraught back story and why the result is highly unpredictable.</li><li>On the first day of Mr. Weinstein’s trial, two other criminal allegations against him<a href="https://www.nytimes.com/2020/01/06/nyregion/harvey-weinstein-trial.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> were released in Los Angeles</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fVBQ4t1sqUPT6A2vmYnGOyXJZo3sxQHH8Wm02iGRU14</guid>
      <pubDate>Thu, 09 Jan 2020 10:50:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:38:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8b9d5aa9-839e-4793-92a9-ae88320429da.mp3" type="audio/mpeg" length="36945084"/>
    </item>
    <item>
      <title>Pelosi’s Impeachment Gamble</title>
      <description>
        <![CDATA[<p>John R. Bolton, the former White House national security adviser, has announced that he is willing to give evidence in the impeachment trial of President Trump. The question is: Will the Senate — and the majority leader, Mitch McConnell — let that happen? Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li><a href="https://www.nytimes.com/2020/01/06/us/politics/bolton-testify-impeachment-trial.html?smid=pc-thedaily" target="_blank">Mr. Bolton’s announcement</a> was an unexpected turn that could alter the political dynamic of the impeachment process, raising the possibility of Republican defections.</li><li>In response, Mr. McConnell said that<a href="https://www.nytimes.com/2020/01/07/us/politics/impeachment-trial-witnesses.html?smid=pc-thedaily" target="_blank"> he had the votes he needed</a> to quickly acquit the president without calling witnesses or hearing new evidence.</li></ul>]]>
      </description>
      <itunes:title>Pelosi’s Impeachment Gamble</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>John R. Bolton, the former White House national security adviser, has announced that he is willing to give evidence in the impeachment trial of President Trump. The question is: Will the Senate — and the majority leader, Mitch McConnell — let that happen? Guest: Julie Hirschfeld Davis, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Bolton’s announcement was an unexpected turn that could alter the political dynamic of the impeachment process, raising the possibility of Republican defections.In response, Mr. McConnell said that he had the votes he needed to quickly acquit the president without calling witnesses or hearing new evidence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>John R. Bolton, the former White House national security adviser, has announced that he is willing to give evidence in the impeachment trial of President Trump. The question is: Will the Senate — and the majority leader, Mitch McConnell — let that happen? Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li><a href="https://www.nytimes.com/2020/01/06/us/politics/bolton-testify-impeachment-trial.html?smid=pc-thedaily" target="_blank">Mr. Bolton’s announcement</a> was an unexpected turn that could alter the political dynamic of the impeachment process, raising the possibility of Republican defections.</li><li>In response, Mr. McConnell said that<a href="https://www.nytimes.com/2020/01/07/us/politics/impeachment-trial-witnesses.html?smid=pc-thedaily" target="_blank"> he had the votes he needed</a> to quickly acquit the president without calling witnesses or hearing new evidence.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-T81ZYsGWIehCN_tgYs88siZfj2TOtpGCyTLZuLiWi0</guid>
      <pubDate>Wed, 08 Jan 2020 10:51:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/300c6734-b34d-48a2-8a90-78a4b6c82a19.mp3" type="audio/mpeg" length="23631830"/>
    </item>
    <item>
      <title>Why Iran Is in Mourning</title>
      <description>
        <![CDATA[<p>The killing of Maj. Gen. Qassim Suleimani, Iran’s most formidable military and intelligence leader, displayed the fault lines in a fractious region. From Iraq to Israel, many victims of the commander’s shadow warfare celebrated his death; but in Tehran, thousands filled the streets to grieve. Today, we explore who General Suleimani was, and what he meant to Iranians.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/search?query=farnaz+fassihi?smid=pc-thedaily" target="_blank">Farnaz Fassihi</a>, a reporter covering Iran for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>As we break down how religious differences have fueled conflict in Iraq and Iran, here’s a refresher on the distinction between <a href="https://www.nytimes.com/2016/01/04/world/middleeast/q-and-a-how-do-sunni-and-shia-islam-differ.html?smid=pc-thedaily" target="_blank">Sunni and Shia Islam</a>.&nbsp;</li><li>At General Suleimani’s funeral, a senior military leader<a href="https://www.nytimes.com/2020/01/07/world/middleeast/trump-iran-qassem-soleimani.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> vowed to set America “ablaze.”</a> But it remains uncertain<a href="https://www.nytimes.com/2020/01/04/world/middleeast/qassim-suleimani-deter-iran.html?smid=pc-thedaily" target="_blank"> how, or even whether, Iran will strike back</a>.</li><li><a href="https://www.nytimes.com/2020/01/06/us/politics/trump-esper-iran-cultural-sites.html?smid=pc-thedaily" target="_blank">President Trump and his defense secretary have said different things</a> about how the United States might respond to any Iranian retaliation. One of our Interpreter columnists<a href="https://www.nytimes.com/2020/01/06/world/middleeast/trump-iran-soleimani-strategy.html?smid=pc-thedaily" target="_blank"> is struggling to see a deeper strategy</a>.</li><li>Dozens of American citizens of Iranian descent<a href="https://www.nytimes.com/2020/01/06/us/border-iranians-washington-patrol.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> have been detained</a> while trying to enter the United States. “My kids shouldn’t experience such things,” one woman said after being held overnight upon return from a ski trip in Canada. “They are U.S. citizens. This is not O.K.”</li></ul>]]>
      </description>
      <itunes:title>Why Iran Is in Mourning</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The killing of Maj. Gen. Qassim Suleimani, Iran’s most formidable military and intelligence leader, displayed the fault lines in a fractious region. From Iraq to Israel, many victims of the commander’s shadow warfare celebrated his death; but in Tehran, thousands filled the streets to grieve. Today, we explore who General Suleimani was, and what he meant to Iranians. 

Guest: Farnaz Fassihi, a reporter covering Iran for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:As we break down how religious differences have fueled conflict in Iraq and Iran, here’s a refresher on the distinction between Sunni and Shia Islam. At General Suleimani’s funeral, a senior military leader vowed to set America “ablaze.” But it remains uncertain how, or even whether, Iran will strike back.President Trump and his defense secretary have said different things about how the United States might respond to any Iranian retaliation. One of our Interpreter columnists is struggling to see a deeper strategy.Dozens of American citizens of Iranian descent have been detained while trying to enter the United States. “My kids shouldn’t experience such things,” one woman said after being held overnight upon return from a ski trip in Canada. “They are U.S. citizens. This is not O.K.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The killing of Maj. Gen. Qassim Suleimani, Iran’s most formidable military and intelligence leader, displayed the fault lines in a fractious region. From Iraq to Israel, many victims of the commander’s shadow warfare celebrated his death; but in Tehran, thousands filled the streets to grieve. Today, we explore who General Suleimani was, and what he meant to Iranians.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/search?query=farnaz+fassihi?smid=pc-thedaily" target="_blank">Farnaz Fassihi</a>, a reporter covering Iran for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>As we break down how religious differences have fueled conflict in Iraq and Iran, here’s a refresher on the distinction between <a href="https://www.nytimes.com/2016/01/04/world/middleeast/q-and-a-how-do-sunni-and-shia-islam-differ.html?smid=pc-thedaily" target="_blank">Sunni and Shia Islam</a>.&nbsp;</li><li>At General Suleimani’s funeral, a senior military leader<a href="https://www.nytimes.com/2020/01/07/world/middleeast/trump-iran-qassem-soleimani.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> vowed to set America “ablaze.”</a> But it remains uncertain<a href="https://www.nytimes.com/2020/01/04/world/middleeast/qassim-suleimani-deter-iran.html?smid=pc-thedaily" target="_blank"> how, or even whether, Iran will strike back</a>.</li><li><a href="https://www.nytimes.com/2020/01/06/us/politics/trump-esper-iran-cultural-sites.html?smid=pc-thedaily" target="_blank">President Trump and his defense secretary have said different things</a> about how the United States might respond to any Iranian retaliation. One of our Interpreter columnists<a href="https://www.nytimes.com/2020/01/06/world/middleeast/trump-iran-soleimani-strategy.html?smid=pc-thedaily" target="_blank"> is struggling to see a deeper strategy</a>.</li><li>Dozens of American citizens of Iranian descent<a href="https://www.nytimes.com/2020/01/06/us/border-iranians-washington-patrol.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> have been detained</a> while trying to enter the United States. “My kids shouldn’t experience such things,” one woman said after being held overnight upon return from a ski trip in Canada. “They are U.S. citizens. This is not O.K.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ikJR2P6qsXpSXofrgZL77bsxbD6mZtcmN7GP5m-UIRI</guid>
      <pubDate>Tue, 07 Jan 2020 10:57:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ff6113e6-58fb-45d5-8a26-d3b6ab3c17e1.mp3" type="audio/mpeg" length="24493662"/>
    </item>
    <item>
      <title>The Killing of General Qassim Suleimani</title>
      <description>
        <![CDATA[<p>Iran has promised “severe revenge” against the United States for the killing of Maj. Gen. Qassim Suleimani. But what made the high-ranking military leader an American target in the first place? Guest: <a href="https://www.nytimes.com/by/helene-cooper?smid=pc-thedaily" target="_blank">Helene Cooper</a>, who covers the Pentagon for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li><a href="https://www.nytimes.com/2020/01/03/obituaries/qassem-soleimani-dead.html?smid=pc-thedaily" target="_blank">Maj. Gen. Qassim Suleimani</a> was known as the instigator behind proxy wars that fueled instability in the Middle East. His death further disturbed<a href="https://www.nytimes.com/2020/01/05/world/middleeast/mideast-allies-suleimani.html?smid=pc-thedaily" target="_blank"> the region’s delicate power balances</a> — and<a href="https://www.nytimes.com/2020/01/05/world/middleeast/iran-general-soleimani-iraq.html?smid=pc-thedaily" target="_blank"> effectively ended a landmark nuclear deal</a>.</li><li>Some Iranian officials called the American strike on General Suleimani an act of war. As <a href="https://www.nytimes.com/2020/01/05/world/middleeast/iran-general-soleimani-iraq.html?smid=pc-thedaily" target="_blank">the consequences of the killing ripple outward</a>, our columnist asks:<a href="https://www.nytimes.com/2020/01/04/world/middleeast/qassim-suleimani-deter-iran.html?smid=pc-thedaily" target="_blank"> Was the strike a good idea</a>?</li><li>Catching up after a weekend offline?<a href="https://www.nytimes.com/2020/01/03/world/middleeast/suleimani-dead.html?smid=pc-thedaily" target="_blank"> Here’s what else you need to know</a> about the death of General Suleimani.</li></ul>]]>
      </description>
      <itunes:title>The Killing of General Qassim Suleimani</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Iran has promised “severe revenge” against the United States for the killing of Maj. Gen. Qassim Suleimani. But what made the high-ranking military leader an American target in the first place? Guest: Helene Cooper, who covers the Pentagon for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Maj. Gen. Qassim Suleimani was known as the instigator behind proxy wars that fueled instability in the Middle East. His death further disturbed the region’s delicate power balances — and effectively ended a landmark nuclear deal.Some Iranian officials called the American strike on General Suleimani an act of war. As the consequences of the killing ripple outward, our columnist asks: Was the strike a good idea?Catching up after a weekend offline? Here’s what else you need to know about the death of General Suleimani.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Iran has promised “severe revenge” against the United States for the killing of Maj. Gen. Qassim Suleimani. But what made the high-ranking military leader an American target in the first place? Guest: <a href="https://www.nytimes.com/by/helene-cooper?smid=pc-thedaily" target="_blank">Helene Cooper</a>, who covers the Pentagon for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li><a href="https://www.nytimes.com/2020/01/03/obituaries/qassem-soleimani-dead.html?smid=pc-thedaily" target="_blank">Maj. Gen. Qassim Suleimani</a> was known as the instigator behind proxy wars that fueled instability in the Middle East. His death further disturbed<a href="https://www.nytimes.com/2020/01/05/world/middleeast/mideast-allies-suleimani.html?smid=pc-thedaily" target="_blank"> the region’s delicate power balances</a> — and<a href="https://www.nytimes.com/2020/01/05/world/middleeast/iran-general-soleimani-iraq.html?smid=pc-thedaily" target="_blank"> effectively ended a landmark nuclear deal</a>.</li><li>Some Iranian officials called the American strike on General Suleimani an act of war. As <a href="https://www.nytimes.com/2020/01/05/world/middleeast/iran-general-soleimani-iraq.html?smid=pc-thedaily" target="_blank">the consequences of the killing ripple outward</a>, our columnist asks:<a href="https://www.nytimes.com/2020/01/04/world/middleeast/qassim-suleimani-deter-iran.html?smid=pc-thedaily" target="_blank"> Was the strike a good idea</a>?</li><li>Catching up after a weekend offline?<a href="https://www.nytimes.com/2020/01/03/world/middleeast/suleimani-dead.html?smid=pc-thedaily" target="_blank"> Here’s what else you need to know</a> about the death of General Suleimani.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/hZNg7HHmhL9ZHxvq9QXr8jJhCIpx0U97OBL-5DvEFok</guid>
      <pubDate>Mon, 06 Jan 2020 10:55:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fc6874ec-df27-44bf-822c-399aabcb9554.mp3" type="audio/mpeg" length="26474788"/>
    </item>
    <item>
      <title>Boeing’s Broken Dreams</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of 2019 and checking in on what has happened since they first appeared. Today, we return to our conversation with the whistle-blower John Barnett, known as Swampy, about what he said were systemic safety problems at Boeing. After two 737 Max jet crashes killed a total of 346 people and a federal investigation left the company in crisis, we ask: Is something deeper going wrong at the once-revered manufacturer?&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/natalie-kitroeff" target="_blank">Natalie Kitroeff</a>, a business reporter for The New York Times, spoke with John Barnett, a former quality manager at Boeing. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li><a href="https://www.nytimes.com/2019/10/27/business/boeing-737-max-crashes.html?searchResultPosition=3" target="_blank">Boeing successfully lobbied</a> to reduce government oversight of airplane designs, allowing them to<a href="https://www.nytimes.com/2019/04/20/business/boeing-dreamliner-production-problems.html" target="_blank"> regulate faulty engineering internally</a>.</li><li>A congressional investigation last fall asked<a href="https://www.nytimes.com/2019/10/31/podcasts/the-daily/boeing-plane-crash.html" target="_blank"> what Boeing knew</a> before the two crashes.</li></ul>]]>
      </description>
      <itunes:title>Boeing’s Broken Dreams</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of 2019 and checking in on what has happened since they first appeared. Today, we return to our conversation with the whistle-blower John Barnett, known as Swampy, about what he said were systemic safety problems at Boeing. After two 737 Max jet crashes killed a total of 346 people and a federal investigation left the company in crisis, we ask: Is something deeper going wrong at the once-revered manufacturer? 

Guest: Natalie Kitroeff, a business reporter for The New York Times, spoke with John Barnett, a former quality manager at Boeing. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Boeing successfully lobbied to reduce government oversight of airplane designs, allowing them to regulate faulty engineering internally.A congressional investigation last fall asked what Boeing knew before the two crashes.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of 2019 and checking in on what has happened since they first appeared. Today, we return to our conversation with the whistle-blower John Barnett, known as Swampy, about what he said were systemic safety problems at Boeing. After two 737 Max jet crashes killed a total of 346 people and a federal investigation left the company in crisis, we ask: Is something deeper going wrong at the once-revered manufacturer?&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/natalie-kitroeff" target="_blank">Natalie Kitroeff</a>, a business reporter for The New York Times, spoke with John Barnett, a former quality manager at Boeing. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li><a href="https://www.nytimes.com/2019/10/27/business/boeing-737-max-crashes.html?searchResultPosition=3" target="_blank">Boeing successfully lobbied</a> to reduce government oversight of airplane designs, allowing them to<a href="https://www.nytimes.com/2019/04/20/business/boeing-dreamliner-production-problems.html" target="_blank"> regulate faulty engineering internally</a>.</li><li>A congressional investigation last fall asked<a href="https://www.nytimes.com/2019/10/31/podcasts/the-daily/boeing-plane-crash.html" target="_blank"> what Boeing knew</a> before the two crashes.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/pMoRq7L_hmeZUEcw25kzh-N8LwWBXxNRa-rOljU8Zok</guid>
      <pubDate>Fri, 03 Jan 2020 10:56:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9d943299-ffce-430d-95e6-7a85ea806835.mp3" type="audio/mpeg" length="25627167"/>
    </item>
    <item>
      <title>The President and the Publisher</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of 2019 and checking in on what has happened since the stories first ran. Today, we return to the exclusive interview in the Oval Office between the publisher of The Times, A. G. Sulzberger, and President Trump about the role of a free press. Guest: <a href="https://www.nytimes.com/2017/12/14/business/media/a-g-sulzberger-new-york-times-publisher.html?smid=pc-thedaily" target="_blank">A. G. Sulzberger</a>, The Times’s publisher, who joined two White House reporters, Maggie Haberman and Peter Baker, to interview Mr. Trump. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>In <a href="https://www.nytimes.com/2019/02/01/business/media/donald-trump-interview-news-media.html?smid=pc-thedaily" target="_blank">his remarks on the media</a>, Mr. Trump took credit for popularizing the term “fake news,” but declined to accept responsibility for a rise in threats against journalists since he took office.<a href="https://www.nytimes.com/2019/02/01/us/politics/trump-times-publisher-sulzberger-transcript.html?smid=pc-thedaily" target="_blank"> Read excerpts from his exchange</a> with Mr. Sulzberger.</li><li>Here are<a href="https://www.nytimes.com/2019/01/31/us/politics/donald-trump-interview-takeaways.html?smid=pc-thedaily" target="_blank"> five takeaways</a> from the interview.</li><li>Mr. Trump said he wanted evidence the world was getting more dangerous for journalists. <a href="https://www.nytimes.com/2019/12/30/business/media/trump-media-2019.html??smid=pc-thedaily" target="_blank">Here it is</a>.</li></ul>]]>
      </description>
      <itunes:title>The President and the Publisher</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of 2019 and checking in on what has happened since the stories first ran. Today, we return to the exclusive interview in the Oval Office between the publisher of The Times, A. G. Sulzberger, and President Trump about the role of a free press. Guest: A. G. Sulzberger, The Times’s publisher, who joined two White House reporters, Maggie Haberman and Peter Baker, to interview Mr. Trump. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:In his remarks on the media, Mr. Trump took credit for popularizing the term “fake news,” but declined to accept responsibility for a rise in threats against journalists since he took office. Read excerpts from his exchange with Mr. Sulzberger.Here are five takeaways from the interview.Mr. Trump said he wanted evidence the world was getting more dangerous for journalists. Here it is.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of 2019 and checking in on what has happened since the stories first ran. Today, we return to the exclusive interview in the Oval Office between the publisher of The Times, A. G. Sulzberger, and President Trump about the role of a free press. Guest: <a href="https://www.nytimes.com/2017/12/14/business/media/a-g-sulzberger-new-york-times-publisher.html?smid=pc-thedaily" target="_blank">A. G. Sulzberger</a>, The Times’s publisher, who joined two White House reporters, Maggie Haberman and Peter Baker, to interview Mr. Trump. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>In <a href="https://www.nytimes.com/2019/02/01/business/media/donald-trump-interview-news-media.html?smid=pc-thedaily" target="_blank">his remarks on the media</a>, Mr. Trump took credit for popularizing the term “fake news,” but declined to accept responsibility for a rise in threats against journalists since he took office.<a href="https://www.nytimes.com/2019/02/01/us/politics/trump-times-publisher-sulzberger-transcript.html?smid=pc-thedaily" target="_blank"> Read excerpts from his exchange</a> with Mr. Sulzberger.</li><li>Here are<a href="https://www.nytimes.com/2019/01/31/us/politics/donald-trump-interview-takeaways.html?smid=pc-thedaily" target="_blank"> five takeaways</a> from the interview.</li><li>Mr. Trump said he wanted evidence the world was getting more dangerous for journalists. <a href="https://www.nytimes.com/2019/12/30/business/media/trump-media-2019.html??smid=pc-thedaily" target="_blank">Here it is</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dKBeaqqB7bVm7SWyDjWk7wOKJBXF6tV0MIljE8C97lE</guid>
      <pubDate>Thu, 02 Jan 2020 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/25a0dd66-aeb1-4ab1-9b52-bfefd793c505.mp3" type="audio/mpeg" length="32577828"/>
    </item>
    <item>
      <title>Our Fear Facer Makes a New Friend</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since they appeared. Today, we introduce Ella Maners, 9, from our<a href="https://www.nytimes.com/2019/09/29/podcasts/the-daily/children-fears-ocd-anxiety.html?smid=pc-thedaily" target="_blank"> kids’ episode on facing fears</a>, to Barbara Greenman, 70, who heard Ella’s story and felt compelled to reach out. Guests: Julia Longoria and Bianca Giaever, producers for “The Daily”; Ella and her mother, Katie Maners; and Ms. Greenman, a listener who used Ella’s tips to confront her own fears. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Ella’s fears of sickness and tornadoes were taking over her life — until she went to summer camp. How the University of Florida is<a href="https://www.nytimes.com/2019/06/28/well/family/children-anxiety-ocd-camp-therapy.html?smid=pc-thedaily" target="_blank"> helping children learn to deal with obsessive-compulsive and anxiety disorders</a>.</li></ul>]]>
      </description>
      <itunes:title>Our Fear Facer Makes a New Friend</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since they appeared. Today, we introduce Ella Maners, 9, from our kids’ episode on facing fears, to Barbara Greenman, 70, who heard Ella’s story and felt compelled to reach out. Guests: Julia Longoria and Bianca Giaever, producers for “The Daily”; Ella and her mother, Katie Maners; and Ms. Greenman, a listener who used Ella’s tips to confront her own fears. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Ella’s fears of sickness and tornadoes were taking over her life — until she went to summer camp. How the University of Florida is helping children learn to deal with obsessive-compulsive and anxiety disorders.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since they appeared. Today, we introduce Ella Maners, 9, from our<a href="https://www.nytimes.com/2019/09/29/podcasts/the-daily/children-fears-ocd-anxiety.html?smid=pc-thedaily" target="_blank"> kids’ episode on facing fears</a>, to Barbara Greenman, 70, who heard Ella’s story and felt compelled to reach out. Guests: Julia Longoria and Bianca Giaever, producers for “The Daily”; Ella and her mother, Katie Maners; and Ms. Greenman, a listener who used Ella’s tips to confront her own fears. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Ella’s fears of sickness and tornadoes were taking over her life — until she went to summer camp. How the University of Florida is<a href="https://www.nytimes.com/2019/06/28/well/family/children-anxiety-ocd-camp-therapy.html?smid=pc-thedaily" target="_blank"> helping children learn to deal with obsessive-compulsive and anxiety disorders</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MGaWtIHRu_6Mx7isI_mUulq9iEMdbvpdDbWIsvB1eTQ</guid>
      <pubDate>Tue, 31 Dec 2019 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ee819b27-9640-445c-8743-85b3dcec8db5.mp3" type="audio/mpeg" length="33107382"/>
    </item>
    <item>
      <title>Haunted by the Ghost of Michael Jackson</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we talk to our critic about his reckoning with abuse allegations against Michael Jackson and his efforts to abstain from the pop star’s music. Ten months later, he shares why he still has a Shazam feed full of Jackson’s hits — and reflects on what the ubiquity Jackson’s music in public reveals about our society. Guest: <a href="https://www.nytimes.com/by/wesley-morris?smid=pc-thedaily" target="_blank">Wesley Morris</a>, a critic at large for The Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode contains descriptions of abuse.</p><p>Background coverage:</p><ul><li><a href="https://www.nytimes.com/2019/02/28/arts/television/michael-jackson-leaving-neverland.html?smid=pc-thedaily" target="_blank">Read Wesley Morris’s piece about confronting his own fandom</a> in the face of the allegations made against Michael Jackson in “Leaving Neverland,” an HBO documentary.</li><li>We look at<a href="https://www.nytimes.com/2019/01/31/arts/music/michael-jackson-timeline-sexual-abuse-accusations.html?smid=pc-thedaily" target="_blank"> Jackson’s history of sexual abuse accusations</a>, and answer some questions about<a href="https://www.nytimes.com/2019/03/08/us/child-sexual-abuse-questions.html?smid=pc-thedaily" target="_blank"> why child abuse victims often take years to come forward.</a></li><li>A musical about the pop star’s life is set to open in New York next summer. Because of Jackson’s<a href="https://www.nytimes.com/2019/03/04/arts/music/michael-jackson-leaving-neverland-fans.html?smid=pc-thedaily" target="_blank"> fierce fan base</a>, the show’s producers are<a href="https://www.nytimes.com/2019/10/10/theater/michael-jackson-musical-broadway.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> confident tickets will sell</a>.</li><li>Listen to the hosts of “Still Processing”<a href="https://www.nytimes.com/2019/03/07/podcasts/still-processing-mj-michael-jackson-leaving-neverland.html?smid=pc-thedaily" target="_blank"> discuss how to respond to a problematic artist</a> whose influence has so thoroughly permeated modern culture.</li></ul>]]>
      </description>
      <itunes:title>Haunted by the Ghost of Michael Jackson</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we talk to our critic about his reckoning with abuse allegations against Michael Jackson and his efforts to abstain from the pop star’s music. Ten months later, he shares why he still has a Shazam feed full of Jackson’s hits — and reflects on what the ubiquity Jackson’s music in public reveals about our society. Guest: Wesley Morris, a critic at large for The Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit nytimes.com/thedaily.

This episode contains descriptions of abuse.

Background coverage:Read Wesley Morris’s piece about confronting his own fandom in the face of the allegations made against Michael Jackson in “Leaving Neverland,” an HBO documentary.We look at Jackson’s history of sexual abuse accusations, and answer some questions about why child abuse victims often take years to come forward.A musical about the pop star’s life is set to open in New York next summer. Because of Jackson’s fierce fan base, the show’s producers are confident tickets will sell.Listen to the hosts of “Still Processing” discuss how to respond to a problematic artist whose influence has so thoroughly permeated modern culture.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we talk to our critic about his reckoning with abuse allegations against Michael Jackson and his efforts to abstain from the pop star’s music. Ten months later, he shares why he still has a Shazam feed full of Jackson’s hits — and reflects on what the ubiquity Jackson’s music in public reveals about our society. Guest: <a href="https://www.nytimes.com/by/wesley-morris?smid=pc-thedaily" target="_blank">Wesley Morris</a>, a critic at large for The Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode contains descriptions of abuse.</p><p>Background coverage:</p><ul><li><a href="https://www.nytimes.com/2019/02/28/arts/television/michael-jackson-leaving-neverland.html?smid=pc-thedaily" target="_blank">Read Wesley Morris’s piece about confronting his own fandom</a> in the face of the allegations made against Michael Jackson in “Leaving Neverland,” an HBO documentary.</li><li>We look at<a href="https://www.nytimes.com/2019/01/31/arts/music/michael-jackson-timeline-sexual-abuse-accusations.html?smid=pc-thedaily" target="_blank"> Jackson’s history of sexual abuse accusations</a>, and answer some questions about<a href="https://www.nytimes.com/2019/03/08/us/child-sexual-abuse-questions.html?smid=pc-thedaily" target="_blank"> why child abuse victims often take years to come forward.</a></li><li>A musical about the pop star’s life is set to open in New York next summer. Because of Jackson’s<a href="https://www.nytimes.com/2019/03/04/arts/music/michael-jackson-leaving-neverland-fans.html?smid=pc-thedaily" target="_blank"> fierce fan base</a>, the show’s producers are<a href="https://www.nytimes.com/2019/10/10/theater/michael-jackson-musical-broadway.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> confident tickets will sell</a>.</li><li>Listen to the hosts of “Still Processing”<a href="https://www.nytimes.com/2019/03/07/podcasts/still-processing-mj-michael-jackson-leaving-neverland.html?smid=pc-thedaily" target="_blank"> discuss how to respond to a problematic artist</a> whose influence has so thoroughly permeated modern culture.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rx8kDZbguk99KXPd5kdLdGA3W9gPwakCASAir3KpQEA</guid>
      <pubDate>Mon, 30 Dec 2019 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/62eea2b9-6784-479e-b5f0-b34daa991e1b.mp3" type="audio/mpeg" length="28221857"/>
    </item>
    <item>
      <title>'There's No Going Back'</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today: the unexpected story of how family history websites have been used by law enforcement to track down suspects and win convictions — and why retroactive regulation won’t be able to reverse the trend. Guest: <a href="https://www.nytimes.com/by/heather-murphy?smid=pc-thedaily" target="_blank">Heather Murphy</a>, a reporter at The New York Times who spoke with CeCe Moore, a genetic genealogist, and Curtis Rogers, a creator of the genealogy website GEDMatch. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Today, we revisit<a href="https://www.nytimes.com/2019/06/07/podcasts/the-daily/genealogy-dna-crime-privacy.html?smid=pc-thedaily" target="_blank"> Part 2</a> of our series on genetic privacy. If you’d like to catch up on the full story, make sure to listen to<a href="https://www.nytimes.com/2019/06/06/podcasts/the-daily/dna-genealogy-crime.html?smid=pc-thedaily" target="_blank"> Part 1</a> as well.</li><li>Do you think your DNA profile is private? A warrant granted by a judge in Florida could<a href="https://www.nytimes.com/2019/11/05/business/dna-database-search-warrant.html?smid=pc-thedaily" target="_blank"> open up all consumer DNA sites</a> for use by law enforcement agencies across the country.</li><li>At a conference this fall, “rockstars” of the DNA industry and top law enforcement officers grappled with how to regulate the use of genetic material in policing. <a href="https://www.nytimes.com/2019/10/05/us/genetic-genealogy-guidelines-privacy.html?smid=pc-thedaily" target="_blank">They also practiced solving murders together</a>.</li><li><a href="https://www.nytimes.com/2019/06/12/smarter-living/how-to-protect-your-dna-data.html?smid=pc-thedaily" target="_blank">Here’s how to protect yourself</a> if you take a genetic test at home.</li></ul>]]>
      </description>
      <itunes:title>'There's No Going Back'</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today: the unexpected story of how family history websites have been used by law enforcement to track down suspects and win convictions — and why retroactive regulation won’t be able to reverse the trend. Guest: Heather Murphy, a reporter at The New York Times who spoke with CeCe Moore, a genetic genealogist, and Curtis Rogers, a creator of the genealogy website GEDMatch. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Today, we revisit Part 2 of our series on genetic privacy. If you’d like to catch up on the full story, make sure to listen to Part 1 as well.Do you think your DNA profile is private? A warrant granted by a judge in Florida could open up all consumer DNA sites for use by law enforcement agencies across the country.At a conference this fall, “rockstars” of the DNA industry and top law enforcement officers grappled with how to regulate the use of genetic material in policing. They also practiced solving murders together.Here’s how to protect yourself if you take a genetic test at home.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today: the unexpected story of how family history websites have been used by law enforcement to track down suspects and win convictions — and why retroactive regulation won’t be able to reverse the trend. Guest: <a href="https://www.nytimes.com/by/heather-murphy?smid=pc-thedaily" target="_blank">Heather Murphy</a>, a reporter at The New York Times who spoke with CeCe Moore, a genetic genealogist, and Curtis Rogers, a creator of the genealogy website GEDMatch. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Today, we revisit<a href="https://www.nytimes.com/2019/06/07/podcasts/the-daily/genealogy-dna-crime-privacy.html?smid=pc-thedaily" target="_blank"> Part 2</a> of our series on genetic privacy. If you’d like to catch up on the full story, make sure to listen to<a href="https://www.nytimes.com/2019/06/06/podcasts/the-daily/dna-genealogy-crime.html?smid=pc-thedaily" target="_blank"> Part 1</a> as well.</li><li>Do you think your DNA profile is private? A warrant granted by a judge in Florida could<a href="https://www.nytimes.com/2019/11/05/business/dna-database-search-warrant.html?smid=pc-thedaily" target="_blank"> open up all consumer DNA sites</a> for use by law enforcement agencies across the country.</li><li>At a conference this fall, “rockstars” of the DNA industry and top law enforcement officers grappled with how to regulate the use of genetic material in policing. <a href="https://www.nytimes.com/2019/10/05/us/genetic-genealogy-guidelines-privacy.html?smid=pc-thedaily" target="_blank">They also practiced solving murders together</a>.</li><li><a href="https://www.nytimes.com/2019/06/12/smarter-living/how-to-protect-your-dna-data.html?smid=pc-thedaily" target="_blank">Here’s how to protect yourself</a> if you take a genetic test at home.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bXUGuhH_G7dSHKewNVGXZUdh3n7q5Y9z7uufQR7HPrQ</guid>
      <pubDate>Fri, 27 Dec 2019 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/72e13ca2-51bd-4a55-b2d3-5c5cf2499194.mp3" type="audio/mpeg" length="27121371"/>
    </item>
    <item>
      <title>Impeachment Through the Eyes of a Child</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. After we sat down with Leo, a third grader, to talk about the impeachment inquiry, we were flooded with emails expressing gratitude for our guest. So we called Leo back and asked him about what he’s been up to while the impeachment inquiry has unfolded. Guests: <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times; Bianca Giaever, a producer for “The Daily”; and Leo, a third grader who was obsessed with the impeachment inquiry. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Leo predicted President Trump would be impeached in the House of Representatives.<a href="https://www.nytimes.com/2019/12/18/us/politics/trump-impeached.html?action=click&amp;pgtype=Article&amp;state=default&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;region=header&amp;context=menu?smid=pc-thedaily" target="_blank"> He was right</a>.</li><li><a href="https://www.nytimes.com/2019/12/19/us/politics/impeachment-trump-senate-trial.html?smid=pc-thedaily" target="_blank">The impeachment process was paused</a> after Speaker Nancy Pelosi said she would wait to see what the trial in the Senate would look like before sending the two charges there.</li></ul>]]>
      </description>
      <itunes:title>Impeachment Through the Eyes of a Child</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. After we sat down with Leo, a third grader, to talk about the impeachment inquiry, we were flooded with emails expressing gratitude for our guest. So we called Leo back and asked him about what he’s been up to while the impeachment inquiry has unfolded. Guests: Michael S. Schmidt, who covers national security and federal investigations for The New York Times; Bianca Giaever, a producer for “The Daily”; and Leo, a third grader who was obsessed with the impeachment inquiry. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Leo predicted President Trump would be impeached in the House of Representatives. He was right.The impeachment process was paused after Speaker Nancy Pelosi said she would wait to see what the trial in the Senate would look like before sending the two charges there.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. After we sat down with Leo, a third grader, to talk about the impeachment inquiry, we were flooded with emails expressing gratitude for our guest. So we called Leo back and asked him about what he’s been up to while the impeachment inquiry has unfolded. Guests: <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times; Bianca Giaever, a producer for “The Daily”; and Leo, a third grader who was obsessed with the impeachment inquiry. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Leo predicted President Trump would be impeached in the House of Representatives.<a href="https://www.nytimes.com/2019/12/18/us/politics/trump-impeached.html?action=click&amp;pgtype=Article&amp;state=default&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;region=header&amp;context=menu?smid=pc-thedaily" target="_blank"> He was right</a>.</li><li><a href="https://www.nytimes.com/2019/12/19/us/politics/impeachment-trump-senate-trial.html?smid=pc-thedaily" target="_blank">The impeachment process was paused</a> after Speaker Nancy Pelosi said she would wait to see what the trial in the Senate would look like before sending the two charges there.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Zl6VxWTY0Y7yUV8tVVLMQIKmD3AFnMEBSQecCcmqumk</guid>
      <pubDate>Thu, 26 Dec 2019 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4c57da6b-0e25-4c00-bad9-f0d5604ab73c.mp3" type="audio/mpeg" length="24020532"/>
    </item>
    <item>
      <title>By Challenging Evangelicals, She Changed Them</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we return to <a href="https://www.nytimes.com/2019/06/03/podcasts/the-daily/rachel-held-evans.html?smid=pc-thedaily" target="_blank">the story of Rachel Held Evans</a> and speak to her husband, Daniel, as he heads into his first holiday season since her death.</p><p>In her absence, the community she created still engages with her work online. “It tells me there’s a lot of pain in the world,” Mr. Evans said. “I find hope that there are people not yet born who may still read her words.” Guests: <a href="https://www.nytimes.com/by/elizabeth-dias?smid=pc-thedaily" target="_blank">Elizabeth Dias</a>, who covers religion for The Times and Daniel Evans, Rachel Held Evans’s husband. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Rachel Held Evans, the best-selling author who challenged conservative Christianity and gave voice to a generation of wandering evangelicals wrestling with their faith, <a href="https://www.nytimes.com/2019/05/04/us/rachel-held-evans.html?smid=pc-thedaily" target="_blank">passed away in May</a> after experiencing excessive brain swelling.</li></ul>]]>
      </description>
      <itunes:title>By Challenging Evangelicals, She Changed Them</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we return to the story of Rachel Held Evans and speak to her husband, Daniel, as he heads into his first holiday season since her death.

In her absence, the community she created still engages with her work online. “It tells me there’s a lot of pain in the world,” Mr. Evans said. “I find hope that there are people not yet born who may still read her words.” Guests: Elizabeth Dias, who covers religion for The Times and Daniel Evans, Rachel Held Evans’s husband. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Rachel Held Evans, the best-selling author who challenged conservative Christianity and gave voice to a generation of wandering evangelicals wrestling with their faith, passed away in May after experiencing excessive brain swelling.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we return to <a href="https://www.nytimes.com/2019/06/03/podcasts/the-daily/rachel-held-evans.html?smid=pc-thedaily" target="_blank">the story of Rachel Held Evans</a> and speak to her husband, Daniel, as he heads into his first holiday season since her death.</p><p>In her absence, the community she created still engages with her work online. “It tells me there’s a lot of pain in the world,” Mr. Evans said. “I find hope that there are people not yet born who may still read her words.” Guests: <a href="https://www.nytimes.com/by/elizabeth-dias?smid=pc-thedaily" target="_blank">Elizabeth Dias</a>, who covers religion for The Times and Daniel Evans, Rachel Held Evans’s husband. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Rachel Held Evans, the best-selling author who challenged conservative Christianity and gave voice to a generation of wandering evangelicals wrestling with their faith, <a href="https://www.nytimes.com/2019/05/04/us/rachel-held-evans.html?smid=pc-thedaily" target="_blank">passed away in May</a> after experiencing excessive brain swelling.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fjdTPe-lg5cHQWxZQ8O7bHBbmSTuUTRxfW5owKL0LOU</guid>
      <pubDate>Tue, 24 Dec 2019 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b62bfabe-17b6-4dc2-a087-453ef9f33e14.mp3" type="audio/mpeg" length="26738102"/>
    </item>
    <item>
      <title>Year in Sound</title>
      <description>
        <![CDATA[<p>Our first episode of 2019 opened the year with a question: “<a href="https://www.nytimes.com/2019/01/02/podcasts/the-daily/house-democrats-investigation-cummings-nadler-schiff.html" target="_blank">What will Democrats do with their new power</a>?” One of our last offered the answer: “<a href="https://www.nytimes.com/2019/12/19/podcasts/the-daily/impeachment-trump-democrats.html" target="_blank">impeach the president</a>.” This audio time capsule captures the weeks in between — a crescendo of controversy and culture wars to wrap up the decade. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Here’s some nostalgia as we head into 2020:</p><ul><li>Our photo editors pored over ten years of images to bring you:<a href="https://www.nytimes.com/interactive/2019/world/decade-in-pictures.html" target="_blank"> The decade in pictures</a>.</li><li>And if you’re looking for a longer read over the holidays, check out our editors’ picks for the<a href="https://www.nytimes.com/2019/11/26/books/review/podcast-10-best-books-2019.html" target="_blank"> 10 best books of 2019</a>.</li></ul>]]>
      </description>
      <itunes:title>Year in Sound</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Our first episode of 2019 opened the year with a question: “What will Democrats do with their new power?” One of our last offered the answer: “impeach the president.” This audio time capsule captures the weeks in between — a crescendo of controversy and culture wars to wrap up the decade. For more information on today’s episode, visit nytimes.com/thedaily.

Here’s some nostalgia as we head into 2020:Our photo editors pored over ten years of images to bring you: The decade in pictures.And if you’re looking for a longer read over the holidays, check out our editors’ picks for the 10 best books of 2019.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Our first episode of 2019 opened the year with a question: “<a href="https://www.nytimes.com/2019/01/02/podcasts/the-daily/house-democrats-investigation-cummings-nadler-schiff.html" target="_blank">What will Democrats do with their new power</a>?” One of our last offered the answer: “<a href="https://www.nytimes.com/2019/12/19/podcasts/the-daily/impeachment-trump-democrats.html" target="_blank">impeach the president</a>.” This audio time capsule captures the weeks in between — a crescendo of controversy and culture wars to wrap up the decade. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Here’s some nostalgia as we head into 2020:</p><ul><li>Our photo editors pored over ten years of images to bring you:<a href="https://www.nytimes.com/interactive/2019/world/decade-in-pictures.html" target="_blank"> The decade in pictures</a>.</li><li>And if you’re looking for a longer read over the holidays, check out our editors’ picks for the<a href="https://www.nytimes.com/2019/11/26/books/review/podcast-10-best-books-2019.html" target="_blank"> 10 best books of 2019</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/uEQMwDBYOYJz-82T4MfWUp-ryIcxQ_cmkFQLMBQ8OHU</guid>
      <pubDate>Mon, 23 Dec 2019 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5d0d0b03-afc3-4481-8cdd-99f229949825.mp3" type="audio/mpeg" length="27932212"/>
    </item>
    <item>
      <title>The Candidates: Joe Biden</title>
      <description>
        <![CDATA[<p>He built a career, and a presidential campaign, on a belief in bipartisanship. Now, critics of the candidate ask: Is political consensus a dangerous compromise?&nbsp;</p><p>In Part 4 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders, we examine the long Senate career, and legislative legacy, of former Vice President Joseph R. Biden Jr. Guest: <a href="https://www.nytimes.com/by/astead-w-herndon" target="_blank">Astead W. Herndon</a>, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Biden now plays down his role overhauling crime laws with segregationist senators in the 1980s and ’90s. In an investigation, our reporter found that the portrayal is at odds with his<a href="https://www.nytimes.com/2019/06/25/us/joe-biden-crime-laws.html" target="_blank"> actions and rhetoric back then</a>.</li><li>The former vice president and current Democratic front-runner wants to<a href="https://www.nytimes.com/2019/07/23/magazine/joe-biden-2020.html" target="_blank"> unite the country</a> in a divisive time.<a href="https://www.nytimes.com/interactive/2020/us/elections/joe-biden.html" target="_blank"> Here’s more on what Mr. Biden stands for</a>.</li><li><a href="https://www.nytimes.com/2019/09/07/us/politics/joe-biden-bork-supreme-court.html" target="_blank">This Supreme Court battle explains why</a> Mr. Biden firmly believes in bipartisanship.</li></ul>]]>
      </description>
      <itunes:title>The Candidates: Joe Biden</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>He built a career, and a presidential campaign, on a belief in bipartisanship. Now, critics of the candidate ask: Is political consensus a dangerous compromise? 

In Part 4 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders, we examine the long Senate career, and legislative legacy, of former Vice President Joseph R. Biden Jr. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Biden now plays down his role overhauling crime laws with segregationist senators in the 1980s and ’90s. In an investigation, our reporter found that the portrayal is at odds with his actions and rhetoric back then.The former vice president and current Democratic front-runner wants to unite the country in a divisive time. Here’s more on what Mr. Biden stands for.This Supreme Court battle explains why Mr. Biden firmly believes in bipartisanship.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>He built a career, and a presidential campaign, on a belief in bipartisanship. Now, critics of the candidate ask: Is political consensus a dangerous compromise?&nbsp;</p><p>In Part 4 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders, we examine the long Senate career, and legislative legacy, of former Vice President Joseph R. Biden Jr. Guest: <a href="https://www.nytimes.com/by/astead-w-herndon" target="_blank">Astead W. Herndon</a>, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Biden now plays down his role overhauling crime laws with segregationist senators in the 1980s and ’90s. In an investigation, our reporter found that the portrayal is at odds with his<a href="https://www.nytimes.com/2019/06/25/us/joe-biden-crime-laws.html" target="_blank"> actions and rhetoric back then</a>.</li><li>The former vice president and current Democratic front-runner wants to<a href="https://www.nytimes.com/2019/07/23/magazine/joe-biden-2020.html" target="_blank"> unite the country</a> in a divisive time.<a href="https://www.nytimes.com/interactive/2020/us/elections/joe-biden.html" target="_blank"> Here’s more on what Mr. Biden stands for</a>.</li><li><a href="https://www.nytimes.com/2019/09/07/us/politics/joe-biden-bork-supreme-court.html" target="_blank">This Supreme Court battle explains why</a> Mr. Biden firmly believes in bipartisanship.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WCgi8axavDpwAVmrTn_QSVX3IZDObjsN6wK0Om4gKk4</guid>
      <pubDate>Fri, 20 Dec 2019 10:51:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:40:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a457bc85-2743-4267-ae39-662c44ae4f4c.mp3" type="audio/mpeg" length="38983053"/>
    </item>
    <item>
      <title>The Impeachment of President Donald J. Trump</title>
      <description>
        <![CDATA[<p>The House of Representatives has impeached President Trump, charging him with abuse of power and obstruction of Congress. We traveled to Michigan to understand how a fractious Democratic Party ultimately united around impeachment, having started the year divided over the issue. Guests: <a href="https://www.nytimes.com/2019/10/09/podcasts/the-daily/house-democrats-elissa-slotkin.html" target="_blank">Representative Elissa Slotkin</a> and<a href="https://www.nytimes.com/2019/01/22/podcasts/the-daily/house-democrats-rashida-tlaib.html" target="_blank"> Representative Rashida Tlaib</a>, Democrats of Michigan. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Trump became only<a href="https://www.nytimes.com/2019/12/18/us/politics/trump-impeached.html?smid=pc-thedaily" target="_blank"> the third president in American history to be impeached</a>, as the House charged him with abuse of power and obstruction of Congress. The votes were<a href="https://www.nytimes.com/interactive/2019/12/18/us/politics/trump-impeachment-vote.html?smid=pc-thedaily" target="_blank"> largely along party lines</a>.</li><li><a href="https://www.nytimes.com/2019/09/25/podcasts/the-daily/impeachment-trump.html?smid=pc-thedaily" target="_blank">Moderate Democrats encouraged their party</a> to begin the impeachment inquiry. Now, those representatives face<a href="https://www.nytimes.com/2019/12/16/us/politics/slotkin-impeachment.html?smid=pc-thedaily" target="_blank"> a reckoning with that decision</a>.</li><li>Are you confused by the impeachment process?<a href="https://www.nytimes.com/interactive/2019/us/politics/what-is-impeachment-process.html?smid=pc-thedaily" target="_blank"> Here’s how it works</a>.</li></ul>]]>
      </description>
      <itunes:title>The Impeachment of President Donald J. Trump</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House of Representatives has impeached President Trump, charging him with abuse of power and obstruction of Congress. We traveled to Michigan to understand how a fractious Democratic Party ultimately united around impeachment, having started the year divided over the issue. Guests: Representative Elissa Slotkin and Representative Rashida Tlaib, Democrats of Michigan. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Trump became only the third president in American history to be impeached, as the House charged him with abuse of power and obstruction of Congress. The votes were largely along party lines.Moderate Democrats encouraged their party to begin the impeachment inquiry. Now, those representatives face a reckoning with that decision.Are you confused by the impeachment process? Here’s how it works.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House of Representatives has impeached President Trump, charging him with abuse of power and obstruction of Congress. We traveled to Michigan to understand how a fractious Democratic Party ultimately united around impeachment, having started the year divided over the issue. Guests: <a href="https://www.nytimes.com/2019/10/09/podcasts/the-daily/house-democrats-elissa-slotkin.html" target="_blank">Representative Elissa Slotkin</a> and<a href="https://www.nytimes.com/2019/01/22/podcasts/the-daily/house-democrats-rashida-tlaib.html" target="_blank"> Representative Rashida Tlaib</a>, Democrats of Michigan. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Trump became only<a href="https://www.nytimes.com/2019/12/18/us/politics/trump-impeached.html?smid=pc-thedaily" target="_blank"> the third president in American history to be impeached</a>, as the House charged him with abuse of power and obstruction of Congress. The votes were<a href="https://www.nytimes.com/interactive/2019/12/18/us/politics/trump-impeachment-vote.html?smid=pc-thedaily" target="_blank"> largely along party lines</a>.</li><li><a href="https://www.nytimes.com/2019/09/25/podcasts/the-daily/impeachment-trump.html?smid=pc-thedaily" target="_blank">Moderate Democrats encouraged their party</a> to begin the impeachment inquiry. Now, those representatives face<a href="https://www.nytimes.com/2019/12/16/us/politics/slotkin-impeachment.html?smid=pc-thedaily" target="_blank"> a reckoning with that decision</a>.</li><li>Are you confused by the impeachment process?<a href="https://www.nytimes.com/interactive/2019/us/politics/what-is-impeachment-process.html?smid=pc-thedaily" target="_blank"> Here’s how it works</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PyL2qNx4KVPfEsHoRuOdyqOvmyUl-WIxNjlI0yS30W0</guid>
      <pubDate>Thu, 19 Dec 2019 10:54:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/69d79607-4d36-4f6c-87b3-6e4367366cde.mp3" type="audio/mpeg" length="33170076"/>
    </item>
    <item>
      <title>The Latest: Impeachment Vote Update, 5:30 P.M. Eastern</title>
      <description>
        <![CDATA[<p>The House is expected to vote tonight along party lines to impeach the president. But before that can take place, there must be speeches — lots of them. These speeches are the last chance lawmakers have to get their words in the history books before they cast their ballots. Here’s what they had to say.</p><p><em>“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/18/podcasts/the-latest-impeachment-vote.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: Impeachment Vote Update, 5:30 P.M. Eastern</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House is expected to vote tonight along party lines to impeach the president. But before that can take place, there must be speeches — lots of them. These speeches are the last chance lawmakers have to get their words in the history books before they cast their ballots. Here’s what they had to say.

“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House is expected to vote tonight along party lines to impeach the president. But before that can take place, there must be speeches — lots of them. These speeches are the last chance lawmakers have to get their words in the history books before they cast their ballots. Here’s what they had to say.</p><p><em>“The Latest” is a series on the impeachment process, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/18/podcasts/the-latest-impeachment-vote.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/pXLDDjUQrmQMIrtFBcEfeGuYuot7r3R8YOiTPKrUbCM</guid>
      <pubDate>Wed, 18 Dec 2019 22:36:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:04:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/881ecc54-fe7f-497c-afe4-c4b5918adcf3.mp3" type="audio/mpeg" length="4595043"/>
    </item>
    <item>
      <title>A Fight Over How to Fight Anti-Semitism</title>
      <description>
        <![CDATA[<p>President Trump has issued an executive order cracking down on anti-Semitism. But some Jewish Americans fear that the plan could end up deepening prejudice instead of curbing it. Guest: <a href="https://www.nytimes.com/by/max-fisher?smid=pc-thedaily" target="_blank">Max Fisher</a>, a Times international reporter and columnist for<a href="https://www.nytimes.com/column/the-interpreter?smid=pc-thedaily" target="_blank"> The Interpreter</a>. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The executive order touches on a defining issue of our time: <a href="https://www.nytimes.com/2019/12/15/world/americas/trump-jews-executive-order.html" target="_blank">Who belongs, and who decides?</a></li><li><a href="https://www.nytimes.com/2019/12/15/us/trump-anti-semitism-order-college-students.html?smid=pc-thedaily" target="_blank">Some students across the United States</a> said they were afraid that the order would backfire, worsening anti-Semitism on college campuses.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>A Fight Over How to Fight Anti-Semitism</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has issued an executive order cracking down on anti-Semitism. But some Jewish Americans fear that the plan could end up deepening prejudice instead of curbing it. Guest: Max Fisher, a Times international reporter and columnist for The Interpreter. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The executive order touches on a defining issue of our time: Who belongs, and who decides?Some students across the United States said they were afraid that the order would backfire, worsening anti-Semitism on college campuses. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has issued an executive order cracking down on anti-Semitism. But some Jewish Americans fear that the plan could end up deepening prejudice instead of curbing it. Guest: <a href="https://www.nytimes.com/by/max-fisher?smid=pc-thedaily" target="_blank">Max Fisher</a>, a Times international reporter and columnist for<a href="https://www.nytimes.com/column/the-interpreter?smid=pc-thedaily" target="_blank"> The Interpreter</a>. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The executive order touches on a defining issue of our time: <a href="https://www.nytimes.com/2019/12/15/world/americas/trump-jews-executive-order.html" target="_blank">Who belongs, and who decides?</a></li><li><a href="https://www.nytimes.com/2019/12/15/us/trump-anti-semitism-order-college-students.html?smid=pc-thedaily" target="_blank">Some students across the United States</a> said they were afraid that the order would backfire, worsening anti-Semitism on college campuses.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Y-gGqELRnMtwRRswJyjl6kUHwJ-dDFZPLUFL0PsjNeQ</guid>
      <pubDate>Wed, 18 Dec 2019 10:51:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c647c9b6-f26c-423d-b05b-1419888cd3b9.mp3" type="audio/mpeg" length="18977436"/>
    </item>
    <item>
      <title>The Latest: The Rules</title>
      <description>
        <![CDATA[<p>House members are preparing for a vote on two articles of impeachment against President Trump, while their counterparts gear up for the next phase: a trial in the Senate. As the impeachment process moves from a Democratic-controlled chamber to one dominated by Republicans, the rules of engagement are changing — and party leaders are battling over who gets to decide them.</p><p><em>“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/17/podcasts/the-latest-impeachment-rules-mcconnell-schumer.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: The Rules</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>House members are preparing for a vote on two articles of impeachment against President Trump, while their counterparts gear up for the next phase: a trial in the Senate. As the impeachment process moves from a Democratic-controlled chamber to one dominated by Republicans, the rules of engagement are changing — and party leaders are battling over who gets to decide them.

“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>House members are preparing for a vote on two articles of impeachment against President Trump, while their counterparts gear up for the next phase: a trial in the Senate. As the impeachment process moves from a Democratic-controlled chamber to one dominated by Republicans, the rules of engagement are changing — and party leaders are battling over who gets to decide them.</p><p><em>“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/17/podcasts/the-latest-impeachment-rules-mcconnell-schumer.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rpCtuLhmkmVDBjRlXsL4Jb067kCP_FRidF9DXffp3Hs</guid>
      <pubDate>Wed, 18 Dec 2019 01:47:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:05:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/443789f4-f941-45b1-8a5b-fdd05dc512a6.mp3" type="audio/mpeg" length="5758641"/>
    </item>
    <item>
      <title>Switching Sides in Britain</title>
      <description>
        <![CDATA[<p>To pull off its landslide victory in last week’s election, Prime Minister Boris Johnson’s Conservative Party flipped dozens of districts in the “red wall” of British politics — a gritty stronghold of coal and factory towns that had supported the Labour Party for decades. Our correspondent traveled across the United Kingdom to understand what the region’s political realignment may foretell about the future of the country.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/patrick-kingsley?smid=pc-thedaily" target="_blank">Patrick Kingsley</a>, an international correspondent for The New York Times, who spoke with constituents in Shirebrook, England. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>“Votes for the pro-Brexit Conservatives had 10 times the effective power of votes for the anti-Brexit Liberal Democrats.”<a href="https://www.nytimes.com/2019/12/16/world/europe/uk-election-brexit.html?smid=pc-thedaily" target="_blank"> Our columnist writes</a> that this is thanks to the electoral system used in Britain and the United States.</li><li>On a road trip from London to Glasgow, our correspondent found a country<a href="https://www.nytimes.com/2019/12/07/world/europe/brexit-england-scotland-wales.html?searchResultPosition=2" target="_blank"> longing for a past that may be impossible to revive</a>.</li></ul>]]>
      </description>
      <itunes:title>Switching Sides in Britain</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>To pull off its landslide victory in last week’s election, Prime Minister Boris Johnson’s Conservative Party flipped dozens of districts in the “red wall” of British politics — a gritty stronghold of coal and factory towns that had supported the Labour Party for decades. Our correspondent traveled across the United Kingdom to understand what the region’s political realignment may foretell about the future of the country. 

Guest: Patrick Kingsley, an international correspondent for The New York Times, who spoke with constituents in Shirebrook, England. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:“Votes for the pro-Brexit Conservatives had 10 times the effective power of votes for the anti-Brexit Liberal Democrats.” Our columnist writes that this is thanks to the electoral system used in Britain and the United States.On a road trip from London to Glasgow, our correspondent found a country longing for a past that may be impossible to revive.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>To pull off its landslide victory in last week’s election, Prime Minister Boris Johnson’s Conservative Party flipped dozens of districts in the “red wall” of British politics — a gritty stronghold of coal and factory towns that had supported the Labour Party for decades. Our correspondent traveled across the United Kingdom to understand what the region’s political realignment may foretell about the future of the country.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/patrick-kingsley?smid=pc-thedaily" target="_blank">Patrick Kingsley</a>, an international correspondent for The New York Times, who spoke with constituents in Shirebrook, England. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>“Votes for the pro-Brexit Conservatives had 10 times the effective power of votes for the anti-Brexit Liberal Democrats.”<a href="https://www.nytimes.com/2019/12/16/world/europe/uk-election-brexit.html?smid=pc-thedaily" target="_blank"> Our columnist writes</a> that this is thanks to the electoral system used in Britain and the United States.</li><li>On a road trip from London to Glasgow, our correspondent found a country<a href="https://www.nytimes.com/2019/12/07/world/europe/brexit-england-scotland-wales.html?searchResultPosition=2" target="_blank"> longing for a past that may be impossible to revive</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Ae_60FweiiR0fpYYt6KP_rb5Xhv9vRSkUKrN8-mHnzQ</guid>
      <pubDate>Tue, 17 Dec 2019 10:54:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/41bc8d47-51f9-42fd-b901-5cc2faeda446.mp3" type="audio/mpeg" length="25233449"/>
    </item>
    <item>
      <title>A Secret History of the War in Afghanistan</title>
      <description>
        <![CDATA[<p>For nearly two decades, U.S. government officials crafted a careful story of progress to justify their ongoing military campaign in Afghanistan. Newly disclosed documents reveal to what extent that story was not the reality of the war. Today, one former Marine speaks about the missteps the government concealed for years. Guest: <a href="https://www.nytimes.com/by/thomas-gibbons-neff?smid=pc-thedaily" target="_blank">Thomas Gibbons-Neff</a>, a reporter in The New York Times Washington bureau and a former Marine infantryman and <a href="https://www.nytimes.com/by/eric-schmitt?smid=pc-thedaily" target="_blank">Eric Schmitt</a>, who covers terrorism and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Afghans have endured four decades of conflict, with little prospect of peace. <a href="https://www.nytimes.com/interactive/2019/10/06/magazine/afghanistan-war-oral-history.html" target="_blank">This is the story of the last 18 years</a> since the American invasion, as told by the men and women who’ve lived it.</li><li>“We were devoid of a fundamental understanding of Afghanistan — we didn’t know what we were doing,”<a href="https://www.nytimes.com/2019/12/09/world/asia/afghanistan-war-documents.html?smid=pc-thedaily" target="_blank"> one retired three-star Army general said</a> in hundreds of classified memos obtained by The Washington Post.</li><li><a href="https://www.nytimes.com/2019/12/09/world/asia/afghanistan-war-documents-takeaways.html?smid=pc-thedaily" target="_blank">Here are our key takeaways</a> from the declassified documents.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>A Secret History of the War in Afghanistan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For nearly two decades, U.S. government officials crafted a careful story of progress to justify their ongoing military campaign in Afghanistan. Newly disclosed documents reveal to what extent that story was not the reality of the war. Today, one former Marine speaks about the missteps the government concealed for years. Guest: Thomas Gibbons-Neff, a reporter in The New York Times Washington bureau and a former Marine infantryman and Eric Schmitt, who covers terrorism and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Afghans have endured four decades of conflict, with little prospect of peace. This is the story of the last 18 years since the American invasion, as told by the men and women who’ve lived it.“We were devoid of a fundamental understanding of Afghanistan — we didn’t know what we were doing,” one retired three-star Army general said in hundreds of classified memos obtained by The Washington Post.Here are our key takeaways from the declassified documents. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>For nearly two decades, U.S. government officials crafted a careful story of progress to justify their ongoing military campaign in Afghanistan. Newly disclosed documents reveal to what extent that story was not the reality of the war. Today, one former Marine speaks about the missteps the government concealed for years. Guest: <a href="https://www.nytimes.com/by/thomas-gibbons-neff?smid=pc-thedaily" target="_blank">Thomas Gibbons-Neff</a>, a reporter in The New York Times Washington bureau and a former Marine infantryman and <a href="https://www.nytimes.com/by/eric-schmitt?smid=pc-thedaily" target="_blank">Eric Schmitt</a>, who covers terrorism and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Afghans have endured four decades of conflict, with little prospect of peace. <a href="https://www.nytimes.com/interactive/2019/10/06/magazine/afghanistan-war-oral-history.html" target="_blank">This is the story of the last 18 years</a> since the American invasion, as told by the men and women who’ve lived it.</li><li>“We were devoid of a fundamental understanding of Afghanistan — we didn’t know what we were doing,”<a href="https://www.nytimes.com/2019/12/09/world/asia/afghanistan-war-documents.html?smid=pc-thedaily" target="_blank"> one retired three-star Army general said</a> in hundreds of classified memos obtained by The Washington Post.</li><li><a href="https://www.nytimes.com/2019/12/09/world/asia/afghanistan-war-documents-takeaways.html?smid=pc-thedaily" target="_blank">Here are our key takeaways</a> from the declassified documents.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CPgAL9onaSB334ikhwTi06lgKCdNgh8uTbgDgyi-Lns</guid>
      <pubDate>Mon, 16 Dec 2019 10:52:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1fdc995a-7128-4986-a389-8f91f4687689.mp3" type="audio/mpeg" length="25667291"/>
    </item>
    <item>
      <title>The Latest: Country Over Party</title>
      <description>
        <![CDATA[<p>As the House Judiciary Committee pushed toward a historic vote to send two articles of impeachment to the full House, lawmakers made their final appeals to the other side. Democrats implored committee members to vote with their conscience and put country over party. Republicans, in turn, asked for the exact same thing.</p><p><em>“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/13/podcasts/the-latest-articles-impeachment.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: Country Over Party</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the House Judiciary Committee pushed toward a historic vote to send two articles of impeachment to the full House, lawmakers made their final appeals to the other side. Democrats implored committee members to vote with their conscience and put country over party. Republicans, in turn, asked for the exact same thing.

“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the House Judiciary Committee pushed toward a historic vote to send two articles of impeachment to the full House, lawmakers made their final appeals to the other side. Democrats implored committee members to vote with their conscience and put country over party. Republicans, in turn, asked for the exact same thing.</p><p><em>“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/13/podcasts/the-latest-articles-impeachment.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7Qyqvv-O9bzaVgvzUqLyrXU6Kpn42VkdJS5kkIsFCpE</guid>
      <pubDate>Fri, 13 Dec 2019 20:37:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:04:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5da30e24-baf9-408b-9210-2f82fd617b70.mp3" type="audio/mpeg" length="4751360"/>
    </item>
    <item>
      <title>The Candidates: Elizabeth Warren</title>
      <description>
        <![CDATA[<p>In Part 3 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders, we spoke with Elizabeth Warren about how she came to be known as the blow-it-up candidate. With help from Andrew Ross Sorkin, a financial columnist at The Times and founder of DealBook, Harry Reid, a former Senate majority leader, and David Axelrod, a former Obama adviser, we explore Ms. Warren’s rise to prominence as an advocate for overhauling the financial system — and how that rise helps us understand her run for president now. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The New York Times Magazine<a href="https://www.nytimes.com/2019/06/17/magazine/elizabeth-warren-president.html?auth=login-email&amp;login=email?smid=pc-thedaily" target="_blank"> spoke to Ms. Warren in June</a>, discussing the double standards that can confront professional women — and female presidential candidates.</li><li>Ms. Warren has lots of plans.<a href="https://www.nytimes.com/2019/06/10/us/politics/elizabeth-warren-2020-policies-platform.html?smid=pc-thedaily" target="_blank"> Together, they would remake the economy</a>.</li><li>We asked 21 candidates the same 18 questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/elizabeth-warren-2020-campaign.html?smid=pc-thedaily" target="_blank"> Hear Ms. Warren’s answers</a>.</li></ul>]]>
      </description>
      <itunes:title>The Candidates: Elizabeth Warren</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In Part 3 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders, we spoke with Elizabeth Warren about how she came to be known as the blow-it-up candidate. With help from Andrew Ross Sorkin, a financial columnist at The Times and founder of DealBook, Harry Reid, a former Senate majority leader, and David Axelrod, a former Obama adviser, we explore Ms. Warren’s rise to prominence as an advocate for overhauling the financial system — and how that rise helps us understand her run for president now. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The New York Times Magazine spoke to Ms. Warren in June, discussing the double standards that can confront professional women — and female presidential candidates.Ms. Warren has lots of plans. Together, they would remake the economy.We asked 21 candidates the same 18 questions. Hear Ms. Warren’s answers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In Part 3 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders, we spoke with Elizabeth Warren about how she came to be known as the blow-it-up candidate. With help from Andrew Ross Sorkin, a financial columnist at The Times and founder of DealBook, Harry Reid, a former Senate majority leader, and David Axelrod, a former Obama adviser, we explore Ms. Warren’s rise to prominence as an advocate for overhauling the financial system — and how that rise helps us understand her run for president now. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The New York Times Magazine<a href="https://www.nytimes.com/2019/06/17/magazine/elizabeth-warren-president.html?auth=login-email&amp;login=email?smid=pc-thedaily" target="_blank"> spoke to Ms. Warren in June</a>, discussing the double standards that can confront professional women — and female presidential candidates.</li><li>Ms. Warren has lots of plans.<a href="https://www.nytimes.com/2019/06/10/us/politics/elizabeth-warren-2020-policies-platform.html?smid=pc-thedaily" target="_blank"> Together, they would remake the economy</a>.</li><li>We asked 21 candidates the same 18 questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/elizabeth-warren-2020-campaign.html?smid=pc-thedaily" target="_blank"> Hear Ms. Warren’s answers</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/nAnjbanQyDhnmpx17wvRGEuy8H58cVPm5Y28Ui9wOZw</guid>
      <pubDate>Fri, 13 Dec 2019 10:56:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:45:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5acfaf27-11ff-4d72-89d4-69003ee9fe48.mp3" type="audio/mpeg" length="43564721"/>
    </item>
    <item>
      <title>The Fate of Boris and Brexit</title>
      <description>
        <![CDATA[<p>Britain is voting in a general election today. During his re-election campaign, Prime Minister Boris Johnson hitched his re-election campaign to a promise to “get Brexit done” — while selling bankers and blue-collar workers two very different visions for the country. </p><p>Some hope his promise will mean restoring the United Kingdom to its past glory. But what does it actually mean? Guest: <a href="https://www.nytimes.com/by/mark-landler?smid=pc-thedaily" target="_blank">Mark Landler,</a> London bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>There is growing anxiety among some voters that the prime minister’s vow to complete Brexit could undermine<a href="https://www.nytimes.com/2019/12/10/world/europe/nhs-election-boris-johnson.html?searchResultPosition=4?smid=pc-thedaily" target="_blank"> the country’s national health service</a>, a key social safety net. The service is at<a href="https://www.nytimes.com/2019/12/10/world/europe/sick-uk-boy-boris-johnson.html?smid=pc-thedaily" target="_blank"> the center of an election scandal</a> in the final days of the campaign.</li><li>As Britain prepared for the election, a Times reporter spent two weeks driving from London to Glasgow. He found a country<a href="https://www.nytimes.com/2019/12/07/world/europe/brexit-england-scotland-wales.html?searchResultPosition=2?smid=pc-thedaily" target="_blank"> united only by its disunity</a>.</li><li>With agitations for secession in Scotland and Northern Ireland, our chief correspondent asks: Could completing Brexit<a href="https://www.nytimes.com/2019/10/18/world/europe/johnson-brexit-uk-fracture.html?action=click&amp;module=STYLN_menu_brexit&amp;variant=1_menu_brexit&amp;state=default&amp;pgtype=Article&amp;region=header&amp;context=menu?smid=pc-thedaily" target="_blank"> spell the end of the United Kingdom</a> as we know it?</li></ul>]]>
      </description>
      <itunes:title>The Fate of Boris and Brexit</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Britain is voting in a general election today. During his re-election campaign, Prime Minister Boris Johnson hitched his re-election campaign to a promise to “get Brexit done” — while selling bankers and blue-collar workers two very different visions for the country. 

Some hope his promise will mean restoring the United Kingdom to its past glory. But what does it actually mean? Guest: Mark Landler, London bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:There is growing anxiety among some voters that the prime minister’s vow to complete Brexit could undermine the country’s national health service, a key social safety net. The service is at the center of an election scandal in the final days of the campaign.As Britain prepared for the election, a Times reporter spent two weeks driving from London to Glasgow. He found a country united only by its disunity.With agitations for secession in Scotland and Northern Ireland, our chief correspondent asks: Could completing Brexit spell the end of the United Kingdom as we know it?</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Britain is voting in a general election today. During his re-election campaign, Prime Minister Boris Johnson hitched his re-election campaign to a promise to “get Brexit done” — while selling bankers and blue-collar workers two very different visions for the country. </p><p>Some hope his promise will mean restoring the United Kingdom to its past glory. But what does it actually mean? Guest: <a href="https://www.nytimes.com/by/mark-landler?smid=pc-thedaily" target="_blank">Mark Landler,</a> London bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>There is growing anxiety among some voters that the prime minister’s vow to complete Brexit could undermine<a href="https://www.nytimes.com/2019/12/10/world/europe/nhs-election-boris-johnson.html?searchResultPosition=4?smid=pc-thedaily" target="_blank"> the country’s national health service</a>, a key social safety net. The service is at<a href="https://www.nytimes.com/2019/12/10/world/europe/sick-uk-boy-boris-johnson.html?smid=pc-thedaily" target="_blank"> the center of an election scandal</a> in the final days of the campaign.</li><li>As Britain prepared for the election, a Times reporter spent two weeks driving from London to Glasgow. He found a country<a href="https://www.nytimes.com/2019/12/07/world/europe/brexit-england-scotland-wales.html?searchResultPosition=2?smid=pc-thedaily" target="_blank"> united only by its disunity</a>.</li><li>With agitations for secession in Scotland and Northern Ireland, our chief correspondent asks: Could completing Brexit<a href="https://www.nytimes.com/2019/10/18/world/europe/johnson-brexit-uk-fracture.html?action=click&amp;module=STYLN_menu_brexit&amp;variant=1_menu_brexit&amp;state=default&amp;pgtype=Article&amp;region=header&amp;context=menu?smid=pc-thedaily" target="_blank"> spell the end of the United Kingdom</a> as we know it?</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3cJmUSYnB7dlejGgPt8oleh-pfReWlN2vxHDQDcKrpI</guid>
      <pubDate>Thu, 12 Dec 2019 10:50:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3cb32ed7-7dac-4d6e-91aa-b2a8c92d1fd1.mp3" type="audio/mpeg" length="22135536"/>
    </item>
    <item>
      <title>The Articles of Impeachment</title>
      <description>
        <![CDATA[<p>House Democratic leaders have introduced two articles of impeachment against President Trump: abuse of power and obstruction of Congress. But they did not include obstruction of justice. In today’s episode, we delve into the unseen fight among Democrats over whether two articles of impeachment was enough. Guest: <a href="https://www.nytimes.com/by/nicholas-fandos" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>In the draft articles, House Democrats claim that<a href="https://www.nytimes.com/2019/12/10/us/politics/trump-impeachment-articles.html" target="_blank"> Mr. Trump used as leverage</a> against Ukraine two “official acts”: the delivery of $391 million in security assistance and a White House meeting for Ukraine’s president.</li><li><a href="https://www.nytimes.com/2019/12/09/us/politics/impeachment-hearings.html?action=click&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;state=default&amp;pgtype=Article&amp;region=header&amp;context=menu" target="_blank">Here are key takeaways</a> from yesterday’s House Judiciary Committee hearing.</li></ul>]]>
      </description>
      <itunes:title>The Articles of Impeachment</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>House Democratic leaders have introduced two articles of impeachment against President Trump: abuse of power and obstruction of Congress. But they did not include obstruction of justice. In today’s episode, we delve into the unseen fight among Democrats over whether two articles of impeachment was enough. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:In the draft articles, House Democrats claim that Mr. Trump used as leverage against Ukraine two “official acts”: the delivery of $391 million in security assistance and a White House meeting for Ukraine’s president.Here are key takeaways from yesterday’s House Judiciary Committee hearing.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>House Democratic leaders have introduced two articles of impeachment against President Trump: abuse of power and obstruction of Congress. But they did not include obstruction of justice. In today’s episode, we delve into the unseen fight among Democrats over whether two articles of impeachment was enough. Guest: <a href="https://www.nytimes.com/by/nicholas-fandos" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>In the draft articles, House Democrats claim that<a href="https://www.nytimes.com/2019/12/10/us/politics/trump-impeachment-articles.html" target="_blank"> Mr. Trump used as leverage</a> against Ukraine two “official acts”: the delivery of $391 million in security assistance and a White House meeting for Ukraine’s president.</li><li><a href="https://www.nytimes.com/2019/12/09/us/politics/impeachment-hearings.html?action=click&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;state=default&amp;pgtype=Article&amp;region=header&amp;context=menu" target="_blank">Here are key takeaways</a> from yesterday’s House Judiciary Committee hearing.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NlQkh_LXiKW13sWJfd-ADrLmVOQwHZ670U_XLNCpZxo</guid>
      <pubDate>Wed, 11 Dec 2019 10:59:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d7f172f1-1003-4c01-b0d9-f73dcccad3f0.mp3" type="audio/mpeg" length="22000953"/>
    </item>
    <item>
      <title>‘Absolutely No Mercy’</title>
      <description>
        <![CDATA[<p>A trove of private government documents offers an unprecedented look inside China’s highly organized crackdown on Uighur Muslims — revealing Beijing’s systematic detention of as many as one million people in camps and prisons over the past three years. In one speech, China’s president ordered his subordinates to show prisoners in Xinjiang “absolutely no mercy.” Guest: <a href="https://www.nytimes.com/by/paul-mozur?smid=pc-thedaily" target="_blank">Paul Mozur</a>, a technology reporter for The New York Times based in Shanghai. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>In one of the biggest leaks of the last half-century, The Times obtained more than 400 pages of internal documents revealing the meticulous planning that has gone into the<a href="https://www.nytimes.com/interactive/2019/11/16/world/asia/china-xinjiang-documents.html?smid=pc-thedaily" target="_blank"> Chinese government’s crackdown on ethnic minorities</a>.</li><li>Yesterday we followed our correspondent into the heart of Xinjiang, where<a href="https://www.nytimes.com/2019/12/09/podcasts/the-daily/a-womans-journey-through-chinas-detention-camps.html?smid=pc-thedaily" target="_blank"> one woman risked her life</a> to talk about her experience in China’s system of torture and surveillance.</li></ul>]]>
      </description>
      <itunes:title>‘Absolutely No Mercy’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A trove of private government documents offers an unprecedented look inside China’s highly organized crackdown on Uighur Muslims — revealing Beijing’s systematic detention of as many as one million people in camps and prisons over the past three years. In one speech, China’s president ordered his subordinates to show prisoners in Xinjiang “absolutely no mercy.” Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:In one of the biggest leaks of the last half-century, The Times obtained more than 400 pages of internal documents revealing the meticulous planning that has gone into the Chinese government’s crackdown on ethnic minorities.Yesterday we followed our correspondent into the heart of Xinjiang, where one woman risked her life to talk about her experience in China’s system of torture and surveillance.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A trove of private government documents offers an unprecedented look inside China’s highly organized crackdown on Uighur Muslims — revealing Beijing’s systematic detention of as many as one million people in camps and prisons over the past three years. In one speech, China’s president ordered his subordinates to show prisoners in Xinjiang “absolutely no mercy.” Guest: <a href="https://www.nytimes.com/by/paul-mozur?smid=pc-thedaily" target="_blank">Paul Mozur</a>, a technology reporter for The New York Times based in Shanghai. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>In one of the biggest leaks of the last half-century, The Times obtained more than 400 pages of internal documents revealing the meticulous planning that has gone into the<a href="https://www.nytimes.com/interactive/2019/11/16/world/asia/china-xinjiang-documents.html?smid=pc-thedaily" target="_blank"> Chinese government’s crackdown on ethnic minorities</a>.</li><li>Yesterday we followed our correspondent into the heart of Xinjiang, where<a href="https://www.nytimes.com/2019/12/09/podcasts/the-daily/a-womans-journey-through-chinas-detention-camps.html?smid=pc-thedaily" target="_blank"> one woman risked her life</a> to talk about her experience in China’s system of torture and surveillance.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/to5yUPwTLisUn9RfE4MDLh1djtcuo6qiX3rtL-jn6ck</guid>
      <pubDate>Tue, 10 Dec 2019 10:51:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/502202f8-b90d-419a-ac9e-ccfda35f6bef.mp3" type="audio/mpeg" length="22485786"/>
    </item>
    <item>
      <title>The Latest: The Mueller Question</title>
      <description>
        <![CDATA[<p>To mention the Mueller report in articles of impeachment against President Trump, or not? That’s the question Democrats have been asking. Today’s impeachment hearing before the House Judiciary Committee gave us a clue about which way they’re leaning.</p><p><em>“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/09/podcasts/the-latest-impeachment-mueller.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: The Mueller Question</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>To mention the Mueller report in articles of impeachment against President Trump, or not? That’s the question Democrats have been asking. Today’s impeachment hearing before the House Judiciary Committee gave us a clue about which way they’re leaning.

“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>To mention the Mueller report in articles of impeachment against President Trump, or not? That’s the question Democrats have been asking. Today’s impeachment hearing before the House Judiciary Committee gave us a clue about which way they’re leaning.</p><p><em>“The Latest” is a series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/09/podcasts/the-latest-impeachment-mueller.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RwW-5bS3QjgIWQNLwWNYyK3BD0tyuj6CZAF2n8V5zEQ</guid>
      <pubDate>Tue, 10 Dec 2019 02:23:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:05:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/59acfeac-b528-49a7-b66f-5d6cf9410218.mp3" type="audio/mpeg" length="5547154"/>
    </item>
    <item>
      <title>A Woman’s Journey Through China’s Detention Camps</title>
      <description>
        <![CDATA[<p>A last-minute booking, a furtive cab ride and a spy in the window. For the past year, Paul Mozur has been investigating the story of a son determined to free his mother from a repressive system of detention and surveillance in western China. In doing so, he found a crack in China’s surveillance state — and a mother on her deathbed in Xinjiang.</p><p>Today, we hear from the man’s mother for the first time.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/paul-mozur" target="_blank">Paul Mozur</a>, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur who is an American citizen and lives in Virginia, and his mother in Xinjiang, China. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The Chinese authorities are using a<a href="https://www.nytimes.com/2019/04/14/technology/china-surveillance-artificial-intelligence-racial-profiling.html" target="_blank"> vast secret system of facial recognition technology to control the Uighurs</a>, a largely Muslim minority in western China. The government<a href="https://www.nytimes.com/2019/12/03/business/china-dna-uighurs-xinjiang.html" target="_blank"> may also be taking citizens’ DNA</a> without consent to enhance the system.</li><li>“We must be as harsh as them, and show absolutely no mercy.”<a href="https://www.nytimes.com/interactive/2019/11/16/world/asia/china-xinjiang-documents.html" target="_blank"> Leaked documents reveal</a> how the Chinese authorities orchestrated the crackdown on one million or more ethnic Uighurs.</li><li>If you missed our previous interviews with Mr. Jawdat, here are <a href="https://www.nytimes.com/2019/08/15/podcasts/the-daily/china-xinjiang-uighur-detention.html" target="_blank">Part 1</a> and <a href="https://www.nytimes.com/2019/05/07/podcasts/the-daily/china-uighurs-internment-camps-surveillance.html" target="_blank">Part 2</a>.</li></ul>]]>
      </description>
      <itunes:title>A Woman’s Journey Through China’s Detention Camps</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A last-minute booking, a furtive cab ride and a spy in the window. For the past year, Paul Mozur has been investigating the story of a son determined to free his mother from a repressive system of detention and surveillance in western China. In doing so, he found a crack in China’s surveillance state — and a mother on her deathbed in Xinjiang.

Today, we hear from the man’s mother for the first time. 

Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur who is an American citizen and lives in Virginia, and his mother in Xinjiang, China. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The Chinese authorities are using a vast secret system of facial recognition technology to control the Uighurs, a largely Muslim minority in western China. The government may also be taking citizens’ DNA without consent to enhance the system.“We must be as harsh as them, and show absolutely no mercy.” Leaked documents reveal how the Chinese authorities orchestrated the crackdown on one million or more ethnic Uighurs.If you missed our previous interviews with Mr. Jawdat, here are Part 1 and Part 2.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A last-minute booking, a furtive cab ride and a spy in the window. For the past year, Paul Mozur has been investigating the story of a son determined to free his mother from a repressive system of detention and surveillance in western China. In doing so, he found a crack in China’s surveillance state — and a mother on her deathbed in Xinjiang.</p><p>Today, we hear from the man’s mother for the first time.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/paul-mozur" target="_blank">Paul Mozur</a>, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur who is an American citizen and lives in Virginia, and his mother in Xinjiang, China. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The Chinese authorities are using a<a href="https://www.nytimes.com/2019/04/14/technology/china-surveillance-artificial-intelligence-racial-profiling.html" target="_blank"> vast secret system of facial recognition technology to control the Uighurs</a>, a largely Muslim minority in western China. The government<a href="https://www.nytimes.com/2019/12/03/business/china-dna-uighurs-xinjiang.html" target="_blank"> may also be taking citizens’ DNA</a> without consent to enhance the system.</li><li>“We must be as harsh as them, and show absolutely no mercy.”<a href="https://www.nytimes.com/interactive/2019/11/16/world/asia/china-xinjiang-documents.html" target="_blank"> Leaked documents reveal</a> how the Chinese authorities orchestrated the crackdown on one million or more ethnic Uighurs.</li><li>If you missed our previous interviews with Mr. Jawdat, here are <a href="https://www.nytimes.com/2019/08/15/podcasts/the-daily/china-xinjiang-uighur-detention.html" target="_blank">Part 1</a> and <a href="https://www.nytimes.com/2019/05/07/podcasts/the-daily/china-uighurs-internment-camps-surveillance.html" target="_blank">Part 2</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-b9OXyscQrQMGr9-Yue4hOKtqzKicJcNsl3TWLPhsU0</guid>
      <pubDate>Mon, 09 Dec 2019 10:53:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2f41dbe8-09af-47c9-ad16-8d297a30e6eb.mp3" type="audio/mpeg" length="30233495"/>
    </item>
    <item>
      <title>The Candidates: Bernie Sanders</title>
      <description>
        <![CDATA[<p>Today: Part 2 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders. Michael Barbaro speaks with Bernie Sanders, the democratic socialist senator from Vermont.&nbsp;</p><p>Mr. Sanders reflected on his early schooling in politics and how he galvanized grass-roots support to evolve from outraged outsider to mainstream candidate with little shift in his message.</p><p>Guest: Bernie Sanders, the Vermont senator and candidate for the 2020 Democratic presidential nomination. We also speak with <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Sanders has staked his presidential campaign, and much of his political legacy, on transforming health care in America. His mother’s illness and a trip he made to study the Canadian system <a href="https://www.nytimes.com/2019/09/09/us/politics/bernie-sanders-health-care.html?smid=pc-thedaily" target="_blank">help explain why</a>.</li><li>We asked 21 candidates the same 18 questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/bernie-sanders-2020-campaign.html?smid=pc-thedaily" target="_blank"> Hear Mr. Sanders’s answers</a>.</li></ul>]]>
      </description>
      <itunes:title>The Candidates: Bernie Sanders</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today: Part 2 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders. Michael Barbaro speaks with Bernie Sanders, the democratic socialist senator from Vermont. 

Mr. Sanders reflected on his early schooling in politics and how he galvanized grass-roots support to evolve from outraged outsider to mainstream candidate with little shift in his message.

Guest: Bernie Sanders, the Vermont senator and candidate for the 2020 Democratic presidential nomination. We also speak with Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Sanders has staked his presidential campaign, and much of his political legacy, on transforming health care in America. His mother’s illness and a trip he made to study the Canadian system help explain why.We asked 21 candidates the same 18 questions. Hear Mr. Sanders’s answers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today: Part 2 of our series on pivotal moments in the lives of the 2020 Democratic presidential contenders. Michael Barbaro speaks with Bernie Sanders, the democratic socialist senator from Vermont.&nbsp;</p><p>Mr. Sanders reflected on his early schooling in politics and how he galvanized grass-roots support to evolve from outraged outsider to mainstream candidate with little shift in his message.</p><p>Guest: Bernie Sanders, the Vermont senator and candidate for the 2020 Democratic presidential nomination. We also speak with <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Sanders has staked his presidential campaign, and much of his political legacy, on transforming health care in America. His mother’s illness and a trip he made to study the Canadian system <a href="https://www.nytimes.com/2019/09/09/us/politics/bernie-sanders-health-care.html?smid=pc-thedaily" target="_blank">help explain why</a>.</li><li>We asked 21 candidates the same 18 questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/bernie-sanders-2020-campaign.html?smid=pc-thedaily" target="_blank"> Hear Mr. Sanders’s answers</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_UwB2yFD4MgZeIMzAbdM3hUGTmAkn5V_NqZVzXpgogg</guid>
      <pubDate>Fri, 06 Dec 2019 10:49:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:38:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cec4456f-2b50-4975-bef3-cbdd19de3eac.mp3" type="audio/mpeg" length="36497449"/>
    </item>
    <item>
      <title>The Latest: ‘Do You Hate the President?’</title>
      <description>
        <![CDATA[<p>Speaker Nancy Pelosi announced this morning that the House of Representatives would draft articles of impeachment against President Trump. But what our colleague found most striking today happened a few hours later, when a reporter for a conservative television network asked the speaker, “Do you hate the president?”</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/05/podcasts/the-latest-nancy-pelosi-impeachment.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: ‘Do You Hate the President?’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Speaker Nancy Pelosi announced this morning that the House of Representatives would draft articles of impeachment against President Trump. But what our colleague found most striking today happened a few hours later, when a reporter for a conservative television network asked the speaker, “Do you hate the president?”

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Speaker Nancy Pelosi announced this morning that the House of Representatives would draft articles of impeachment against President Trump. But what our colleague found most striking today happened a few hours later, when a reporter for a conservative television network asked the speaker, “Do you hate the president?”</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/05/podcasts/the-latest-nancy-pelosi-impeachment.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/UddzSkC438G4-yMrFXuWbc-wKVqo9oU04WQioPhUqvo</guid>
      <pubDate>Fri, 06 Dec 2019 00:03:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:05:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/43cfa356-37f6-4c4a-9527-9c1db0fdc1cb.mp3" type="audio/mpeg" length="5163049"/>
    </item>
    <item>
      <title>America’s Education Problem</title>
      <description>
        <![CDATA[<p>For decades, the U.S. spent billions of dollars trying to close its education gap with the rest of the world. New data shows that all that money made little difference. Today, we investigate how that could be. Guest: <a href="https://www.nytimes.com/by/dana-goldstein" target="_blank">Dana Goldstein</a>, a national correspondent for The New York Times who covers education. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The past three American presidents have tried to help the U.S. education system compete with other countries.<a href="https://www.nytimes.com/2019/12/03/us/us-students-international-test-scores.html" target="_blank"> Test scores haven’t improved</a>.</li><li>The “Nation’s Report Card” came out this fall. It indicated that two-thirds of children in the U.S.<a href="https://www.nytimes.com/2019/10/30/us/reading-scores-national-exam.html" target="_blank"> are not proficient readers</a>.</li></ul>]]>
      </description>
      <itunes:title>America’s Education Problem</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For decades, the U.S. spent billions of dollars trying to close its education gap with the rest of the world. New data shows that all that money made little difference. Today, we investigate how that could be. Guest: Dana Goldstein, a national correspondent for The New York Times who covers education. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The past three American presidents have tried to help the U.S. education system compete with other countries. Test scores haven’t improved.The “Nation’s Report Card” came out this fall. It indicated that two-thirds of children in the U.S. are not proficient readers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For decades, the U.S. spent billions of dollars trying to close its education gap with the rest of the world. New data shows that all that money made little difference. Today, we investigate how that could be. Guest: <a href="https://www.nytimes.com/by/dana-goldstein" target="_blank">Dana Goldstein</a>, a national correspondent for The New York Times who covers education. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The past three American presidents have tried to help the U.S. education system compete with other countries.<a href="https://www.nytimes.com/2019/12/03/us/us-students-international-test-scores.html" target="_blank"> Test scores haven’t improved</a>.</li><li>The “Nation’s Report Card” came out this fall. It indicated that two-thirds of children in the U.S.<a href="https://www.nytimes.com/2019/10/30/us/reading-scores-national-exam.html" target="_blank"> are not proficient readers</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4dWMTISu6WpuJZJU2MYSjfCzoKcLBFaNKIIpnOKToiE</guid>
      <pubDate>Thu, 05 Dec 2019 10:53:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/08e20fa4-bc86-40f3-991f-69bdeb9a3762.mp3" type="audio/mpeg" length="21231072"/>
    </item>
    <item>
      <title>The Latest: But Is It Impeachable?</title>
      <description>
        <![CDATA[<p>The House Judiciary Committee opened a new phase of the impeachment inquiry by tackling a fundamental constitutional question: What is an impeachable offense? All the witnesses testifying in today’s hearing were in agreement, except one.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/04/podcasts/the-latest-impeachable-judiciary-trump.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: But Is It Impeachable?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House Judiciary Committee opened a new phase of the impeachment inquiry by tackling a fundamental constitutional question: What is an impeachable offense? All the witnesses testifying in today’s hearing were in agreement, except one.

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House Judiciary Committee opened a new phase of the impeachment inquiry by tackling a fundamental constitutional question: What is an impeachable offense? All the witnesses testifying in today’s hearing were in agreement, except one.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/12/04/podcasts/the-latest-impeachable-judiciary-trump.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/X4xKOBlwg13-0jevSQFqrFaXJIaD8CfZv2xRMwYOLFM</guid>
      <pubDate>Thu, 05 Dec 2019 00:38:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d63cf2c6-77a1-4dee-bd77-34f2f810367d.mp3" type="audio/mpeg" length="6267715"/>
    </item>
    <item>
      <title>A Louder, Messier Phase of Impeachment</title>
      <description>
        <![CDATA[<p>The House Intelligence Committee has released its impeachment report to the Judiciary Committee, signaling the end of one phase of impeachment and the beginning of another. Today, we break down the report and explore why those two phases will look so different. Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The House Intelligence Committee<a href="https://www.nytimes.com/2019/12/03/us/politics/impeachment-trump-intelligence-committee.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> released its impeachment report</a> this week, concluding that President Trump tried to “use the powers of his office to solicit foreign interference on his behalf in the 2020 election.” Here are our<a href="https://www.nytimes.com/2019/12/03/us/politics/key-takeaways-impeachment-report.html" target="_blank"> key takeaways from the report</a>.</li><li>Confused by what happens next?<a href="https://www.nytimes.com/interactive/2019/us/politics/what-is-impeachment-process.html?action=click&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;state=default&amp;pgtype=Article&amp;region=header&amp;context=menu" target="_blank"> Our step-by-step guide</a> to the impeachment process has you covered.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>A Louder, Messier Phase of Impeachment</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House Intelligence Committee has released its impeachment report to the Judiciary Committee, signaling the end of one phase of impeachment and the beginning of another. Today, we break down the report and explore why those two phases will look so different. Guest: Julie Hirschfeld Davis, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The House Intelligence Committee released its impeachment report this week, concluding that President Trump tried to “use the powers of his office to solicit foreign interference on his behalf in the 2020 election.” Here are our key takeaways from the report.Confused by what happens next? Our step-by-step guide to the impeachment process has you covered. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House Intelligence Committee has released its impeachment report to the Judiciary Committee, signaling the end of one phase of impeachment and the beginning of another. Today, we break down the report and explore why those two phases will look so different. Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>The House Intelligence Committee<a href="https://www.nytimes.com/2019/12/03/us/politics/impeachment-trump-intelligence-committee.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> released its impeachment report</a> this week, concluding that President Trump tried to “use the powers of his office to solicit foreign interference on his behalf in the 2020 election.” Here are our<a href="https://www.nytimes.com/2019/12/03/us/politics/key-takeaways-impeachment-report.html" target="_blank"> key takeaways from the report</a>.</li><li>Confused by what happens next?<a href="https://www.nytimes.com/interactive/2019/us/politics/what-is-impeachment-process.html?action=click&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;state=default&amp;pgtype=Article&amp;region=header&amp;context=menu" target="_blank"> Our step-by-step guide</a> to the impeachment process has you covered.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NqYD5_Ij90Xe370CDMqcnd-BpOOkJoMfL_OtrXHwpFM</guid>
      <pubDate>Wed, 04 Dec 2019 10:52:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1f226331-484e-464e-be98-3aa2575c0009.mp3" type="audio/mpeg" length="24357407"/>
    </item>
    <item>
      <title>A Deadly Crackdown in Iran</title>
      <description>
        <![CDATA[<p>Behind the curtain of an internet blackout, the Islamic Republic’s security forces have killed at least 180 unarmed protesters.&nbsp;</p><p>Natalie Kitroeff speaks to Farnaz Fassihi about Iran’s deadliest political unrest in decades and why the United States wanted that unrest — and has helped fuel it.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/search?query=farnaz+fassihi?smid=pc-thedaily" target="_blank">Farnaz Fassihi</a>, a reporter covering Iran for The New York Times, in conversation with<a href="https://www.nytimes.com/by/natalie-kitroeff?smid=pc-thedaily" target="_blank"> Natalie Kitroeff</a>. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>How a peaceful protest over fuel prices<a href="https://www.nytimes.com/2019/12/01/world/middleeast/iran-protests-deaths.html?searchResultPosition=4?smid=pc-thedaily" target="_blank"> quickly evolved into nationwide demonstrations</a> against the Islamic Republic and its leaders, unrest which scores of people would not survive.</li><li>After the United States<a href="https://www.nytimes.com/2019/11/26/world/middleeast/iran-protests-crackdown.html?searchResultPosition=1?smid=pc-thedaily" target="_blank"> condemned the extrajudicial killings</a>, Iran pointed to the rebuke as evidence that the demonstrations were backed by Western enemies.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>A Deadly Crackdown in Iran</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Behind the curtain of an internet blackout, the Islamic Republic’s security forces have killed at least 180 unarmed protesters. 

Natalie Kitroeff speaks to Farnaz Fassihi about Iran’s deadliest political unrest in decades and why the United States wanted that unrest — and has helped fuel it. 

Guest: Farnaz Fassihi, a reporter covering Iran for The New York Times, in conversation with Natalie Kitroeff. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:How a peaceful protest over fuel prices quickly evolved into nationwide demonstrations against the Islamic Republic and its leaders, unrest which scores of people would not survive.After the United States condemned the extrajudicial killings, Iran pointed to the rebuke as evidence that the demonstrations were backed by Western enemies. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Behind the curtain of an internet blackout, the Islamic Republic’s security forces have killed at least 180 unarmed protesters.&nbsp;</p><p>Natalie Kitroeff speaks to Farnaz Fassihi about Iran’s deadliest political unrest in decades and why the United States wanted that unrest — and has helped fuel it.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/search?query=farnaz+fassihi?smid=pc-thedaily" target="_blank">Farnaz Fassihi</a>, a reporter covering Iran for The New York Times, in conversation with<a href="https://www.nytimes.com/by/natalie-kitroeff?smid=pc-thedaily" target="_blank"> Natalie Kitroeff</a>. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>How a peaceful protest over fuel prices<a href="https://www.nytimes.com/2019/12/01/world/middleeast/iran-protests-deaths.html?searchResultPosition=4?smid=pc-thedaily" target="_blank"> quickly evolved into nationwide demonstrations</a> against the Islamic Republic and its leaders, unrest which scores of people would not survive.</li><li>After the United States<a href="https://www.nytimes.com/2019/11/26/world/middleeast/iran-protests-crackdown.html?searchResultPosition=1?smid=pc-thedaily" target="_blank"> condemned the extrajudicial killings</a>, Iran pointed to the rebuke as evidence that the demonstrations were backed by Western enemies.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Z-RXW_ZfGgI8dq0j8qmpCdkyH3rPPA0VDjH0u1lzaYY</guid>
      <pubDate>Tue, 03 Dec 2019 10:53:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c1f97ac9-be17-4713-9bd4-513f35728550.mp3" type="audio/mpeg" length="22820153"/>
    </item>
    <item>
      <title>Why So Many Hospitals Are Suing Their Patients</title>
      <description>
        <![CDATA[<p>For decades, hospitals could assume that patients with jobs and health insurance would pay their medical bills. That’s no longer the case. We speak to one woman about her skyrocketing medical costs — and the aggressive new way hospitals are forcing patients to pay up.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/sarah-kliff?smid=pc-thedaily" target="_blank">Sarah Kliff</a>, an investigative reporter covering health care for The New York Times, speaks with Amanda Sturgill, 41, whose health care provider took her to court in Virginia. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>One in four Americans have<a href="https://www.nytimes.com/2019/04/02/health/americans-health-care-debt-borrowing.html?action=click&amp;module=RelatedCoverage&amp;pgtype=Article&amp;region=Footer?smid=pc-thedaily" target="_blank"> skipped medical treatment</a> because of the cost, and nearly half fear bankruptcy in the event of a health emergency.<a href="https://www.nytimes.com/2019/11/08/us/hospitals-lawsuits-medical-debt.html?smid=pc-thedaily" target="_blank"> Meet some of the employed and insured Americans</a> who cannot afford health care.</li><li>The American health care system is not the norm for developed countries.<a href="https://www.nytimes.com/interactive/2017/09/18/upshot/best-health-care-system-country-bracket.html?smid=pc-thedaily" target="_blank"> Here’s a look</a> at how socialized and privatized systems compare internationally.</li><li>Why doesn’t the United States have universal health care? The 1619 Project found that the answer<a href="https://www.nytimes.com/interactive/2019/08/14/magazine/universal-health-care-racism.html?smid=pc-thedaily" target="_blank"> is linked to segregation</a>.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>Why So Many Hospitals Are Suing Their Patients</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For decades, hospitals could assume that patients with jobs and health insurance would pay their medical bills. That’s no longer the case. We speak to one woman about her skyrocketing medical costs — and the aggressive new way hospitals are forcing patients to pay up. 

Guest: Sarah Kliff, an investigative reporter covering health care for The New York Times, speaks with Amanda Sturgill, 41, whose health care provider took her to court in Virginia. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:One in four Americans have skipped medical treatment because of the cost, and nearly half fear bankruptcy in the event of a health emergency. Meet some of the employed and insured Americans who cannot afford health care.The American health care system is not the norm for developed countries. Here’s a look at how socialized and privatized systems compare internationally.Why doesn’t the United States have universal health care? The 1619 Project found that the answer is linked to segregation. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>For decades, hospitals could assume that patients with jobs and health insurance would pay their medical bills. That’s no longer the case. We speak to one woman about her skyrocketing medical costs — and the aggressive new way hospitals are forcing patients to pay up.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/sarah-kliff?smid=pc-thedaily" target="_blank">Sarah Kliff</a>, an investigative reporter covering health care for The New York Times, speaks with Amanda Sturgill, 41, whose health care provider took her to court in Virginia. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>One in four Americans have<a href="https://www.nytimes.com/2019/04/02/health/americans-health-care-debt-borrowing.html?action=click&amp;module=RelatedCoverage&amp;pgtype=Article&amp;region=Footer?smid=pc-thedaily" target="_blank"> skipped medical treatment</a> because of the cost, and nearly half fear bankruptcy in the event of a health emergency.<a href="https://www.nytimes.com/2019/11/08/us/hospitals-lawsuits-medical-debt.html?smid=pc-thedaily" target="_blank"> Meet some of the employed and insured Americans</a> who cannot afford health care.</li><li>The American health care system is not the norm for developed countries.<a href="https://www.nytimes.com/interactive/2017/09/18/upshot/best-health-care-system-country-bracket.html?smid=pc-thedaily" target="_blank"> Here’s a look</a> at how socialized and privatized systems compare internationally.</li><li>Why doesn’t the United States have universal health care? The 1619 Project found that the answer<a href="https://www.nytimes.com/interactive/2019/08/14/magazine/universal-health-care-racism.html?smid=pc-thedaily" target="_blank"> is linked to segregation</a>.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7896qzKfE7izIyxJwe1NXS3EPnmSbiIwaEEI5zqQHms</guid>
      <pubDate>Mon, 02 Dec 2019 10:51:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/27e5c36d-07dc-4977-9516-2814e108f400.mp3" type="audio/mpeg" length="24786651"/>
    </item>
    <item>
      <title>The Jungle Prince, Chapter 3: A House in Yorkshire</title>
      <description>
        <![CDATA[<p>In a ruined palace in the woods, rummaging through discarded papers, our reporter finds a clue.</p><p>For more information, visit&nbsp;<a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Jungle Prince, Chapter 3: A House in Yorkshire</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a ruined palace in the woods, rummaging through discarded papers, our reporter finds a clue.

For more information, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a ruined palace in the woods, rummaging through discarded papers, our reporter finds a clue.</p><p>For more information, visit&nbsp;<a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PkeE1h87NHra-2at3ih8pK_O2j7o9kHsXkkLO9wsrvc</guid>
      <pubDate>Thu, 28 Nov 2019 00:11:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/83ab4770-8e5d-4ad4-8340-86801e6c72f3.mp3" type="audio/mpeg" length="33316780"/>
    </item>
    <item>
      <title>The Jungle Prince, Chapter 2: The Hunting Lodge</title>
      <description>
        <![CDATA[<p>“Ellen, have you been trying to get in touch with the royal family of Oudh?” Our reporter receives an invitation to the forest.</p><p>For more information, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Jungle Prince, Chapter 2: The Hunting Lodge</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“Ellen, have you been trying to get in touch with the royal family of Oudh?” Our reporter receives an invitation to the forest.

For more information, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>“Ellen, have you been trying to get in touch with the royal family of Oudh?” Our reporter receives an invitation to the forest.</p><p>For more information, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fP4U3L9lebo2PRJjeG2rg9AbHA5aGlKLBy3bbYt218A</guid>
      <pubDate>Thu, 28 Nov 2019 00:11:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/48bef12a-567a-4878-85c7-6df5c7c3803d.mp3" type="audio/mpeg" length="29495797"/>
    </item>
    <item>
      <title>The Jungle Prince, Chapter 1: The Railway Station</title>
      <description>
        <![CDATA[<p>The story passed for years from tea sellers to rickshaw drivers to shopkeepers in Old Delhi. In a forest, they said, in a palace cut off from the city, lived a prince, a princess and a queen, said to be the last of a Shiite Muslim royal line. Some said the family had been there since the British had annexed their kingdom. Others said they were supernatural beings.</p><p>It was a stunning and tragic story. But was it real? On a spring afternoon, while on assignment in India, Ellen Barry got a phone call that sent her looking for the truth.</p><p>In Chapter 1, we hear of a woman who appeared on the platform of the New Delhi railway station with her two adult children, declaring they were the descendants of the royal family of Oudh. She said they would not leave until what was theirs had been restored. So they settled in and waited — for nearly a decade.</p><p>For more information, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Jungle Prince, Chapter 1: The Railway Station</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The story passed for years from tea sellers to rickshaw drivers to shopkeepers in Old Delhi. In a forest, they said, in a palace cut off from the city, lived a prince, a princess and a queen, said to be the last of a Shiite Muslim royal line. Some said the family had been there since the British had annexed their kingdom. Others said they were supernatural beings.

It was a stunning and tragic story. But was it real? On a spring afternoon, while on assignment in India, Ellen Barry got a phone call that sent her looking for the truth.

In Chapter 1, we hear of a woman who appeared on the platform of the New Delhi railway station with her two adult children, declaring they were the descendants of the royal family of Oudh. She said they would not leave until what was theirs had been restored. So they settled in and waited — for nearly a decade.

For more information, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The story passed for years from tea sellers to rickshaw drivers to shopkeepers in Old Delhi. In a forest, they said, in a palace cut off from the city, lived a prince, a princess and a queen, said to be the last of a Shiite Muslim royal line. Some said the family had been there since the British had annexed their kingdom. Others said they were supernatural beings.</p><p>It was a stunning and tragic story. But was it real? On a spring afternoon, while on assignment in India, Ellen Barry got a phone call that sent her looking for the truth.</p><p>In Chapter 1, we hear of a woman who appeared on the platform of the New Delhi railway station with her two adult children, declaring they were the descendants of the royal family of Oudh. She said they would not leave until what was theirs had been restored. So they settled in and waited — for nearly a decade.</p><p>For more information, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NJX1Ct5KBLsLAxhdCHK6kGLJQ-rdA1_JzqvPQ9YLMf8</guid>
      <pubDate>Thu, 28 Nov 2019 00:10:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ae89b82e-33f7-44b6-a131-e0010f9ed8c1.mp3" type="audio/mpeg" length="29811356"/>
    </item>
    <item>
      <title>What the Bidens Actually Did in Ukraine</title>
      <description>
        <![CDATA[<p>Yesterday, we looked at the origins of President Trump’s baseless theory that Ukraine, not Russia, meddled in the 2016 election. This theory inspired one of the two investigations he sought from Ukraine that triggered the impeachment inquiry. Today, we look at the origins of the president’s second theory. Guest: <a href="https://www.nytimes.com/by/kenneth-p-vogel?smid=pc-thedaily" target="_blank">Kenneth P. Vogel</a>, a reporter in The New York Times’s Washington bureau. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Former Vice President Joseph R. Biden Jr.’s<a href="https://www.nytimes.com/2019/11/10/us/politics/joe-biden-ukraine.html" target="_blank"> diplomatic record on corruption</a> in Ukraine contradicts President Trump’s claims.</li><li>There are a lot of accusations flying back and forth between the president and the former vice president.<a href="https://www.nytimes.com/2019/09/22/us/politics/biden-ukraine-trump.html" target="_blank"> Let us help you sort them out</a>.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>What the Bidens Actually Did in Ukraine</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Yesterday, we looked at the origins of President Trump’s baseless theory that Ukraine, not Russia, meddled in the 2016 election. This theory inspired one of the two investigations he sought from Ukraine that triggered the impeachment inquiry. Today, we look at the origins of the president’s second theory. Guest: Kenneth P. Vogel, a reporter in The New York Times’s Washington bureau. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Former Vice President Joseph R. Biden Jr.’s diplomatic record on corruption in Ukraine contradicts President Trump’s claims.There are a lot of accusations flying back and forth between the president and the former vice president. Let us help you sort them out. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Yesterday, we looked at the origins of President Trump’s baseless theory that Ukraine, not Russia, meddled in the 2016 election. This theory inspired one of the two investigations he sought from Ukraine that triggered the impeachment inquiry. Today, we look at the origins of the president’s second theory. Guest: <a href="https://www.nytimes.com/by/kenneth-p-vogel?smid=pc-thedaily" target="_blank">Kenneth P. Vogel</a>, a reporter in The New York Times’s Washington bureau. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Former Vice President Joseph R. Biden Jr.’s<a href="https://www.nytimes.com/2019/11/10/us/politics/joe-biden-ukraine.html" target="_blank"> diplomatic record on corruption</a> in Ukraine contradicts President Trump’s claims.</li><li>There are a lot of accusations flying back and forth between the president and the former vice president.<a href="https://www.nytimes.com/2019/09/22/us/politics/biden-ukraine-trump.html" target="_blank"> Let us help you sort them out</a>.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GJ0-qfaJ3hLOaCIjiTwLgAJdJH-IZHEy-dPjXhASwEw</guid>
      <pubDate>Wed, 27 Nov 2019 10:54:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:28</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e89dc9e9-cd72-4241-9ec8-03befba2000f.mp3" type="audio/mpeg" length="24458553"/>
    </item>
    <item>
      <title>Why Trump Still Believes (Wrongly) That Ukraine Hacked the D.N.C.</title>
      <description>
        <![CDATA[<p>In the phone call at the center of the impeachment inquiry, President Trump asked Ukraine for two different investigations. Today, we explore the unexpected story behind one of them. Guest: <a href="https://www.nytimes.com/by/scott-shane?smid=pc-thedaily" target="_blank">Scott Shane</a>, a national security reporter in the Washington bureau of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>How a fringe theory about Ukraine<a href="https://www.nytimes.com/2019/10/03/us/politics/trump-ukraine-conspiracy.html?smid=pc-thedaily" target="_blank"> took root in the White House</a>.</li><li>Moscow has<a href="https://www.nytimes.com/2019/11/22/us/politics/ukraine-russia-interference.html?smid=pc-thedaily" target="_blank"> run a yearslong operation</a> attempting to essentially frame Ukraine for its own 2016 election interference, according to United States intelligence agencies.</li></ul>]]>
      </description>
      <itunes:title>Why Trump Still Believes (Wrongly) That Ukraine Hacked the D.N.C.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the phone call at the center of the impeachment inquiry, President Trump asked Ukraine for two different investigations. Today, we explore the unexpected story behind one of them. Guest: Scott Shane, a national security reporter in the Washington bureau of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:How a fringe theory about Ukraine took root in the White House.Moscow has run a yearslong operation attempting to essentially frame Ukraine for its own 2016 election interference, according to United States intelligence agencies.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the phone call at the center of the impeachment inquiry, President Trump asked Ukraine for two different investigations. Today, we explore the unexpected story behind one of them. Guest: <a href="https://www.nytimes.com/by/scott-shane?smid=pc-thedaily" target="_blank">Scott Shane</a>, a national security reporter in the Washington bureau of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>How a fringe theory about Ukraine<a href="https://www.nytimes.com/2019/10/03/us/politics/trump-ukraine-conspiracy.html?smid=pc-thedaily" target="_blank"> took root in the White House</a>.</li><li>Moscow has<a href="https://www.nytimes.com/2019/11/22/us/politics/ukraine-russia-interference.html?smid=pc-thedaily" target="_blank"> run a yearslong operation</a> attempting to essentially frame Ukraine for its own 2016 election interference, according to United States intelligence agencies.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8DY5cKfb_bReqi4ReHZtLk74PawaXDPTESF6b2uLSM8</guid>
      <pubDate>Tue, 26 Nov 2019 10:55:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6b21e3bc-0ac8-4632-8d46-9f7977d035c8.mp3" type="audio/mpeg" length="22496235"/>
    </item>
    <item>
      <title>What Should Happen to the Navy SEAL Chief?</title>
      <description>
        <![CDATA[<p>An unusual battle has broken out between President Trump and top military commanders over the future of a Navy SEAL commando.</p><p>Today, how a high-profile war-crimes investigation has prompted a war of words from the commander in chief — rocking the highest levels of the military. Guest: <a href="https://www.nytimes.com/by/dave-philipps" target="_blank">Dave Philipps</a>, a national correspondent covering veterans and the military for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Why Chief Petty Officer Edward Gallagher was<a href="https://www.nytimes.com/2019/11/24/us/edward-gallagher-navy-seals-trump.html" target="_blank"> investigated for war crimes</a>, and why his fellow SEAL members broke the group’s code of silence to testify against him.</li><li>Order within his ranks was a “deadly serious business.” Now, Richard V. Spencer, the secretary of the Navy,<a href="https://www.nytimes.com/2019/11/24/us/politics/navy-secretary-richard-spencer-resign.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> has resigned</a> after clashing with the president over Chief Gallagher’s demotion. </li></ul>]]>
      </description>
      <itunes:title>What Should Happen to the Navy SEAL Chief?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>An unusual battle has broken out between President Trump and top military commanders over the future of a Navy SEAL commando.

Today, how a high-profile war-crimes investigation has prompted a war of words from the commander in chief — rocking the highest levels of the military. Guest: Dave Philipps, a national correspondent covering veterans and the military for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Why Chief Petty Officer Edward Gallagher was investigated for war crimes, and why his fellow SEAL members broke the group’s code of silence to testify against him.Order within his ranks was a “deadly serious business.” Now, Richard V. Spencer, the secretary of the Navy, has resigned after clashing with the president over Chief Gallagher’s demotion. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>An unusual battle has broken out between President Trump and top military commanders over the future of a Navy SEAL commando.</p><p>Today, how a high-profile war-crimes investigation has prompted a war of words from the commander in chief — rocking the highest levels of the military. Guest: <a href="https://www.nytimes.com/by/dave-philipps" target="_blank">Dave Philipps</a>, a national correspondent covering veterans and the military for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Why Chief Petty Officer Edward Gallagher was<a href="https://www.nytimes.com/2019/11/24/us/edward-gallagher-navy-seals-trump.html" target="_blank"> investigated for war crimes</a>, and why his fellow SEAL members broke the group’s code of silence to testify against him.</li><li>Order within his ranks was a “deadly serious business.” Now, Richard V. Spencer, the secretary of the Navy,<a href="https://www.nytimes.com/2019/11/24/us/politics/navy-secretary-richard-spencer-resign.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> has resigned</a> after clashing with the president over Chief Gallagher’s demotion. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1M7Iqnto19h54Dbx3r1Wu8MNr7_fVyLy2kcKbTVilQI</guid>
      <pubDate>Mon, 25 Nov 2019 10:51:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f69cb847-adad-4b35-86d9-82f34b30ddef.mp3" type="audio/mpeg" length="21680796"/>
    </item>
    <item>
      <title>The Latest: A Call to ‘Fox &amp; Friends’</title>
      <description>
        <![CDATA[<p>President Trump called into ‘Fox &amp; Friends’ this morning to respond to all that has been said over two weeks of public impeachment hearings. The conversation offered a preview of what may become the president’s impeachment defense.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/22/podcasts/the-latest-impeachment-trump-fox.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: A Call to ‘Fox &amp; Friends’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump called into ‘Fox &amp;amp; Friends’ this morning to respond to all that has been said over two weeks of public impeachment hearings. The conversation offered a preview of what may become the president’s impeachment defense.

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump called into ‘Fox &amp; Friends’ this morning to respond to all that has been said over two weeks of public impeachment hearings. The conversation offered a preview of what may become the president’s impeachment defense.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/22/podcasts/the-latest-impeachment-trump-fox.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Birj9IQzlJP_KaKnW8sRf6FBht-J9-R4nCAqGrKPeCU</guid>
      <pubDate>Fri, 22 Nov 2019 23:40:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d7ced290-549f-448a-89ad-26297d74a494.mp3" type="audio/mpeg" length="6309093"/>
    </item>
    <item>
      <title>The Candidates: Pete Buttigieg</title>
      <description>
        <![CDATA[<p>Today we launch Part One in our series on pivotal moments in the lives of the 2020 presidential front-runners. In studio with “The Daily,” Pete Buttigieg, the mayor of South Bend, Ind., talks about how his lifelong political ambitions were complicated by the secret he kept for decades.</p><p>Guests:&nbsp;</p><ul><li>Pete Buttigieg, mayor of South Bend, Ind., and 2020 Democratic presidential candidate.</li><li><a href="https://www.nytimes.com/by/jeremy-w-peters?smid=pc-thedaily" target="_blank">Jeremy W. Peters</a>, a politics reporter in the Washington bureau of The New York Times.</li></ul><p><br></p><p><em>﻿“The Candidates” is a new series from “The Daily” exploring pivotal moments in the lives of top presidential contenders in the 2020 election. For more information on today’s episode, visit</em><a href="https://www.nytimes.com/thedaily" target="_blank"><em> nytimes.com/thedaily</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Candidates: Pete Buttigieg</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today we launch Part One in our series on pivotal moments in the lives of the 2020 presidential front-runners. In studio with “The Daily,” Pete Buttigieg, the mayor of South Bend, Ind., talks about how his lifelong political ambitions were complicated by the secret he kept for decades.

Guests: Pete Buttigieg, mayor of South Bend, Ind., and 2020 Democratic presidential candidate.Jeremy W. Peters, a politics reporter in the Washington bureau of The New York Times.


﻿“The Candidates” is a new series from “The Daily” exploring pivotal moments in the lives of top presidential contenders in the 2020 election. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today we launch Part One in our series on pivotal moments in the lives of the 2020 presidential front-runners. In studio with “The Daily,” Pete Buttigieg, the mayor of South Bend, Ind., talks about how his lifelong political ambitions were complicated by the secret he kept for decades.</p><p>Guests:&nbsp;</p><ul><li>Pete Buttigieg, mayor of South Bend, Ind., and 2020 Democratic presidential candidate.</li><li><a href="https://www.nytimes.com/by/jeremy-w-peters?smid=pc-thedaily" target="_blank">Jeremy W. Peters</a>, a politics reporter in the Washington bureau of The New York Times.</li></ul><p><br></p><p><em>﻿“The Candidates” is a new series from “The Daily” exploring pivotal moments in the lives of top presidential contenders in the 2020 election. For more information on today’s episode, visit</em><a href="https://www.nytimes.com/thedaily" target="_blank"><em> nytimes.com/thedaily</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HirsPaHIZ-qbydezK6lAgCdecOpqgfWchwvIxNOvV5U</guid>
      <pubDate>Fri, 22 Nov 2019 10:29:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:40:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c20c3ae3-c7f4-4471-8eb6-e24cceffb555.mp3" type="audio/mpeg" length="38501564"/>
    </item>
    <item>
      <title>The Latest: The Irregular Channel</title>
      <description>
        <![CDATA[<p>Throughout the impeachment inquiry, an image has surfaced of the Trump administration’s two policymaking channels on Ukraine — one regular, one not. Today’s testimony from Fiona Hill, President Trump’s former top adviser on Russia and Europe, raised the question: Which was which?</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/21/podcasts/the-latest-impeachment-fiona-hill-gordon-sondland.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: The Irregular Channel</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Throughout the impeachment inquiry, an image has surfaced of the Trump administration’s two policymaking channels on Ukraine — one regular, one not. Today’s testimony from Fiona Hill, President Trump’s former top adviser on Russia and Europe, raised the question: Which was which?

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Throughout the impeachment inquiry, an image has surfaced of the Trump administration’s two policymaking channels on Ukraine — one regular, one not. Today’s testimony from Fiona Hill, President Trump’s former top adviser on Russia and Europe, raised the question: Which was which?</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/21/podcasts/the-latest-impeachment-fiona-hill-gordon-sondland.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Bdd47UhkX1uFKB6VNXKCWy4JSzXPkuN58pOzQvy8OBY</guid>
      <pubDate>Thu, 21 Nov 2019 23:11:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:05:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/74f0576d-d1d0-4a9c-ba82-b1cc49a4c1a0.mp3" type="audio/mpeg" length="5377462"/>
    </item>
    <item>
      <title>‘We Followed the President’s Orders’</title>
      <description>
        <![CDATA[<p>Gordon D. Sondland, the United States ambassador to the European Union, has evolved from a loyal Trump campaign donor to a witness central to the impeachment inquiry. But his testimony has been contradicted on multiple occasions.</p><p>Today, we look at how both Democrats and Republicans on the House Intelligence Committee handled their most complicated witness to date.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Sondland<a href="https://www.nytimes.com/2019/11/20/us/politics/pompeo-sondland-trump-impeachment.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> implicated Secretary of State Mike Pompeo</a> in the nation’s biggest foreign policy controversy in nearly two decades. Reciting emails that he had written to Mr. Pompeo, he said that “everyone was in the loop.”</li><li>Confused about what this moment might mean? Here are answers to<a href="https://www.nytimes.com/2019/09/24/us/politics/impeachment-trump-explained.html?action=click&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;state=default&amp;pgtype=Article&amp;region=footer&amp;context=guide?smid=pc-thedaily" target="_blank"> seven key questions</a> about the impeachment process.</li></ul>]]>
      </description>
      <itunes:title>‘We Followed the President’s Orders’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Gordon D. Sondland, the United States ambassador to the European Union, has evolved from a loyal Trump campaign donor to a witness central to the impeachment inquiry. But his testimony has been contradicted on multiple occasions.

Today, we look at how both Democrats and Republicans on the House Intelligence Committee handled their most complicated witness to date. 

Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Sondland implicated Secretary of State Mike Pompeo in the nation’s biggest foreign policy controversy in nearly two decades. Reciting emails that he had written to Mr. Pompeo, he said that “everyone was in the loop.”Confused about what this moment might mean? Here are answers to seven key questions about the impeachment process.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Gordon D. Sondland, the United States ambassador to the European Union, has evolved from a loyal Trump campaign donor to a witness central to the impeachment inquiry. But his testimony has been contradicted on multiple occasions.</p><p>Today, we look at how both Democrats and Republicans on the House Intelligence Committee handled their most complicated witness to date.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Sondland<a href="https://www.nytimes.com/2019/11/20/us/politics/pompeo-sondland-trump-impeachment.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> implicated Secretary of State Mike Pompeo</a> in the nation’s biggest foreign policy controversy in nearly two decades. Reciting emails that he had written to Mr. Pompeo, he said that “everyone was in the loop.”</li><li>Confused about what this moment might mean? Here are answers to<a href="https://www.nytimes.com/2019/09/24/us/politics/impeachment-trump-explained.html?action=click&amp;module=STYLN_trump_playbook&amp;variant=1_trump_playbook&amp;state=default&amp;pgtype=Article&amp;region=footer&amp;context=guide?smid=pc-thedaily" target="_blank"> seven key questions</a> about the impeachment process.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/N92r7XoCjtPHCMcy7h0IZU1StADLjNnubampRiKYi6o</guid>
      <pubDate>Thu, 21 Nov 2019 10:55:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/abc33955-4a09-4635-9fc0-9e36cf977a44.mp3" type="audio/mpeg" length="25151529"/>
    </item>
    <item>
      <title>The Latest: ‘Everyone Was in the Loop’</title>
      <description>
        <![CDATA[<p>In explosive testimony, Gordon D. Sondland, the United States ambassador to the European Union, directly implicated President Trump, Vice President Mike Pence, Secretary of State Mike Pompeo and other top administration officials in what he said was a push for a “clear quid pro quo” with the president of Ukraine. But during questioning, things got complicated.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/20/podcasts/the-latest-impeachment-gordon-sondland.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: ‘Everyone Was in the Loop’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In explosive testimony, Gordon D. Sondland, the United States ambassador to the European Union, directly implicated President Trump, Vice President Mike Pence, Secretary of State Mike Pompeo and other top administration officials in what he said was a push for a “clear quid pro quo” with the president of Ukraine. But during questioning, things got complicated.

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In explosive testimony, Gordon D. Sondland, the United States ambassador to the European Union, directly implicated President Trump, Vice President Mike Pence, Secretary of State Mike Pompeo and other top administration officials in what he said was a push for a “clear quid pro quo” with the president of Ukraine. But during questioning, things got complicated.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/20/podcasts/the-latest-impeachment-gordon-sondland.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qoFPKN1O93rYrKovHsT7cSQ1cEYc5Fwb8LOKfU8f0iQ</guid>
      <pubDate>Wed, 20 Nov 2019 23:13:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5f03c8aa-e2c9-41ae-849e-553086c67e6b.mp3" type="audio/mpeg" length="6391849"/>
    </item>
    <item>
      <title>What Happened to Kamala Harris?</title>
      <description>
        <![CDATA[<p>When Senator Kamala Harris started her presidential campaign 10 months ago, she drew a crowd of 20,000 to her kickoff rally — the biggest of any candidate’s. She was talked about as a potential heir to the political coalition that carried Barack Obama to the White House. We followed her campaign to South Carolina to explore why, after such fanfare, she’s now polling in the single digits.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/astead-w-herndon" target="_blank">Astead W. Herndon</a>, a national political reporter for The New York Times, and Monika Evstatieva, a producer on “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Ms. Harris said she wanted relevant policy, not “a beautiful sonnet.” Here are the<a href="https://www.nytimes.com/interactive/2020/us/elections/kamala-harris.html?searchResultPosition=5" target="_blank"> signature issues of her campaign</a>.</li><li>We asked 21 candidates the same 18 questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/kamala-harris-2020-campaign.html" target="_blank"> Hear Kamala Harris’s answers</a>.</li></ul>]]>
      </description>
      <itunes:title>What Happened to Kamala Harris?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When Senator Kamala Harris started her presidential campaign 10 months ago, she drew a crowd of 20,000 to her kickoff rally — the biggest of any candidate’s. She was talked about as a potential heir to the political coalition that carried Barack Obama to the White House. We followed her campaign to South Carolina to explore why, after such fanfare, she’s now polling in the single digits. 

Guest: Astead W. Herndon, a national political reporter for The New York Times, and Monika Evstatieva, a producer on “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Ms. Harris said she wanted relevant policy, not “a beautiful sonnet.” Here are the signature issues of her campaign.We asked 21 candidates the same 18 questions. Hear Kamala Harris’s answers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When Senator Kamala Harris started her presidential campaign 10 months ago, she drew a crowd of 20,000 to her kickoff rally — the biggest of any candidate’s. She was talked about as a potential heir to the political coalition that carried Barack Obama to the White House. We followed her campaign to South Carolina to explore why, after such fanfare, she’s now polling in the single digits.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/astead-w-herndon" target="_blank">Astead W. Herndon</a>, a national political reporter for The New York Times, and Monika Evstatieva, a producer on “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Ms. Harris said she wanted relevant policy, not “a beautiful sonnet.” Here are the<a href="https://www.nytimes.com/interactive/2020/us/elections/kamala-harris.html?searchResultPosition=5" target="_blank"> signature issues of her campaign</a>.</li><li>We asked 21 candidates the same 18 questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/kamala-harris-2020-campaign.html" target="_blank"> Hear Kamala Harris’s answers</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7rDj5l59U45h5HGo5B9uK2bHejRJFL4icyWtt5mTMsA</guid>
      <pubDate>Wed, 20 Nov 2019 10:54:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5b9a445b-47f2-4ac1-b7ef-b2709896e7df.mp3" type="audio/mpeg" length="27312378"/>
    </item>
    <item>
      <title>The Latest: A Republican Strategy Revealed</title>
      <description>
        <![CDATA[<p>Lt. Col. Alexander Vindman, the top Ukraine expert on the National Security Council, gave public testimony of his alarm at what he heard during President Trump’s July phone call with the leader of Ukraine. Appearing in his Army dress uniform trimmed with military ribbons, Colonel Vindman spoke of himself as a patriot, an account that Democrats echoed. The president’s Republican allies, however, told a different story.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/19/podcasts/the-latest-impeachment-alexander-vindman.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: A Republican Strategy Revealed</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Lt. Col. Alexander Vindman, the top Ukraine expert on the National Security Council, gave public testimony of his alarm at what he heard during President Trump’s July phone call with the leader of Ukraine. Appearing in his Army dress uniform trimmed with military ribbons, Colonel Vindman spoke of himself as a patriot, an account that Democrats echoed. The president’s Republican allies, however, told a different story.

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Lt. Col. Alexander Vindman, the top Ukraine expert on the National Security Council, gave public testimony of his alarm at what he heard during President Trump’s July phone call with the leader of Ukraine. Appearing in his Army dress uniform trimmed with military ribbons, Colonel Vindman spoke of himself as a patriot, an account that Democrats echoed. The president’s Republican allies, however, told a different story.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/19/podcasts/the-latest-impeachment-alexander-vindman.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/hs73_HFUevdgdOPhrdxwNiGVvF5JpwLM99kjcYL1PBc</guid>
      <pubDate>Wed, 20 Nov 2019 01:09:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:07:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3f1d1c56-2ebd-4ca9-9bb7-d38bc6cf1e19.mp3" type="audio/mpeg" length="7252427"/>
    </item>
    <item>
      <title>A Broken Promise on Taxes</title>
      <description>
        <![CDATA[<p>As they lobbied the Trump administration for a $1.5 trillion tax cut, corporations vowed to invest the savings back into the U.S. economy. Today, we investigate whether they made good on that promise.</p><p>Guest: <a href="https://www.nytimes.com/by/jim-tankersley" target="_blank">Jim Tankersley</a>, who covers economic and tax policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>FedEx’s leadership lobbied unsuccessfully for tax reform for years. Then it<a href="https://www.nytimes.com/2019/11/17/business/how-fedex-cut-its-tax-bill-to-0.html?rref=collection%2Fbyline%2Fjim-tankersley&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=1&amp;pgtype=collectionnytimes.com/thedaily" target="_blank"> wrote its own tax proposal</a> for President Trump — cutting the company’s corporate tax rate to zero.</li><li>How the Trump administration’s tax cuts<a href="https://www.nytimes.com/2019/04/14/business/economy/income-tax-cut.htmlnytimes.com/thedaily" target="_blank"> may have affected you</a>, and why you might not believe it. </li></ul>]]>
      </description>
      <itunes:title>A Broken Promise on Taxes</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As they lobbied the Trump administration for a $1.5 trillion tax cut, corporations vowed to invest the savings back into the U.S. economy. Today, we investigate whether they made good on that promise.

Guest: Jim Tankersley, who covers economic and tax policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:FedEx’s leadership lobbied unsuccessfully for tax reform for years. Then it wrote its own tax proposal for President Trump — cutting the company’s corporate tax rate to zero.How the Trump administration’s tax cuts may have affected you, and why you might not believe it. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>As they lobbied the Trump administration for a $1.5 trillion tax cut, corporations vowed to invest the savings back into the U.S. economy. Today, we investigate whether they made good on that promise.</p><p>Guest: <a href="https://www.nytimes.com/by/jim-tankersley" target="_blank">Jim Tankersley</a>, who covers economic and tax policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>FedEx’s leadership lobbied unsuccessfully for tax reform for years. Then it<a href="https://www.nytimes.com/2019/11/17/business/how-fedex-cut-its-tax-bill-to-0.html?rref=collection%2Fbyline%2Fjim-tankersley&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=1&amp;pgtype=collectionnytimes.com/thedaily" target="_blank"> wrote its own tax proposal</a> for President Trump — cutting the company’s corporate tax rate to zero.</li><li>How the Trump administration’s tax cuts<a href="https://www.nytimes.com/2019/04/14/business/economy/income-tax-cut.htmlnytimes.com/thedaily" target="_blank"> may have affected you</a>, and why you might not believe it. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/H06Q-eqF5EOGWNV1PR5qWBV1j_ftgzXS3cymANZTYGk</guid>
      <pubDate>Tue, 19 Nov 2019 10:49:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/37c77431-2ff1-400f-9982-9a9785ae43e4.mp3" type="audio/mpeg" length="21048842"/>
    </item>
    <item>
      <title>The Latest: The Week Ahead in the Impeachment Hearings</title>
      <description>
        <![CDATA[<p>Four witnesses will appear in tomorrow’s public hearings — three of whom listened directly to the July phone call between President Trump and Ukraine’s president that is now at the center of the impeachment inquiry. Plus, impeachment investigators are looking into whether Mr. Trump lied to Robert S. Mueller III.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/18/podcasts/the-latest-impeachment-mueller.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: The Week Ahead in the Impeachment Hearings</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Four witnesses will appear in tomorrow’s public hearings — three of whom listened directly to the July phone call between President Trump and Ukraine’s president that is now at the center of the impeachment inquiry. Plus, impeachment investigators are looking into whether Mr. Trump lied to Robert S. Mueller III.

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Four witnesses will appear in tomorrow’s public hearings — three of whom listened directly to the July phone call between President Trump and Ukraine’s president that is now at the center of the impeachment inquiry. Plus, impeachment investigators are looking into whether Mr. Trump lied to Robert S. Mueller III.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/18/podcasts/the-latest-impeachment-mueller.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xg80HQBLw5IsVT1uR8WQUVujDtjMAIdNLoozKcQfM1M</guid>
      <pubDate>Tue, 19 Nov 2019 00:38:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4a048895-13a7-4bcf-b4e1-7290ff955984.mp3" type="audio/mpeg" length="6661015"/>
    </item>
    <item>
      <title>The Spectacular Rise and Fall of WeWork</title>
      <description>
        <![CDATA[<p>It was one of the most valuable start-ups in the United States, with bold plans to revolutionize how and where people worked around the world. Today, we look at how the dream of WeWork crumbled — and explore the story of the man responsible for the wreckage.</p><p>Guest: <a href="https://www.nytimes.com/by/amy-chozick?smid=pc-thedaily" target="_blank">Amy Chozick</a>, a writer at large for The New York Times covering the personalities and power struggles in business, politics and media.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Adam Neumann had an inexplicably persuasive charisma and a taste for risk. Then he found a<a href="https://www.nytimes.com/2019/11/02/business/adam-neumann-wework-exit-package.html?rref=collection%2Fbyline%2Famy-chozick&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=1&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> kindred spirit with an open checkbook</a>.</li><li>WeWork is preparing to eliminate at<a href="https://www.nytimes.com/2019/11/17/business/wework-layoffs.html?smid=pc-thedaily" target="_blank"> least 4,000 employees</a>, cutting nearly a third of its work force in an effort to staunch further financial losses. </li></ul>]]>
      </description>
      <itunes:title>The Spectacular Rise and Fall of WeWork</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>It was one of the most valuable start-ups in the United States, with bold plans to revolutionize how and where people worked around the world. Today, we look at how the dream of WeWork crumbled — and explore the story of the man responsible for the wreckage.

Guest: Amy Chozick, a writer at large for The New York Times covering the personalities and power struggles in business, politics and media.

For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Adam Neumann had an inexplicably persuasive charisma and a taste for risk. Then he found a kindred spirit with an open checkbook.WeWork is preparing to eliminate at least 4,000 employees, cutting nearly a third of its work force in an effort to staunch further financial losses. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>It was one of the most valuable start-ups in the United States, with bold plans to revolutionize how and where people worked around the world. Today, we look at how the dream of WeWork crumbled — and explore the story of the man responsible for the wreckage.</p><p>Guest: <a href="https://www.nytimes.com/by/amy-chozick?smid=pc-thedaily" target="_blank">Amy Chozick</a>, a writer at large for The New York Times covering the personalities and power struggles in business, politics and media.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:</p><ul><li>Adam Neumann had an inexplicably persuasive charisma and a taste for risk. Then he found a<a href="https://www.nytimes.com/2019/11/02/business/adam-neumann-wework-exit-package.html?rref=collection%2Fbyline%2Famy-chozick&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=1&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> kindred spirit with an open checkbook</a>.</li><li>WeWork is preparing to eliminate at<a href="https://www.nytimes.com/2019/11/17/business/wework-layoffs.html?smid=pc-thedaily" target="_blank"> least 4,000 employees</a>, cutting nearly a third of its work force in an effort to staunch further financial losses. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/q6I6IxNLKHktwsvcwuNLYGw5XIg4TGdu1jK7VS1YhTQ</guid>
      <pubDate>Mon, 18 Nov 2019 10:59:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/033d5aa6-84b9-4dca-a90b-34d12561cb61.mp3" type="audio/mpeg" length="22487457"/>
    </item>
    <item>
      <title>The Latest: ‘It’s Very Intimidating’</title>
      <description>
        <![CDATA[<p>Marie Yovanovitch, who was ousted as the ambassador to Ukraine on President Trump’s orders, came before the House Intelligence Committee on the second day of public hearings in the impeachment inquiry. At the very moment she was testifying about feeling threatened by the president, the president was tweeting about her.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/15/podcasts/the-latest-marie-yovanovitch-impeachment.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: ‘It’s Very Intimidating’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Marie Yovanovitch, who was ousted as the ambassador to Ukraine on President Trump’s orders, came before the House Intelligence Committee on the second day of public hearings in the impeachment inquiry. At the very moment she was testifying about feeling threatened by the president, the president was tweeting about her.

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Marie Yovanovitch, who was ousted as the ambassador to Ukraine on President Trump’s orders, came before the House Intelligence Committee on the second day of public hearings in the impeachment inquiry. At the very moment she was testifying about feeling threatened by the president, the president was tweeting about her.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it&nbsp;</em><a href="https://www.nytimes.com/2019/11/15/podcasts/the-latest-marie-yovanovitch-impeachment.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3zp66gC9OZXjPftB-YrEeZtWOL7g0oOpRXGwQZRTFmo</guid>
      <pubDate>Fri, 15 Nov 2019 22:24:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:08:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b985920e-4d45-4adc-a46a-4234b8473bfb.mp3" type="audio/mpeg" length="7748545"/>
    </item>
    <item>
      <title>Capitalism on Trial in Chile</title>
      <description>
        <![CDATA[<p>Free-market economists once talked about “the miracle of Chile,” praising its policies as Latin America’s great economic success story. But recently, over a million people have flipped the script, taking to the streets and facing down a violent police response as they demand a reckoning on the promise of prosperity that never came.</p><p>Today, we explore how, in Chile, capitalism itself is now on trial.</p><p>Guest: <a href="https://www.nytimes.com/by/amanda-taub" target="_blank">Amanda Taub</a>, who explores the ideas and context behind major world events as a columnist for<a href="https://www.nytimes.com/column/the-interpreter" target="_blank"> The Interpreter</a> at The New York Times, spoke with Annie Brown, a producer for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>“It’s not 30 pesos, it’s 30 years.”<a href="https://www.nytimes.com/2019/11/03/world/americas/chile-protests.html?smid=pc-thedaily" target="_blank"> Our correspondent went to Santiago</a>, the Chilean capital, to understand how a small hike in public transportation fares ignited mass protests.</li><li>After weeks of demonstrations, Chile’s president said<a href="https://www.nytimes.com/2019/11/11/world/americas/chile-protests-new-constitution.html?smid=pc-thedaily" target="_blank"> he would support a new Constitution</a>. But for many, it was too little, too late.</li><li>Our correspondent went inside a trauma unit in Chile that’s responding to “an epidemic” of protesters who have been shot in the eye by police pellet guns. Watch the video below.</li></ul>]]>
      </description>
      <itunes:title>Capitalism on Trial in Chile</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Free-market economists once talked about “the miracle of Chile,” praising its policies as Latin America’s great economic success story. But recently, over a million people have flipped the script, taking to the streets and facing down a violent police response as they demand a reckoning on the promise of prosperity that never came.

Today, we explore how, in Chile, capitalism itself is now on trial.

Guest: Amanda Taub, who explores the ideas and context behind major world events as a columnist for The Interpreter at The New York Times, spoke with Annie Brown, a producer for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: “It’s not 30 pesos, it’s 30 years.” Our correspondent went to Santiago, the Chilean capital, to understand how a small hike in public transportation fares ignited mass protests.After weeks of demonstrations, Chile’s president said he would support a new Constitution. But for many, it was too little, too late.Our correspondent went inside a trauma unit in Chile that’s responding to “an epidemic” of protesters who have been shot in the eye by police pellet guns. Watch the video below.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Free-market economists once talked about “the miracle of Chile,” praising its policies as Latin America’s great economic success story. But recently, over a million people have flipped the script, taking to the streets and facing down a violent police response as they demand a reckoning on the promise of prosperity that never came.</p><p>Today, we explore how, in Chile, capitalism itself is now on trial.</p><p>Guest: <a href="https://www.nytimes.com/by/amanda-taub" target="_blank">Amanda Taub</a>, who explores the ideas and context behind major world events as a columnist for<a href="https://www.nytimes.com/column/the-interpreter" target="_blank"> The Interpreter</a> at The New York Times, spoke with Annie Brown, a producer for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>“It’s not 30 pesos, it’s 30 years.”<a href="https://www.nytimes.com/2019/11/03/world/americas/chile-protests.html?smid=pc-thedaily" target="_blank"> Our correspondent went to Santiago</a>, the Chilean capital, to understand how a small hike in public transportation fares ignited mass protests.</li><li>After weeks of demonstrations, Chile’s president said<a href="https://www.nytimes.com/2019/11/11/world/americas/chile-protests-new-constitution.html?smid=pc-thedaily" target="_blank"> he would support a new Constitution</a>. But for many, it was too little, too late.</li><li>Our correspondent went inside a trauma unit in Chile that’s responding to “an epidemic” of protesters who have been shot in the eye by police pellet guns. Watch the video below.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/l_f37p-Vyt_of3UO0JTwpQj1ldje7ixS_2jsmE7qnGs</guid>
      <pubDate>Fri, 15 Nov 2019 10:50:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba61cdea-e60f-449a-be29-4c5a2b50cc4a.mp3" type="audio/mpeg" length="23877172"/>
    </item>
    <item>
      <title>The Latest: A New Word for What Trump Did</title>
      <description>
        <![CDATA[<p>We’ve been hearing a lot about the “quid pro quo.” But this week, Democrats started using a new term, one that shows up in the impeachment clause of the Constitution, to describe President Trump’s actions toward Ukraine. Republicans started using it, too — to reject it.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it </em><a href="https://www.nytimes.com/2019/11/14/podcasts/the-latest-impeachment-bribery.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </description>
      <itunes:title>The Latest: A New Word for What Trump Did</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>We’ve been hearing a lot about the “quid pro quo.” But this week, Democrats started using a new term, one that shows up in the impeachment clause of the Constitution, to describe President Trump’s actions toward Ukraine. Republicans started using it, too — to reject it.

“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>We’ve been hearing a lot about the “quid pro quo.” But this week, Democrats started using a new term, one that shows up in the impeachment clause of the Constitution, to describe President Trump’s actions toward Ukraine. Republicans started using it, too — to reject it.</p><p><em>“The Latest” is a new series on the impeachment inquiry, from the team behind “The Daily.” You can find more information about it </em><a href="https://www.nytimes.com/2019/11/14/podcasts/the-latest-impeachment-bribery.html" target="_blank"><em>here</em></a><em>.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bihXAWKHWK0kMbkepoZA4UN_3iLBT3UxQaUeYoCYRV4</guid>
      <pubDate>Thu, 14 Nov 2019 22:51:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/eed7d373-cf8d-4b37-9f43-5053da8267db.mp3" type="audio/mpeg" length="6033240"/>
    </item>
    <item>
      <title>A Public Hearing, and a Feud Over Ukraine</title>
      <description>
        <![CDATA[<p>The House of Representatives opened historic impeachment hearings on Wednesday, with William B. Taylor Jr. and George P. Kent, senior career civil servants, caught in the crossfire. Democrats underscored the constitutional import of the proceedings, while Republicans branded the whole investigation into President Trump’s dealings with Ukraine a sham. Mr. Taylor and Mr. Kent — carefully, if cinematically — detailed the emergence of a shadow foreign policy, one which had the capacity to determine the fate of an ally in the face of Russian aggression.&nbsp;</p><p>We discuss what this phase of the impeachment inquiry could mean for the president — and for the 2020 election.</p><p>Guest: <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Mr. Taylor said that,<a href="https://www.nytimes.com/2019/11/13/us/politics/impeachment-hearing-day-1.html?smid=pc-thedaily" target="_blank"> in a call with Gordon D. Sondland</a>, the American ambassador to the European Union, President Trump had made clear he cared “more about the investigations of Biden” than Ukraine’s security.</li><li>Here are<a href="https://www.nytimes.com/2019/11/13/us/politics/impeachment-hearings.html?smid=pc-thedaily" target="_blank"> key moments</a> from the first public impeachment hearing.</li></ul>]]>
      </description>
      <itunes:title>A Public Hearing, and a Feud Over Ukraine</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House of Representatives opened historic impeachment hearings on Wednesday, with William B. Taylor Jr. and George P. Kent, senior career civil servants, caught in the crossfire. Democrats underscored the constitutional import of the proceedings, while Republicans branded the whole investigation into President Trump’s dealings with Ukraine a sham. Mr. Taylor and Mr. Kent — carefully, if cinematically — detailed the emergence of a shadow foreign policy, one which had the capacity to determine the fate of an ally in the face of Russian aggression. 

We discuss what this phase of the impeachment inquiry could mean for the president — and for the 2020 election.

Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Mr. Taylor said that, in a call with Gordon D. Sondland, the American ambassador to the European Union, President Trump had made clear he cared “more about the investigations of Biden” than Ukraine’s security.Here are key moments from the first public impeachment hearing.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House of Representatives opened historic impeachment hearings on Wednesday, with William B. Taylor Jr. and George P. Kent, senior career civil servants, caught in the crossfire. Democrats underscored the constitutional import of the proceedings, while Republicans branded the whole investigation into President Trump’s dealings with Ukraine a sham. Mr. Taylor and Mr. Kent — carefully, if cinematically — detailed the emergence of a shadow foreign policy, one which had the capacity to determine the fate of an ally in the face of Russian aggression.&nbsp;</p><p>We discuss what this phase of the impeachment inquiry could mean for the president — and for the 2020 election.</p><p>Guest: <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Mr. Taylor said that,<a href="https://www.nytimes.com/2019/11/13/us/politics/impeachment-hearing-day-1.html?smid=pc-thedaily" target="_blank"> in a call with Gordon D. Sondland</a>, the American ambassador to the European Union, President Trump had made clear he cared “more about the investigations of Biden” than Ukraine’s security.</li><li>Here are<a href="https://www.nytimes.com/2019/11/13/us/politics/impeachment-hearings.html?smid=pc-thedaily" target="_blank"> key moments</a> from the first public impeachment hearing.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NJAzHPl3FSx6RAkfwg5ZPkt3dltfaCVo9sDUitKbjuI</guid>
      <pubDate>Thu, 14 Nov 2019 10:55:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7e5f6903-e1e3-48a0-bba5-7c9cb1eda79d.mp3" type="audio/mpeg" length="26228192"/>
    </item>
    <item>
      <title>The Latest: An Ideal Witness for the Democrats</title>
      <description>
        <![CDATA[<p>On the first day of public hearings in the Trump impeachment inquiry, lawmakers questioned two diplomats, and laid out two competing narratives about the investigation. This is the first episode in our new series on the impeachment inquiry. For more information, visit&nbsp;<a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Latest: An Ideal Witness for the Democrats</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On the first day of public hearings in the Trump impeachment inquiry, lawmakers questioned two diplomats, and laid out two competing narratives about the investigation. This is the first episode in our new series on the impeachment inquiry. For more information, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>On the first day of public hearings in the Trump impeachment inquiry, lawmakers questioned two diplomats, and laid out two competing narratives about the investigation. This is the first episode in our new series on the impeachment inquiry. For more information, visit&nbsp;<a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/k6htc2yKT14dDYrbPykP78eNI-B51nrnOOg5sP7uvYk</guid>
      <pubDate>Thu, 14 Nov 2019 02:36:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:06:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5fe67a00-9416-4252-a90e-97f8469fa51f.mp3" type="audio/mpeg" length="5845159"/>
    </item>
    <item>
      <title>A Third Grader’s Guide to the Impeachment Hearings</title>
      <description>
        <![CDATA[<p>This morning, the House of Representatives begins public hearings in the impeachment inquiry against President Trump. Before those hearings get underway, we sat down with someone who’s unafraid to ask all the questions we’ve been too embarrassed to say out loud.&nbsp;&nbsp;</p><p>Guests: <a href="https://www.nytimes.com/by/michael-s-schmidt" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times, spoke with Bianca Giaever, a producer for “The Daily,” and Leo, a third grader, to answer his questions about the impeachment inquiry. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>In the first nationally televised hearings of the impeachment inquiry, Democrats will look to<a href="https://www.nytimes.com/2019/11/12/us/politics/impeachment-strategy-republicans.html" target="_blank"> make the case</a> that Mr. Trump’s dealings with Ukraine constitute high crimes and misdemeanors.</li><li>These will be the first presidential impeachment hearings in more than two decades. Here’s how this inquiry is<a href="https://www.nytimes.com/2019/11/12/us/politics/impeachment-clinton-trump.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> likely to be different</a> than the last.</li><li><a href="https://www.nytimes.com/interactive/2019/11/12/us/politics/impeachment-trump-congress.html?searchResultPosition=2" target="_blank">Meet the public officials</a> likely to be most prominent in the inquiry.</li></ul>]]>
      </description>
      <itunes:title>A Third Grader’s Guide to the Impeachment Hearings</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This morning, the House of Representatives begins public hearings in the impeachment inquiry against President Trump. Before those hearings get underway, we sat down with someone who’s unafraid to ask all the questions we’ve been too embarrassed to say out loud.  

Guests: Michael S. Schmidt, who covers national security and federal investigations for The New York Times, spoke with Bianca Giaever, a producer for “The Daily,” and Leo, a third grader, to answer his questions about the impeachment inquiry. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: In the first nationally televised hearings of the impeachment inquiry, Democrats will look to make the case that Mr. Trump’s dealings with Ukraine constitute high crimes and misdemeanors.These will be the first presidential impeachment hearings in more than two decades. Here’s how this inquiry is likely to be different than the last.Meet the public officials likely to be most prominent in the inquiry.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This morning, the House of Representatives begins public hearings in the impeachment inquiry against President Trump. Before those hearings get underway, we sat down with someone who’s unafraid to ask all the questions we’ve been too embarrassed to say out loud.&nbsp;&nbsp;</p><p>Guests: <a href="https://www.nytimes.com/by/michael-s-schmidt" target="_blank">Michael S. Schmidt</a>, who covers national security and federal investigations for The New York Times, spoke with Bianca Giaever, a producer for “The Daily,” and Leo, a third grader, to answer his questions about the impeachment inquiry. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>In the first nationally televised hearings of the impeachment inquiry, Democrats will look to<a href="https://www.nytimes.com/2019/11/12/us/politics/impeachment-strategy-republicans.html" target="_blank"> make the case</a> that Mr. Trump’s dealings with Ukraine constitute high crimes and misdemeanors.</li><li>These will be the first presidential impeachment hearings in more than two decades. Here’s how this inquiry is<a href="https://www.nytimes.com/2019/11/12/us/politics/impeachment-clinton-trump.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> likely to be different</a> than the last.</li><li><a href="https://www.nytimes.com/interactive/2019/11/12/us/politics/impeachment-trump-congress.html?searchResultPosition=2" target="_blank">Meet the public officials</a> likely to be most prominent in the inquiry.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Lv8gydqrptpdUJ8IgEN94aJlZZKy9E14p58OZk0TT1E</guid>
      <pubDate>Wed, 13 Nov 2019 10:52:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3424c77b-725b-4578-bfaa-bfb903c4fdf4.mp3" type="audio/mpeg" length="22466142"/>
    </item>
    <item>
      <title>A Small Act of Rebellion</title>
      <description>
        <![CDATA[<p>Today, the Supreme Court begins hearing arguments about whether the Trump administration acted legally when it tried to end Deferred Action for Childhood Arrivals. The Obama-era program known as DACA shields immigrants who were brought to the United States as children, known as Dreamers, from deportation.</p><p>In this episode, we explore why the outcome of the case may turn on a small act of rebellion by one of President Trump’s former cabinet members.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Elaine C. Duke, a former Acting Secretary of Homeland Security, refused to echo the White House’s policy justifications for ending DACA. Her decision led to a Supreme Court case<a href="https://www.nytimes.com/2019/11/11/us/politics/supreme-court-dreamers-case.html?smid=pc-thedaily" target="_blank"> addressing presidential power over immigration</a>.</li><li>Meet two of<a href="https://www.nytimes.com/interactive/2019/11/07/us/dreamers-daca-supreme-court.html?searchResultPosition=1?smid=pc-thedaily" target="_blank"> the nearly 700,000 Dreamers</a> whose families, homes and jobs may be affected by the justices’ ruling.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>A Small Act of Rebellion</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today, the Supreme Court begins hearing arguments about whether the Trump administration acted legally when it tried to end Deferred Action for Childhood Arrivals. The Obama-era program known as DACA shields immigrants who were brought to the United States as children, known as Dreamers, from deportation.

In this episode, we explore why the outcome of the case may turn on a small act of rebellion by one of President Trump’s former cabinet members. 

Guest: Julie Hirschfeld Davis, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Elaine C. Duke, a former Acting Secretary of Homeland Security, refused to echo the White House’s policy justifications for ending DACA. Her decision led to a Supreme Court case addressing presidential power over immigration.Meet two of the nearly 700,000 Dreamers whose families, homes and jobs may be affected by the justices’ ruling. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today, the Supreme Court begins hearing arguments about whether the Trump administration acted legally when it tried to end Deferred Action for Childhood Arrivals. The Obama-era program known as DACA shields immigrants who were brought to the United States as children, known as Dreamers, from deportation.</p><p>In this episode, we explore why the outcome of the case may turn on a small act of rebellion by one of President Trump’s former cabinet members.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Elaine C. Duke, a former Acting Secretary of Homeland Security, refused to echo the White House’s policy justifications for ending DACA. Her decision led to a Supreme Court case<a href="https://www.nytimes.com/2019/11/11/us/politics/supreme-court-dreamers-case.html?smid=pc-thedaily" target="_blank"> addressing presidential power over immigration</a>.</li><li>Meet two of<a href="https://www.nytimes.com/interactive/2019/11/07/us/dreamers-daca-supreme-court.html?searchResultPosition=1?smid=pc-thedaily" target="_blank"> the nearly 700,000 Dreamers</a> whose families, homes and jobs may be affected by the justices’ ruling.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/k6uOmkc5dr3RNTwJvxqoNPK0hYqNRnDK99en826TONo</guid>
      <pubDate>Tue, 12 Nov 2019 10:47:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/62e52f85-dd80-494c-9e60-451110c2a03f.mp3" type="audio/mpeg" length="18750066"/>
    </item>
    <item>
      <title>Why Military Assistance for Ukraine Matters</title>
      <description>
        <![CDATA[<p>The question of whether President Trump leveraged military assistance to Ukraine for personal gain is at the heart of the impeachment inquiry. Today, we speak with our Ukraine correspondent on why that assistance was so important to Ukraine — and the United States — in the first place.</p><p>Guest: <a href="https://www.nytimes.com/by/andrew-e-kramer?smid=pc-thedaily" target="_blank">Andrew E. Kramer</a>, who covers Ukraine for The New York Times and is based in Moscow. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Petro O. Poroshenko, who was Ukraine’s president until May, knew his country’s independence hinged on American support. So he<a href="https://www.nytimes.com/2019/11/04/us/politics/poroshenko-trump-ukraine.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> waged a campaign</a> to win over President Trump.</li><li>As vice president, Joe Biden tried to press Ukraine’s leaders to clean up corruption and reform the energy industry.<a href="https://www.nytimes.com/2019/11/10/us/politics/joe-biden-ukraine.html?smid=pc-thedaily" target="_blank"> The story of that effort</a> has been overtaken by his son’s work for a Ukrainian gas company.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>Why Military Assistance for Ukraine Matters</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The question of whether President Trump leveraged military assistance to Ukraine for personal gain is at the heart of the impeachment inquiry. Today, we speak with our Ukraine correspondent on why that assistance was so important to Ukraine — and the United States — in the first place.

Guest: Andrew E. Kramer, who covers Ukraine for The New York Times and is based in Moscow. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Petro O. Poroshenko, who was Ukraine’s president until May, knew his country’s independence hinged on American support. So he waged a campaign to win over President Trump.As vice president, Joe Biden tried to press Ukraine’s leaders to clean up corruption and reform the energy industry. The story of that effort has been overtaken by his son’s work for a Ukrainian gas company. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The question of whether President Trump leveraged military assistance to Ukraine for personal gain is at the heart of the impeachment inquiry. Today, we speak with our Ukraine correspondent on why that assistance was so important to Ukraine — and the United States — in the first place.</p><p>Guest: <a href="https://www.nytimes.com/by/andrew-e-kramer?smid=pc-thedaily" target="_blank">Andrew E. Kramer</a>, who covers Ukraine for The New York Times and is based in Moscow. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Petro O. Poroshenko, who was Ukraine’s president until May, knew his country’s independence hinged on American support. So he<a href="https://www.nytimes.com/2019/11/04/us/politics/poroshenko-trump-ukraine.html?searchResultPosition=3?smid=pc-thedaily" target="_blank"> waged a campaign</a> to win over President Trump.</li><li>As vice president, Joe Biden tried to press Ukraine’s leaders to clean up corruption and reform the energy industry.<a href="https://www.nytimes.com/2019/11/10/us/politics/joe-biden-ukraine.html?smid=pc-thedaily" target="_blank"> The story of that effort</a> has been overtaken by his son’s work for a Ukrainian gas company.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5I6oLq-aTM10ko0y-y2gNOFr5PhS5S69wAKZKF4lS54</guid>
      <pubDate>Mon, 11 Nov 2019 10:55:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0476f61f-8e86-4fae-ac2a-fcb0b08d2c53.mp3" type="audio/mpeg" length="22812212"/>
    </item>
    <item>
      <title>The Saga of Gordon Sondland</title>
      <description>
        <![CDATA[<p>Gordon D. Sondland, the United States ambassador to the European Union, told impeachment investigators he knew “nothing” about a quid pro quo in Ukraine.&nbsp;</p><p>Now Mr. Sondland, a blunt-spoken hotelier, has changed tack. In a new four-page sworn statement released by the House, he confirmed his role in communicating President Trump’s demand that Ukraine investigate the Bidens in exchange for military aid.&nbsp;</p><p>Today, we discuss the road to Mr. Sondland’s sudden reversal, and what his new testimony means for the impeachment investigation.</p><p>Guest: <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, a Washington correspondent for The Times who covers national security and federal investigations. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/11/05/us/politics/impeachment-trump.html?smid=pc-thedaily" target="_blank">Mr. Sondland’s reversal</a> offers a potentially critical piece of evidence to investigators trying to determine whether Mr. Trump abused his power.</li><li><a href="https://www.nytimes.com/2019/11/06/arts/television/late-night-gordon-sondland.html" target="_blank">Late-night show hosts mocked Mr. Sondland</a>, saying he had reversed his testimony after remembering “one important detail: that I don’t want to go to jail for perjury.”</li></ul>]]>
      </description>
      <itunes:title>The Saga of Gordon Sondland</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Gordon D. Sondland, the United States ambassador to the European Union, told impeachment investigators he knew “nothing” about a quid pro quo in Ukraine. 

Now Mr. Sondland, a blunt-spoken hotelier, has changed tack. In a new four-page sworn statement released by the House, he confirmed his role in communicating President Trump’s demand that Ukraine investigate the Bidens in exchange for military aid. 

Today, we discuss the road to Mr. Sondland’s sudden reversal, and what his new testimony means for the impeachment investigation.

Guest: Michael S. Schmidt, a Washington correspondent for The Times who covers national security and federal investigations. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Mr. Sondland’s reversal offers a potentially critical piece of evidence to investigators trying to determine whether Mr. Trump abused his power.Late-night show hosts mocked Mr. Sondland, saying he had reversed his testimony after remembering “one important detail: that I don’t want to go to jail for perjury.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Gordon D. Sondland, the United States ambassador to the European Union, told impeachment investigators he knew “nothing” about a quid pro quo in Ukraine.&nbsp;</p><p>Now Mr. Sondland, a blunt-spoken hotelier, has changed tack. In a new four-page sworn statement released by the House, he confirmed his role in communicating President Trump’s demand that Ukraine investigate the Bidens in exchange for military aid.&nbsp;</p><p>Today, we discuss the road to Mr. Sondland’s sudden reversal, and what his new testimony means for the impeachment investigation.</p><p>Guest: <a href="https://www.nytimes.com/by/michael-s-schmidt?smid=pc-thedaily" target="_blank">Michael S. Schmidt</a>, a Washington correspondent for The Times who covers national security and federal investigations. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/11/05/us/politics/impeachment-trump.html?smid=pc-thedaily" target="_blank">Mr. Sondland’s reversal</a> offers a potentially critical piece of evidence to investigators trying to determine whether Mr. Trump abused his power.</li><li><a href="https://www.nytimes.com/2019/11/06/arts/television/late-night-gordon-sondland.html" target="_blank">Late-night show hosts mocked Mr. Sondland</a>, saying he had reversed his testimony after remembering “one important detail: that I don’t want to go to jail for perjury.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BPQ6zwtNcvQf-oYAZFeHfYRCItV1SMI0lgHkAWszXUo</guid>
      <pubDate>Fri, 08 Nov 2019 10:51:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1ee065d4-c21d-4b26-9c63-7307959b8419.mp3" type="audio/mpeg" length="27784672"/>
    </item>
    <item>
      <title>‘Because of Sex’</title>
      <description>
        <![CDATA[<p>In 2013, Aimee Stephens watched her boss read a carefully worded letter.</p><p>“I have felt imprisoned in a body that does not match my mind. And this has caused me great despair and loneliness,” she had written. “With the support of my loving wife, I have decided to become the person that my mind already is.”</p><p>Ms. Stephens was fired after coming out as transgender. Now, she is the lead plaintiff in a Supreme Court case that will determine the employment rights of gay and transgender workers across the nation.&nbsp;</p><p>Guests: <a href="https://www.nytimes.com/by/adam-liptak?smid=pc-thedaily" target="_blank">Adam Liptak</a>, who covers the Supreme Court for The New York Times, and Aimee Stephens, the lead plaintiff in the transgender discrimination case heard by the Supreme Court. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/08/us/politics/supreme-court-gay-transgender.html?smid=pc-thedaily" target="_blank">The forthcoming Supreme Court ruling</a> hangs on justices’ interpretation of wording in the Civil Rights Act that prohibits employment discrimination “because of sex.”</li><li>The case came to the Supreme Court from a federal appeals court, which<a href="https://www.nytimes.com/2018/03/24/us/politics/transgender-title-vii.html?smid=pc-thedaily" target="_blank"> found in favor of Ms. Stephens</a> last year.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>‘Because of Sex’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 2013, Aimee Stephens watched her boss read a carefully worded letter.

“I have felt imprisoned in a body that does not match my mind. And this has caused me great despair and loneliness,” she had written. “With the support of my loving wife, I have decided to become the person that my mind already is.”

Ms. Stephens was fired after coming out as transgender. Now, she is the lead plaintiff in a Supreme Court case that will determine the employment rights of gay and transgender workers across the nation. 

Guests: Adam Liptak, who covers the Supreme Court for The New York Times, and Aimee Stephens, the lead plaintiff in the transgender discrimination case heard by the Supreme Court. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The forthcoming Supreme Court ruling hangs on justices’ interpretation of wording in the Civil Rights Act that prohibits employment discrimination “because of sex.”The case came to the Supreme Court from a federal appeals court, which found in favor of Ms. Stephens last year. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In 2013, Aimee Stephens watched her boss read a carefully worded letter.</p><p>“I have felt imprisoned in a body that does not match my mind. And this has caused me great despair and loneliness,” she had written. “With the support of my loving wife, I have decided to become the person that my mind already is.”</p><p>Ms. Stephens was fired after coming out as transgender. Now, she is the lead plaintiff in a Supreme Court case that will determine the employment rights of gay and transgender workers across the nation.&nbsp;</p><p>Guests: <a href="https://www.nytimes.com/by/adam-liptak?smid=pc-thedaily" target="_blank">Adam Liptak</a>, who covers the Supreme Court for The New York Times, and Aimee Stephens, the lead plaintiff in the transgender discrimination case heard by the Supreme Court. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/08/us/politics/supreme-court-gay-transgender.html?smid=pc-thedaily" target="_blank">The forthcoming Supreme Court ruling</a> hangs on justices’ interpretation of wording in the Civil Rights Act that prohibits employment discrimination “because of sex.”</li><li>The case came to the Supreme Court from a federal appeals court, which<a href="https://www.nytimes.com/2018/03/24/us/politics/transgender-title-vii.html?smid=pc-thedaily" target="_blank"> found in favor of Ms. Stephens</a> last year.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WLDUKFOuw7a78QFK1Fl4CX3WL_NKeUZBJqvtW0gayXI</guid>
      <pubDate>Thu, 07 Nov 2019 10:50:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/26dec727-cfb6-461c-ade3-460ea3db3a90.mp3" type="audio/mpeg" length="26712189"/>
    </item>
    <item>
      <title>How Impeachment Consumed a Governor’s Race</title>
      <description>
        <![CDATA[<p>Kentucky’s unpopular Republican governor, Matthew G. Bevin, was facing a losing battle. So he turned to President Trump, and a polarized political landscape, for help. Today, we look at why Tuesday’s race for governor in Kentucky is drawing outsized attention, what it may tell us about the politics of impeachment, and how a state race became a national test.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/jonathan-martin?smid=pc-thedaily" target="_blank">Jonathan Martin</a>, a national political correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Matthew G. Bevin, the incumbent governor in Kentucky, was deeply unpopular after<a href="https://www.nytimes.com/2019/04/26/us/matt-bevin-kentucky-teacher.html?action=click&amp;module=RelatedLinks&amp;pgtype=Article?smid=pc-thedaily" target="_blank"> blaming striking teachers</a> for violence against children.</li><li><a href="https://www.nytimes.com/2019/10/29/us/politics/matt-bevin-andy-beshear-kentucky-governor.html?smid=pc-thedaily" target="_blank">Mr. Bevin pivoted away from his own agenda</a> to make the race for governor a referendum on national politics.</li><li>Andrew G. Beshear, Mr. Bevin’s Democratic challenger, has claimed victory, but Mr. Bevin has not conceded.<a href="https://www.nytimes.com/interactive/2019/11/05/us/elections/results-kentucky-governor-general-election.html?smid=pc-thedaily" target="_blank"> Explore our map</a> of the results: A few thousand votes separate the candidates after all precincts reported.</li></ul>]]>
      </description>
      <itunes:title>How Impeachment Consumed a Governor’s Race</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Kentucky’s unpopular Republican governor, Matthew G. Bevin, was facing a losing battle. So he turned to President Trump, and a polarized political landscape, for help. Today, we look at why Tuesday’s race for governor in Kentucky is drawing outsized attention, what it may tell us about the politics of impeachment, and how a state race became a national test. 

Guest: Jonathan Martin, a national political correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Matthew G. Bevin, the incumbent governor in Kentucky, was deeply unpopular after blaming striking teachers for violence against children.Mr. Bevin pivoted away from his own agenda to make the race for governor a referendum on national politics.Andrew G. Beshear, Mr. Bevin’s Democratic challenger, has claimed victory, but Mr. Bevin has not conceded. Explore our map of the results: A few thousand votes separate the candidates after all precincts reported.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Kentucky’s unpopular Republican governor, Matthew G. Bevin, was facing a losing battle. So he turned to President Trump, and a polarized political landscape, for help. Today, we look at why Tuesday’s race for governor in Kentucky is drawing outsized attention, what it may tell us about the politics of impeachment, and how a state race became a national test.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/jonathan-martin?smid=pc-thedaily" target="_blank">Jonathan Martin</a>, a national political correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Matthew G. Bevin, the incumbent governor in Kentucky, was deeply unpopular after<a href="https://www.nytimes.com/2019/04/26/us/matt-bevin-kentucky-teacher.html?action=click&amp;module=RelatedLinks&amp;pgtype=Article?smid=pc-thedaily" target="_blank"> blaming striking teachers</a> for violence against children.</li><li><a href="https://www.nytimes.com/2019/10/29/us/politics/matt-bevin-andy-beshear-kentucky-governor.html?smid=pc-thedaily" target="_blank">Mr. Bevin pivoted away from his own agenda</a> to make the race for governor a referendum on national politics.</li><li>Andrew G. Beshear, Mr. Bevin’s Democratic challenger, has claimed victory, but Mr. Bevin has not conceded.<a href="https://www.nytimes.com/interactive/2019/11/05/us/elections/results-kentucky-governor-general-election.html?smid=pc-thedaily" target="_blank"> Explore our map</a> of the results: A few thousand votes separate the candidates after all precincts reported.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8FvIrqJ0RzGHrJHZMnCBoD8rD9v3SQuLuiYHrrax3-E</guid>
      <pubDate>Wed, 06 Nov 2019 10:54:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2d05379b-562b-4417-b407-e4e51ad56ffe.mp3" type="audio/mpeg" length="21526569"/>
    </item>
    <item>
      <title>Who’s Actually Electable in 2020?</title>
      <description>
        <![CDATA[<p>The New York Times and Siena College conducted a major new poll, tackling the biggest questions about the 2020 presidential race: How likely is President Trump to be re-elected and which Democrat is best positioned to defeat him?&nbsp;</p><p>The results reveal that the president remains highly competitive in the battleground states likeliest to decide his re-election, with Democratic candidates struggling to win back the support of white working-class voters who backed Mr. Trump in 2016.&nbsp;</p><p>The poll also presents a snapshot of how the top Democratic candidates might fare in the general election — a critical question for Democratic voters hoping to take back the White House.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/nate-cohn?smid=pc-thedaily" target="_blank">Nate Cohn</a>, a domestic correspondent for The Upshot at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The new poll suggests Senator Elizabeth Warren might struggle with some battleground swing voters, and found evidence that<a href="https://www.nytimes.com/2019/11/04/upshot/trump-biden-warren-polls.html" target="_blank"> both gender bias and ideological doubts</a> were hurting her.</li><li>The top Democratic presidential candidates are<a href="https://www.nytimes.com/2019/11/01/us/politics/iowa-poll-warren-biden.html" target="_blank"> locked in a close race</a> in the Iowa caucuses, a key early test in the nomination race. But there, Ms. Warren currently has a slight edge.&nbsp;</li><li><a href="https://www.nytimes.com/2019/05/06/us/politics/on-politics-2020-electability.html?smid=pc-thedaily" target="_blank">Here are five theories</a> about what “electability” means in the 2020 race. </li></ul>]]>
      </description>
      <itunes:title>Who’s Actually Electable in 2020?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times and Siena College conducted a major new poll, tackling the biggest questions about the 2020 presidential race: How likely is President Trump to be re-elected and which Democrat is best positioned to defeat him? 

The results reveal that the president remains highly competitive in the battleground states likeliest to decide his re-election, with Democratic candidates struggling to win back the support of white working-class voters who backed Mr. Trump in 2016. 

The poll also presents a snapshot of how the top Democratic candidates might fare in the general election — a critical question for Democratic voters hoping to take back the White House. 

Guest: Nate Cohn, a domestic correspondent for The Upshot at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The new poll suggests Senator Elizabeth Warren might struggle with some battleground swing voters, and found evidence that both gender bias and ideological doubts were hurting her.The top Democratic presidential candidates are locked in a close race in the Iowa caucuses, a key early test in the nomination race. But there, Ms. Warren currently has a slight edge. Here are five theories about what “electability” means in the 2020 race. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times and Siena College conducted a major new poll, tackling the biggest questions about the 2020 presidential race: How likely is President Trump to be re-elected and which Democrat is best positioned to defeat him?&nbsp;</p><p>The results reveal that the president remains highly competitive in the battleground states likeliest to decide his re-election, with Democratic candidates struggling to win back the support of white working-class voters who backed Mr. Trump in 2016.&nbsp;</p><p>The poll also presents a snapshot of how the top Democratic candidates might fare in the general election — a critical question for Democratic voters hoping to take back the White House.&nbsp;</p><p>Guest: <a href="https://www.nytimes.com/by/nate-cohn?smid=pc-thedaily" target="_blank">Nate Cohn</a>, a domestic correspondent for The Upshot at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The new poll suggests Senator Elizabeth Warren might struggle with some battleground swing voters, and found evidence that<a href="https://www.nytimes.com/2019/11/04/upshot/trump-biden-warren-polls.html" target="_blank"> both gender bias and ideological doubts</a> were hurting her.</li><li>The top Democratic presidential candidates are<a href="https://www.nytimes.com/2019/11/01/us/politics/iowa-poll-warren-biden.html" target="_blank"> locked in a close race</a> in the Iowa caucuses, a key early test in the nomination race. But there, Ms. Warren currently has a slight edge.&nbsp;</li><li><a href="https://www.nytimes.com/2019/05/06/us/politics/on-politics-2020-electability.html?smid=pc-thedaily" target="_blank">Here are five theories</a> about what “electability” means in the 2020 race. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/r_yA3L0ADuvL_P77-ODjHnNNo2us3RVPa-zE5NMpi-A</guid>
      <pubDate>Tue, 05 Nov 2019 10:53:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a39f965c-340d-445d-88ad-6df62d15fa38.mp3" type="audio/mpeg" length="21338070"/>
    </item>
    <item>
      <title>The Democratic Showdown in Iowa</title>
      <description>
        <![CDATA[<p>In just three months, the first election of the Democratic presidential race will be held in Iowa.</p><p>Over the weekend, the party held its most important political event yet in the prelude to that vote — including a fabled annual dinner attended by almost every remaining candidate in the campaign. At this dinner in 2007, Barack Obama, then a senator, delivered a searing critique of Hillary Clinton’s electability, helping him pull ahead in the polls. Candidates this time around were hoping for a similar campaign-defining moment.</p><p>We traveled to Des Moines to find out how the candidates are trying to stand out in a crowded field and to try to discern who might have the political support, financial might and organizational prowess to become the nominee.</p><p>Guest: <a href="https://www.nytimes.com/by/reid-j-epstein?smid=pc-thedaily" target="_blank">Reid J. Epstein</a>, a campaigns and elections reporter for The Times based in Washington D.C.&nbsp;</p><p>Clare Toeniskoetter and Monika Evstatieva, producers for “The Daily,” who traveled to Des Moines to speak with campaign supporters.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>With the Iowa caucuses fast approaching, the ideological debate has remained the same, but the key players have shifted, with Mayor Pete Buttigieg and Senator Elizabeth Warren<a href="https://www.nytimes.com/2019/11/02/us/politics/Iowa-buttigieg-warren.html" target="_blank"> appearing to have gained momentum</a>.&nbsp;</li><li>The latest poll in Iowa suggested that Ms. Warren had seized much of Bernie Sanders’s youthful following. Here are<a href="https://www.nytimes.com/2019/11/02/us/politics/iowa-poll-highlights.html" target="_blank"> five takeaways from the survey</a>.</li></ul>]]>
      </description>
      <itunes:title>The Democratic Showdown in Iowa</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In just three months, the first election of the Democratic presidential race will be held in Iowa.

Over the weekend, the party held its most important political event yet in the prelude to that vote — including a fabled annual dinner attended by almost every remaining candidate in the campaign. At this dinner in 2007, Barack Obama, then a senator, delivered a searing critique of Hillary Clinton’s electability, helping him pull ahead in the polls. Candidates this time around were hoping for a similar campaign-defining moment.

We traveled to Des Moines to find out how the candidates are trying to stand out in a crowded field and to try to discern who might have the political support, financial might and organizational prowess to become the nominee.

Guest: Reid J. Epstein, a campaigns and elections reporter for The Times based in Washington D.C. 

Clare Toeniskoetter and Monika Evstatieva, producers for “The Daily,” who traveled to Des Moines to speak with campaign supporters.

For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: With the Iowa caucuses fast approaching, the ideological debate has remained the same, but the key players have shifted, with Mayor Pete Buttigieg and Senator Elizabeth Warren appearing to have gained momentum. The latest poll in Iowa suggested that Ms. Warren had seized much of Bernie Sanders’s youthful following. Here are five takeaways from the survey.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In just three months, the first election of the Democratic presidential race will be held in Iowa.</p><p>Over the weekend, the party held its most important political event yet in the prelude to that vote — including a fabled annual dinner attended by almost every remaining candidate in the campaign. At this dinner in 2007, Barack Obama, then a senator, delivered a searing critique of Hillary Clinton’s electability, helping him pull ahead in the polls. Candidates this time around were hoping for a similar campaign-defining moment.</p><p>We traveled to Des Moines to find out how the candidates are trying to stand out in a crowded field and to try to discern who might have the political support, financial might and organizational prowess to become the nominee.</p><p>Guest: <a href="https://www.nytimes.com/by/reid-j-epstein?smid=pc-thedaily" target="_blank">Reid J. Epstein</a>, a campaigns and elections reporter for The Times based in Washington D.C.&nbsp;</p><p>Clare Toeniskoetter and Monika Evstatieva, producers for “The Daily,” who traveled to Des Moines to speak with campaign supporters.</p><p>For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>With the Iowa caucuses fast approaching, the ideological debate has remained the same, but the key players have shifted, with Mayor Pete Buttigieg and Senator Elizabeth Warren<a href="https://www.nytimes.com/2019/11/02/us/politics/Iowa-buttigieg-warren.html" target="_blank"> appearing to have gained momentum</a>.&nbsp;</li><li>The latest poll in Iowa suggested that Ms. Warren had seized much of Bernie Sanders’s youthful following. Here are<a href="https://www.nytimes.com/2019/11/02/us/politics/iowa-poll-highlights.html" target="_blank"> five takeaways from the survey</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HHT7juB-hevZAXbn_bOhgFvt5q1W_Qs4xNgOG5iu02g</guid>
      <pubDate>Mon, 04 Nov 2019 10:58:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bac67ac8-1ceb-4466-9ebb-dc58f059d4b8.mp3" type="audio/mpeg" length="27362115"/>
    </item>
    <item>
      <title>A Vote on Impeachment</title>
      <description>
        <![CDATA[<p>The House of Representatives voted to begin the next phase of the impeachment inquiry into President Trump — one which will be open to public scrutiny. Two Democrats in the House broke ranks and voted against the resolution, which outlined rules for the impeachment process. That was the only complication to an otherwise clean partisan split, with all House Republicans voting against the measure. The tally foreshadowed the battle to come as Democrats take their case against the president fully into public view. Today, we discuss what the next phase of the inquiry will look like. Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/31/us/politics/house-impeachment-vote.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">House Democrats decided</a> they now have enough confidence in the severity of the underlying facts about Mr. Trump’s dealings with Ukraine to open the inquiry to the public, despite the risk that doing so would further polarize the electorate.&nbsp;</li><li><a href="https://www.nytimes.com/interactive/2019/09/26/us/politics/trump-ukraine-impeachment-timeline.html?action=click&amp;module=STYLN_trump_suite&amp;variant=1_trump_suite&amp;state=default&amp;pgtype=Article&amp;region=footer&amp;context=guide?smid=pc-thedaily" target="_blank">This is a timeline</a> of the events that prompted the impeachment inquiry.</li><li><a href="https://www.nytimes.com/interactive/2019/10/31/us/politics/trump-impeachment-inquiry-house-vote.html?action=click&amp;module=STYLN_trump_links&amp;variant=0_control_trump_links&amp;state=default&amp;pgtype=Article&amp;region=header?smid=pc-thedaily" target="_blank">Here’s how Democrats and Republicans voted</a> on the impeachment rules resolution.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>A Vote on Impeachment</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House of Representatives voted to begin the next phase of the impeachment inquiry into President Trump — one which will be open to public scrutiny. Two Democrats in the House broke ranks and voted against the resolution, which outlined rules for the impeachment process. That was the only complication to an otherwise clean partisan split, with all House Republicans voting against the measure. The tally foreshadowed the battle to come as Democrats take their case against the president fully into public view. Today, we discuss what the next phase of the inquiry will look like. Guest: Julie Hirschfeld Davis, the congressional editor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: House Democrats decided they now have enough confidence in the severity of the underlying facts about Mr. Trump’s dealings with Ukraine to open the inquiry to the public, despite the risk that doing so would further polarize the electorate. This is a timeline of the events that prompted the impeachment inquiry.Here’s how Democrats and Republicans voted on the impeachment rules resolution. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House of Representatives voted to begin the next phase of the impeachment inquiry into President Trump — one which will be open to public scrutiny. Two Democrats in the House broke ranks and voted against the resolution, which outlined rules for the impeachment process. That was the only complication to an otherwise clean partisan split, with all House Republicans voting against the measure. The tally foreshadowed the battle to come as Democrats take their case against the president fully into public view. Today, we discuss what the next phase of the inquiry will look like. Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis?smid=pc-thedaily" target="_blank">Julie Hirschfeld Davis</a>, the congressional editor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/31/us/politics/house-impeachment-vote.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">House Democrats decided</a> they now have enough confidence in the severity of the underlying facts about Mr. Trump’s dealings with Ukraine to open the inquiry to the public, despite the risk that doing so would further polarize the electorate.&nbsp;</li><li><a href="https://www.nytimes.com/interactive/2019/09/26/us/politics/trump-ukraine-impeachment-timeline.html?action=click&amp;module=STYLN_trump_suite&amp;variant=1_trump_suite&amp;state=default&amp;pgtype=Article&amp;region=footer&amp;context=guide?smid=pc-thedaily" target="_blank">This is a timeline</a> of the events that prompted the impeachment inquiry.</li><li><a href="https://www.nytimes.com/interactive/2019/10/31/us/politics/trump-impeachment-inquiry-house-vote.html?action=click&amp;module=STYLN_trump_links&amp;variant=0_control_trump_links&amp;state=default&amp;pgtype=Article&amp;region=header?smid=pc-thedaily" target="_blank">Here’s how Democrats and Republicans voted</a> on the impeachment rules resolution.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KK_AfhGMWvm2EFC1TIEenibc4Nq8X0KJrdBRD0MCLi4</guid>
      <pubDate>Fri, 01 Nov 2019 09:54:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/82f685f0-7aba-480c-b149-5338a9f93811.mp3" type="audio/mpeg" length="28795297"/>
    </item>
    <item>
      <title>What Boeing Knew</title>
      <description>
        <![CDATA[<p>In testimony before a House committee on Wednesday, Dennis A. Muilenburg, Boeing’s chief executive, said, “If we knew everything back then that we know now, we would have made a different decision.” Congress is investigating two crashes of Boeing 737 Max jets which killed 346 people, cost the company billions of dollars and raised new questions about government oversight of aviation. So what did Boeing executives know about the dangers of the automated system implicated in the crashes — and when did they know it? Guest: <a href="https://www.nytimes.com/by/natalie-kitroeff?module=inline?smid=pc-thedaily" target="_blank">Natalie Kitroeff</a>, who covers the economy for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;&nbsp;&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/27/business/boeing-737-max-crashes.html?searchResultPosition=3?smid=pc-thedaily" target="_blank">Boeing successfully lobbied</a> to reduce government oversight of airplane design.</li><li><a href="https://www.nytimes.com/2019/10/30/business/boeing-muilenburg-testimony-congress.html?searchResultPosition=2?smid=pc-thedaily" target="_blank">Evidence presented to House investigators</a> on Wednesday revealed that Boeing was aware of potentially “catastrophic” concerns about the 737 Max’s safety before the first crash.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>What Boeing Knew</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In testimony before a House committee on Wednesday, Dennis A. Muilenburg, Boeing’s chief executive, said, “If we knew everything back then that we know now, we would have made a different decision.” Congress is investigating two crashes of Boeing 737 Max jets which killed 346 people, cost the company billions of dollars and raised new questions about government oversight of aviation. So what did Boeing executives know about the dangers of the automated system implicated in the crashes — and when did they know it? Guest: Natalie Kitroeff, who covers the economy for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:   Boeing successfully lobbied to reduce government oversight of airplane design.Evidence presented to House investigators on Wednesday revealed that Boeing was aware of potentially “catastrophic” concerns about the 737 Max’s safety before the first crash. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In testimony before a House committee on Wednesday, Dennis A. Muilenburg, Boeing’s chief executive, said, “If we knew everything back then that we know now, we would have made a different decision.” Congress is investigating two crashes of Boeing 737 Max jets which killed 346 people, cost the company billions of dollars and raised new questions about government oversight of aviation. So what did Boeing executives know about the dangers of the automated system implicated in the crashes — and when did they know it? Guest: <a href="https://www.nytimes.com/by/natalie-kitroeff?module=inline?smid=pc-thedaily" target="_blank">Natalie Kitroeff</a>, who covers the economy for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;&nbsp;&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/27/business/boeing-737-max-crashes.html?searchResultPosition=3?smid=pc-thedaily" target="_blank">Boeing successfully lobbied</a> to reduce government oversight of airplane design.</li><li><a href="https://www.nytimes.com/2019/10/30/business/boeing-muilenburg-testimony-congress.html?searchResultPosition=2?smid=pc-thedaily" target="_blank">Evidence presented to House investigators</a> on Wednesday revealed that Boeing was aware of potentially “catastrophic” concerns about the 737 Max’s safety before the first crash.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/k4FjQCpD6S0wPRX06SBGP6UnhZEKrSmc4PG8-lMUDKE</guid>
      <pubDate>Thu, 31 Oct 2019 09:54:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b01d6007-c8be-4d9b-8650-b9fa930d4802.mp3" type="audio/mpeg" length="25890063"/>
    </item>
    <item>
      <title>The Promise and Peril of Vaping, Part 2: The Story of Juul</title>
      <description>
        <![CDATA[<p>When Juul was created, the company’s founders told federal regulators that its product would save lives. Those regulators were eager to believe them. Today, part two in our series on the promise and the peril of vaping.</p><p>Guest: <a href="https://www.nytimes.com/by/sheila-kaplan?smid=pc-thedaily" target="_blank">Sheila Kaplan</a>, an investigative reporter for The New York Times covering the intersection of money, medicine and politics. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/28/podcasts/the-daily/vaping-dangers.html?smid=pc-thedaily" target="_blank">Here’s the first episode</a> in this two-part series, describing how one man’s mysterious death changed our understanding of vaping and its consequences.</li><li>The federal government has<a href="https://www.nytimes.com/2019/10/14/health/vaping-e-cigarettes-fda.html?rref=collection%2Fbyline%2Fsheila-kaplan&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=2&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> repeatedly delayed or weakened efforts</a> to regulate e-cigarettes, allowing a new generation to become addicted to nicotine.</li></ul>]]>
      </description>
      <itunes:title>The Promise and Peril of Vaping, Part 2: The Story of Juul</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When Juul was created, the company’s founders told federal regulators that its product would save lives. Those regulators were eager to believe them. Today, part two in our series on the promise and the peril of vaping.

Guest: Sheila Kaplan, an investigative reporter for The New York Times covering the intersection of money, medicine and politics. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Here’s the first episode in this two-part series, describing how one man’s mysterious death changed our understanding of vaping and its consequences.The federal government has repeatedly delayed or weakened efforts to regulate e-cigarettes, allowing a new generation to become addicted to nicotine.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When Juul was created, the company’s founders told federal regulators that its product would save lives. Those regulators were eager to believe them. Today, part two in our series on the promise and the peril of vaping.</p><p>Guest: <a href="https://www.nytimes.com/by/sheila-kaplan?smid=pc-thedaily" target="_blank">Sheila Kaplan</a>, an investigative reporter for The New York Times covering the intersection of money, medicine and politics. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/28/podcasts/the-daily/vaping-dangers.html?smid=pc-thedaily" target="_blank">Here’s the first episode</a> in this two-part series, describing how one man’s mysterious death changed our understanding of vaping and its consequences.</li><li>The federal government has<a href="https://www.nytimes.com/2019/10/14/health/vaping-e-cigarettes-fda.html?rref=collection%2Fbyline%2Fsheila-kaplan&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=2&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> repeatedly delayed or weakened efforts</a> to regulate e-cigarettes, allowing a new generation to become addicted to nicotine.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HtD5Za4qpJsotY2vKeD2IHBpNMEMt5NpymaQWAZzgbA</guid>
      <pubDate>Wed, 30 Oct 2019 09:51:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3586bee2-7e90-4b82-849f-f78df31d0b85.mp3" type="audio/mpeg" length="26077727"/>
    </item>
    <item>
      <title>The Life and Death of Abu Bakr al-Baghdadi</title>
      <description>
        <![CDATA[<p>After a five-year international manhunt, the leader of the Islamic State, who at one point controlled a caliphate the size of Britain, was killed in a raid by elite United States forces in Syria over the weekend.</p><p>Today, we explore the life and death of Abu Bakr al-Baghdadi — and the legacy he leaves behind. Guest: <a href="https://www.nytimes.com/by/rukmini-callimachi?module=inline?smid=pc-thedaily" target="_blank">Rukmini Callimachi</a>, who covers terrorism and the Islamic State for The Times, in conversation with<a href="https://www.nytimes.com/by/natalie-kitroeff?smid=pc-thedaily?smid=pc-thedaily" target="_blank"> Natalie Kitroeff</a>. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Kurdish forces were essential in the mission to track and identify Mr. al-Baghdadi. President Trump’s decision to withdraw American troops from northern Syria<a href="https://www.nytimes.com/2019/10/28/world/middleeast/isis-kurds-baghdadi.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> threw the operation into turmoil</a>.</li><li>Some<a href="https://www.nytimes.com/2019/10/28/world/middleeast/isis-al-baghdadi-death.html?action=click&amp;module=RelatedLinks&amp;pgtype=Article?smid=pc-thedaily" target="_blank"> survivors of Islamic State brutality said</a> Mr. al-Baghdadi’s death came too late. “He deserves a worse and more abhorrent death,” one added.</li></ul>]]>
      </description>
      <itunes:title>The Life and Death of Abu Bakr al-Baghdadi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After a five-year international manhunt, the leader of the Islamic State, who at one point controlled a caliphate the size of Britain, was killed in a raid by elite United States forces in Syria over the weekend.

Today, we explore the life and death of Abu Bakr al-Baghdadi — and the legacy he leaves behind. Guest: Rukmini Callimachi, who covers terrorism and the Islamic State for The Times, in conversation with Natalie Kitroeff. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Kurdish forces were essential in the mission to track and identify Mr. al-Baghdadi. President Trump’s decision to withdraw American troops from northern Syria threw the operation into turmoil.Some survivors of Islamic State brutality said Mr. al-Baghdadi’s death came too late. “He deserves a worse and more abhorrent death,” one added.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After a five-year international manhunt, the leader of the Islamic State, who at one point controlled a caliphate the size of Britain, was killed in a raid by elite United States forces in Syria over the weekend.</p><p>Today, we explore the life and death of Abu Bakr al-Baghdadi — and the legacy he leaves behind. Guest: <a href="https://www.nytimes.com/by/rukmini-callimachi?module=inline?smid=pc-thedaily" target="_blank">Rukmini Callimachi</a>, who covers terrorism and the Islamic State for The Times, in conversation with<a href="https://www.nytimes.com/by/natalie-kitroeff?smid=pc-thedaily?smid=pc-thedaily" target="_blank"> Natalie Kitroeff</a>. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Kurdish forces were essential in the mission to track and identify Mr. al-Baghdadi. President Trump’s decision to withdraw American troops from northern Syria<a href="https://www.nytimes.com/2019/10/28/world/middleeast/isis-kurds-baghdadi.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> threw the operation into turmoil</a>.</li><li>Some<a href="https://www.nytimes.com/2019/10/28/world/middleeast/isis-al-baghdadi-death.html?action=click&amp;module=RelatedLinks&amp;pgtype=Article?smid=pc-thedaily" target="_blank"> survivors of Islamic State brutality said</a> Mr. al-Baghdadi’s death came too late. “He deserves a worse and more abhorrent death,” one added.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0nI0rmtGq9kbBKWKwFvwIFzyApn6KlYBamuClNl2VqY</guid>
      <pubDate>Tue, 29 Oct 2019 09:55:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ac56c4cc-e8b8-47bd-ba5b-d221a91ff2de.mp3" type="audio/mpeg" length="26769867"/>
    </item>
    <item>
      <title>The Promise and Peril of Vaping, Part 1: A Mystery in Nebraska</title>
      <description>
        <![CDATA[<p>When John Steffen died, his family had little doubt that a lifetime of cigarette smoking was to blame. Then, the Nebraska Department of Health got an unusual tip.</p><p>Today, we begin a two-part series on the promise and the peril of vaping. Guest: <a href="https://www.nytimes.com/by/julie-bosman?smid=pc-thedaily" target="_blank">Julie Bosman</a>, a national correspondent for The New York Times, spoke with Kathleen Fimple and her daughter, Dulcia Steffen, in Omaha, Nebraska. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>John Steffen trusted vaping could help him quit smoking. Instead, he became<a href="https://www.nytimes.com/2019/10/14/us/vaping-victim.html?smid=pc-thedaily" target="_blank"> one of vaping’s first victims</a> in Nebraska.&nbsp;</li><li><a href="https://www.nytimes.com/2019/10/02/health/vaping-illnesses.html?action=click&amp;module=RelatedLinks&amp;pgtype=Article?smid=pc-thedaily?smid=pc-thedaily" target="_blank">Vaping can cause lung damage</a> resembling toxic chemical burns, according to researchers at the Mayo Clinic.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>The Promise and Peril of Vaping, Part 1: A Mystery in Nebraska</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When John Steffen died, his family had little doubt that a lifetime of cigarette smoking was to blame. Then, the Nebraska Department of Health got an unusual tip.

Today, we begin a two-part series on the promise and the peril of vaping. Guest: Julie Bosman, a national correspondent for The New York Times, spoke with Kathleen Fimple and her daughter, Dulcia Steffen, in Omaha, Nebraska. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: John Steffen trusted vaping could help him quit smoking. Instead, he became one of vaping’s first victims in Nebraska. Vaping can cause lung damage resembling toxic chemical burns, according to researchers at the Mayo Clinic. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>When John Steffen died, his family had little doubt that a lifetime of cigarette smoking was to blame. Then, the Nebraska Department of Health got an unusual tip.</p><p>Today, we begin a two-part series on the promise and the peril of vaping. Guest: <a href="https://www.nytimes.com/by/julie-bosman?smid=pc-thedaily" target="_blank">Julie Bosman</a>, a national correspondent for The New York Times, spoke with Kathleen Fimple and her daughter, Dulcia Steffen, in Omaha, Nebraska. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>John Steffen trusted vaping could help him quit smoking. Instead, he became<a href="https://www.nytimes.com/2019/10/14/us/vaping-victim.html?smid=pc-thedaily" target="_blank"> one of vaping’s first victims</a> in Nebraska.&nbsp;</li><li><a href="https://www.nytimes.com/2019/10/02/health/vaping-illnesses.html?action=click&amp;module=RelatedLinks&amp;pgtype=Article?smid=pc-thedaily?smid=pc-thedaily" target="_blank">Vaping can cause lung damage</a> resembling toxic chemical burns, according to researchers at the Mayo Clinic.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XRDjMkPxGsLvSW6tsKYSutdqXlSiaz1kCist4UppN58</guid>
      <pubDate>Mon, 28 Oct 2019 09:46:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0659a4d3-01d0-4538-bafd-9e392aa492cf.mp3" type="audio/mpeg" length="22711066"/>
    </item>
    <item>
      <title>‘A Prophet’: The Zeal of Bernie Sanders Supporters</title>
      <description>
        <![CDATA[<p>At a rally in New York City last weekend, Senator Bernie Sanders drew the largest crowd of his presidential campaign — at a moment when his candidacy may be at its most vulnerable. After a heart attack this month, Mr. Sanders faced a challenge in convincing voters that he had the stamina to run both a campaign and the country. His first rally since his hospital stay attracted supporters still resentful of his loss in 2016, and of a party establishment they feel favored Hillary Clinton over Mr. Sanders in the primary. The question for Democratic candidates now is how to respond to this grievance and harness the fervor of Sanders supporters to mobilize support for the Democratic Party more broadly.</p><p>Guest: <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Revitalized by an endorsement from Representative Alexandria Ocasio-Cortez, Sanders proclaimed “I am back” as he<a href="https://www.nytimes.com/2019/10/19/us/politics/bernie-sanders-aoc-queensbridge-park.html?searchResultPosition=3" target="_blank"> rebooted his campaign</a> after a health scare.</li><li><a href="https://www.nytimes.com/2019/10/23/nyregion/bernie-sanders-aoc-rally-queens.html?smid=pc-thedaily" target="_blank">The response to Sanders’s rally</a> from public housing residents in Queens exposed the race and class tensions in a gentrifying slice of New York City.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>‘A Prophet’: The Zeal of Bernie Sanders Supporters</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At a rally in New York City last weekend, Senator Bernie Sanders drew the largest crowd of his presidential campaign — at a moment when his candidacy may be at its most vulnerable. After a heart attack this month, Mr. Sanders faced a challenge in convincing voters that he had the stamina to run both a campaign and the country. His first rally since his hospital stay attracted supporters still resentful of his loss in 2016, and of a party establishment they feel favored Hillary Clinton over Mr. Sanders in the primary. The question for Democratic candidates now is how to respond to this grievance and harness the fervor of Sanders supporters to mobilize support for the Democratic Party more broadly.

Guest: Alexander Burns, who covers national politics for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Revitalized by an endorsement from Representative Alexandria Ocasio-Cortez, Sanders proclaimed “I am back” as he rebooted his campaign after a health scare.The response to Sanders’s rally from public housing residents in Queens exposed the race and class tensions in a gentrifying slice of New York City. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>At a rally in New York City last weekend, Senator Bernie Sanders drew the largest crowd of his presidential campaign — at a moment when his candidacy may be at its most vulnerable. After a heart attack this month, Mr. Sanders faced a challenge in convincing voters that he had the stamina to run both a campaign and the country. His first rally since his hospital stay attracted supporters still resentful of his loss in 2016, and of a party establishment they feel favored Hillary Clinton over Mr. Sanders in the primary. The question for Democratic candidates now is how to respond to this grievance and harness the fervor of Sanders supporters to mobilize support for the Democratic Party more broadly.</p><p>Guest: <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Revitalized by an endorsement from Representative Alexandria Ocasio-Cortez, Sanders proclaimed “I am back” as he<a href="https://www.nytimes.com/2019/10/19/us/politics/bernie-sanders-aoc-queensbridge-park.html?searchResultPosition=3" target="_blank"> rebooted his campaign</a> after a health scare.</li><li><a href="https://www.nytimes.com/2019/10/23/nyregion/bernie-sanders-aoc-rally-queens.html?smid=pc-thedaily" target="_blank">The response to Sanders’s rally</a> from public housing residents in Queens exposed the race and class tensions in a gentrifying slice of New York City.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Ok8umyE1r9eEadFtzblMGYAbqT6mgYKzirRyZkSB79o</guid>
      <pubDate>Fri, 25 Oct 2019 09:52:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/68cb81d3-0786-4dfa-83a1-0f9de7eaab83.mp3" type="audio/mpeg" length="28046315"/>
    </item>
    <item>
      <title>A Victim of the Shadow Government</title>
      <description>
        <![CDATA[<p>Before the career diplomats working in Ukraine discovered a “highly irregular” power structure around President Trump determined to undermine and derail them, a Trump cabinet secretary said the same thing happened to him.</p><p>Today, David J. Shulkin, former secretary of Veterans Affairs, speaks about his experience with “a dual path of decision making in the White House” and how falling out of favor with President Trump’s political appointees ended his tenure. Guest: David J. Shulkin, a former secretary of the Department of Veterans Affairs in the Trump administration. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background listening and reading:</p><ul><li>Mr. Shulkin’s story matches a pattern described that career diplomats have described to the impeachment inquiry. Here’s<a href="https://www.nytimes.com/2019/10/18/podcasts/the-daily/mulvaney-trump-impeachment-inquiry.html?smid=pc-thedaily" target="_blank"> a “Daily” episode about their testimony</a>.</li><li><a href="https://www.nytimes.com/2019/09/28/us/politics/how-a-shadow-foreign-policy-in-ukraine-prompted-impeachment-inquiry.html?smid=pc-thedaily" target="_blank">Back channels to the White House</a> are at the heart of the investigation. </li></ul>]]>
      </description>
      <itunes:title>A Victim of the Shadow Government</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Before the career diplomats working in Ukraine discovered a “highly irregular” power structure around President Trump determined to undermine and derail them, a Trump cabinet secretary said the same thing happened to him.

Today, David J. Shulkin, former secretary of Veterans Affairs, speaks about his experience with “a dual path of decision making in the White House” and how falling out of favor with President Trump’s political appointees ended his tenure. Guest: David J. Shulkin, a former secretary of the Department of Veterans Affairs in the Trump administration. For more information on today’s episode, visit nytimes.com/thedaily. 

Background listening and reading:Mr. Shulkin’s story matches a pattern described that career diplomats have described to the impeachment inquiry. Here’s a “Daily” episode about their testimony.Back channels to the White House are at the heart of the investigation. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Before the career diplomats working in Ukraine discovered a “highly irregular” power structure around President Trump determined to undermine and derail them, a Trump cabinet secretary said the same thing happened to him.</p><p>Today, David J. Shulkin, former secretary of Veterans Affairs, speaks about his experience with “a dual path of decision making in the White House” and how falling out of favor with President Trump’s political appointees ended his tenure. Guest: David J. Shulkin, a former secretary of the Department of Veterans Affairs in the Trump administration. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background listening and reading:</p><ul><li>Mr. Shulkin’s story matches a pattern described that career diplomats have described to the impeachment inquiry. Here’s<a href="https://www.nytimes.com/2019/10/18/podcasts/the-daily/mulvaney-trump-impeachment-inquiry.html?smid=pc-thedaily" target="_blank"> a “Daily” episode about their testimony</a>.</li><li><a href="https://www.nytimes.com/2019/09/28/us/politics/how-a-shadow-foreign-policy-in-ukraine-prompted-impeachment-inquiry.html?smid=pc-thedaily" target="_blank">Back channels to the White House</a> are at the heart of the investigation. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/oZAarh5_tHscPWTsg6QRkj8wcyB0LA0-Y-tfeqkc61U</guid>
      <pubDate>Thu, 24 Oct 2019 09:50:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b6fe7360-7310-4135-aafb-ca94a373f341.mp3" type="audio/mpeg" length="25772199"/>
    </item>
    <item>
      <title>The ‘Most Damning’ Impeachment Testimony Yet</title>
      <description>
        <![CDATA[<p>The Democrats leading the impeachment inquiry are calling testimony from the acting envoy to Ukraine the “most damning” yet, implicating President Trump himself in a quid pro quo over military aid to the country. William B. Taylor Jr., a career diplomat who has served under both Democratic and Republican administrations, prepared a 15-page opening statement for investigators on Tuesday. He described his testimony as “a rancorous story about whistle-blowers, Mr. Giuliani, side channels, quid pro quos, corruption and interference in elections.” In his statement, Mr. Taylor documented two divergent channels of United States policymaking in Ukraine, “one regular and one highly irregular.” He said Mr. Trump had used the shadow channel to make America’s relationship with Ukraine — including a $391 million aid package — conditional on its government’s willingness to investigate one of his political rivals, former Vice President Joseph R. Biden Jr., and his family. The question of a quid pro quo for the military aid has been pursued by House Democrats since the beginning of the impeachment inquiry. In Mr. Taylor, investigators have a former ambassador testifying under oath that the allegations are true. </p><p>Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background coverage:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/22/us/politics/william-taylor-testimony.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">Here are six key takeaways</a> from Mr. Taylor’s opening statement to impeachment investigators.</li><li>This is the evidence collected and requested in<a href="https://www.nytimes.com/interactive/2019/10/04/us/politics/president-trump-impeachment-inquiry.html" target="_blank"> the impeachment inquiry so far</a>.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>The ‘Most Damning’ Impeachment Testimony Yet</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Democrats leading the impeachment inquiry are calling testimony from the acting envoy to Ukraine the “most damning” yet, implicating President Trump himself in a quid pro quo over military aid to the country. William B. Taylor Jr., a career diplomat who has served under both Democratic and Republican administrations, prepared a 15-page opening statement for investigators on Tuesday. He described his testimony as “a rancorous story about whistle-blowers, Mr. Giuliani, side channels, quid pro quos, corruption and interference in elections.” In his statement, Mr. Taylor documented two divergent channels of United States policymaking in Ukraine, “one regular and one highly irregular.” He said Mr. Trump had used the shadow channel to make America’s relationship with Ukraine — including a $391 million aid package — conditional on its government’s willingness to investigate one of his political rivals, former Vice President Joseph R. Biden Jr., and his family. The question of a quid pro quo for the military aid has been pursued by House Democrats since the beginning of the impeachment inquiry. In Mr. Taylor, investigators have a former ambassador testifying under oath that the allegations are true. 

Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background coverage: Here are six key takeaways from Mr. Taylor’s opening statement to impeachment investigators.This is the evidence collected and requested in the impeachment inquiry so far. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Democrats leading the impeachment inquiry are calling testimony from the acting envoy to Ukraine the “most damning” yet, implicating President Trump himself in a quid pro quo over military aid to the country. William B. Taylor Jr., a career diplomat who has served under both Democratic and Republican administrations, prepared a 15-page opening statement for investigators on Tuesday. He described his testimony as “a rancorous story about whistle-blowers, Mr. Giuliani, side channels, quid pro quos, corruption and interference in elections.” In his statement, Mr. Taylor documented two divergent channels of United States policymaking in Ukraine, “one regular and one highly irregular.” He said Mr. Trump had used the shadow channel to make America’s relationship with Ukraine — including a $391 million aid package — conditional on its government’s willingness to investigate one of his political rivals, former Vice President Joseph R. Biden Jr., and his family. The question of a quid pro quo for the military aid has been pursued by House Democrats since the beginning of the impeachment inquiry. In Mr. Taylor, investigators have a former ambassador testifying under oath that the allegations are true. </p><p>Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background coverage:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/22/us/politics/william-taylor-testimony.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">Here are six key takeaways</a> from Mr. Taylor’s opening statement to impeachment investigators.</li><li>This is the evidence collected and requested in<a href="https://www.nytimes.com/interactive/2019/10/04/us/politics/president-trump-impeachment-inquiry.html" target="_blank"> the impeachment inquiry so far</a>.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qEFeK6qpGuyXNBy0soUMu0pctwie-RrFgMuTKhnjrgk</guid>
      <pubDate>Wed, 23 Oct 2019 09:48:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b1940b9d-6dbd-4131-a743-4189aff4735e.mp3" type="audio/mpeg" length="19713462"/>
    </item>
    <item>
      <title>Trapped in Syria, Part 2: A Plea to Parliament</title>
      <description>
        <![CDATA[<p>Yesterday on “The Daily,” we met Kamalle Dabboussy, who said his daughter had been tricked by her husband into joining the Islamic State. His daughter and three grandchildren are being held in a Syrian detention camp for the relatives of ISIS fighters.</p><p>When we left off, Mr. Dabboussy had just received a call from a journalist that suggested his family’s situation was about to become far more precarious. President Trump had announced that he would withdraw U.S. troops from the Syrian border, and Kurdish forces who had been guarding the prisons were expected to abandon their posts, leaving the detainees’ lives in imminent danger.</p><p>Today, we follow Mr. Dabboussy’s struggle to convince the Australian government that his daughter and her children are worth saving — despite their ties to the Islamic State.</p><p>Guest: <a href="https://www.nytimes.com/by/livia-albeck-ripka?smid=pc-thedaily" target="_blank">Livia Albeck-Ripka</a>, a reporter for The Times in Melbourne, Australia, spoke with Kamalle Dabboussy, whose daughter Mariam is trapped in Syria with her children. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/21/podcasts/the-daily/isis-syria-kurds-us-troops.html" target="_blank">Here’s the first episode</a> in this two-part series, in which we introduced Kamalle Dabboussy and his fight to bring his family home from a war zone.</li><li>Mr. Dabboussy is<a href="https://www.nytimes.com/2019/10/21/world/australia/isis-camp-syria.html" target="_blank"> one of a cohort</a> of parents in Australia lobbying the government to help release their loved ones from detention camps in northern Syria.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>Trapped in Syria, Part 2: A Plea to Parliament</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Yesterday on “The Daily,” we met Kamalle Dabboussy, who said his daughter had been tricked by her husband into joining the Islamic State. His daughter and three grandchildren are being held in a Syrian detention camp for the relatives of ISIS fighters.

When we left off, Mr. Dabboussy had just received a call from a journalist that suggested his family’s situation was about to become far more precarious. President Trump had announced that he would withdraw U.S. troops from the Syrian border, and Kurdish forces who had been guarding the prisons were expected to abandon their posts, leaving the detainees’ lives in imminent danger.

Today, we follow Mr. Dabboussy’s struggle to convince the Australian government that his daughter and her children are worth saving — despite their ties to the Islamic State.

Guest: Livia Albeck-Ripka, a reporter for The Times in Melbourne, Australia, spoke with Kamalle Dabboussy, whose daughter Mariam is trapped in Syria with her children. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Here’s the first episode in this two-part series, in which we introduced Kamalle Dabboussy and his fight to bring his family home from a war zone.Mr. Dabboussy is one of a cohort of parents in Australia lobbying the government to help release their loved ones from detention camps in northern Syria. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Yesterday on “The Daily,” we met Kamalle Dabboussy, who said his daughter had been tricked by her husband into joining the Islamic State. His daughter and three grandchildren are being held in a Syrian detention camp for the relatives of ISIS fighters.</p><p>When we left off, Mr. Dabboussy had just received a call from a journalist that suggested his family’s situation was about to become far more precarious. President Trump had announced that he would withdraw U.S. troops from the Syrian border, and Kurdish forces who had been guarding the prisons were expected to abandon their posts, leaving the detainees’ lives in imminent danger.</p><p>Today, we follow Mr. Dabboussy’s struggle to convince the Australian government that his daughter and her children are worth saving — despite their ties to the Islamic State.</p><p>Guest: <a href="https://www.nytimes.com/by/livia-albeck-ripka?smid=pc-thedaily" target="_blank">Livia Albeck-Ripka</a>, a reporter for The Times in Melbourne, Australia, spoke with Kamalle Dabboussy, whose daughter Mariam is trapped in Syria with her children. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/10/21/podcasts/the-daily/isis-syria-kurds-us-troops.html" target="_blank">Here’s the first episode</a> in this two-part series, in which we introduced Kamalle Dabboussy and his fight to bring his family home from a war zone.</li><li>Mr. Dabboussy is<a href="https://www.nytimes.com/2019/10/21/world/australia/isis-camp-syria.html" target="_blank"> one of a cohort</a> of parents in Australia lobbying the government to help release their loved ones from detention camps in northern Syria.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0roVsFyeqBt8wuTkaF-RAiEWV83YECwAKqMSEVnXgT4</guid>
      <pubDate>Tue, 22 Oct 2019 09:57:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:32:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1504030a-b578-4287-a303-752a49b5ed9d.mp3" type="audio/mpeg" length="31597296"/>
    </item>
    <item>
      <title>Trapped in Syria, Part 1: A Father’s Fight</title>
      <description>
        <![CDATA[<p>Since the fall of the Islamic State, many of the group’s fighters and their families have been held in prison camps controlled by U.S.-allied Kurdish forces. Parents around the world have been trying to get their children and grandchildren out of the camps and back to their home countries. Now, the fate of those detainees has become an urgent question after President Trump’s abrupt recall of American troops from the Syrian border.&nbsp;</p><p>We follow one father as he fights to get his daughter, a former ISIS bride, and her children back to Australia.</p><p>Guest: <a href="https://www.nytimes.com/by/livia-albeck-ripka" target="_blank">Livia Albeck-Ripka</a>, a reporter for The Times in Melbourne, Australia, spoke to Kamalle Dabboussy, whose daughter Mariam is trapped in Syria with her three children. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>“There will be ethnic cleansing of the Kurdish people from Syria, and the American administration will be responsible for it,”<a href="https://www.nytimes.com/2019/10/20/world/middleeast/pelosi-syria-turkey-jordan.html?smid=pc-thedaily" target="_blank"> said Mazlum Kobani</a>, a Kurdish military commander, when asked about a full American withdrawal from northern Syria.</li><li>President Trump is now said to be considering<a href="https://www.nytimes.com/2019/10/20/world/middleeast/trump-troops-syria-turkey.html?smid=pc-thedaily" target="_blank"> leaving a few hundred troops in eastern Syria to defend</a> against an ISIS resurgence.</li></ul>]]>
      </description>
      <itunes:title>Trapped in Syria, Part 1: A Father’s Fight</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Since the fall of the Islamic State, many of the group’s fighters and their families have been held in prison camps controlled by U.S.-allied Kurdish forces. Parents around the world have been trying to get their children and grandchildren out of the camps and back to their home countries. Now, the fate of those detainees has become an urgent question after President Trump’s abrupt recall of American troops from the Syrian border. 

We follow one father as he fights to get his daughter, a former ISIS bride, and her children back to Australia.

Guest: Livia Albeck-Ripka, a reporter for The Times in Melbourne, Australia, spoke to Kamalle Dabboussy, whose daughter Mariam is trapped in Syria with her three children. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: “There will be ethnic cleansing of the Kurdish people from Syria, and the American administration will be responsible for it,” said Mazlum Kobani, a Kurdish military commander, when asked about a full American withdrawal from northern Syria.President Trump is now said to be considering leaving a few hundred troops in eastern Syria to defend against an ISIS resurgence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Since the fall of the Islamic State, many of the group’s fighters and their families have been held in prison camps controlled by U.S.-allied Kurdish forces. Parents around the world have been trying to get their children and grandchildren out of the camps and back to their home countries. Now, the fate of those detainees has become an urgent question after President Trump’s abrupt recall of American troops from the Syrian border.&nbsp;</p><p>We follow one father as he fights to get his daughter, a former ISIS bride, and her children back to Australia.</p><p>Guest: <a href="https://www.nytimes.com/by/livia-albeck-ripka" target="_blank">Livia Albeck-Ripka</a>, a reporter for The Times in Melbourne, Australia, spoke to Kamalle Dabboussy, whose daughter Mariam is trapped in Syria with her three children. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>“There will be ethnic cleansing of the Kurdish people from Syria, and the American administration will be responsible for it,”<a href="https://www.nytimes.com/2019/10/20/world/middleeast/pelosi-syria-turkey-jordan.html?smid=pc-thedaily" target="_blank"> said Mazlum Kobani</a>, a Kurdish military commander, when asked about a full American withdrawal from northern Syria.</li><li>President Trump is now said to be considering<a href="https://www.nytimes.com/2019/10/20/world/middleeast/trump-troops-syria-turkey.html?smid=pc-thedaily" target="_blank"> leaving a few hundred troops in eastern Syria to defend</a> against an ISIS resurgence.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7px30qexhHi2OE2xBk093scBbI9vsKtndVoGgcSRGP8</guid>
      <pubDate>Mon, 21 Oct 2019 09:57:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/84f98012-9a15-4cc4-9ce0-a600106f6b3d.mp3" type="audio/mpeg" length="26755239"/>
    </item>
    <item>
      <title>The Week Diplomats Broke Their Silence</title>
      <description>
        <![CDATA[<p>Members of the American diplomatic corps testified about the state of U.S. foreign policy in private hearings on Capitol Hill this week. According to our national political correspondent, their testimonies revealed “a remarkably consistent story” about the ways in which career diplomats have been sidelined to make room for Trump administration officials. The conduct of those officials, and the nature of the directives they received, is at the center of the House impeachment investigation.</p><p>We look back at a week inside the U.S. Capitol as that inquiry enters a pivotal phase. Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Gordon D. Sondland, the U.S. ambassador to the European Union, told impeachment investigators on Thursday that<a href="https://www.nytimes.com/2019/10/17/us/politics/gordon-sondland-testimony.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> President Trump delegated Ukraine policy</a> to his personal lawyer Rudolph Giuliani.</li><li>Mick Mulvaney, the acting White House chief of staff, threw Washington into turmoil on Thursday when<a href="https://www.nytimes.com/2019/10/17/us/politics/mick-mulvaney-trump-ukraine.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> he first confirmed, then retracted</a>, that Mr. Trump had withheld military aid to pressure Ukraine.</li></ul>]]>
      </description>
      <itunes:title>The Week Diplomats Broke Their Silence</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Members of the American diplomatic corps testified about the state of U.S. foreign policy in private hearings on Capitol Hill this week. According to our national political correspondent, their testimonies revealed “a remarkably consistent story” about the ways in which career diplomats have been sidelined to make room for Trump administration officials. The conduct of those officials, and the nature of the directives they received, is at the center of the House impeachment investigation.

We look back at a week inside the U.S. Capitol as that inquiry enters a pivotal phase. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Gordon D. Sondland, the U.S. ambassador to the European Union, told impeachment investigators on Thursday that President Trump delegated Ukraine policy to his personal lawyer Rudolph Giuliani.Mick Mulvaney, the acting White House chief of staff, threw Washington into turmoil on Thursday when he first confirmed, then retracted, that Mr. Trump had withheld military aid to pressure Ukraine.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Members of the American diplomatic corps testified about the state of U.S. foreign policy in private hearings on Capitol Hill this week. According to our national political correspondent, their testimonies revealed “a remarkably consistent story” about the ways in which career diplomats have been sidelined to make room for Trump administration officials. The conduct of those officials, and the nature of the directives they received, is at the center of the House impeachment investigation.</p><p>We look back at a week inside the U.S. Capitol as that inquiry enters a pivotal phase. Guest: <a href="https://www.nytimes.com/by/nicholas-fandos?smid=pc-thedaily" target="_blank">Nicholas Fandos</a>, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Gordon D. Sondland, the U.S. ambassador to the European Union, told impeachment investigators on Thursday that<a href="https://www.nytimes.com/2019/10/17/us/politics/gordon-sondland-testimony.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> President Trump delegated Ukraine policy</a> to his personal lawyer Rudolph Giuliani.</li><li>Mick Mulvaney, the acting White House chief of staff, threw Washington into turmoil on Thursday when<a href="https://www.nytimes.com/2019/10/17/us/politics/mick-mulvaney-trump-ukraine.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> he first confirmed, then retracted</a>, that Mr. Trump had withheld military aid to pressure Ukraine.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/iTrecl6rp-xWUpBRqIok92Wal5EytQatKYN6OIA4PI8</guid>
      <pubDate>Fri, 18 Oct 2019 09:56:39 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:36:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/82325db2-aed5-4209-aa05-15f3724052fd.mp3" type="audio/mpeg" length="34971898"/>
    </item>
    <item>
      <title>A Foreseen Calamity in Syria</title>
      <description>
        <![CDATA[<p>The presence of U.S. troops in northern Syria was designed to protect America’s allies and keep its enemies there in check. President Trump’s unilateral withdrawal from the region quickly, and predictably, unraveled a tenuous peace on the volatile border between Syria and Turkey. His decision handed a gift to four American adversaries: Iran, Russia, the Syrian government and the Islamic State. David E. Sanger of The Times explains why “the worst-case scenario is even worse than you can imagine.” Guest: <a href="https://www.nytimes.com/by/david-e-sanger?smid=pc-thedaily" target="_blank">David E. Sanger</a>, a national security correspondent and a senior writer at The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:</p><ul><li><a href="https://www.nytimes.com/2019/10/16/world/middleeast/trump-erdogan-turkey-syria-kurds.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">President Trump lashed out</a> in defense of his decision to remove U.S. troops from northeastern Syria in response to rare bipartisan condemnation from Congress.</li><li>Russian troops have already occupied abandoned American outposts in Syria as Moscow<a href="https://www.nytimes.com/2019/10/15/world/middleeast/kurds-syria-turkey.html?searchResultPosition=1?smid=pc-thedaily" target="_blank"> moves to fill the power vacuum</a>.</li><li>“Don't be a fool! I will call you later.”<a href="https://www.nytimes.com/interactive/2019/10/16/us/politics/trump-letter-turkey.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> Read the letter</a> President Trump sent to Turkey’s leader.</li></ul>]]>
      </description>
      <itunes:title>A Foreseen Calamity in Syria</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The presence of U.S. troops in northern Syria was designed to protect America’s allies and keep its enemies there in check. President Trump’s unilateral withdrawal from the region quickly, and predictably, unraveled a tenuous peace on the volatile border between Syria and Turkey. His decision handed a gift to four American adversaries: Iran, Russia, the Syrian government and the Islamic State. David E. Sanger of The Times explains why “the worst-case scenario is even worse than you can imagine.” Guest: David E. Sanger, a national security correspondent and a senior writer at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage:President Trump lashed out in defense of his decision to remove U.S. troops from northeastern Syria in response to rare bipartisan condemnation from Congress.Russian troops have already occupied abandoned American outposts in Syria as Moscow moves to fill the power vacuum.“Don't be a fool! I will call you later.” Read the letter President Trump sent to Turkey’s leader.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The presence of U.S. troops in northern Syria was designed to protect America’s allies and keep its enemies there in check. President Trump’s unilateral withdrawal from the region quickly, and predictably, unraveled a tenuous peace on the volatile border between Syria and Turkey. His decision handed a gift to four American adversaries: Iran, Russia, the Syrian government and the Islamic State. David E. Sanger of The Times explains why “the worst-case scenario is even worse than you can imagine.” Guest: <a href="https://www.nytimes.com/by/david-e-sanger?smid=pc-thedaily" target="_blank">David E. Sanger</a>, a national security correspondent and a senior writer at The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:</p><ul><li><a href="https://www.nytimes.com/2019/10/16/world/middleeast/trump-erdogan-turkey-syria-kurds.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">President Trump lashed out</a> in defense of his decision to remove U.S. troops from northeastern Syria in response to rare bipartisan condemnation from Congress.</li><li>Russian troops have already occupied abandoned American outposts in Syria as Moscow<a href="https://www.nytimes.com/2019/10/15/world/middleeast/kurds-syria-turkey.html?searchResultPosition=1?smid=pc-thedaily" target="_blank"> moves to fill the power vacuum</a>.</li><li>“Don't be a fool! I will call you later.”<a href="https://www.nytimes.com/interactive/2019/10/16/us/politics/trump-letter-turkey.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank"> Read the letter</a> President Trump sent to Turkey’s leader.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mbb6L9L5edWF3mWXTSau7KLf6A9e9Gc02ldNtggbVMs</guid>
      <pubDate>Thu, 17 Oct 2019 09:53:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/408574f5-9ecb-460f-b06b-5595de14d8c8.mp3" type="audio/mpeg" length="26497358"/>
    </item>
    <item>
      <title>The Moderates Strike Back: The 4th Democratic Debate</title>
      <description>
        <![CDATA[<p>Last night in Ohio, The New York Times co-hosted a presidential debate for the first time in more than a decade. Marc Lacey, The Times’s National editor, moderated the event with the CNN anchors Erin Burnett and Anderson Cooper.</p><p>It was also the first debate since Democrats started an impeachment inquiry into President Trump and his efforts to pressure Ukraine to investigate former Vice President Joseph R. Biden Jr. Candidates denounced the president, calling for his impeachment, without wading into the specifics of the investigation. Instead, moderates focused on winning over Biden voters by differentiating themselves from more progressive candidates. Guests: <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The Times, and <a href="https://www.nytimes.com/by/maggie-haberman?smid=pc-thedaily" target="_blank">Maggie Haberman</a>, who covers the White House. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Senator Elizabeth Warren was the<a href="https://www.nytimes.com/2019/10/15/us/politics/october-democratic-debate-recap.html?rref=collection%2Fbyline%2Falexander-burns&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=1&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> primary target of moderates’ attacks</a>, illustrating her status as an emergent front-runner. Candidates avoided criticism of Joe Biden, wary of echoing President Trump’s attacks on his family.</li><li><a href="https://www.nytimes.com/2019/10/16/us/politics/democratic-debate.html?action=click&amp;module=STYLN_menu_election_live&amp;pgtype=Article&amp;region=header?smid=pc-thedaily" target="_blank">Here are six takeaways</a> from the debate.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>The Moderates Strike Back: The 4th Democratic Debate</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Last night in Ohio, The New York Times co-hosted a presidential debate for the first time in more than a decade. Marc Lacey, The Times’s National editor, moderated the event with the CNN anchors Erin Burnett and Anderson Cooper.

It was also the first debate since Democrats started an impeachment inquiry into President Trump and his efforts to pressure Ukraine to investigate former Vice President Joseph R. Biden Jr. Candidates denounced the president, calling for his impeachment, without wading into the specifics of the investigation. Instead, moderates focused on winning over Biden voters by differentiating themselves from more progressive candidates. Guests: Alexander Burns, who covers national politics for The Times, and Maggie Haberman, who covers the White House. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Senator Elizabeth Warren was the primary target of moderates’ attacks, illustrating her status as an emergent front-runner. Candidates avoided criticism of Joe Biden, wary of echoing President Trump’s attacks on his family.Here are six takeaways from the debate. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Last night in Ohio, The New York Times co-hosted a presidential debate for the first time in more than a decade. Marc Lacey, The Times’s National editor, moderated the event with the CNN anchors Erin Burnett and Anderson Cooper.</p><p>It was also the first debate since Democrats started an impeachment inquiry into President Trump and his efforts to pressure Ukraine to investigate former Vice President Joseph R. Biden Jr. Candidates denounced the president, calling for his impeachment, without wading into the specifics of the investigation. Instead, moderates focused on winning over Biden voters by differentiating themselves from more progressive candidates. Guests: <a href="https://www.nytimes.com/by/alexander-burns?smid=pc-thedaily" target="_blank">Alexander Burns</a>, who covers national politics for The Times, and <a href="https://www.nytimes.com/by/maggie-haberman?smid=pc-thedaily" target="_blank">Maggie Haberman</a>, who covers the White House. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Senator Elizabeth Warren was the<a href="https://www.nytimes.com/2019/10/15/us/politics/october-democratic-debate-recap.html?rref=collection%2Fbyline%2Falexander-burns&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=1&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> primary target of moderates’ attacks</a>, illustrating her status as an emergent front-runner. Candidates avoided criticism of Joe Biden, wary of echoing President Trump’s attacks on his family.</li><li><a href="https://www.nytimes.com/2019/10/16/us/politics/democratic-debate.html?action=click&amp;module=STYLN_menu_election_live&amp;pgtype=Article&amp;region=header?smid=pc-thedaily" target="_blank">Here are six takeaways</a> from the debate.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/npQ7p-cTIFiky3-ynlmZI_cROTcgV2kaJuftfgEf7W0</guid>
      <pubDate>Wed, 16 Oct 2019 09:53:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7dacdba0-296f-4e64-847a-f35823489a39.mp3" type="audio/mpeg" length="28731768"/>
    </item>
    <item>
      <title>The Effort to Discredit the U.S. Ambassador to Ukraine</title>
      <description>
        <![CDATA[<p>This week, we’re producing episodes of “The Daily” from The New York Times’s Washington bureau.&nbsp;</p><p>The impeachment inquiry is entering a pivotal phase as Congress returns from recess. The White House’s strategy to block the investigation is beginning to crumble, with five administration officials set to testify before House investigators.</p><p>On Monday, those committees heard testimony about why the president removed the longtime ambassador, Marie L. Yovanovitch, just two months before the call in which he asked the Ukrainian president for a favor. Today, we look at how Ms. Yovanovitch ended up at the center of the impeachment process.&nbsp;</p><p>Guests: <a href="https://www.nytimes.com/by/sharon-lafraniere?smid=pc-thedaily" target="_blank">Sharon LaFraniere</a>, an investigative reporter based in Washington, and Rachel Quester and Clare Toeniskoetter, producers for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Marie L. Yovanovitch<a href="https://www.nytimes.com/2019/10/11/us/politics/marie-yovanovitch-trump-impeachment.html?smid=pc-thedaily" target="_blank"> told House investigators</a> that she was removed from office on the basis of “false claims by people with clearly questionable motives.”&nbsp;</li><li>The effort to pressure Ukraine so alarmed John Bolton, then the national security adviser, that<a href="https://www.nytimes.com/2019/10/14/us/politics/bolton-giuliani-fiona-hill-testimony.html?smid=pc-thedaily" target="_blank"> he told an aide to alert White House lawyers</a>. “Giuliani’s a hand grenade who’s going to blow everybody up,” an aide quoted him as saying of President Trump’s personal lawyer.</li></ul>]]>
      </description>
      <itunes:title>The Effort to Discredit the U.S. Ambassador to Ukraine</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, we’re producing episodes of “The Daily” from The New York Times’s Washington bureau. 

The impeachment inquiry is entering a pivotal phase as Congress returns from recess. The White House’s strategy to block the investigation is beginning to crumble, with five administration officials set to testify before House investigators.

On Monday, those committees heard testimony about why the president removed the longtime ambassador, Marie L. Yovanovitch, just two months before the call in which he asked the Ukrainian president for a favor. Today, we look at how Ms. Yovanovitch ended up at the center of the impeachment process. 

Guests: Sharon LaFraniere, an investigative reporter based in Washington, and Rachel Quester and Clare Toeniskoetter, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Marie L. Yovanovitch told House investigators that she was removed from office on the basis of “false claims by people with clearly questionable motives.” The effort to pressure Ukraine so alarmed John Bolton, then the national security adviser, that he told an aide to alert White House lawyers. “Giuliani’s a hand grenade who’s going to blow everybody up,” an aide quoted him as saying of President Trump’s personal lawyer.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, we’re producing episodes of “The Daily” from The New York Times’s Washington bureau.&nbsp;</p><p>The impeachment inquiry is entering a pivotal phase as Congress returns from recess. The White House’s strategy to block the investigation is beginning to crumble, with five administration officials set to testify before House investigators.</p><p>On Monday, those committees heard testimony about why the president removed the longtime ambassador, Marie L. Yovanovitch, just two months before the call in which he asked the Ukrainian president for a favor. Today, we look at how Ms. Yovanovitch ended up at the center of the impeachment process.&nbsp;</p><p>Guests: <a href="https://www.nytimes.com/by/sharon-lafraniere?smid=pc-thedaily" target="_blank">Sharon LaFraniere</a>, an investigative reporter based in Washington, and Rachel Quester and Clare Toeniskoetter, producers for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Marie L. Yovanovitch<a href="https://www.nytimes.com/2019/10/11/us/politics/marie-yovanovitch-trump-impeachment.html?smid=pc-thedaily" target="_blank"> told House investigators</a> that she was removed from office on the basis of “false claims by people with clearly questionable motives.”&nbsp;</li><li>The effort to pressure Ukraine so alarmed John Bolton, then the national security adviser, that<a href="https://www.nytimes.com/2019/10/14/us/politics/bolton-giuliani-fiona-hill-testimony.html?smid=pc-thedaily" target="_blank"> he told an aide to alert White House lawyers</a>. “Giuliani’s a hand grenade who’s going to blow everybody up,” an aide quoted him as saying of President Trump’s personal lawyer.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KvrcpeBcKMmgT1xGObIQjVRMkbuNM_5gHI-MPzFdifY</guid>
      <pubDate>Tue, 15 Oct 2019 09:54:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/da084b7a-1cd7-4e69-ac7d-38d06bca61d1.mp3" type="audio/mpeg" length="24624065"/>
    </item>
    <item>
      <title>The Story of a Kurdish General</title>
      <description>
        <![CDATA[<p>Turkey has invaded Kurdish-controlled territory in Syria, upending a fragile peace in the region and inciting&nbsp;sectarian bloodshed. The Trump administration has ordered a full evacuation of the 1,000 American troops that remain in northeastern Syria, leaving Mazlum Kobani, the commander of the Kurdish-led militia, and his forces to rely on Russia and Syria for military assistance.</p><p>Who are the Kurds? How is it that Kurdish fighters came to be seen as allies to the United States and terrorists to Turkey? And what would the fall of Kurdish territory in northeastern Syria mean for the region?</p><p>Guest: <a href="https://www.nytimes.com/by/ben-hubbard?smid=pc-thedaily" target="_blank">Ben Hubbard</a>, Beirut bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Turkey’s invasion upended a fragile peace and <a href="https://www.nytimes.com/2019/10/13/world/middleeast/syria-turkey-invasion-isis.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">risks enabling the resurgence of the Islamic State</a>.</li><li>American troops who fought alongside Kurdish allies <a href="https://www.nytimes.com/2019/10/13/world/middleeast/kurds-syria-turkey-trump.html?action=click&amp;amp;amp;module=Top%20Stories&amp;amp;amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">have expressed regret</a> after the U.S. abandoned posts in northeastern Syria. “It’s a stain on the American conscience,” one Army officer said.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>The Story of a Kurdish General</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Turkey has invaded Kurdish-controlled territory in Syria, upending a fragile peace in the region and inciting sectarian bloodshed. The Trump administration has ordered a full evacuation of the 1,000 American troops that remain in northeastern Syria, leaving Mazlum Kobani, the commander of the Kurdish-led militia, and his forces to rely on Russia and Syria for military assistance.

Who are the Kurds? How is it that Kurdish fighters came to be seen as allies to the United States and terrorists to Turkey? And what would the fall of Kurdish territory in northeastern Syria mean for the region?

Guest: Ben Hubbard, Beirut bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Turkey’s invasion upended a fragile peace and risks enabling the resurgence of the Islamic State.American troops who fought alongside Kurdish allies have expressed regret after the U.S. abandoned posts in northeastern Syria. “It’s a stain on the American conscience,” one Army officer said. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Turkey has invaded Kurdish-controlled territory in Syria, upending a fragile peace in the region and inciting&nbsp;sectarian bloodshed. The Trump administration has ordered a full evacuation of the 1,000 American troops that remain in northeastern Syria, leaving Mazlum Kobani, the commander of the Kurdish-led militia, and his forces to rely on Russia and Syria for military assistance.</p><p>Who are the Kurds? How is it that Kurdish fighters came to be seen as allies to the United States and terrorists to Turkey? And what would the fall of Kurdish territory in northeastern Syria mean for the region?</p><p>Guest: <a href="https://www.nytimes.com/by/ben-hubbard?smid=pc-thedaily" target="_blank">Ben Hubbard</a>, Beirut bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Turkey’s invasion upended a fragile peace and <a href="https://www.nytimes.com/2019/10/13/world/middleeast/syria-turkey-invasion-isis.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">risks enabling the resurgence of the Islamic State</a>.</li><li>American troops who fought alongside Kurdish allies <a href="https://www.nytimes.com/2019/10/13/world/middleeast/kurds-syria-turkey-trump.html?action=click&amp;amp;amp;module=Top%20Stories&amp;amp;amp;pgtype=Homepage?smid=pc-thedaily" target="_blank">have expressed regret</a> after the U.S. abandoned posts in northeastern Syria. “It’s a stain on the American conscience,” one Army officer said.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2C7d4at5M5WONYiUtQjyPgwboKkJFjP443QqLVDSmKA</guid>
      <pubDate>Mon, 14 Oct 2019 09:52:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a13b5a07-34b7-449e-a3f7-5d2c44822b4d.mp3" type="audio/mpeg" length="23840391"/>
    </item>
    <item>
      <title>‘1619,’ Episode 5: The Land of Our Fathers, Part 2</title>
      <description>
        <![CDATA[<p>Today on “The Daily,” we present Episode 5, Part 2 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/2019/10/11/podcasts/1619-slavery-farm-loan-discrimination.html" target="_blank">nytimes.com/1619podcast</a>.</p><p>The Provosts, a family of sugar-cane farmers in Louisiana, had worked the same land for generations. When it became harder and harder to keep hold of that land, June Provost and his wife, Angie, didn’t know why — and then a phone call changed their understanding of everything. In the finale of “1619,” we hear the rest of June and Angie’s story, and its echoes in a past case that led to the largest civil rights settlement in American history.</p><p>Guests: June and Angie Provost; Adizah Eghan and Annie Brown, producers for “1619”; and Khalil Gibran Muhammad, a professor of history, race and public policy at Harvard University and the author of “The Condemnation of Blackness.”</p><p>Background reading:</p><ul><li>“The number of black sugar-cane farmers in Louisiana is most likely in the single digits,” Khalil Gibran Muhammad <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/sugar-slave-trade-slavery.html" target="_blank">writes in his essay on the history of the American sugar industry</a>. “They are the exceedingly rare exceptions to a system designed to codify black loss.”</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </description>
      <itunes:title>‘1619,’ Episode 5: The Land of Our Fathers, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today on “The Daily,” we present Episode 5, Part 2 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at nytimes.com/1619podcast.

The Provosts, a family of sugar-cane farmers in Louisiana, had worked the same land for generations. When it became harder and harder to keep hold of that land, June Provost and his wife, Angie, didn’t know why — and then a phone call changed their understanding of everything. In the finale of “1619,” we hear the rest of June and Angie’s story, and its echoes in a past case that led to the largest civil rights settlement in American history.

Guests: June and Angie Provost; Adizah Eghan and Annie Brown, producers for “1619”; and Khalil Gibran Muhammad, a professor of history, race and public policy at Harvard University and the author of “The Condemnation of Blackness.”

Background reading:“The number of black sugar-cane farmers in Louisiana is most likely in the single digits,” Khalil Gibran Muhammad writes in his essay on the history of the American sugar industry. “They are the exceedingly rare exceptions to a system designed to codify black loss.”The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. Read more from the project here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today on “The Daily,” we present Episode 5, Part 2 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/2019/10/11/podcasts/1619-slavery-farm-loan-discrimination.html" target="_blank">nytimes.com/1619podcast</a>.</p><p>The Provosts, a family of sugar-cane farmers in Louisiana, had worked the same land for generations. When it became harder and harder to keep hold of that land, June Provost and his wife, Angie, didn’t know why — and then a phone call changed their understanding of everything. In the finale of “1619,” we hear the rest of June and Angie’s story, and its echoes in a past case that led to the largest civil rights settlement in American history.</p><p>Guests: June and Angie Provost; Adizah Eghan and Annie Brown, producers for “1619”; and Khalil Gibran Muhammad, a professor of history, race and public policy at Harvard University and the author of “The Condemnation of Blackness.”</p><p>Background reading:</p><ul><li>“The number of black sugar-cane farmers in Louisiana is most likely in the single digits,” Khalil Gibran Muhammad <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/sugar-slave-trade-slavery.html" target="_blank">writes in his essay on the history of the American sugar industry</a>. “They are the exceedingly rare exceptions to a system designed to codify black loss.”</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/uNQY0pcquEr_5JnE-tsUBa65XVgIcYXKW1WNJ4fSL4I</guid>
      <pubDate>Sat, 12 Oct 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:37:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9f10db47-1654-4e72-a8ad-ce556f58bcdf.mp3" type="audio/mpeg" length="36159738"/>
    </item>
    <item>
      <title>Why China Went to War With the N.B.A.</title>
      <description>
        <![CDATA[<p>A seven-word tweet in support of Hong Kong’s antigovernment protests by Daryl Morey, general manager of the Houston Rockets, triggered a furor in both China and the United States. The ensuing controversy revealed the unspoken rules of doing business with Beijing. Guest: <a href="https://www.nytimes.com/by/jim-yardley?smid=pc-thedaily" target="_blank">Jim Yardley</a>, the Europe editor of The New York Times and author of “<a href="https://www.nytimes.com/2012/02/26/books/review/brave-dragons-by-jim-yardley.html" target="_blank">Brave Dragons: A Chinese Basketball Team, an American Coach, and Two Cultures Clashing</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>An exhibition game between the Los Angeles Lakers and the Brooklyn Nets in Shanghai this week was nearly canceled because of China’s dispute with the league. At the game, even longtime fans said<a href="https://www.nytimes.com/2019/10/10/business/china-nba-hong-kong-basketball-fans.html?smid=pc-thedaily" target="_blank"> they would choose patriotism over the N.B.A.</a></li><li><a href="https://www.nytimes.com/2019/10/09/sports/popovich-kerr-trump.html?smid=pc-thedaily" target="_blank">President Trump declined to criticize</a> China’s handling of the controversy, instead opting to publicly condemn two basketball coaches who have spoken out against him in the past.</li></ul>]]>
      </description>
      <itunes:title>Why China Went to War With the N.B.A.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A seven-word tweet in support of Hong Kong’s antigovernment protests by Daryl Morey, general manager of the Houston Rockets, triggered a furor in both China and the United States. The ensuing controversy revealed the unspoken rules of doing business with Beijing. Guest: Jim Yardley, the Europe editor of The New York Times and author of “Brave Dragons: A Chinese Basketball Team, an American Coach, and Two Cultures Clashing.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: An exhibition game between the Los Angeles Lakers and the Brooklyn Nets in Shanghai this week was nearly canceled because of China’s dispute with the league. At the game, even longtime fans said they would choose patriotism over the N.B.A.President Trump declined to criticize China’s handling of the controversy, instead opting to publicly condemn two basketball coaches who have spoken out against him in the past.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A seven-word tweet in support of Hong Kong’s antigovernment protests by Daryl Morey, general manager of the Houston Rockets, triggered a furor in both China and the United States. The ensuing controversy revealed the unspoken rules of doing business with Beijing. Guest: <a href="https://www.nytimes.com/by/jim-yardley?smid=pc-thedaily" target="_blank">Jim Yardley</a>, the Europe editor of The New York Times and author of “<a href="https://www.nytimes.com/2012/02/26/books/review/brave-dragons-by-jim-yardley.html" target="_blank">Brave Dragons: A Chinese Basketball Team, an American Coach, and Two Cultures Clashing</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>An exhibition game between the Los Angeles Lakers and the Brooklyn Nets in Shanghai this week was nearly canceled because of China’s dispute with the league. At the game, even longtime fans said<a href="https://www.nytimes.com/2019/10/10/business/china-nba-hong-kong-basketball-fans.html?smid=pc-thedaily" target="_blank"> they would choose patriotism over the N.B.A.</a></li><li><a href="https://www.nytimes.com/2019/10/09/sports/popovich-kerr-trump.html?smid=pc-thedaily" target="_blank">President Trump declined to criticize</a> China’s handling of the controversy, instead opting to publicly condemn two basketball coaches who have spoken out against him in the past.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/I6hMDtoFBslgSimSOWmLEhsMbGjJE_lG478ySD-1Zjs</guid>
      <pubDate>Fri, 11 Oct 2019 09:50:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ed00ed2b-86ba-477e-931a-c5a124560728.mp3" type="audio/mpeg" length="25233867"/>
    </item>
    <item>
      <title>Republicans' 'Dead Chicken' Strategy on Impeachment</title>
      <description>
        <![CDATA[<p>The White House response to the impeachment inquiry has been to dismiss the allegations, deflect the facts and discredit the Democrats. It’s the same approach that Republicans used in 2018 to push through the Supreme Court nomination of Brett M. Kavanaugh.</p><p>The New York Times reporters Kate Kelly and Robin Pogrebin, the authors of “The Education of Brett Kavanaugh,” talk to the Republican strategist who wrote the political playbook used — then and now.</p><p>Guest: Kate Kelly, a reporter for The Times covering Wall Street and Robin Pogrebin, a reporter on The Times’s Culture Desk, spoke to Mike Davis, a Republican strategist. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The White House’s<a href="https://www.nytimes.com/2019/10/08/us/politics/sondland-trump-ukraine-impeach.html" target="_blank"> declaration of war against the House impeachment inquiry</a> this week has set the stage for a constitutional clash with far-reaching consequences.</li><li>Mr. Davis<a href="https://www.nytimes.com/2019/05/18/us/politics/conservatives-judicial-nominees.html" target="_blank"> crafted a “brass knuckles” approach</a> to help confirm conservative Supreme Court justices.</li><li>Here’s<a href="https://www.nytimes.com/2019/10/09/us/politics/donald-trump-impeachment-news.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> the latest on the impeachment inquiry</a>.</li></ul>]]>
      </description>
      <itunes:title>Republicans' 'Dead Chicken' Strategy on Impeachment</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The White House response to the impeachment inquiry has been to dismiss the allegations, deflect the facts and discredit the Democrats. It’s the same approach that Republicans used in 2018 to push through the Supreme Court nomination of Brett M. Kavanaugh.

The New York Times reporters Kate Kelly and Robin Pogrebin, the authors of “The Education of Brett Kavanaugh,” talk to the Republican strategist who wrote the political playbook used — then and now.

Guest: Kate Kelly, a reporter for The Times covering Wall Street and Robin Pogrebin, a reporter on The Times’s Culture Desk, spoke to Mike Davis, a Republican strategist. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: The White House’s declaration of war against the House impeachment inquiry this week has set the stage for a constitutional clash with far-reaching consequences.Mr. Davis crafted a “brass knuckles” approach to help confirm conservative Supreme Court justices.Here’s the latest on the impeachment inquiry.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The White House response to the impeachment inquiry has been to dismiss the allegations, deflect the facts and discredit the Democrats. It’s the same approach that Republicans used in 2018 to push through the Supreme Court nomination of Brett M. Kavanaugh.</p><p>The New York Times reporters Kate Kelly and Robin Pogrebin, the authors of “The Education of Brett Kavanaugh,” talk to the Republican strategist who wrote the political playbook used — then and now.</p><p>Guest: Kate Kelly, a reporter for The Times covering Wall Street and Robin Pogrebin, a reporter on The Times’s Culture Desk, spoke to Mike Davis, a Republican strategist. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The White House’s<a href="https://www.nytimes.com/2019/10/08/us/politics/sondland-trump-ukraine-impeach.html" target="_blank"> declaration of war against the House impeachment inquiry</a> this week has set the stage for a constitutional clash with far-reaching consequences.</li><li>Mr. Davis<a href="https://www.nytimes.com/2019/05/18/us/politics/conservatives-judicial-nominees.html" target="_blank"> crafted a “brass knuckles” approach</a> to help confirm conservative Supreme Court justices.</li><li>Here’s<a href="https://www.nytimes.com/2019/10/09/us/politics/donald-trump-impeachment-news.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage" target="_blank"> the latest on the impeachment inquiry</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xAkISPJmhMgV5FmM_aeAXEFzmwHPZFbwhvCWFuTzljY</guid>
      <pubDate>Thu, 10 Oct 2019 09:50:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/88123447-1ca8-42ee-9805-351356937741.mp3" type="audio/mpeg" length="25779304"/>
    </item>
    <item>
      <title>The Freshmen: Elissa Slotkin Confronts the Impeachment Backlash</title>
      <description>
        <![CDATA[<p>Days after moderate House Democrats announced they would support an impeachment inquiry against President Trump, a recess began and they returned home to their swing districts. Now they would face their constituents. Congresswoman Elissa Slotkin of Michigan went to three town halls last week. We went with her. Guest: Representative Elissa Slotkin, Democrat of Michigan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:</p><ul><li><a href="https://www.nytimes.com/2019/09/29/us/politics/house-democrats-impeachment.html" target="_blank">Democrats face a tricky balancing act</a> in battleground districts: protecting political gains from 2018 while selling voters on an inquiry into the president.</li></ul>]]>
      </description>
      <itunes:title>The Freshmen: Elissa Slotkin Confronts the Impeachment Backlash</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Days after moderate House Democrats announced they would support an impeachment inquiry against President Trump, a recess began and they returned home to their swing districts. Now they would face their constituents. Congresswoman Elissa Slotkin of Michigan went to three town halls last week. We went with her. Guest: Representative Elissa Slotkin, Democrat of Michigan. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage:Democrats face a tricky balancing act in battleground districts: protecting political gains from 2018 while selling voters on an inquiry into the president.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Days after moderate House Democrats announced they would support an impeachment inquiry against President Trump, a recess began and they returned home to their swing districts. Now they would face their constituents. Congresswoman Elissa Slotkin of Michigan went to three town halls last week. We went with her. Guest: Representative Elissa Slotkin, Democrat of Michigan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:</p><ul><li><a href="https://www.nytimes.com/2019/09/29/us/politics/house-democrats-impeachment.html" target="_blank">Democrats face a tricky balancing act</a> in battleground districts: protecting political gains from 2018 while selling voters on an inquiry into the president.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PdafgjcmvJaERFgpEeMrBSNoEO5vZ7Amghh0AMHnZxg</guid>
      <pubDate>Wed, 09 Oct 2019 09:54:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f197360f-813e-4227-aa08-27923b608b6b.mp3" type="audio/mpeg" length="27073724"/>
    </item>
    <item>
      <title>Is the U.S. Betraying Its Kurdish Allies?</title>
      <description>
        <![CDATA[<p>President Trump vowed to withdraw United States troops from the Syrian border with Turkey. But such a move could harm one of America’s most loyal partners in the Middle East, the Kurds, who have been crucial to fighting the Islamic State. Guest: Eric Schmitt, who covers terrorism and national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>President Trump’s announcement <a href="https://www.nytimes.com/2019/10/07/us/politics/turkey-syria-trump.html?smid=pc-thedaily" target="_blank">raised fears that he was giving Turkey the go-ahead to move against Kurdish forces</a> in northern Syria.</li><li>The American pullback could create a void in the region that <a href="https://www.nytimes.com/2019/10/07/world/middleeast/trump-turkey-syria-kurds.html?smid=pc-thedaily" target="_blank">could benefit Iran, Russia and the Islamic State</a>.</li><li>American troops have “operated between two allies: Turkey and the Kurds,” <a href="https://www.nytimes.com/2019/10/07/world/middleeast/syria-turkey-kurds-military.html?smid=pc-thedaily" target="_blank">our colleagues write in a news analysis</a>. “The problem for Washington has been that the two hate each other.”</li></ul>]]>
      </description>
      <itunes:title>Is the U.S. Betraying Its Kurdish Allies?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump vowed to withdraw United States troops from the Syrian border with Turkey. But such a move could harm one of America’s most loyal partners in the Middle East, the Kurds, who have been crucial to fighting the Islamic State. Guest: Eric Schmitt, who covers terrorism and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: President Trump’s announcement raised fears that he was giving Turkey the go-ahead to move against Kurdish forces in northern Syria.The American pullback could create a void in the region that could benefit Iran, Russia and the Islamic State.American troops have “operated between two allies: Turkey and the Kurds,” our colleagues write in a news analysis. “The problem for Washington has been that the two hate each other.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump vowed to withdraw United States troops from the Syrian border with Turkey. But such a move could harm one of America’s most loyal partners in the Middle East, the Kurds, who have been crucial to fighting the Islamic State. Guest: Eric Schmitt, who covers terrorism and national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>President Trump’s announcement <a href="https://www.nytimes.com/2019/10/07/us/politics/turkey-syria-trump.html?smid=pc-thedaily" target="_blank">raised fears that he was giving Turkey the go-ahead to move against Kurdish forces</a> in northern Syria.</li><li>The American pullback could create a void in the region that <a href="https://www.nytimes.com/2019/10/07/world/middleeast/trump-turkey-syria-kurds.html?smid=pc-thedaily" target="_blank">could benefit Iran, Russia and the Islamic State</a>.</li><li>American troops have “operated between two allies: Turkey and the Kurds,” <a href="https://www.nytimes.com/2019/10/07/world/middleeast/syria-turkey-kurds-military.html?smid=pc-thedaily" target="_blank">our colleagues write in a news analysis</a>. “The problem for Washington has been that the two hate each other.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rltoNnfn1icnIaPzrFZM-gp8brh3Kn_GSTZbuk0SztI</guid>
      <pubDate>Tue, 08 Oct 2019 09:30:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a647bebc-9fc2-4346-9726-410da32bd36e.mp3" type="audio/mpeg" length="22422256"/>
    </item>
    <item>
      <title>A ‘Crazy’ Plan: How U.S. Diplomats Discussed the Pressure on Ukraine</title>
      <description>
        <![CDATA[<p>The House Democrats leading the impeachment inquiry of President Trump called their first witness: Kurt Volker, a top American diplomat involved in the negotiations with Ukraine. We look at what Mr. Volker’s testimony — and the text messages he turned over to Congress — revealed about the inquiry’s direction. Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>A <a href="https://www.nytimes.com/interactive/2019/10/04/us/politics/ukraine-text-messages-volker.html?smid=pc-thedaily" target="_blank">text exchange</a> appears to show a <a href="https://www.nytimes.com/2019/10/03/us/politics/kurt-volker-impeachment.html?smid=pc-thedaily" target="_blank">dispute among American diplomats over whether President Trump was seeking a quid pro quo</a> from Ukraine.</li><li><a href="https://www.nytimes.com/2019/10/06/us/politics/second-whistleblower-trump-ukraine.html?smid=pc-thedaily" target="_blank">A second whistle-blower</a>, said to have firsthand knowledge about the president’s dealings with Ukraine, has come forward.</li></ul>]]>
      </description>
      <itunes:title>A ‘Crazy’ Plan: How U.S. Diplomats Discussed the Pressure on Ukraine</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House Democrats leading the impeachment inquiry of President Trump called their first witness: Kurt Volker, a top American diplomat involved in the negotiations with Ukraine. We look at what Mr. Volker’s testimony — and the text messages he turned over to Congress — revealed about the inquiry’s direction. Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: A text exchange appears to show a dispute among American diplomats over whether President Trump was seeking a quid pro quo from Ukraine.A second whistle-blower, said to have firsthand knowledge about the president’s dealings with Ukraine, has come forward.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House Democrats leading the impeachment inquiry of President Trump called their first witness: Kurt Volker, a top American diplomat involved in the negotiations with Ukraine. We look at what Mr. Volker’s testimony — and the text messages he turned over to Congress — revealed about the inquiry’s direction. Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>A <a href="https://www.nytimes.com/interactive/2019/10/04/us/politics/ukraine-text-messages-volker.html?smid=pc-thedaily" target="_blank">text exchange</a> appears to show a <a href="https://www.nytimes.com/2019/10/03/us/politics/kurt-volker-impeachment.html?smid=pc-thedaily" target="_blank">dispute among American diplomats over whether President Trump was seeking a quid pro quo</a> from Ukraine.</li><li><a href="https://www.nytimes.com/2019/10/06/us/politics/second-whistleblower-trump-ukraine.html?smid=pc-thedaily" target="_blank">A second whistle-blower</a>, said to have firsthand knowledge about the president’s dealings with Ukraine, has come forward.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qBL8ze---rklDNd3DFfkV2onPNswQc4_Bq6gJRxMFv0</guid>
      <pubDate>Mon, 07 Oct 2019 09:50:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5476b426-e0d8-433a-b8ba-fcde13417631.mp3" type="audio/mpeg" length="25549009"/>
    </item>
    <item>
      <title>‘1619,’ Episode 5: The Land of Our Fathers, Part 1</title>
      <description>
        <![CDATA[<p>Today on “The Daily,” we present Episode 5, Part 1 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/2019/10/04/podcasts/1619-slavery-sugar-farm-land.html?smid=pc-thedaily" target="_blank">nytimes.com/1619podcast</a>.</p><p>More than a century and a half after the promise of 40 acres and a mule, the story of black land ownership in America remains one of loss and dispossession. June and Angie Provost, who trace their family line to the enslaved workers on Louisiana’s sugar-cane plantations, know this story well. Guests: The Provosts, who spoke with Adizah Eghan and Annie Brown, producers for “1619.”</p><p>Background reading:</p><ul><li>The story of the Provosts contains “echoes of the policies and practices that have been used since Reconstruction to maintain the racial caste system that sugar slavery helped create,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/sugar-slave-trade-slavery.html?smid=pc-thedaily" target="_blank">Khalil Gibran Muhammad writes</a> in his essay on the history of sugar in the United States.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html?smid=pc-thedaily" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </description>
      <itunes:title>‘1619,’ Episode 5: The Land of Our Fathers, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today on “The Daily,” we present Episode 5, Part 1 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at nytimes.com/1619podcast.

More than a century and a half after the promise of 40 acres and a mule, the story of black land ownership in America remains one of loss and dispossession. June and Angie Provost, who trace their family line to the enslaved workers on Louisiana’s sugar-cane plantations, know this story well. Guests: The Provosts, who spoke with Adizah Eghan and Annie Brown, producers for “1619.”

Background reading:The story of the Provosts contains “echoes of the policies and practices that have been used since Reconstruction to maintain the racial caste system that sugar slavery helped create,” Khalil Gibran Muhammad writes in his essay on the history of sugar in the United States.The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. Read more from the project here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today on “The Daily,” we present Episode 5, Part 1 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/2019/10/04/podcasts/1619-slavery-sugar-farm-land.html?smid=pc-thedaily" target="_blank">nytimes.com/1619podcast</a>.</p><p>More than a century and a half after the promise of 40 acres and a mule, the story of black land ownership in America remains one of loss and dispossession. June and Angie Provost, who trace their family line to the enslaved workers on Louisiana’s sugar-cane plantations, know this story well. Guests: The Provosts, who spoke with Adizah Eghan and Annie Brown, producers for “1619.”</p><p>Background reading:</p><ul><li>The story of the Provosts contains “echoes of the policies and practices that have been used since Reconstruction to maintain the racial caste system that sugar slavery helped create,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/sugar-slave-trade-slavery.html?smid=pc-thedaily" target="_blank">Khalil Gibran Muhammad writes</a> in his essay on the history of sugar in the United States.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html?smid=pc-thedaily" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/yjaPdT8_S_LhpRrBZBXBP2yOtnMgXS2a7x-I2_iVZC4</guid>
      <pubDate>Sat, 05 Oct 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7f0e1194-f477-46ab-87ae-23b8e0d223d7.mp3" type="audio/mpeg" length="29087451"/>
    </item>
    <item>
      <title>When #MeToo Went on Trial</title>
      <description>
        <![CDATA[<p>The investigation of Harvey Weinstein that helped give rise to the #MeToo movement had seemed, for a moment, to unite the country in redefining the rules around sex and power. But as a backlash emerged, the Supreme Court confirmation of Judge Brett M. Kavanaugh became a kind of national trial of the movement.</p><p>On the one-year anniversary of Judge Kavanaugh’s confirmation, we look at new reporting on the story of the woman at the center of it — Dr. Christine Blasey Ford — and the journey that led to her searing testimony in Washington. Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.”</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Last month, several Democratic presidential candidates<a href="https://www.nytimes.com/2019/09/15/us/brett-kavanaugh-allegations-trump-impeach.html?smid=pc-thedaily" target="_blank"> called for the impeachment</a> of Justice Kavanaugh after The Times<a href="https://www.nytimes.com/2019/09/14/sunday-review/brett-kavanaugh-deborah-ramirez-yale.html?module=inline?smid=pc-thedaily" target="_blank"> published new information</a> about allegations of sexual misconduct against him.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>When #MeToo Went on Trial</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The investigation of Harvey Weinstein that helped give rise to the #MeToo movement had seemed, for a moment, to unite the country in redefining the rules around sex and power. But as a backlash emerged, the Supreme Court confirmation of Judge Brett M. Kavanaugh became a kind of national trial of the movement.

On the one-year anniversary of Judge Kavanaugh’s confirmation, we look at new reporting on the story of the woman at the center of it — Dr. Christine Blasey Ford — and the journey that led to her searing testimony in Washington. Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement.”

For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Last month, several Democratic presidential candidates called for the impeachment of Justice Kavanaugh after The Times published new information about allegations of sexual misconduct against him. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The investigation of Harvey Weinstein that helped give rise to the #MeToo movement had seemed, for a moment, to unite the country in redefining the rules around sex and power. But as a backlash emerged, the Supreme Court confirmation of Judge Brett M. Kavanaugh became a kind of national trial of the movement.</p><p>On the one-year anniversary of Judge Kavanaugh’s confirmation, we look at new reporting on the story of the woman at the center of it — Dr. Christine Blasey Ford — and the journey that led to her searing testimony in Washington. Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.”</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Last month, several Democratic presidential candidates<a href="https://www.nytimes.com/2019/09/15/us/brett-kavanaugh-allegations-trump-impeach.html?smid=pc-thedaily" target="_blank"> called for the impeachment</a> of Justice Kavanaugh after The Times<a href="https://www.nytimes.com/2019/09/14/sunday-review/brett-kavanaugh-deborah-ramirez-yale.html?module=inline?smid=pc-thedaily" target="_blank"> published new information</a> about allegations of sexual misconduct against him.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Uav-JnVm-kIs86gX9DykEzu0TRgRjkT6dWXy_lttTuw</guid>
      <pubDate>Fri, 04 Oct 2019 10:03:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:41:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/141b1755-cc3c-4207-b23a-4996287a7b18.mp3" type="audio/mpeg" length="40049684"/>
    </item>
    <item>
      <title>How Rudy Giuliani’s Ukraine Operation Backfired</title>
      <description>
        <![CDATA[<p>In 2018, President Trump hired Rudolph W. Giuliani, his longtime friend and the former New York City mayor, to In 2018, President Trump hired Rudolph W. Giuliani, his longtime friend and the former mayor of New York City, to defend him against the special counsel’s Russia investigation. So how is it that Mr. Giuliani helped get the president entangled in another investigation, this time involving Ukraine?&nbsp;</p><p>Our colleague investigated the remarkable behind-the-scenes campaign, encouraged by Mr. Trump and executed by Mr. Giuliani, to gather and disseminate political dirt from a foreign country. Guest: Kenneth P. Vogel, a Washington correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/09/28/us/politics/how-a-shadow-foreign-policy-in-ukraine-prompted-impeachment-inquiry.html?rref=collection%2Fbyline%2Fkenneth-p.-vogel?smid=pc-thedaily" target="_blank">The story of a shadow foreign policy in Ukraine</a> unfolded against the backdrop of three elections — this year’s vote in Ukraine and the 2016 and 2020 presidential races in the United States.</li><li>Secretary of State Mike Pompeo<a href="https://www.nytimes.com/2019/10/02/world/europe/pompeo-trump-italy.html?smid=pc-thedaily" target="_blank"> </a>confirmed <a href="https://www.nytimes.com/2019/10/02/world/europe/pompeo-trump-italy.html?smid=pc-thedaily" target="_blank">he listened in on the phone call</a> at the center of the impeachment inquiry.</li><li>Follow<a href="https://www.nytimes.com/2019/10/02/us/politics/trump-impeachment-inquiry.html?smid=pc-thedaily" target="_blank"> our live updates</a> from the investigation in Washington.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>How Rudy Giuliani’s Ukraine Operation Backfired</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 2018, President Trump hired Rudolph W. Giuliani, his longtime friend and the former New York City mayor, to In 2018, President Trump hired Rudolph W. Giuliani, his longtime friend and the former mayor of New York City, to defend him against the special counsel’s Russia investigation. So how is it that Mr. Giuliani helped get the president entangled in another investigation, this time involving Ukraine? 

Our colleague investigated the remarkable behind-the-scenes campaign, encouraged by Mr. Trump and executed by Mr. Giuliani, to gather and disseminate political dirt from a foreign country. Guest: Kenneth P. Vogel, a Washington correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The story of a shadow foreign policy in Ukraine unfolded against the backdrop of three elections — this year’s vote in Ukraine and the 2016 and 2020 presidential races in the United States.Secretary of State Mike Pompeo confirmed he listened in on the phone call at the center of the impeachment inquiry.Follow our live updates from the investigation in Washington. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In 2018, President Trump hired Rudolph W. Giuliani, his longtime friend and the former New York City mayor, to In 2018, President Trump hired Rudolph W. Giuliani, his longtime friend and the former mayor of New York City, to defend him against the special counsel’s Russia investigation. So how is it that Mr. Giuliani helped get the president entangled in another investigation, this time involving Ukraine?&nbsp;</p><p>Our colleague investigated the remarkable behind-the-scenes campaign, encouraged by Mr. Trump and executed by Mr. Giuliani, to gather and disseminate political dirt from a foreign country. Guest: Kenneth P. Vogel, a Washington correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily?smid=pc-thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/09/28/us/politics/how-a-shadow-foreign-policy-in-ukraine-prompted-impeachment-inquiry.html?rref=collection%2Fbyline%2Fkenneth-p.-vogel?smid=pc-thedaily" target="_blank">The story of a shadow foreign policy in Ukraine</a> unfolded against the backdrop of three elections — this year’s vote in Ukraine and the 2016 and 2020 presidential races in the United States.</li><li>Secretary of State Mike Pompeo<a href="https://www.nytimes.com/2019/10/02/world/europe/pompeo-trump-italy.html?smid=pc-thedaily" target="_blank"> </a>confirmed <a href="https://www.nytimes.com/2019/10/02/world/europe/pompeo-trump-italy.html?smid=pc-thedaily" target="_blank">he listened in on the phone call</a> at the center of the impeachment inquiry.</li><li>Follow<a href="https://www.nytimes.com/2019/10/02/us/politics/trump-impeachment-inquiry.html?smid=pc-thedaily" target="_blank"> our live updates</a> from the investigation in Washington.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dcN_f_SFuq72ZoQqeoGNmhkcREnFpZFgIKDwbc4mmdU</guid>
      <pubDate>Thu, 03 Oct 2019 09:56:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3d379312-60ec-46d6-a148-e2b52ddbd30c.mp3" type="audio/mpeg" length="29185671"/>
    </item>
    <item>
      <title>Pageantry in Beijing. Firebombs in Hong Kong.</title>
      <description>
        <![CDATA[<p>As China celebrated 70 years of Communist Party rule, scenes of pageantry, pride and unity in Beijing contrasted with the firebombs, rubber bullets and mass protests in Hong Kong. We look at what this day of contradictions tells us about the simmering unrest in the territory. Guests: Javier C. Hernández, a China correspondent for The New York Times reporting from Hong Kong, spoke with Natalie Kitroeff, a business reporter for The Times.&nbsp;For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>The violent confrontations in Hong Kong have presented a <a href="https://www.nytimes.com/2019/10/01/world/asia/hong-kong-protest.html?smid=pc-thedaily" target="_blank">challenge to the image of unshakable control</a> that President Xi Jinping of China has sought to project.</li><li>As an American journalist in Beijing, our colleague was accustomed to a watchful Chinese government. But <a href="https://www.nytimes.com/2019/09/23/world/asia/china-xi-jinping-communist-party-70th-anniversary.html?smid=pc-thedaily" target="_blank">never before had the police insisted on occupying his home</a>.</li><li>A <a href="https://www.nytimes.com/interactive/2019/world/asia/hong-kong-protests-arc.html?smid=pc-thedaily" target="_blank">timeline of the summer of protests in Hong Kong</a>: how they started, why they grew and how the government has responded.</li></ul>]]>
      </description>
      <itunes:title>Pageantry in Beijing. Firebombs in Hong Kong.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As China celebrated 70 years of Communist Party rule, scenes of pageantry, pride and unity in Beijing contrasted with the firebombs, rubber bullets and mass protests in Hong Kong. We look at what this day of contradictions tells us about the simmering unrest in the territory. Guests: Javier C. Hernández, a China correspondent for The New York Times reporting from Hong Kong, spoke with Natalie Kitroeff, a business reporter for The Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: The violent confrontations in Hong Kong have presented a challenge to the image of unshakable control that President Xi Jinping of China has sought to project.As an American journalist in Beijing, our colleague was accustomed to a watchful Chinese government. But never before had the police insisted on occupying his home.A timeline of the summer of protests in Hong Kong: how they started, why they grew and how the government has responded.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As China celebrated 70 years of Communist Party rule, scenes of pageantry, pride and unity in Beijing contrasted with the firebombs, rubber bullets and mass protests in Hong Kong. We look at what this day of contradictions tells us about the simmering unrest in the territory. Guests: Javier C. Hernández, a China correspondent for The New York Times reporting from Hong Kong, spoke with Natalie Kitroeff, a business reporter for The Times.&nbsp;For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>The violent confrontations in Hong Kong have presented a <a href="https://www.nytimes.com/2019/10/01/world/asia/hong-kong-protest.html?smid=pc-thedaily" target="_blank">challenge to the image of unshakable control</a> that President Xi Jinping of China has sought to project.</li><li>As an American journalist in Beijing, our colleague was accustomed to a watchful Chinese government. But <a href="https://www.nytimes.com/2019/09/23/world/asia/china-xi-jinping-communist-party-70th-anniversary.html?smid=pc-thedaily" target="_blank">never before had the police insisted on occupying his home</a>.</li><li>A <a href="https://www.nytimes.com/interactive/2019/world/asia/hong-kong-protests-arc.html?smid=pc-thedaily" target="_blank">timeline of the summer of protests in Hong Kong</a>: how they started, why they grew and how the government has responded.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wo-corsS77b778M0jG1Kv2sfkvdzztoDTQs_2EmaUHQ</guid>
      <pubDate>Wed, 02 Oct 2019 09:52:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1d0398ae-2b2d-4fd4-8a22-895570550901.mp3" type="audio/mpeg" length="22033972"/>
    </item>
    <item>
      <title>The Impeachment Dilemma for Republicans</title>
      <description>
        <![CDATA[<p>Three past American presidents have confronted the possibility that members of their own party would support their impeachment. Only one, Richard M. Nixon, left office because of it, when Republicans eventually abandoned him. But what can we expect this time, in the impeachment inquiry of President Trump?&nbsp;</p><p>Guests: Peter Baker, the chief White House correspondent for The New York Times and an author of “<a href="https://www.penguinrandomhouse.com/books/600676/impeachment-by-jon-meacham-timothy-naftali-peter-baker-jeffrey-a-engel/9781984853783/" target="_blank">Impeachment: An American History</a>,” in conversation with Natalie Kitroeff, a business reporter for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The impeachment inquiry was prompted by a July call between President Trump and the Ukrainian leader. Details of a second call have now emerged, in which<a href="https://www.nytimes.com/2019/09/30/us/politics/trump-australia-barr-mueller.html?smid=pc-thedaily" target="_blank"> Mr. Trump pressed the Australian prime minister</a> to help investigate the Mueller inquiry’s origins.</li><li>In a news analysis, Peter Baker explains how preventing foreign influence is <a href="https://www.nytimes.com/2019/09/28/us/politics/impeachment-foreign-influence.html?smid=pc-thedaily" target="_blank">one of the oldest issues in America’s democratic experiment</a>.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>The Impeachment Dilemma for Republicans</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Three past American presidents have confronted the possibility that members of their own party would support their impeachment. Only one, Richard M. Nixon, left office because of it, when Republicans eventually abandoned him. But what can we expect this time, in the impeachment inquiry of President Trump? 

Guests: Peter Baker, the chief White House correspondent for The New York Times and an author of “Impeachment: An American History,” in conversation with Natalie Kitroeff, a business reporter for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The impeachment inquiry was prompted by a July call between President Trump and the Ukrainian leader. Details of a second call have now emerged, in which Mr. Trump pressed the Australian prime minister to help investigate the Mueller inquiry’s origins.In a news analysis, Peter Baker explains how preventing foreign influence is one of the oldest issues in America’s democratic experiment. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Three past American presidents have confronted the possibility that members of their own party would support their impeachment. Only one, Richard M. Nixon, left office because of it, when Republicans eventually abandoned him. But what can we expect this time, in the impeachment inquiry of President Trump?&nbsp;</p><p>Guests: Peter Baker, the chief White House correspondent for The New York Times and an author of “<a href="https://www.penguinrandomhouse.com/books/600676/impeachment-by-jon-meacham-timothy-naftali-peter-baker-jeffrey-a-engel/9781984853783/" target="_blank">Impeachment: An American History</a>,” in conversation with Natalie Kitroeff, a business reporter for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The impeachment inquiry was prompted by a July call between President Trump and the Ukrainian leader. Details of a second call have now emerged, in which<a href="https://www.nytimes.com/2019/09/30/us/politics/trump-australia-barr-mueller.html?smid=pc-thedaily" target="_blank"> Mr. Trump pressed the Australian prime minister</a> to help investigate the Mueller inquiry’s origins.</li><li>In a news analysis, Peter Baker explains how preventing foreign influence is <a href="https://www.nytimes.com/2019/09/28/us/politics/impeachment-foreign-influence.html?smid=pc-thedaily" target="_blank">one of the oldest issues in America’s democratic experiment</a>.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/tTgosWv6iPI28wru44KzPhf6JlvA3ieC3QyCLFkD9gc</guid>
      <pubDate>Tue, 01 Oct 2019 09:52:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e4e8fcaa-f35a-4c16-8c09-a1b8ee4a8113.mp3" type="audio/mpeg" length="21702112"/>
    </item>
    <item>
      <title>How the Whistle-Blower Complaint Almost Didn’t Happen</title>
      <description>
        <![CDATA[<p>It took just days for a whistle-blower complaint to prompt an impeachment inquiry of President Trump. But it took weeks for the concerns detailed in the complaint to come to light — and they nearly never did. Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Trump administration’s <a href="https://www.nytimes.com/2019/09/26/us/politics/who-is-whistleblower.html?smid=pc-thedaily" target="_blank">handling of the accusations is certain to be scrutinized</a> by lawmakers.</li><li>President Trump <a href="https://www.nytimes.com/2019/09/29/us/politics/tom-bossert-trump-ukraine.html?smid=pc-thedaily" target="_blank">was repeatedly warned by his own staff</a> that the Ukraine conspiracy theory was “completely debunked.”</li></ul>]]>
      </description>
      <itunes:title>How the Whistle-Blower Complaint Almost Didn’t Happen</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>It took just days for a whistle-blower complaint to prompt an impeachment inquiry of President Trump. But it took weeks for the concerns detailed in the complaint to come to light — and they nearly never did. Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The Trump administration’s handling of the accusations is certain to be scrutinized by lawmakers.President Trump was repeatedly warned by his own staff that the Ukraine conspiracy theory was “completely debunked.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>It took just days for a whistle-blower complaint to prompt an impeachment inquiry of President Trump. But it took weeks for the concerns detailed in the complaint to come to light — and they nearly never did. Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Trump administration’s <a href="https://www.nytimes.com/2019/09/26/us/politics/who-is-whistleblower.html?smid=pc-thedaily" target="_blank">handling of the accusations is certain to be scrutinized</a> by lawmakers.</li><li>President Trump <a href="https://www.nytimes.com/2019/09/29/us/politics/tom-bossert-trump-ukraine.html?smid=pc-thedaily" target="_blank">was repeatedly warned by his own staff</a> that the Ukraine conspiracy theory was “completely debunked.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/oTB1aYKIGh7UCxF7Kp18u_OcDAOJnaKFJkhiJYfl_S4</guid>
      <pubDate>Mon, 30 Sep 2019 09:56:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6423ee16-9796-4e43-8a42-c6728896118b.mp3" type="audio/mpeg" length="22705632"/>
    </item>
    <item>
      <title>A Special Episode for Kids: The Fear Facer</title>
      <description>
        <![CDATA[<p>Nine-year-old Ella was terrified of tornadoes and getting sick. So she did something that was even scarier than her fears: confront them. Guests: Ella Maners and her mother, Katie Maners, and Julia Longoria, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Ella spent a week at Fear Facers Summer Camp, a day camp in Florida that<a href="https://www.nytimes.com/2019/06/28/well/family/children-anxiety-ocd-camp-therapy.html" target="_blank"> helps children learn to deal with obsessive-compulsive and anxiety disorders</a>.</li></ul>]]>
      </description>
      <itunes:title>A Special Episode for Kids: The Fear Facer</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nine-year-old Ella was terrified of tornadoes and getting sick. So she did something that was even scarier than her fears: confront them. Guests: Ella Maners and her mother, Katie Maners, and Julia Longoria, a producer for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:Ella spent a week at Fear Facers Summer Camp, a day camp in Florida that helps children learn to deal with obsessive-compulsive and anxiety disorders.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nine-year-old Ella was terrified of tornadoes and getting sick. So she did something that was even scarier than her fears: confront them. Guests: Ella Maners and her mother, Katie Maners, and Julia Longoria, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Ella spent a week at Fear Facers Summer Camp, a day camp in Florida that<a href="https://www.nytimes.com/2019/06/28/well/family/children-anxiety-ocd-camp-therapy.html" target="_blank"> helps children learn to deal with obsessive-compulsive and anxiety disorders</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MvrnvkTCAXaaZSQ3OFtpe3XvUK-y6KUzBVCr_g8fiOM</guid>
      <pubDate>Sun, 29 Sep 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b6e505e7-299b-481e-b98d-3b154144d502.mp3" type="audio/mpeg" length="29457345"/>
    </item>
    <item>
      <title>The Whistle-Blower’s Complaint</title>
      <description>
        <![CDATA[<p>The whistle-blower complaint at the center of the impeachment inquiry was released on Thursday as the Trump administration official who had declined to turn it over — Joseph Maguire, the acting director of national intelligence — testified before Congress. Here’s the latest from Capitol Hill. Guest: Julie Hirschfeld Davis, the congressional editor for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The complaint accused President Trump of pressuring Ukraine’s leader to investigate a political rival and alleged that the White House <a href="https://www.nytimes.com/2019/09/26/us/politics/whistleblower-complaint-released.html?smid=pc-thedaily" target="_blank">tried to “lock down” the transcript of the call</a>.</li><li>Here’s <a href="https://www.nytimes.com/2019/09/26/us/politics/who-is-whistleblower.html?smid=pc-thedaily" target="_blank">what we’ve learned</a> about the whistle-blower.</li><li>Read a <a href="https://www.nytimes.com/interactive/2019/09/26/us/politics/whistle-blower-complaint.html?smid=pc-thedaily" target="_blank">declassified version of the complaint</a>, with annotations, and <a href="https://www.nytimes.com/2019/09/26/us/politics/whistleblower-declassified-report.html?smid=pc-thedaily" target="_blank">eight takeaways</a> from the document.</li></ul>]]>
      </description>
      <itunes:title>The Whistle-Blower’s Complaint</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The whistle-blower complaint at the center of the impeachment inquiry was released on Thursday as the Trump administration official who had declined to turn it over — Joseph Maguire, the acting director of national intelligence — testified before Congress. Here’s the latest from Capitol Hill. Guest: Julie Hirschfeld Davis, the congressional editor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The complaint accused President Trump of pressuring Ukraine’s leader to investigate a political rival and alleged that the White House tried to “lock down” the transcript of the call.Here’s what we’ve learned about the whistle-blower.Read a declassified version of the complaint, with annotations, and eight takeaways from the document.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The whistle-blower complaint at the center of the impeachment inquiry was released on Thursday as the Trump administration official who had declined to turn it over — Joseph Maguire, the acting director of national intelligence — testified before Congress. Here’s the latest from Capitol Hill. Guest: Julie Hirschfeld Davis, the congressional editor for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The complaint accused President Trump of pressuring Ukraine’s leader to investigate a political rival and alleged that the White House <a href="https://www.nytimes.com/2019/09/26/us/politics/whistleblower-complaint-released.html?smid=pc-thedaily" target="_blank">tried to “lock down” the transcript of the call</a>.</li><li>Here’s <a href="https://www.nytimes.com/2019/09/26/us/politics/who-is-whistleblower.html?smid=pc-thedaily" target="_blank">what we’ve learned</a> about the whistle-blower.</li><li>Read a <a href="https://www.nytimes.com/interactive/2019/09/26/us/politics/whistle-blower-complaint.html?smid=pc-thedaily" target="_blank">declassified version of the complaint</a>, with annotations, and <a href="https://www.nytimes.com/2019/09/26/us/politics/whistleblower-declassified-report.html?smid=pc-thedaily" target="_blank">eight takeaways</a> from the document.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RHLcNN9NPgAOYXYvkTc7kpXxUmuAOnN6XmkAdayq35o</guid>
      <pubDate>Fri, 27 Sep 2019 09:51:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c1a68147-0800-4918-880b-3c8674a4f5ce.mp3" type="audio/mpeg" length="25089253"/>
    </item>
    <item>
      <title>‘I Would Like You to Do Us a Favor’</title>
      <description>
        <![CDATA[<p>The White House released a reconstructed transcript of President Trump’s phone call with Volodymyr Zelensky, the leader of Ukraine. In it, Mr. Trump asks for an investigation into Joseph R. Biden Jr., a potential 2020 rival. We consider what that request means for the impeachment inquiry now underway. Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Different interpretations of the phone call are shaping a debate over <a href="https://www.nytimes.com/2019/09/25/us/politics/donald-trump-impeachment-probe.html?smid=pc-thedaily" target="_blank">whether the president committed high crimes and misdemeanors</a>.</li><li>Read the <a href="https://www.nytimes.com/interactive/2019/09/25/us/politics/trump-ukraine-transcript.html?smid=pc-thedaily" target="_blank">full declassified record of the call</a>, with annotations.</li><li>Here’s <a href="https://www.nytimes.com/2019/09/25/us/politics/trump-ukraine-whistleblower.html?smid=pc-thedaily" target="_blank">what we know so far about the whistle-blower complaint</a> that set off this controversy.</li></ul>]]>
      </description>
      <itunes:title>‘I Would Like You to Do Us a Favor’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The White House released a reconstructed transcript of President Trump’s phone call with Volodymyr Zelensky, the leader of Ukraine. In it, Mr. Trump asks for an investigation into Joseph R. Biden Jr., a potential 2020 rival. We consider what that request means for the impeachment inquiry now underway. Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Different interpretations of the phone call are shaping a debate over whether the president committed high crimes and misdemeanors.Read the full declassified record of the call, with annotations.Here’s what we know so far about the whistle-blower complaint that set off this controversy.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The White House released a reconstructed transcript of President Trump’s phone call with Volodymyr Zelensky, the leader of Ukraine. In it, Mr. Trump asks for an investigation into Joseph R. Biden Jr., a potential 2020 rival. We consider what that request means for the impeachment inquiry now underway. Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Different interpretations of the phone call are shaping a debate over <a href="https://www.nytimes.com/2019/09/25/us/politics/donald-trump-impeachment-probe.html?smid=pc-thedaily" target="_blank">whether the president committed high crimes and misdemeanors</a>.</li><li>Read the <a href="https://www.nytimes.com/interactive/2019/09/25/us/politics/trump-ukraine-transcript.html?smid=pc-thedaily" target="_blank">full declassified record of the call</a>, with annotations.</li><li>Here’s <a href="https://www.nytimes.com/2019/09/25/us/politics/trump-ukraine-whistleblower.html?smid=pc-thedaily" target="_blank">what we know so far about the whistle-blower complaint</a> that set off this controversy.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-WujkAmnWdah_wtHeLuae1LPZo_vO7SYBzOXR9eYyTY</guid>
      <pubDate>Thu, 26 Sep 2019 09:51:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/289684fb-5df1-4358-b5f1-16ee638dab66.mp3" type="audio/mpeg" length="21144137"/>
    </item>
    <item>
      <title>An Impeachment Inquiry Begins</title>
      <description>
        <![CDATA[<p>Speaker Nancy Pelosi has begun a formal impeachment investigation of President Trump, saying he “must be held accountable.” We spoke to our colleague who was at the announcement and to one of the lawmakers who helped convince Ms. Pelosi that it was time. Guests: Nicholas Fandos, who covers Congress for The New York Times, and Representative Mikie Sherrill, Democrat of New Jersey. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Though the outcome is uncertain, the inquiry raises the possibility that Mr. Trump could become only <a href="https://www.nytimes.com/2019/09/24/us/politics/democrats-impeachment-trump.html?smid=pc-thedaily" target="_blank">the fourth president in American history to face impeachment</a>.</li><li>After months of caution from House Democrats, why is this happening now? “They believe the new accusations against Mr. Trump are simple and serious enough to be grasped,” our colleague Carl Hulse <a href="https://www.nytimes.com/2019/09/24/us/politics/democrats-impeachment-inquiry.html?smid=pc-thedaily" target="_blank">writes in a news analysis</a>.</li><li>Here’s <a href="https://www.nytimes.com/2019/09/24/us/politics/impeachment-trump-explained.html?smid=pc-thedaily" target="_blank">how the impeachment process works</a>.</li></ul>]]>
      </description>
      <itunes:title>An Impeachment Inquiry Begins</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Speaker Nancy Pelosi has begun a formal impeachment investigation of President Trump, saying he “must be held accountable.” We spoke to our colleague who was at the announcement and to one of the lawmakers who helped convince Ms. Pelosi that it was time. Guests: Nicholas Fandos, who covers Congress for The New York Times, and Representative Mikie Sherrill, Democrat of New Jersey. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Though the outcome is uncertain, the inquiry raises the possibility that Mr. Trump could become only the fourth president in American history to face impeachment.After months of caution from House Democrats, why is this happening now? “They believe the new accusations against Mr. Trump are simple and serious enough to be grasped,” our colleague Carl Hulse writes in a news analysis.Here’s how the impeachment process works.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Speaker Nancy Pelosi has begun a formal impeachment investigation of President Trump, saying he “must be held accountable.” We spoke to our colleague who was at the announcement and to one of the lawmakers who helped convince Ms. Pelosi that it was time. Guests: Nicholas Fandos, who covers Congress for The New York Times, and Representative Mikie Sherrill, Democrat of New Jersey. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Though the outcome is uncertain, the inquiry raises the possibility that Mr. Trump could become only <a href="https://www.nytimes.com/2019/09/24/us/politics/democrats-impeachment-trump.html?smid=pc-thedaily" target="_blank">the fourth president in American history to face impeachment</a>.</li><li>After months of caution from House Democrats, why is this happening now? “They believe the new accusations against Mr. Trump are simple and serious enough to be grasped,” our colleague Carl Hulse <a href="https://www.nytimes.com/2019/09/24/us/politics/democrats-impeachment-inquiry.html?smid=pc-thedaily" target="_blank">writes in a news analysis</a>.</li><li>Here’s <a href="https://www.nytimes.com/2019/09/24/us/politics/impeachment-trump-explained.html?smid=pc-thedaily" target="_blank">how the impeachment process works</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MUPyg8gtiVq0UTF2_wCET0Jm80dMRx0vehlc0Auq9wM</guid>
      <pubDate>Wed, 25 Sep 2019 09:53:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/aef3bd00-42e4-4d1c-947c-103fac0f662a.mp3" type="audio/mpeg" length="25507213"/>
    </item>
    <item>
      <title>A Conversation With a Border Patrol Agent</title>
      <description>
        <![CDATA[<p>President Trump vowed to crack down on undocumented immigration and empower the Border Patrol. Three years later, the agency is the target of outrage, protest and investigation into its mission and conduct, and many of the agents who have supported Mr. Trump say that morale is low. We spoke with one of them. Guest: Art Del Cueto, a Border Patrol agent in Arizona and vice president of the National Border Patrol Council. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Overwhelmed by desperate migrants and criticized for mistreating those in their care, many agents, whose work has long been viewed as a ticket to the middle class, <a href="https://www.nytimes.com/2019/09/15/us/border-patrol-culture.html" target="_blank">have grown frustrated and bitter</a>.</li></ul>]]>
      </description>
      <itunes:title>A Conversation With a Border Patrol Agent</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump vowed to crack down on undocumented immigration and empower the Border Patrol. Three years later, the agency is the target of outrage, protest and investigation into its mission and conduct, and many of the agents who have supported Mr. Trump say that morale is low. We spoke with one of them. Guest: Art Del Cueto, a Border Patrol agent in Arizona and vice president of the National Border Patrol Council. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Overwhelmed by desperate migrants and criticized for mistreating those in their care, many agents, whose work has long been viewed as a ticket to the middle class, have grown frustrated and bitter.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump vowed to crack down on undocumented immigration and empower the Border Patrol. Three years later, the agency is the target of outrage, protest and investigation into its mission and conduct, and many of the agents who have supported Mr. Trump say that morale is low. We spoke with one of them. Guest: Art Del Cueto, a Border Patrol agent in Arizona and vice president of the National Border Patrol Council. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Overwhelmed by desperate migrants and criticized for mistreating those in their care, many agents, whose work has long been viewed as a ticket to the middle class, <a href="https://www.nytimes.com/2019/09/15/us/border-patrol-culture.html" target="_blank">have grown frustrated and bitter</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/tHkX256bG0XBRYsrknFWBk9w0QNOlBOb1sbOJTgxHk8</guid>
      <pubDate>Tue, 24 Sep 2019 09:51:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b3a9ba9d-25eb-43cd-8c95-ac579e3a8dc0.mp3" type="audio/mpeg" length="26542497"/>
    </item>
    <item>
      <title>The President, Joe Biden and Ukraine</title>
      <description>
        <![CDATA[<p>Over the weekend, reports of a secret whistle-blower complaint against President Trump turned into allegations that the president had courted foreign interference from Ukraine to hurt a leading Democratic rival, former Vice President Joseph R. Biden Jr. Mr. Trump called the allegations a “witch hunt” and accused Mr. Biden of corruption.</p><p>Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump acknowledged that he <a href="https://www.nytimes.com/2019/09/22/us/politics/trump-impeachment-whistle-blower.html?smid=pc-thedaily" target="_blank">discussed Mr. Biden during a phone call</a> with Ukraine’s president, but he did not directly confirm<a href="https://www.nytimes.com/2019/09/20/us/politics/trump-whistle-blower-ukraine.html?smid=pc-thedaily" target="_blank"> news reports</a> that he had pressured the foreign leader for an investigation.</li><li>Here’s what we know about <a href="https://www.nytimes.com/2019/09/22/us/politics/biden-ukraine-trump.html?smid=pc-thedaily" target="_blank">the role of Mr. Biden and his son</a> Hunter in the controversy.</li></ul>]]>
      </description>
      <itunes:title>The President, Joe Biden and Ukraine</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Over the weekend, reports of a secret whistle-blower complaint against President Trump turned into allegations that the president had courted foreign interference from Ukraine to hurt a leading Democratic rival, former Vice President Joseph R. Biden Jr. Mr. Trump called the allegations a “witch hunt” and accused Mr. Biden of corruption.

Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: President Trump acknowledged that he discussed Mr. Biden during a phone call with Ukraine’s president, but he did not directly confirm news reports that he had pressured the foreign leader for an investigation.Here’s what we know about the role of Mr. Biden and his son Hunter in the controversy.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Over the weekend, reports of a secret whistle-blower complaint against President Trump turned into allegations that the president had courted foreign interference from Ukraine to hurt a leading Democratic rival, former Vice President Joseph R. Biden Jr. Mr. Trump called the allegations a “witch hunt” and accused Mr. Biden of corruption.</p><p>Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump acknowledged that he <a href="https://www.nytimes.com/2019/09/22/us/politics/trump-impeachment-whistle-blower.html?smid=pc-thedaily" target="_blank">discussed Mr. Biden during a phone call</a> with Ukraine’s president, but he did not directly confirm<a href="https://www.nytimes.com/2019/09/20/us/politics/trump-whistle-blower-ukraine.html?smid=pc-thedaily" target="_blank"> news reports</a> that he had pressured the foreign leader for an investigation.</li><li>Here’s what we know about <a href="https://www.nytimes.com/2019/09/22/us/politics/biden-ukraine-trump.html?smid=pc-thedaily" target="_blank">the role of Mr. Biden and his son</a> Hunter in the controversy.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kvOGjSIpP4lnCgfPKbJxwR-ik_JIlqJnUILhugMk9-Q</guid>
      <pubDate>Mon, 23 Sep 2019 09:52:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4b97d2b1-39f7-4f05-954c-350078c3dd45.mp3" type="audio/mpeg" length="19415040"/>
    </item>
    <item>
      <title>Anatomy of a Warren Rally</title>
      <description>
        <![CDATA[<p>With crowds that are said to number 15,000 to 20,000 people, Senator Elizabeth Warren’s campaign events frequently dwarf those of her Democratic rivals. This week, we experienced the growing phenomenon that is the Warren rally. Guest: Thomas Kaplan, a political reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Ms. Warren, running on a message of sweeping change, is solidifying her place in an exclusive club of <a href="https://www.nytimes.com/2019/09/16/us/politics/elizabeth-warren-nyc-rally-speech.html?smid=pc-thedaily" target="_blank">presidential candidates who have become crowd magnets</a>.</li><li>At her campaign events, Ms. Warren’s speech is only the first act. Act Two? <a href="https://www.nytimes.com/interactive/2019/07/22/us/politics/elizabeth-warren-selfies.html?smid=pc-thedaily" target="_blank">The selfie line</a>.</li><li>Back-to-back rallies by Ms. Warren and President Trump laid out <a href="https://www.nytimes.com/2019/09/17/us/politics/elizabeth-warren-trump-populism.html?smid=pc-thedaily" target="_blank">competing versions of populism</a> that could come to define the 2020 presidential campaign.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>Anatomy of a Warren Rally</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With crowds that are said to number 15,000 to 20,000 people, Senator Elizabeth Warren’s campaign events frequently dwarf those of her Democratic rivals. This week, we experienced the growing phenomenon that is the Warren rally. Guest: Thomas Kaplan, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Ms. Warren, running on a message of sweeping change, is solidifying her place in an exclusive club of presidential candidates who have become crowd magnets.At her campaign events, Ms. Warren’s speech is only the first act. Act Two? The selfie line.Back-to-back rallies by Ms. Warren and President Trump laid out competing versions of populism that could come to define the 2020 presidential campaign. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>With crowds that are said to number 15,000 to 20,000 people, Senator Elizabeth Warren’s campaign events frequently dwarf those of her Democratic rivals. This week, we experienced the growing phenomenon that is the Warren rally. Guest: Thomas Kaplan, a political reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Ms. Warren, running on a message of sweeping change, is solidifying her place in an exclusive club of <a href="https://www.nytimes.com/2019/09/16/us/politics/elizabeth-warren-nyc-rally-speech.html?smid=pc-thedaily" target="_blank">presidential candidates who have become crowd magnets</a>.</li><li>At her campaign events, Ms. Warren’s speech is only the first act. Act Two? <a href="https://www.nytimes.com/interactive/2019/07/22/us/politics/elizabeth-warren-selfies.html?smid=pc-thedaily" target="_blank">The selfie line</a>.</li><li>Back-to-back rallies by Ms. Warren and President Trump laid out <a href="https://www.nytimes.com/2019/09/17/us/politics/elizabeth-warren-trump-populism.html?smid=pc-thedaily" target="_blank">competing versions of populism</a> that could come to define the 2020 presidential campaign.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LKrNSd2k740Adfeu4Hun2sIziJLSO48qeyDTzigpH5U</guid>
      <pubDate>Fri, 20 Sep 2019 09:52:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/681c577b-a320-4c72-a693-f73c19d51411.mp3" type="audio/mpeg" length="29325270"/>
    </item>
    <item>
      <title>Keeping Harvey Weinstein’s Secrets, Part 2: Gloria Allred</title>
      <description>
        <![CDATA[<p>In Part 1 of this series, our colleagues Jodi Kantor and Megan Twohey reported on Lisa Bloom, a victims’ rights attorney who used her experience representing women to defend Harvey Weinstein. In Part 2, we look at the role of Ms. Bloom’s mother, the women’s rights lawyer Gloria Allred.&nbsp;</p><p>Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>“She Said” reveals <a href="https://www.nytimes.com/2019/09/08/books/harvey-weinstein-book-kantor-twohey.html?smid=pc-thedaily" target="_blank">new information about the labyrinth of secret settlements and nondisclosure agreements</a> that allowed Mr. Weinstein and other powerful men to conceal their behavior.</li><li>Ms. Allred’s law firm helped <a href="https://www.nytimes.com/2017/10/30/us/harvey-weinstein-sexual-assault-allegations.html?smid=pc-thedaily" target="_blank">negotiate a confidential settlement in 2004 </a>between Mr. Weinstein and Ashley Matthau, a dancer who accused him of sexual assault.</li><li>Ms. Allred represents two women who are expected to testify against Mr. Weinstein at his trial, <a href="https://www.nytimes.com/2019/08/26/nyregion/harvey-weinstein-annabella-sciorra-trial-rape.html?smid=pc-thedaily" target="_blank">scheduled to begin in January</a>.</li></ul>]]>
      </description>
      <itunes:title>Keeping Harvey Weinstein’s Secrets, Part 2: Gloria Allred</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In Part 1 of this series, our colleagues Jodi Kantor and Megan Twohey reported on Lisa Bloom, a victims’ rights attorney who used her experience representing women to defend Harvey Weinstein. In Part 2, we look at the role of Ms. Bloom’s mother, the women’s rights lawyer Gloria Allred. 

Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: “She Said” reveals new information about the labyrinth of secret settlements and nondisclosure agreements that allowed Mr. Weinstein and other powerful men to conceal their behavior.Ms. Allred’s law firm helped negotiate a confidential settlement in 2004 between Mr. Weinstein and Ashley Matthau, a dancer who accused him of sexual assault.Ms. Allred represents two women who are expected to testify against Mr. Weinstein at his trial, scheduled to begin in January.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In Part 1 of this series, our colleagues Jodi Kantor and Megan Twohey reported on Lisa Bloom, a victims’ rights attorney who used her experience representing women to defend Harvey Weinstein. In Part 2, we look at the role of Ms. Bloom’s mother, the women’s rights lawyer Gloria Allred.&nbsp;</p><p>Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>“She Said” reveals <a href="https://www.nytimes.com/2019/09/08/books/harvey-weinstein-book-kantor-twohey.html?smid=pc-thedaily" target="_blank">new information about the labyrinth of secret settlements and nondisclosure agreements</a> that allowed Mr. Weinstein and other powerful men to conceal their behavior.</li><li>Ms. Allred’s law firm helped <a href="https://www.nytimes.com/2017/10/30/us/harvey-weinstein-sexual-assault-allegations.html?smid=pc-thedaily" target="_blank">negotiate a confidential settlement in 2004 </a>between Mr. Weinstein and Ashley Matthau, a dancer who accused him of sexual assault.</li><li>Ms. Allred represents two women who are expected to testify against Mr. Weinstein at his trial, <a href="https://www.nytimes.com/2019/08/26/nyregion/harvey-weinstein-annabella-sciorra-trial-rape.html?smid=pc-thedaily" target="_blank">scheduled to begin in January</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aBepRdSa-w_wfljV8UVEn8Z0qdcS-oWkixqL7Caq3nE</guid>
      <pubDate>Thu, 19 Sep 2019 09:52:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/63f511e7-1c74-4c55-a26e-42e8656a2976.mp3" type="audio/mpeg" length="26852205"/>
    </item>
    <item>
      <title>Keeping Harvey Weinstein’s Secrets, Part 1: Lisa Bloom</title>
      <description>
        <![CDATA[<p>Last week, our colleagues Jodi Kantor and Megan Twohey published a book documenting their investigation of Harvey Weinstein. In writing it, they discovered information about two feminist icons — Gloria Allred and her daughter, Lisa Bloom — that raises questions about their legacies and the legal system in which they’ve worked. Today, we look at the role of Ms. Bloom, a lawyer who represented Mr. Weinstein.&nbsp;</p><p>Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>New reporting in “She Said” shows how some figures who have presented themselves as allies of victims <a href="https://www.nytimes.com/2019/09/08/books/harvey-weinstein-book-kantor-twohey.html?smid=pc-thedaily" target="_blank">have helped maintain their silence</a> — and, in some cases, profited from it.</li><li>Read more about <a href="https://www.nytimes.com/2017/10/07/business/lisa-bloom-weinstein-attorney.html?smid=pc-thedaily" target="_blank">Ms. Bloom’s involvement in the Weinstein case</a>.</li></ul>]]>
      </description>
      <itunes:title>Keeping Harvey Weinstein’s Secrets, Part 1: Lisa Bloom</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Last week, our colleagues Jodi Kantor and Megan Twohey published a book documenting their investigation of Harvey Weinstein. In writing it, they discovered information about two feminist icons — Gloria Allred and her daughter, Lisa Bloom — that raises questions about their legacies and the legal system in which they’ve worked. Today, we look at the role of Ms. Bloom, a lawyer who represented Mr. Weinstein. 

Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: New reporting in “She Said” shows how some figures who have presented themselves as allies of victims have helped maintain their silence — and, in some cases, profited from it.Read more about Ms. Bloom’s involvement in the Weinstein case.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Last week, our colleagues Jodi Kantor and Megan Twohey published a book documenting their investigation of Harvey Weinstein. In writing it, they discovered information about two feminist icons — Gloria Allred and her daughter, Lisa Bloom — that raises questions about their legacies and the legal system in which they’ve worked. Today, we look at the role of Ms. Bloom, a lawyer who represented Mr. Weinstein.&nbsp;</p><p>Guests: Jodi Kantor and Megan Twohey, investigative reporters for The New York Times and the authors of “<a href="https://www.nytimes.com/2019/09/08/books/review/she-said-jodi-kantor-megan-twohey.html?smid=pc-thedaily" target="_blank">She Said: Breaking the Sexual Harassment Story That Helped Ignite a Movement</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>New reporting in “She Said” shows how some figures who have presented themselves as allies of victims <a href="https://www.nytimes.com/2019/09/08/books/harvey-weinstein-book-kantor-twohey.html?smid=pc-thedaily" target="_blank">have helped maintain their silence</a> — and, in some cases, profited from it.</li><li>Read more about <a href="https://www.nytimes.com/2017/10/07/business/lisa-bloom-weinstein-attorney.html?smid=pc-thedaily" target="_blank">Ms. Bloom’s involvement in the Weinstein case</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6mSIXPV0FGItv-OfvQs_lIFoAlwya2DKCyWPNC6jMzc</guid>
      <pubDate>Wed, 18 Sep 2019 09:55:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e376bfec-c41b-4cfd-9e3f-8094704d333d.mp3" type="audio/mpeg" length="24665861"/>
    </item>
    <item>
      <title>Who Really Attacked Saudi Arabia?</title>
      <description>
        <![CDATA[<p>President Trump is saying that Iran appears to be responsible for the weekend attacks on oil facilities in Saudi Arabia. We look at where things are likely to go from here. Guest: David E. Sanger, a national security correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump said that the United States was prepared for war if necessary, but that <a href="https://www.nytimes.com/2019/09/16/world/middleeast/saudi-oil.html?smid=pc-thedaily" target="_blank">he would “like to avoid” a military conflict with Iran</a>.</li><li>Mr. Trump’s response to the attacks offered insight into <a href="https://www.nytimes.com/2019/09/16/us/politics/trump-saudi-tweet.html?smid=pc-thedaily" target="_blank">his deference to the Saudi royal family</a>.</li></ul>]]>
      </description>
      <itunes:title>Who Really Attacked Saudi Arabia?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump is saying that Iran appears to be responsible for the weekend attacks on oil facilities in Saudi Arabia. We look at where things are likely to go from here. Guest: David E. Sanger, a national security correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: President Trump said that the United States was prepared for war if necessary, but that he would “like to avoid” a military conflict with Iran.Mr. Trump’s response to the attacks offered insight into his deference to the Saudi royal family.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump is saying that Iran appears to be responsible for the weekend attacks on oil facilities in Saudi Arabia. We look at where things are likely to go from here. Guest: David E. Sanger, a national security correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump said that the United States was prepared for war if necessary, but that <a href="https://www.nytimes.com/2019/09/16/world/middleeast/saudi-oil.html?smid=pc-thedaily" target="_blank">he would “like to avoid” a military conflict with Iran</a>.</li><li>Mr. Trump’s response to the attacks offered insight into <a href="https://www.nytimes.com/2019/09/16/us/politics/trump-saudi-tweet.html?smid=pc-thedaily" target="_blank">his deference to the Saudi royal family</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/riqRyOo8EiR05dkm7jgOx2lBx5Fb1fA5UnBfIa1Qd9o</guid>
      <pubDate>Tue, 17 Sep 2019 09:54:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1873393e-f42d-4445-b848-b479254cc041.mp3" type="audio/mpeg" length="23598811"/>
    </item>
    <item>
      <title>The C.I.A. Spy Inside the Kremlin</title>
      <description>
        <![CDATA[<p>Last week, CNN broke the story that the United States had secretly extracted a top spy from Russia in 2017. What does that mean now for American intelligence operations? Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Moscow informant was <a href="https://www.nytimes.com/2019/09/09/us/politics/cia-informant-russia.html?smid=pc-thedaily" target="_blank">instrumental to the C.I.A.’s conclusion</a> that President Vladimir V. Putin had ordered and orchestrated Russia’s election interference campaign.</li></ul>]]>
      </description>
      <itunes:title>The C.I.A. Spy Inside the Kremlin</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Last week, CNN broke the story that the United States had secretly extracted a top spy from Russia in 2017. What does that mean now for American intelligence operations? Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The Moscow informant was instrumental to the C.I.A.’s conclusion that President Vladimir V. Putin had ordered and orchestrated Russia’s election interference campaign.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Last week, CNN broke the story that the United States had secretly extracted a top spy from Russia in 2017. What does that mean now for American intelligence operations? Guest: Julian E. Barnes, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Moscow informant was <a href="https://www.nytimes.com/2019/09/09/us/politics/cia-informant-russia.html?smid=pc-thedaily" target="_blank">instrumental to the C.I.A.’s conclusion</a> that President Vladimir V. Putin had ordered and orchestrated Russia’s election interference campaign.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jHITxnZiobR6lRpA40nkvkmM98LDkkUhMQkv_YScIZU</guid>
      <pubDate>Mon, 16 Sep 2019 09:52:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/091b8536-d5ac-4380-9eb4-d2ac45459095.mp3" type="audio/mpeg" length="23796924"/>
    </item>
    <item>
      <title>‘1619,’ Episode 4: How the Bad Blood Started</title>
      <description>
        <![CDATA[<p>Today on “The Daily,” we present Episode 4 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/1619podcast" target="_blank">nytimes.com/1619podcast</a>.</p><p>Black Americans were denied access to doctors and hospitals for decades. From the shadows of this exclusion, they pushed to create the nation’s first federal health care programs. Guests: Jeneen Interlandi, a member of The New York Times’s editorial board and a writer for The Times Magazine, and Yaa Gyasi, the author of “Homegoing.”</p><p>Background reading:</p><ul><li>“One hundred and fifty years after the freed people of the South first petitioned the government for basic medical care, the United States remains the only high-income country in the world where such care is not guaranteed to every citizen,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/universal-health-care-racism.html" target="_blank">Jeneen Interlandi writes</a>.</li><li>The Times Magazine asked 16 writers to bring pivotal moments in African-American history to life. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/african-american-poets.html" target="_blank">Read Yaa Gyasi’s story “Bad Blood” here</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </description>
      <itunes:title>‘1619,’ Episode 4: How the Bad Blood Started</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today on “The Daily,” we present Episode 4 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at nytimes.com/1619podcast.

Black Americans were denied access to doctors and hospitals for decades. From the shadows of this exclusion, they pushed to create the nation’s first federal health care programs. Guests: Jeneen Interlandi, a member of The New York Times’s editorial board and a writer for The Times Magazine, and Yaa Gyasi, the author of “Homegoing.”

Background reading:“One hundred and fifty years after the freed people of the South first petitioned the government for basic medical care, the United States remains the only high-income country in the world where such care is not guaranteed to every citizen,” Jeneen Interlandi writes.The Times Magazine asked 16 writers to bring pivotal moments in African-American history to life. Read Yaa Gyasi’s story “Bad Blood” here.The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. Read more from the project here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today on “The Daily,” we present Episode 4 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/1619podcast" target="_blank">nytimes.com/1619podcast</a>.</p><p>Black Americans were denied access to doctors and hospitals for decades. From the shadows of this exclusion, they pushed to create the nation’s first federal health care programs. Guests: Jeneen Interlandi, a member of The New York Times’s editorial board and a writer for The Times Magazine, and Yaa Gyasi, the author of “Homegoing.”</p><p>Background reading:</p><ul><li>“One hundred and fifty years after the freed people of the South first petitioned the government for basic medical care, the United States remains the only high-income country in the world where such care is not guaranteed to every citizen,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/universal-health-care-racism.html" target="_blank">Jeneen Interlandi writes</a>.</li><li>The Times Magazine asked 16 writers to bring pivotal moments in African-American history to life. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/african-american-poets.html" target="_blank">Read Yaa Gyasi’s story “Bad Blood” here</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1XOe29jOREVltC1pRMQMM__D13H_ApasMyPjXOLgtOQ</guid>
      <pubDate>Sat, 14 Sep 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:40:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/70b57b44-8279-436c-90be-b92dd74bb9e2.mp3" type="audio/mpeg" length="38596022"/>
    </item>
    <item>
      <title>The Third Democratic Debate</title>
      <description>
        <![CDATA[<p>Just 10 candidates qualified for the stage in Houston, but that didn’t change some recurring themes: Joe Biden was again the target of fierce scrutiny, and health care was a central point of contention. But what else did we learn?</p><p>Guest: <a href="https://www.nytimes.com/by/alexander-burns" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. Background reading:</p><ul><li>Attacks on Mr. Biden highlighted the divide over the Obama legacy, with the former vice president <a href="https://www.nytimes.com/2019/09/12/us/politics/democratic-presidential-debate-recap.html" target="_blank">repeatedly invoking his old boss’s name</a>.</li><li>Many Democrats hoped that defeating an unpopular, rampaging president would be relatively simple. But party officials are wary of <a href="https://www.nytimes.com/2019/09/12/us/politics/democratic-debate-candidates.html?searchResultPosition=1?smid=pc-thedaily" target="_blank">some potential vulnerabilities that this debate re-emphasized</a>.</li><li><a href="https://www.nytimes.com/2019/09/12/us/politics/september-democratic-debate-live.html" target="_blank">Here are six takeaways</a> from the contest.</li></ul>]]>
      </description>
      <itunes:title>The Third Democratic Debate</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Just 10 candidates qualified for the stage in Houston, but that didn’t change some recurring themes: Joe Biden was again the target of fierce scrutiny, and health care was a central point of contention. But what else did we learn?

Guest: Alexander Burns, who covers national politics for The New York Times.

For more information on today’s episode, visit nytimes.com/thedaily. Background reading:Attacks on Mr. Biden highlighted the divide over the Obama legacy, with the former vice president repeatedly invoking his old boss’s name.Many Democrats hoped that defeating an unpopular, rampaging president would be relatively simple. But party officials are wary of some potential vulnerabilities that this debate re-emphasized.Here are six takeaways from the contest.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Just 10 candidates qualified for the stage in Houston, but that didn’t change some recurring themes: Joe Biden was again the target of fierce scrutiny, and health care was a central point of contention. But what else did we learn?</p><p>Guest: <a href="https://www.nytimes.com/by/alexander-burns" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. Background reading:</p><ul><li>Attacks on Mr. Biden highlighted the divide over the Obama legacy, with the former vice president <a href="https://www.nytimes.com/2019/09/12/us/politics/democratic-presidential-debate-recap.html" target="_blank">repeatedly invoking his old boss’s name</a>.</li><li>Many Democrats hoped that defeating an unpopular, rampaging president would be relatively simple. But party officials are wary of <a href="https://www.nytimes.com/2019/09/12/us/politics/democratic-debate-candidates.html?searchResultPosition=1?smid=pc-thedaily" target="_blank">some potential vulnerabilities that this debate re-emphasized</a>.</li><li><a href="https://www.nytimes.com/2019/09/12/us/politics/september-democratic-debate-live.html" target="_blank">Here are six takeaways</a> from the contest.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/tTK7De1ctTzFgoygvy0yiObYbeP3LNaIaBWexcNmIHM</guid>
      <pubDate>Fri, 13 Sep 2019 10:10:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/efcdb5ba-8fb2-4834-9498-e7b95b239ddc.mp3" type="audio/mpeg" length="25594566"/>
    </item>
    <item>
      <title>An Interview With Andrew Yang, the Outsider at Tonight’s Democratic Debate</title>
      <description>
        <![CDATA[<p>Andrew Yang, a former tech executive, remains one of the least known candidates in a Democratic presidential field that includes senators, mayors, a governor and a former vice president. But by focusing on the potential impact of automation on jobs, he has attracted surprisingly loyal and passionate support. One of our technology writers has been following his campaign since before it officially began. Guests: Andrew Yang, a candidate for the Democratic presidential nomination; and <a href="https://www.nytimes.com/by/kevin-roose" target="_blank">Kevin Roose</a>, who writes about technology for The New York Times.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Armed with numbers, history lessons and the occasional self-deprecating joke, Mr. Yang has been preaching a grim gospel about automation.<a href="https://www.nytimes.com/2019/09/06/us/politics/andrew-yang-2020.html?smid=pc-thedaily" target="_blank"> And voters are responding</a>.</li><li>The top 10 Democrats will share one stage for the first time starting at 8 p.m. Eastern.<a href="https://www.nytimes.com/interactive/2019/09/11/us/politics/third-democratic-debate-abc.html?smid=pc-thedaily" target="_blank"> Here’s what to watch for</a>.</li></ul>]]>
      </description>
      <itunes:title>An Interview With Andrew Yang, the Outsider at Tonight’s Democratic Debate</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Andrew Yang, a former tech executive, remains one of the least known candidates in a Democratic presidential field that includes senators, mayors, a governor and a former vice president. But by focusing on the potential impact of automation on jobs, he has attracted surprisingly loyal and passionate support. One of our technology writers has been following his campaign since before it officially began. Guests: Andrew Yang, a candidate for the Democratic presidential nomination; and Kevin Roose, who writes about technology for The New York Times.

For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Armed with numbers, history lessons and the occasional self-deprecating joke, Mr. Yang has been preaching a grim gospel about automation. And voters are responding.The top 10 Democrats will share one stage for the first time starting at 8 p.m. Eastern. Here’s what to watch for.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Andrew Yang, a former tech executive, remains one of the least known candidates in a Democratic presidential field that includes senators, mayors, a governor and a former vice president. But by focusing on the potential impact of automation on jobs, he has attracted surprisingly loyal and passionate support. One of our technology writers has been following his campaign since before it officially began. Guests: Andrew Yang, a candidate for the Democratic presidential nomination; and <a href="https://www.nytimes.com/by/kevin-roose" target="_blank">Kevin Roose</a>, who writes about technology for The New York Times.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Armed with numbers, history lessons and the occasional self-deprecating joke, Mr. Yang has been preaching a grim gospel about automation.<a href="https://www.nytimes.com/2019/09/06/us/politics/andrew-yang-2020.html?smid=pc-thedaily" target="_blank"> And voters are responding</a>.</li><li>The top 10 Democrats will share one stage for the first time starting at 8 p.m. Eastern.<a href="https://www.nytimes.com/interactive/2019/09/11/us/politics/third-democratic-debate-abc.html?smid=pc-thedaily" target="_blank"> Here’s what to watch for</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZGaO9TW_qpXWR2NJc25LPk1g0IyPKZ0rnR4gqv7AKS8</guid>
      <pubDate>Thu, 12 Sep 2019 09:53:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/76918f8d-6fc1-4ef3-bbcf-d835a84777d5.mp3" type="audio/mpeg" length="30126080"/>
    </item>
    <item>
      <title>John Bolton Is Fired. Or Did He Resign?</title>
      <description>
        <![CDATA[<p>John Bolton, the national security adviser, was ousted after fundamental disputes with President Trump over how to handle foreign policy challenges like Afghanistan, Iran and North Korea. But the two men disagreed about how they parted ways. Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>President Trump said he fired John Bolton; Mr. Bolton insisted that he had resigned. Regardless, they had<a href="https://www.nytimes.com/2019/09/10/us/politics/john-bolton-national-security-adviser-trump.html?smid=pc-thedaily" target="_blank"> a fundamental disagreement over foreign policy</a>, most recently Afghanistan.</li><li>Mr. Trump is now looking for the fourth national security adviser of his presidency.<a href="https://www.nytimes.com/2019/09/10/us/john-bolton-replacement.html?smid=pc-thedaily" target="_blank"> Here is a short list of possibilities</a>.</li></ul>]]>
      </description>
      <itunes:title>John Bolton Is Fired. Or Did He Resign?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>John Bolton, the national security adviser, was ousted after fundamental disputes with President Trump over how to handle foreign policy challenges like Afghanistan, Iran and North Korea. But the two men disagreed about how they parted ways. Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:President Trump said he fired John Bolton; Mr. Bolton insisted that he had resigned. Regardless, they had a fundamental disagreement over foreign policy, most recently Afghanistan.Mr. Trump is now looking for the fourth national security adviser of his presidency. Here is a short list of possibilities.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>John Bolton, the national security adviser, was ousted after fundamental disputes with President Trump over how to handle foreign policy challenges like Afghanistan, Iran and North Korea. But the two men disagreed about how they parted ways. Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>President Trump said he fired John Bolton; Mr. Bolton insisted that he had resigned. Regardless, they had<a href="https://www.nytimes.com/2019/09/10/us/politics/john-bolton-national-security-adviser-trump.html?smid=pc-thedaily" target="_blank"> a fundamental disagreement over foreign policy</a>, most recently Afghanistan.</li><li>Mr. Trump is now looking for the fourth national security adviser of his presidency.<a href="https://www.nytimes.com/2019/09/10/us/john-bolton-replacement.html?smid=pc-thedaily" target="_blank"> Here is a short list of possibilities</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mJkECxER7Ted7UXztTFlri6lg_j91vpBV_YSWBU94NA</guid>
      <pubDate>Wed, 11 Sep 2019 09:51:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fd06b15f-4d05-446f-9da1-e33d8504f6d4.mp3" type="audio/mpeg" length="19166354"/>
    </item>
    <item>
      <title>A Historic Peace Plan Collapses</title>
      <description>
        <![CDATA[<p>President Trump abruptly called off negotiations between the United States and the Taliban that could have ended the war in Afghanistan and canceled a secret meeting at Camp David. We look at how a historic peace deal went off the rails. Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>The United States and the Taliban, after nine rounds of painstaking negotiations in Doha, Qatar, appeared to have ironed out most of the issues between them. But President Trump<a href="https://www.nytimes.com/2019/09/08/world/asia/afghanistan-trump-camp-david-taliban.html?smid=pc-thedaily" target="_blank"> canceled a secret meeting at Camp David and called off the talks</a>.</li><li><a href="https://www.nytimes.com/2019/09/09/world/asia/taliban-talks-afghanistan-trump.html?smid=pc-thedaily" target="_blank">What jarred many Afghans</a> was how a single attack and the death of one American, cited by Mr. Trump, could upend 10 months of negotiations.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>A Historic Peace Plan Collapses</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump abruptly called off negotiations between the United States and the Taliban that could have ended the war in Afghanistan and canceled a secret meeting at Camp David. We look at how a historic peace deal went off the rails. Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The United States and the Taliban, after nine rounds of painstaking negotiations in Doha, Qatar, appeared to have ironed out most of the issues between them. But President Trump canceled a secret meeting at Camp David and called off the talks.What jarred many Afghans was how a single attack and the death of one American, cited by Mr. Trump, could upend 10 months of negotiations. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump abruptly called off negotiations between the United States and the Taliban that could have ended the war in Afghanistan and canceled a secret meeting at Camp David. We look at how a historic peace deal went off the rails. Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>The United States and the Taliban, after nine rounds of painstaking negotiations in Doha, Qatar, appeared to have ironed out most of the issues between them. But President Trump<a href="https://www.nytimes.com/2019/09/08/world/asia/afghanistan-trump-camp-david-taliban.html?smid=pc-thedaily" target="_blank"> canceled a secret meeting at Camp David and called off the talks</a>.</li><li><a href="https://www.nytimes.com/2019/09/09/world/asia/taliban-talks-afghanistan-trump.html?smid=pc-thedaily" target="_blank">What jarred many Afghans</a> was how a single attack and the death of one American, cited by Mr. Trump, could upend 10 months of negotiations.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vPVr8xiIYSv9EJPNnFNv-3tWDwWlUnnLveU1J-htNMk</guid>
      <pubDate>Tue, 10 Sep 2019 09:53:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/739b3b88-1a8b-4398-b330-6ba6834a9d11.mp3" type="audio/mpeg" length="21838367"/>
    </item>
    <item>
      <title>Parliament Strikes Back in Britain</title>
      <description>
        <![CDATA[<p>In a battle over what kind of democracy would prevail in Britain, Prime Minister Boris Johnson seemed to have gained the upper hand by cutting Parliament out of Brexit — until last week. Guest: Mark Landler, the London bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>In Washington, scarcely a handful of Republicans have stood up to President Trump. In comparison, Prime Minister Boris Johnson <a href="https://www.nytimes.com/2019/09/08/us/politics/boris-johnson-trump.html?searchResultPosition=1?smid=pc-thedaily" target="_blank">has found lawmakers in his Conservative Party to be much more rebellious</a>.</li><li>Mr. Johnson has received messages of support from President Trump, and there are some obvious parallels in the rise of the two leaders. But <a href="https://www.nytimes.com/2019/09/05/world/europe/boris-johnson-pence-meeting.html?searchResultPosition=2?smid=pc-thedaily" target="_blank">the “bromance” between Mr. Johnson and Mr. Trump</a> is more complex than it might seem.</li><li>Mr. Johnson’s chief aide, Dominic Cummings, <a href="https://www.nytimes.com/2019/09/08/world/europe/dominic-cummings-brexit-boris-johnson.html?searchResultPosition=2?smid=pc-thedaily" target="_blank">who appeared to revel in the feud with Parliament</a>, has become a lightning rod for criticism of the government’s strategy.</li></ul>]]>
      </description>
      <itunes:title>Parliament Strikes Back in Britain</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a battle over what kind of democracy would prevail in Britain, Prime Minister Boris Johnson seemed to have gained the upper hand by cutting Parliament out of Brexit — until last week. Guest: Mark Landler, the London bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: In Washington, scarcely a handful of Republicans have stood up to President Trump. In comparison, Prime Minister Boris Johnson has found lawmakers in his Conservative Party to be much more rebellious.Mr. Johnson has received messages of support from President Trump, and there are some obvious parallels in the rise of the two leaders. But the “bromance” between Mr. Johnson and Mr. Trump is more complex than it might seem.Mr. Johnson’s chief aide, Dominic Cummings, who appeared to revel in the feud with Parliament, has become a lightning rod for criticism of the government’s strategy.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a battle over what kind of democracy would prevail in Britain, Prime Minister Boris Johnson seemed to have gained the upper hand by cutting Parliament out of Brexit — until last week. Guest: Mark Landler, the London bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>In Washington, scarcely a handful of Republicans have stood up to President Trump. In comparison, Prime Minister Boris Johnson <a href="https://www.nytimes.com/2019/09/08/us/politics/boris-johnson-trump.html?searchResultPosition=1?smid=pc-thedaily" target="_blank">has found lawmakers in his Conservative Party to be much more rebellious</a>.</li><li>Mr. Johnson has received messages of support from President Trump, and there are some obvious parallels in the rise of the two leaders. But <a href="https://www.nytimes.com/2019/09/05/world/europe/boris-johnson-pence-meeting.html?searchResultPosition=2?smid=pc-thedaily" target="_blank">the “bromance” between Mr. Johnson and Mr. Trump</a> is more complex than it might seem.</li><li>Mr. Johnson’s chief aide, Dominic Cummings, <a href="https://www.nytimes.com/2019/09/08/world/europe/dominic-cummings-brexit-boris-johnson.html?searchResultPosition=2?smid=pc-thedaily" target="_blank">who appeared to revel in the feud with Parliament</a>, has become a lightning rod for criticism of the government’s strategy.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/f_xbcilO5sDCc15dv5qhglgNFswsQ28_ZvPzhxrJ5S0</guid>
      <pubDate>Mon, 09 Sep 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/614a4940-861b-4996-83b2-173132c41462.mp3" type="audio/mpeg" length="24879020"/>
    </item>
    <item>
      <title>‘1619,’ Episode 3: The Birth of American Music</title>
      <description>
        <![CDATA[<p>Today on “The Daily,” we present Episode 3 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/2019/09/06/podcasts/1619-black-american-music-appropriation.html" target="_blank">nytimes.com/1619podcast</a>.</p><p>Black music, forged in captivity, became the sound of complete artistic freedom. It also became the sound of America. Guest: Wesley Morris, a critic-at-large for The New York Times.</p><p><em>This episode contains explicit language.</em></p><p>Background reading:&nbsp;</p><ul><li>“The proliferation of black music across the planet — the proliferation, in so many senses, of being black — constitutes a magnificent joke on American racism,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/music-black-culture-appropriation.html" target="_blank">Wesley Morris writes</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </description>
      <itunes:title>‘1619,’ Episode 3: The Birth of American Music</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today on “The Daily,” we present Episode 3 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at nytimes.com/1619podcast.

Black music, forged in captivity, became the sound of complete artistic freedom. It also became the sound of America. Guest: Wesley Morris, a critic-at-large for The New York Times.

This episode contains explicit language.

Background reading: “The proliferation of black music across the planet — the proliferation, in so many senses, of being black — constitutes a magnificent joke on American racism,” Wesley Morris writes.The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. Read more from the project here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today on “The Daily,” we present Episode 3 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at <a href="https://www.nytimes.com/2019/09/06/podcasts/1619-black-american-music-appropriation.html" target="_blank">nytimes.com/1619podcast</a>.</p><p>Black music, forged in captivity, became the sound of complete artistic freedom. It also became the sound of America. Guest: Wesley Morris, a critic-at-large for The New York Times.</p><p><em>This episode contains explicit language.</em></p><p>Background reading:&nbsp;</p><ul><li>“The proliferation of black music across the planet — the proliferation, in so many senses, of being black — constitutes a magnificent joke on American racism,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/music-black-culture-appropriation.html" target="_blank">Wesley Morris writes</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZSOeQO32-TEFIB8N2pamOhZ4DmJ8G9HcxpIVbstKlII</guid>
      <pubDate>Sat, 07 Sep 2019 10:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/18c55289-b1fb-49fb-8903-1d0c2328dd49.mp3" type="audio/mpeg" length="34135144"/>
    </item>
    <item>
      <title>The Secret Push to Strike Iran</title>
      <description>
        <![CDATA[<p>For almost two decades, the United States and Israel have tried to stop Iran from developing nuclear weapons. Israeli leaders — including the current prime minister, Benjamin Netanyahu — have pushed for a military strike on Iran, a prospect that American presidents have long opposed. But a Times investigation reveals a secret history that shows how close the three countries came to war. Guest: Mark Mazzetti, a Washington investigative correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Interviews with dozens of current and former American, Israeli and European officials over several months <a href="https://www.nytimes.com/2019/09/04/magazine/iran-strike-israel-america.html?smid=pc-thedaily" target="_blank">reveal the startling details of a narrowly averted war</a> and raise questions about how President Trump will respond.</li><li>Moving further away from the 2015 nuclear agreement, Iran said on&nbsp; Thursday that it had <a href="https://www.nytimes.com/2019/09/05/world/middleeast/iran-nuclear-deal-sanctions.html?smid=pc-thedaily" target="_blank">stopped honoring the deal’s limits on research and development</a>.</li></ul><p><br></p>]]>
      </description>
      <itunes:title>The Secret Push to Strike Iran</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For almost two decades, the United States and Israel have tried to stop Iran from developing nuclear weapons. Israeli leaders — including the current prime minister, Benjamin Netanyahu — have pushed for a military strike on Iran, a prospect that American presidents have long opposed. But a Times investigation reveals a secret history that shows how close the three countries came to war. Guest: Mark Mazzetti, a Washington investigative correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Interviews with dozens of current and former American, Israeli and European officials over several months reveal the startling details of a narrowly averted war and raise questions about how President Trump will respond.Moving further away from the 2015 nuclear agreement, Iran said on  Thursday that it had stopped honoring the deal’s limits on research and development.
</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For almost two decades, the United States and Israel have tried to stop Iran from developing nuclear weapons. Israeli leaders — including the current prime minister, Benjamin Netanyahu — have pushed for a military strike on Iran, a prospect that American presidents have long opposed. But a Times investigation reveals a secret history that shows how close the three countries came to war. Guest: Mark Mazzetti, a Washington investigative correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Interviews with dozens of current and former American, Israeli and European officials over several months <a href="https://www.nytimes.com/2019/09/04/magazine/iran-strike-israel-america.html?smid=pc-thedaily" target="_blank">reveal the startling details of a narrowly averted war</a> and raise questions about how President Trump will respond.</li><li>Moving further away from the 2015 nuclear agreement, Iran said on&nbsp; Thursday that it had <a href="https://www.nytimes.com/2019/09/05/world/middleeast/iran-nuclear-deal-sanctions.html?smid=pc-thedaily" target="_blank">stopped honoring the deal’s limits on research and development</a>.</li></ul><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/En1258zh4jJqbkE-QvlZaae2EN_N_p2abg2YY-PwJ6Q</guid>
      <pubDate>Fri, 06 Sep 2019 09:53:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1e96a192-5767-41c3-ae5e-87fdbda695c5.mp3" type="audio/mpeg" length="26614386"/>
    </item>
    <item>
      <title>Walmart Enters the Gun Control Debate</title>
      <description>
        <![CDATA[<p>A month after a gunman killed 22 people at a Walmart store in El Paso, the nation’s largest retailer, said that it would stop selling ammunition used for handguns and military-style weapons and call on Congress to consider a new ban on assault rifles. We look at what Walmart’s move means, and how corporate America could play a role in curbing the epidemic of gun violence. Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/2019/09/04/podcasts/the-daily/2020-election-democrats.html?rref=vanity" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Walmart, whose reach has reshaped communities nationwide, largely avoids publicly wading into politics. That made<a href="https://www.nytimes.com/2019/09/03/business/walmart-guns-ammunition-sales.html?smid=pc-thedaily" target="_blank"> its decision to limit ammunition sales</a> even more notable.</li><li>The move by Doug McMillon, Walmart’s chief executive, “to engage in a meaningful conversation about responsible gun sales in America could give license to other business leaders to enter the conversation,”<a href="https://www.nytimes.com/2019/09/03/business/walmart-ceo-guns.html?smid=pc-thedaily" target="_blank"> Andrew Ross Sorkin writes</a>.</li></ul><p><br></p><p><br></p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/2019/09/04/podcasts/the-daily/2020-election-democrats.html?rref=vanity" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Walmart Enters the Gun Control Debate</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A month after a gunman killed 22 people at a Walmart store in El Paso, the nation’s largest retailer, said that it would stop selling ammunition used for handguns and military-style weapons and call on Congress to consider a new ban on assault rifles. We look at what Walmart’s move means, and how corporate America could play a role in curbing the epidemic of gun violence. Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Walmart, whose reach has reshaped communities nationwide, largely avoids publicly wading into politics. That made its decision to limit ammunition sales even more notable.The move by Doug McMillon, Walmart’s chief executive, “to engage in a meaningful conversation about responsible gun sales in America could give license to other business leaders to enter the conversation,” Andrew Ross Sorkin writes.





For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A month after a gunman killed 22 people at a Walmart store in El Paso, the nation’s largest retailer, said that it would stop selling ammunition used for handguns and military-style weapons and call on Congress to consider a new ban on assault rifles. We look at what Walmart’s move means, and how corporate America could play a role in curbing the epidemic of gun violence. Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/2019/09/04/podcasts/the-daily/2020-election-democrats.html?rref=vanity" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Walmart, whose reach has reshaped communities nationwide, largely avoids publicly wading into politics. That made<a href="https://www.nytimes.com/2019/09/03/business/walmart-guns-ammunition-sales.html?smid=pc-thedaily" target="_blank"> its decision to limit ammunition sales</a> even more notable.</li><li>The move by Doug McMillon, Walmart’s chief executive, “to engage in a meaningful conversation about responsible gun sales in America could give license to other business leaders to enter the conversation,”<a href="https://www.nytimes.com/2019/09/03/business/walmart-ceo-guns.html?smid=pc-thedaily" target="_blank"> Andrew Ross Sorkin writes</a>.</li></ul><p><br></p><p><br></p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/2019/09/04/podcasts/the-daily/2020-election-democrats.html?rref=vanity" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZYjnFgTvhZNf-3m8ietdKfh0J11Ml8oNJqmQYnXjVGM</guid>
      <pubDate>Thu, 05 Sep 2019 10:10:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a193b934-757c-4d6d-bee7-45dce5f5feca.mp3" type="audio/mpeg" length="26758164"/>
    </item>
    <item>
      <title>The Sudden-Death Phase of the Democratic Primary</title>
      <description>
        <![CDATA[<p>The Democratic presidential race has entered a phase that is specifically designed to reward front-runners and push out lesser-known candidates. We look at how that will influence the campaign. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Which candidates are leading the Democratic primary? <a href="https://www.nytimes.com/interactive/2020/us/elections/democratic-polls.html?smid=pc-thedaily" target="_blank">Here’s a look at the state of the race</a>.</li><li>Listen to an episode of “The Daily” about the <a href="https://www.nytimes.com/2019/08/02/podcasts/the-daily/democratic-debates-2020-election.html?smid=pc-thedaily" target="_blank">intended and unintended consequences of the Democratic National Committee’s new debate qualifying rules</a>.</li></ul>]]>
      </description>
      <itunes:title>The Sudden-Death Phase of the Democratic Primary</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Democratic presidential race has entered a phase that is specifically designed to reward front-runners and push out lesser-known candidates. We look at how that will influence the campaign. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Which candidates are leading the Democratic primary? Here’s a look at the state of the race.Listen to an episode of “The Daily” about the intended and unintended consequences of the Democratic National Committee’s new debate qualifying rules.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Democratic presidential race has entered a phase that is specifically designed to reward front-runners and push out lesser-known candidates. We look at how that will influence the campaign. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Which candidates are leading the Democratic primary? <a href="https://www.nytimes.com/interactive/2020/us/elections/democratic-polls.html?smid=pc-thedaily" target="_blank">Here’s a look at the state of the race</a>.</li><li>Listen to an episode of “The Daily” about the <a href="https://www.nytimes.com/2019/08/02/podcasts/the-daily/democratic-debates-2020-election.html?smid=pc-thedaily" target="_blank">intended and unintended consequences of the Democratic National Committee’s new debate qualifying rules</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1xeCAIEN6zDpOrkCFiYoauIJJYMyU6IQu0VjgTj-hIQ</guid>
      <pubDate>Wed, 04 Sep 2019 09:52:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a877e89f-b480-4f5c-b4f7-375cb2b82196.mp3" type="audio/mpeg" length="22971872"/>
    </item>
    <item>
      <title>A Potential Peace Deal With the Taliban</title>
      <description>
        <![CDATA[<p>After months of negotiations in Qatar, the United States appeared to have reached an agreement with the Taliban that could take a step to end America’s longest-running war. We spoke with our colleague about what he learned while covering the peace talks. Guest: Mujib Mashal, a senior correspondent for The New York Times based in Afghanistan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The American special envoy who led talks with the Taliban said that the United States<a href="https://www.nytimes.com/2019/09/02/world/asia/us-withdrawal-afghanistan-taliban.html?smid=pc-thedaily" target="_blank"> had reached an agreement “in principle” with the Afghan insurgents</a>, but that final approval rested with President Trump.</li></ul>]]>
      </description>
      <itunes:title>A Potential Peace Deal With the Taliban</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After months of negotiations in Qatar, the United States appeared to have reached an agreement with the Taliban that could take a step to end America’s longest-running war. We spoke with our colleague about what he learned while covering the peace talks. Guest: Mujib Mashal, a senior correspondent for The New York Times based in Afghanistan. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: The American special envoy who led talks with the Taliban said that the United States had reached an agreement “in principle” with the Afghan insurgents, but that final approval rested with President Trump.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After months of negotiations in Qatar, the United States appeared to have reached an agreement with the Taliban that could take a step to end America’s longest-running war. We spoke with our colleague about what he learned while covering the peace talks. Guest: Mujib Mashal, a senior correspondent for The New York Times based in Afghanistan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The American special envoy who led talks with the Taliban said that the United States<a href="https://www.nytimes.com/2019/09/02/world/asia/us-withdrawal-afghanistan-taliban.html?smid=pc-thedaily" target="_blank"> had reached an agreement “in principle” with the Afghan insurgents</a>, but that final approval rested with President Trump.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/du0zmQwC1FFRj3hihyFe1OxfralsjBOTCOre3XyTdyg</guid>
      <pubDate>Tue, 03 Sep 2019 09:50:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:28</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7f0965bf-955e-4b16-b647-4b43d47b3fda.mp3" type="audio/mpeg" length="23489724"/>
    </item>
    <item>
      <title>’1619,’ Episode 2: The Economy That Slavery Built</title>
      <description>
        <![CDATA[<p>Today on “The Daily,” we present Episode 2 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at&nbsp;<a href="https://www.nytimes.com/2019/08/30/podcasts/1619-slavery-cotton-capitalism.html" target="_blank">nytimes.com/1619podcast</a>.</p><p>The institution of slavery turned a poor, fledgling nation into a financial powerhouse, and the cotton plantation was America’s first big business. Behind the system, and built into it, was the whip. Guests: Matthew Desmond, a contributing writer for The New York Times Magazine and the author of “Evicted,” and Jesmyn Ward, the author of “Sing, Unburied, Sing.”</p><p><em>This episode includes scenes of graphic violence.</em></p><p>Background reading:</p><ul><li>“As the large slave-labor camps grew increasingly efficient, enslaved black people became America’s first modern workers,”&nbsp;<a href="https://www.nytimes.com/interactive/2019/08/14/magazine/slavery-capitalism.html" target="_blank">Matthew Desmond writes</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery.&nbsp;<a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </description>
      <itunes:title>’1619,’ Episode 2: The Economy That Slavery Built</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today on “The Daily,” we present Episode 2 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at nytimes.com/1619podcast.

The institution of slavery turned a poor, fledgling nation into a financial powerhouse, and the cotton plantation was America’s first big business. Behind the system, and built into it, was the whip. Guests: Matthew Desmond, a contributing writer for The New York Times Magazine and the author of “Evicted,” and Jesmyn Ward, the author of “Sing, Unburied, Sing.”

This episode includes scenes of graphic violence.

Background reading:“As the large slave-labor camps grew increasingly efficient, enslaved black people became America’s first modern workers,” Matthew Desmond writes.The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. Read more from the project here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today on “The Daily,” we present Episode 2 of “1619,” a New York Times audio series hosted by Nikole Hannah-Jones. You can find more information about it at&nbsp;<a href="https://www.nytimes.com/2019/08/30/podcasts/1619-slavery-cotton-capitalism.html" target="_blank">nytimes.com/1619podcast</a>.</p><p>The institution of slavery turned a poor, fledgling nation into a financial powerhouse, and the cotton plantation was America’s first big business. Behind the system, and built into it, was the whip. Guests: Matthew Desmond, a contributing writer for The New York Times Magazine and the author of “Evicted,” and Jesmyn Ward, the author of “Sing, Unburied, Sing.”</p><p><em>This episode includes scenes of graphic violence.</em></p><p>Background reading:</p><ul><li>“As the large slave-labor camps grew increasingly efficient, enslaved black people became America’s first modern workers,”&nbsp;<a href="https://www.nytimes.com/interactive/2019/08/14/magazine/slavery-capitalism.html" target="_blank">Matthew Desmond writes</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery.&nbsp;<a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3UNmqRFTFg3JLeKmIQaeZBbGlYMvxpQhynXGHNfWrFg</guid>
      <pubDate>Sat, 31 Aug 2019 09:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/46534516-d2f1-491b-bc00-de70bfc19aa2.mp3" type="audio/mpeg" length="31969280"/>
    </item>
    <item>
      <title>Political Mayhem in Britain and Italy</title>
      <description>
        <![CDATA[<p>Two battles over the meaning of democracy are now playing out in Europe. We look at the political power maneuvers this week in Britain and Italy. Guest: Katrin Bennhold, the Berlin bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Facing a furious backlash over <a href="https://www.nytimes.com/2019/08/28/world/europe/british-parliament-suspended.html?smid=pc-thedaily" target="_blank">his decision to suspend Parliament</a> next month, Prime Minister Boris Johnson of Britain <a href="https://www.nytimes.com/2019/08/29/world/europe/boris-johnson-brexit-parliament-backlash.html?smid=pc-thedaily" target="_blank">promised to speed up Brexit negotiations</a> with Brussels.</li><li>In Italy, two political parties that had been sworn political enemies struck a deal to <a href="https://www.nytimes.com/2019/08/28/world/europe/italy-government-salvini.html" target="_blank">form a new government that sidelined Matteo Salvini</a>, the hard-right leader.</li><li>Listen to “The Battle for Europe,” a series from “The Daily” with Katrin Bennhold about <a href="https://www.nytimes.com/2019/06/10/podcasts/the-daily/europe-nationalism.html?smid=pc-thedaily" target="_blank">the future of liberal democracy in the European Union</a>.</li></ul>]]>
      </description>
      <itunes:title>Political Mayhem in Britain and Italy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two battles over the meaning of democracy are now playing out in Europe. We look at the political power maneuvers this week in Britain and Italy. Guest: Katrin Bennhold, the Berlin bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Facing a furious backlash over his decision to suspend Parliament next month, Prime Minister Boris Johnson of Britain promised to speed up Brexit negotiations with Brussels.In Italy, two political parties that had been sworn political enemies struck a deal to form a new government that sidelined Matteo Salvini, the hard-right leader.Listen to “The Battle for Europe,” a series from “The Daily” with Katrin Bennhold about the future of liberal democracy in the European Union.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Two battles over the meaning of democracy are now playing out in Europe. We look at the political power maneuvers this week in Britain and Italy. Guest: Katrin Bennhold, the Berlin bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Facing a furious backlash over <a href="https://www.nytimes.com/2019/08/28/world/europe/british-parliament-suspended.html?smid=pc-thedaily" target="_blank">his decision to suspend Parliament</a> next month, Prime Minister Boris Johnson of Britain <a href="https://www.nytimes.com/2019/08/29/world/europe/boris-johnson-brexit-parliament-backlash.html?smid=pc-thedaily" target="_blank">promised to speed up Brexit negotiations</a> with Brussels.</li><li>In Italy, two political parties that had been sworn political enemies struck a deal to <a href="https://www.nytimes.com/2019/08/28/world/europe/italy-government-salvini.html" target="_blank">form a new government that sidelined Matteo Salvini</a>, the hard-right leader.</li><li>Listen to “The Battle for Europe,” a series from “The Daily” with Katrin Bennhold about <a href="https://www.nytimes.com/2019/06/10/podcasts/the-daily/europe-nationalism.html?smid=pc-thedaily" target="_blank">the future of liberal democracy in the European Union</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/pwBRVicprYJVYai3fBQ2NNV8p6C0TSOSF-kqgr8dWN4</guid>
      <pubDate>Fri, 30 Aug 2019 09:54:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/78955dd3-4b91-4dc9-86ff-dd05186aabda.mp3" type="audio/mpeg" length="21481430"/>
    </item>
    <item>
      <title>Why Uber Still Can’t Make a Profit</title>
      <description>
        <![CDATA[<p>Uber transformed American transportation and changed the United States economy. But a decade after its founding, the once-swaggering company is losing more money and growing more slowly than ever. What happened? Guest: Mike Isaac, a technology reporter for The New York Times and the author of “<a href="https://www.wwnorton.com/books/9780393652246/" target="_blank">Super Pumped: The Battle for Uber</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The Uber of 2019 displays little of the braggadocio of its past, and <a href="https://www.nytimes.com/2019/08/23/business/how-uber-got-lost.html?smid=pc-thedaily" target="_blank">competitors and critics are moving in</a>.</li></ul>]]>
      </description>
      <itunes:title>Why Uber Still Can’t Make a Profit</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Uber transformed American transportation and changed the United States economy. But a decade after its founding, the once-swaggering company is losing more money and growing more slowly than ever. What happened? Guest: Mike Isaac, a technology reporter for The New York Times and the author of “Super Pumped: The Battle for Uber.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: The Uber of 2019 displays little of the braggadocio of its past, and competitors and critics are moving in.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Uber transformed American transportation and changed the United States economy. But a decade after its founding, the once-swaggering company is losing more money and growing more slowly than ever. What happened? Guest: Mike Isaac, a technology reporter for The New York Times and the author of “<a href="https://www.wwnorton.com/books/9780393652246/" target="_blank">Super Pumped: The Battle for Uber</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The Uber of 2019 displays little of the braggadocio of its past, and <a href="https://www.nytimes.com/2019/08/23/business/how-uber-got-lost.html?smid=pc-thedaily" target="_blank">competitors and critics are moving in</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OG2u4V5XpHnTaZkEGLGgh8zkH_F6zl-6V-UL63LYabo</guid>
      <pubDate>Thu, 29 Aug 2019 09:52:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/767f6a49-147e-4ea1-935c-e6ba81811774.mp3" type="audio/mpeg" length="24536293"/>
    </item>
    <item>
      <title>Why the Amazon Is Burning</title>
      <description>
        <![CDATA[<p>More than 26,000 fires have been recorded inside the Amazon rainforest in August alone, leading to global calls for action. But Brazil’s government has told the rest of the world to mind its own business. Guest: Ernesto Londoño, the Brazil bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Brazil <a href="https://www.nytimes.com/2019/08/24/world/americas/amazon-rainforest-fires-military.html?smid=pc-thedaily" target="_blank">began a military operation to battle the fires</a> after European leaders threatened to cancel a trade deal and calls to boycott Brazilian products spread on social media.</li><li>In many parts of Brazil, there is strong support for President Jair Bolsonaro’s Amazon policy, <a href="https://www.nytimes.com/2019/08/26/world/americas/brazil-amazon-rainforest-fire.html?smid=pc-thedaily" target="_blank">which prioritizes economic development over environmental protections</a>.</li><li>Here’s <a href="https://www.nytimes.com/2019/08/23/world/americas/amazon-fire-brazil-bolsonaro.html?smid=pc-thedaily" target="_blank">what we know about the fires</a>.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>Why the Amazon Is Burning</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>More than 26,000 fires have been recorded inside the Amazon rainforest in August alone, leading to global calls for action. But Brazil’s government has told the rest of the world to mind its own business. Guest: Ernesto Londoño, the Brazil bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: Brazil began a military operation to battle the fires after European leaders threatened to cancel a trade deal and calls to boycott Brazilian products spread on social media.In many parts of Brazil, there is strong support for President Jair Bolsonaro’s Amazon policy, which prioritizes economic development over environmental protections.Here’s what we know about the fires. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>More than 26,000 fires have been recorded inside the Amazon rainforest in August alone, leading to global calls for action. But Brazil’s government has told the rest of the world to mind its own business. Guest: Ernesto Londoño, the Brazil bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>Brazil <a href="https://www.nytimes.com/2019/08/24/world/americas/amazon-rainforest-fires-military.html?smid=pc-thedaily" target="_blank">began a military operation to battle the fires</a> after European leaders threatened to cancel a trade deal and calls to boycott Brazilian products spread on social media.</li><li>In many parts of Brazil, there is strong support for President Jair Bolsonaro’s Amazon policy, <a href="https://www.nytimes.com/2019/08/26/world/americas/brazil-amazon-rainforest-fire.html?smid=pc-thedaily" target="_blank">which prioritizes economic development over environmental protections</a>.</li><li>Here’s <a href="https://www.nytimes.com/2019/08/23/world/americas/amazon-fire-brazil-bolsonaro.html?smid=pc-thedaily" target="_blank">what we know about the fires</a>.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/b-mQJKieCiksL3yGJ9tNpEdjmHpIfMGHIzwYnGp17vE</guid>
      <pubDate>Wed, 28 Aug 2019 09:51:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1a03dbf6-b2dc-4435-9937-53a9bb780037.mp3" type="audio/mpeg" length="22849828"/>
    </item>
    <item>
      <title>How the U.S.-China Trade War Hurts the Rest of the World</title>
      <description>
        <![CDATA[<p>At the Group of 7 summit in France, President Trump seemed determined to prove that he can wage a trade war with China without hurting the economy. But there are already signs of distress. Guest: Peter S. Goodman, an economics correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>President Trump can confront China or expand the economy, but he <a href="https://www.nytimes.com/2019/08/26/business/economy/trump-china-trade-war.html?smid=pc-thedaily" target="_blank">can’t do both at the same time</a>, our economics correspondent writes in a news analysis.</li><li>Mr. Trump <a href="https://www.nytimes.com/2019/08/26/world/europe/g7-trump-china-trade-war.html?smid=pc-thedaily" target="_blank">shifted his tone on the trade war yet again</a> on Monday, calling President Xi Jinping of China a “great leader” three days after branding him an “enemy.”</li></ul>]]>
      </description>
      <itunes:title>How the U.S.-China Trade War Hurts the Rest of the World</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At the Group of 7 summit in France, President Trump seemed determined to prove that he can wage a trade war with China without hurting the economy. But there are already signs of distress. Guest: Peter S. Goodman, an economics correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: President Trump can confront China or expand the economy, but he can’t do both at the same time, our economics correspondent writes in a news analysis.Mr. Trump shifted his tone on the trade war yet again on Monday, calling President Xi Jinping of China a “great leader” three days after branding him an “enemy.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At the Group of 7 summit in France, President Trump seemed determined to prove that he can wage a trade war with China without hurting the economy. But there are already signs of distress. Guest: Peter S. Goodman, an economics correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>President Trump can confront China or expand the economy, but he <a href="https://www.nytimes.com/2019/08/26/business/economy/trump-china-trade-war.html?smid=pc-thedaily" target="_blank">can’t do both at the same time</a>, our economics correspondent writes in a news analysis.</li><li>Mr. Trump <a href="https://www.nytimes.com/2019/08/26/world/europe/g7-trump-china-trade-war.html?smid=pc-thedaily" target="_blank">shifted his tone on the trade war yet again</a> on Monday, calling President Xi Jinping of China a “great leader” three days after branding him an “enemy.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/nlN6StULLAAzTMHW4Z23M9gOc-JfCBTtANOjtoGVE-Y</guid>
      <pubDate>Tue, 27 Aug 2019 09:53:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/033024cb-2f99-4bcd-9a5d-7b1016285d10.mp3" type="audio/mpeg" length="20673515"/>
    </item>
    <item>
      <title>The First Women to Report Jeffrey Epstein</title>
      <description>
        <![CDATA[<p><em>This episode contains descriptions of sexual assault.&nbsp;</em></p><p>Nearly a decade before any police investigation into Jeffrey Epstein’s predatory actions toward young girls, two sisters came forward to say they had been lured in and abused by the financier and his companion, Ghislaine Maxwell. Now that he’s dead, the sisters are wrestling with what might have happened if someone had listened.</p><p>Guests: Mike Baker, a national correspondent for The New York Times, spoke with Maria and Annie Farmer, and shared their story with Natalie Kitroeff, a business reporter for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The Farmer sisters <a href="https://www.nytimes.com/2019/08/26/us/epstein-farmer-sisters-maxwell.html?smid=pc-thedaily" target="_blank">spoke to The Times about their accusations</a>, offering a look at how Mr. Epstein, who killed himself in prison this month, managed to avoid significant scrutiny for years.</li></ul>]]>
      </description>
      <itunes:title>The First Women to Report Jeffrey Epstein</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This episode contains descriptions of sexual assault. 

Nearly a decade before any police investigation into Jeffrey Epstein’s predatory actions toward young girls, two sisters came forward to say they had been lured in and abused by the financier and his companion, Ghislaine Maxwell. Now that he’s dead, the sisters are wrestling with what might have happened if someone had listened.

Guests: Mike Baker, a national correspondent for The New York Times, spoke with Maria and Annie Farmer, and shared their story with Natalie Kitroeff, a business reporter for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background coverage: The Farmer sisters spoke to The Times about their accusations, offering a look at how Mr. Epstein, who killed himself in prison this month, managed to avoid significant scrutiny for years.</itunes:summary>
      <content:encoded>
        <![CDATA[<p><em>This episode contains descriptions of sexual assault.&nbsp;</em></p><p>Nearly a decade before any police investigation into Jeffrey Epstein’s predatory actions toward young girls, two sisters came forward to say they had been lured in and abused by the financier and his companion, Ghislaine Maxwell. Now that he’s dead, the sisters are wrestling with what might have happened if someone had listened.</p><p>Guests: Mike Baker, a national correspondent for The New York Times, spoke with Maria and Annie Farmer, and shared their story with Natalie Kitroeff, a business reporter for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background coverage:&nbsp;</p><ul><li>The Farmer sisters <a href="https://www.nytimes.com/2019/08/26/us/epstein-farmer-sisters-maxwell.html?smid=pc-thedaily" target="_blank">spoke to The Times about their accusations</a>, offering a look at how Mr. Epstein, who killed himself in prison this month, managed to avoid significant scrutiny for years.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GsaqmgMq5cSI90iByzEnkau0OyihR8AoecfhZAlaPoU</guid>
      <pubDate>Mon, 26 Aug 2019 09:50:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/680b2782-434d-419c-a561-bac44558d41e.mp3" type="audio/mpeg" length="30479673"/>
    </item>
    <item>
      <title>Introducing ‘1619,’ a New York Times Audio Series</title>
      <description>
        <![CDATA[<p>Four hundred years ago, in August 1619, a ship carrying more than 20 enslaved Africans arrived in the English colony of Virginia. No aspect of the country that would be formed here has been untouched by the 250 years of slavery that followed.</p><p>“1619,” a New York Times audio series, examines the long shadow of that fateful moment. Today, instead of our usual show, we present Episode 1: “The Fight for a True Democracy.”</p><p>Host: Nikole Hannah-Jones, who writes for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p><em>This episode includes scenes of graphic violence.</em></p><p>Background reading:</p><ul><li>“Without the idealistic, strenuous and patriotic efforts of black Americans, our democracy today would most likely look very different — it might not be a democracy at all,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/black-history-american-democracy.html" target="_blank">Nikole Hannah-Jones writes</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </description>
      <itunes:title>Introducing ‘1619,’ a New York Times Audio Series</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Four hundred years ago, in August 1619, a ship carrying more than 20 enslaved Africans arrived in the English colony of Virginia. No aspect of the country that would be formed here has been untouched by the 250 years of slavery that followed.

“1619,” a New York Times audio series, examines the long shadow of that fateful moment. Today, instead of our usual show, we present Episode 1: “The Fight for a True Democracy.”

Host: Nikole Hannah-Jones, who writes for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily. 

This episode includes scenes of graphic violence.

Background reading:“Without the idealistic, strenuous and patriotic efforts of black Americans, our democracy today would most likely look very different — it might not be a democracy at all,” Nikole Hannah-Jones writes.The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. Read more from the project here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Four hundred years ago, in August 1619, a ship carrying more than 20 enslaved Africans arrived in the English colony of Virginia. No aspect of the country that would be formed here has been untouched by the 250 years of slavery that followed.</p><p>“1619,” a New York Times audio series, examines the long shadow of that fateful moment. Today, instead of our usual show, we present Episode 1: “The Fight for a True Democracy.”</p><p>Host: Nikole Hannah-Jones, who writes for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p><em>This episode includes scenes of graphic violence.</em></p><p>Background reading:</p><ul><li>“Without the idealistic, strenuous and patriotic efforts of black Americans, our democracy today would most likely look very different — it might not be a democracy at all,” <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/black-history-american-democracy.html" target="_blank">Nikole Hannah-Jones writes</a>.</li><li>The “1619” audio series is part of The 1619 Project, a major initiative from The Times observing the 400th anniversary of the beginning of American slavery. <a href="https://www.nytimes.com/interactive/2019/08/14/magazine/1619-america-slavery.html" target="_blank">Read more from the project here</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/UzcXqAi0qXb7uDw-xreL80-nR1D3ez-52X5TH08QCU8</guid>
      <pubDate>Fri, 23 Aug 2019 09:52:19 -0000</pubDate>
      <link>https://www.nytimes.com/2019/08/23/podcasts/the-daily/1619-project.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:45:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/19a69894-d201-4872-b509-8b00cd2c1095.mp3" type="audio/mpeg" length="43235369"/>
    </item>
    <item>
      <title>What the 2020 Campaign Sounds Like</title>
      <description>
        <![CDATA[<p>Song playlists at presidential campaign rallies can be about more than music — they can reflect a candidate’s values, political platform, identity and target audience. We examine the role of these playlists in the 2020 campaign. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>The Times analyzed playlists used by nine Democratic candidates and President Trump to see how they help set the tone for each campaign.<a href="https://www.nytimes.com/interactive/2019/08/19/us/politics/presidential-campaign-songs-playlists.html" target="_blank"> Turn your sound on</a>.</li></ul>]]>
      </description>
      <itunes:title>What the 2020 Campaign Sounds Like</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Song playlists at presidential campaign rallies can be about more than music — they can reflect a candidate’s values, political platform, identity and target audience. We examine the role of these playlists in the 2020 campaign. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The Times analyzed playlists used by nine Democratic candidates and President Trump to see how they help set the tone for each campaign. Turn your sound on.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Song playlists at presidential campaign rallies can be about more than music — they can reflect a candidate’s values, political platform, identity and target audience. We examine the role of these playlists in the 2020 campaign. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>The Times analyzed playlists used by nine Democratic candidates and President Trump to see how they help set the tone for each campaign.<a href="https://www.nytimes.com/interactive/2019/08/19/us/politics/presidential-campaign-songs-playlists.html" target="_blank"> Turn your sound on</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3i4Ct8f2rswtP3HFZ4j3agsQTcL0QnJbDuEU9rxYBwg</guid>
      <pubDate>Thu, 22 Aug 2019 09:56:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6143db85-8d99-4479-a770-f0823630d024.mp3" type="audio/mpeg" length="28154148"/>
    </item>
    <item>
      <title>What American C.E.O.s Are Worried About</title>
      <description>
        <![CDATA[<p>For decades, American corporations have prized profits for shareholders above all else. Now, the country’s most powerful chief executives say it’s time to do things differently. What’s driving that change? Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Almost 200 chief executives, including the leaders of Apple, Pepsi and Walmart,<a href="https://www.nytimes.com/2019/08/19/business/business-roundtable-ceos-corporations.html?smid=pc-thedaily" target="_blank"> argued that companies must invest in employees</a>, protect the environment and deliver value to customers.</li><li>Shareholder democracy seemed like a good idea at the time, but it hasn’t worked,<a href="https://www.nytimes.com/2019/08/20/business/dealbook/business-roundtable-corporate-responsibility.html?smid=pc-thedaily" target="_blank"> Andrew Ross Sorkin writes in his latest column</a>.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>What American C.E.O.s Are Worried About</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For decades, American corporations have prized profits for shareholders above all else. Now, the country’s most powerful chief executives say it’s time to do things differently. What’s driving that change? Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Almost 200 chief executives, including the leaders of Apple, Pepsi and Walmart, argued that companies must invest in employees, protect the environment and deliver value to customers.Shareholder democracy seemed like a good idea at the time, but it hasn’t worked, Andrew Ross Sorkin writes in his latest column. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>For decades, American corporations have prized profits for shareholders above all else. Now, the country’s most powerful chief executives say it’s time to do things differently. What’s driving that change? Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Almost 200 chief executives, including the leaders of Apple, Pepsi and Walmart,<a href="https://www.nytimes.com/2019/08/19/business/business-roundtable-ceos-corporations.html?smid=pc-thedaily" target="_blank"> argued that companies must invest in employees</a>, protect the environment and deliver value to customers.</li><li>Shareholder democracy seemed like a good idea at the time, but it hasn’t worked,<a href="https://www.nytimes.com/2019/08/20/business/dealbook/business-roundtable-corporate-responsibility.html?smid=pc-thedaily" target="_blank"> Andrew Ross Sorkin writes in his latest column</a>.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZFlKergmssKxEy8AUxDqYkLULDkekmXew38OHX8pI1Q</guid>
      <pubDate>Wed, 21 Aug 2019 09:52:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/eeb9613f-c5bd-4562-96e6-f5c817d74df8.mp3" type="audio/mpeg" length="22545136"/>
    </item>
    <item>
      <title>Senator Kirsten Gillibrand on Not Regretting Al Franken</title>
      <description>
        <![CDATA[<p>Al Franken resigned from the Senate more than 18 months ago over allegations of sexual harassment. New reporting about those allegations has revived the debate over whether the Democratic Party — particularly senators currently seeking the presidency — moved too fast in calling for him to step down. In an interview, one of those senators, Kirsten Gillibrand, says absolutely not.</p><p>Guest: Senator Kirsten Gillibrand, a New York Democrat and 2020 presidential candidate. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Ms. Gillibrand’s stance on Mr. Franken’s departure<a href="https://www.nytimes.com/2019/07/23/us/politics/al-franken-kirsten-gillibrand.html" target="_blank"> has come up persistently during her struggling presidential campaign</a>.</li><li>Our colleague Lisa Lerer interviewed Ms. Gillibrand for the<a href="https://www.nytimes.com/2019/08/19/us/politics/on-politics-womens-poll-supermajority.html" target="_blank"> On Politics newsletter</a>.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>Senator Kirsten Gillibrand on Not Regretting Al Franken</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Al Franken resigned from the Senate more than 18 months ago over allegations of sexual harassment. New reporting about those allegations has revived the debate over whether the Democratic Party — particularly senators currently seeking the presidency — moved too fast in calling for him to step down. In an interview, one of those senators, Kirsten Gillibrand, says absolutely not.

Guest: Senator Kirsten Gillibrand, a New York Democrat and 2020 presidential candidate. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Ms. Gillibrand’s stance on Mr. Franken’s departure has come up persistently during her struggling presidential campaign.Our colleague Lisa Lerer interviewed Ms. Gillibrand for the On Politics newsletter. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Al Franken resigned from the Senate more than 18 months ago over allegations of sexual harassment. New reporting about those allegations has revived the debate over whether the Democratic Party — particularly senators currently seeking the presidency — moved too fast in calling for him to step down. In an interview, one of those senators, Kirsten Gillibrand, says absolutely not.</p><p>Guest: Senator Kirsten Gillibrand, a New York Democrat and 2020 presidential candidate. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Ms. Gillibrand’s stance on Mr. Franken’s departure<a href="https://www.nytimes.com/2019/07/23/us/politics/al-franken-kirsten-gillibrand.html" target="_blank"> has come up persistently during her struggling presidential campaign</a>.</li><li>Our colleague Lisa Lerer interviewed Ms. Gillibrand for the<a href="https://www.nytimes.com/2019/08/19/us/politics/on-politics-womens-poll-supermajority.html" target="_blank"> On Politics newsletter</a>.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fVMTlCaJe9iZ7zoYRL1kTCDqrcIzx5vS5xezMOEzLbM</guid>
      <pubDate>Tue, 20 Aug 2019 09:54:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba97f716-f44e-4298-8305-6ed2b74a5be2.mp3" type="audio/mpeg" length="30289920"/>
    </item>
    <item>
      <title>Bankrolling the Anti-Immigration Movement</title>
      <description>
        <![CDATA[<p>The New York Times investigated how Cordelia Scaife May, an heiress to the Mellon family’s banking and industrial fortune, used her wealth to sow the seeds of the modern anti-immigration movement — and of Trump administration policy. Guests: Natalie Kitroeff, a business reporter for The Times, spoke with Nicholas Kulish, who covers immigration issues. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Newly unearthed documents show<a href="https://www.nytimes.com/2019/08/14/us/anti-immigration-cordelia-scaife-may.html" target="_blank"> how an environmental-minded socialite became a nativist</a> whose vision for strictly limiting immigration has, in many ways, reached a culmination in the Trump presidency.</li><li>Groups that Mrs. May funded shared policy proposals with the Trump campaign, sent staff members to join the administration and have close ties to<a href="https://www.nytimes.com/2019/08/17/us/politics/stephen-miller-immigration-trump.html?smid=pc-thedaily" target="_blank"> Stephen Miller</a>, the architect of the president’s immigration agenda.</li></ul>]]>
      </description>
      <itunes:title>Bankrolling the Anti-Immigration Movement</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times investigated how Cordelia Scaife May, an heiress to the Mellon family’s banking and industrial fortune, used her wealth to sow the seeds of the modern anti-immigration movement — and of Trump administration policy. Guests: Natalie Kitroeff, a business reporter for The Times, spoke with Nicholas Kulish, who covers immigration issues. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Newly unearthed documents show how an environmental-minded socialite became a nativist whose vision for strictly limiting immigration has, in many ways, reached a culmination in the Trump presidency.Groups that Mrs. May funded shared policy proposals with the Trump campaign, sent staff members to join the administration and have close ties to Stephen Miller, the architect of the president’s immigration agenda.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times investigated how Cordelia Scaife May, an heiress to the Mellon family’s banking and industrial fortune, used her wealth to sow the seeds of the modern anti-immigration movement — and of Trump administration policy. Guests: Natalie Kitroeff, a business reporter for The Times, spoke with Nicholas Kulish, who covers immigration issues. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Newly unearthed documents show<a href="https://www.nytimes.com/2019/08/14/us/anti-immigration-cordelia-scaife-may.html" target="_blank"> how an environmental-minded socialite became a nativist</a> whose vision for strictly limiting immigration has, in many ways, reached a culmination in the Trump presidency.</li><li>Groups that Mrs. May funded shared policy proposals with the Trump campaign, sent staff members to join the administration and have close ties to<a href="https://www.nytimes.com/2019/08/17/us/politics/stephen-miller-immigration-trump.html?smid=pc-thedaily" target="_blank"> Stephen Miller</a>, the architect of the president’s immigration agenda.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dkaSHvzoKz_XNmhNqLaoB7Xbmqsr0KuROXkruljhQrM</guid>
      <pubDate>Mon, 19 Aug 2019 09:54:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8b3ee035-812c-4c1b-ae8a-0d4bcaa4d756.mp3" type="audio/mpeg" length="25143588"/>
    </item>
    <item>
      <title>Russia’s Mystery Missile</title>
      <description>
        <![CDATA[<p>At least seven people were killed by a mysterious explosion in northern Russia, and U.S. officials believe it happened during the test of a prototype for a nuclear-propelled cruise missile. President Vladimir V. Putin of Russia has hailed the weapon as the centerpiece of Moscow’s arms race with the United States — but what will this mean for an arms race that both countries want to win? Guest: <a href="https://www.nytimes.com/by/david-e-sanger" target="_blank">David E. Sanger</a>, a national security correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Intelligence officials suspect the blast involved a prototype<a href="https://www.nytimes.com/2019/08/13/world/europe/russia-nuclear-explosion-accident.html?smid=pc-thedaily" target="_blank"> known as Skyfall</a>, a missile that Mr. Putin has boasted can reach any corner of the earth and<a href="https://www.nytimes.com/2019/08/12/world/europe/russia-nuclear-accident-putin.html?smid=pc-thedaily" target="_blank"> evade American missile defenses</a>.</li><li>As the death toll has risen from the explosion, Russia’s silence and contradictory accounts <a href="https://www.nytimes.com/2019/08/12/world/europe/russia-nuclear-reactor-explosion-response.html?smid=pc-thedaily" target="_blank">have conjured dark memories of Chernobyl</a>.</li></ul>]]>
      </description>
      <itunes:title>Russia’s Mystery Missile</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At least seven people were killed by a mysterious explosion in northern Russia, and U.S. officials believe it happened during the test of a prototype for a nuclear-propelled cruise missile. President Vladimir V. Putin of Russia has hailed the weapon as the centerpiece of Moscow’s arms race with the United States — but what will this mean for an arms race that both countries want to win? Guest: David E. Sanger, a national security correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Intelligence officials suspect the blast involved a prototype known as Skyfall, a missile that Mr. Putin has boasted can reach any corner of the earth and evade American missile defenses.As the death toll has risen from the explosion, Russia’s silence and contradictory accounts have conjured dark memories of Chernobyl.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At least seven people were killed by a mysterious explosion in northern Russia, and U.S. officials believe it happened during the test of a prototype for a nuclear-propelled cruise missile. President Vladimir V. Putin of Russia has hailed the weapon as the centerpiece of Moscow’s arms race with the United States — but what will this mean for an arms race that both countries want to win? Guest: <a href="https://www.nytimes.com/by/david-e-sanger" target="_blank">David E. Sanger</a>, a national security correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Intelligence officials suspect the blast involved a prototype<a href="https://www.nytimes.com/2019/08/13/world/europe/russia-nuclear-explosion-accident.html?smid=pc-thedaily" target="_blank"> known as Skyfall</a>, a missile that Mr. Putin has boasted can reach any corner of the earth and<a href="https://www.nytimes.com/2019/08/12/world/europe/russia-nuclear-accident-putin.html?smid=pc-thedaily" target="_blank"> evade American missile defenses</a>.</li><li>As the death toll has risen from the explosion, Russia’s silence and contradictory accounts <a href="https://www.nytimes.com/2019/08/12/world/europe/russia-nuclear-reactor-explosion-response.html?smid=pc-thedaily" target="_blank">have conjured dark memories of Chernobyl</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZohX3_5p1x6SBuROndxD4foqsSdMgvb62f8Xh9I35hM</guid>
      <pubDate>Fri, 16 Aug 2019 09:54:39 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2e17b02e-210c-4d95-9cb3-0824ce28041d.mp3" type="audio/mpeg" length="23953658"/>
    </item>
    <item>
      <title>Is China Really Freeing Uighurs?</title>
      <description>
        <![CDATA[<p>Under international pressure, China has said it has released a vast majority of the Muslim Uighurs it had placed in detention camps. We follow up with an American citizen who says the Chinese government cannot be trusted, and find out how Beijing’s propaganda machine has responded to his efforts to protect a relative who was detained. If you missed the previous interview,<a href="https://www.nytimes.com/2019/05/07/podcasts/the-daily/china-uighurs-internment-camps-surveillance.html" target="_blank"> listen to it here</a>. Guest: <a href="https://www.nytimes.com/by/paul-mozur" target="_blank">Paul Mozur</a>, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur and American citizen who lives in Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Reporters from The Times found, over seven days of traveling through the Xinjiang region, that the vast network of detention camps erected by the government of China’s authoritarian leader, Xi Jinping,<a href="https://www.nytimes.com/2019/08/09/world/asia/china-xinjiang-muslim-detention.html?smid=pc-thedaily" target="_blank"> continues to operate, and even expand</a>.</li><li>China’s<a href="https://www.nytimes.com/2019/08/13/world/asia/hong-kong-protests-china.html?smid=pc-thedaily" target="_blank"> most recent campaign</a> echoes tactics used by other countries, principally Russia, to inundate domestic and international audiences with bursts of information, propaganda, and in some cases, outright disinformation.</li></ul>]]>
      </description>
      <itunes:title>Is China Really Freeing Uighurs?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Under international pressure, China has said it has released a vast majority of the Muslim Uighurs it had placed in detention camps. We follow up with an American citizen who says the Chinese government cannot be trusted, and find out how Beijing’s propaganda machine has responded to his efforts to protect a relative who was detained. If you missed the previous interview, listen to it here. Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur and American citizen who lives in Virginia. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Reporters from The Times found, over seven days of traveling through the Xinjiang region, that the vast network of detention camps erected by the government of China’s authoritarian leader, Xi Jinping, continues to operate, and even expand.China’s most recent campaign echoes tactics used by other countries, principally Russia, to inundate domestic and international audiences with bursts of information, propaganda, and in some cases, outright disinformation.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Under international pressure, China has said it has released a vast majority of the Muslim Uighurs it had placed in detention camps. We follow up with an American citizen who says the Chinese government cannot be trusted, and find out how Beijing’s propaganda machine has responded to his efforts to protect a relative who was detained. If you missed the previous interview,<a href="https://www.nytimes.com/2019/05/07/podcasts/the-daily/china-uighurs-internment-camps-surveillance.html" target="_blank"> listen to it here</a>. Guest: <a href="https://www.nytimes.com/by/paul-mozur" target="_blank">Paul Mozur</a>, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur and American citizen who lives in Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Reporters from The Times found, over seven days of traveling through the Xinjiang region, that the vast network of detention camps erected by the government of China’s authoritarian leader, Xi Jinping,<a href="https://www.nytimes.com/2019/08/09/world/asia/china-xinjiang-muslim-detention.html?smid=pc-thedaily" target="_blank"> continues to operate, and even expand</a>.</li><li>China’s<a href="https://www.nytimes.com/2019/08/13/world/asia/hong-kong-protests-china.html?smid=pc-thedaily" target="_blank"> most recent campaign</a> echoes tactics used by other countries, principally Russia, to inundate domestic and international audiences with bursts of information, propaganda, and in some cases, outright disinformation.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0q6Kv2VxvUkTv8g-nYKjeHeZj79Kl_YTGB0-ErBGPPs</guid>
      <pubDate>Thu, 15 Aug 2019 09:52:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9af7545b-904d-45ad-a7bc-fe094a53fa28.mp3" type="audio/mpeg" length="26609371"/>
    </item>
    <item>
      <title>Inside Hong Kong’s Airport</title>
      <description>
        <![CDATA[<p>Protesters have flooded Hong Kong’s airport, paralyzing operations and escalating tensions between the semiautonomous territory and Beijing. The protesters are trying to send a message to government officials — and to people in mainland China. Guest: <a href="https://www.nytimes.com/by/javier-c-hernandez" target="_blank">Javier C. Hernández</a>, a New York Times correspondent based in Beijing. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Demonstrations led the airport, one of the world’s busiest,<a href="https://www.nytimes.com/2019/08/12/world/asia/hong-kong-airport-protest.html?smid=pc-thedaily" target="_blank"> to suspend check-ins for two days in a row</a> this week, causing hundreds of flight cancellations. On Wednesday,<a href="https://www.nytimes.com/2019/08/14/world/asia/hong-kong-airport-protests.html?smid=pc-thedaily" target="_blank"> some protesters apologized</a> for the disruption.</li><li>The unrest is exposing<a href="https://www.nytimes.com/2019/08/12/world/asia/hong-kong-protests-communist-party.html?smid=pc-thedaily" target="_blank"> the inherent conflict in Hong Kong’s political system</a> since China reclaimed the territory from Britain in 1997: an effort to unite Beijing’s authoritarianism with civil liberties.</li><li>Here’s<a href="https://www.nytimes.com/2019/08/08/world/asia/hong-kong-protests-explained.html?smid=pc-thedaily" target="_blank"> a guide to what prompted the Hong Kong protests</a>, and a look at how they have evolved. </li></ul>]]>
      </description>
      <itunes:title>Inside Hong Kong’s Airport</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Protesters have flooded Hong Kong’s airport, paralyzing operations and escalating tensions between the semiautonomous territory and Beijing. The protesters are trying to send a message to government officials — and to people in mainland China. Guest: Javier C. Hernández, a New York Times correspondent based in Beijing. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Demonstrations led the airport, one of the world’s busiest, to suspend check-ins for two days in a row this week, causing hundreds of flight cancellations. On Wednesday, some protesters apologized for the disruption.The unrest is exposing the inherent conflict in Hong Kong’s political system since China reclaimed the territory from Britain in 1997: an effort to unite Beijing’s authoritarianism with civil liberties.Here’s a guide to what prompted the Hong Kong protests, and a look at how they have evolved. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Protesters have flooded Hong Kong’s airport, paralyzing operations and escalating tensions between the semiautonomous territory and Beijing. The protesters are trying to send a message to government officials — and to people in mainland China. Guest: <a href="https://www.nytimes.com/by/javier-c-hernandez" target="_blank">Javier C. Hernández</a>, a New York Times correspondent based in Beijing. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Demonstrations led the airport, one of the world’s busiest,<a href="https://www.nytimes.com/2019/08/12/world/asia/hong-kong-airport-protest.html?smid=pc-thedaily" target="_blank"> to suspend check-ins for two days in a row</a> this week, causing hundreds of flight cancellations. On Wednesday,<a href="https://www.nytimes.com/2019/08/14/world/asia/hong-kong-airport-protests.html?smid=pc-thedaily" target="_blank"> some protesters apologized</a> for the disruption.</li><li>The unrest is exposing<a href="https://www.nytimes.com/2019/08/12/world/asia/hong-kong-protests-communist-party.html?smid=pc-thedaily" target="_blank"> the inherent conflict in Hong Kong’s political system</a> since China reclaimed the territory from Britain in 1997: an effort to unite Beijing’s authoritarianism with civil liberties.</li><li>Here’s<a href="https://www.nytimes.com/2019/08/08/world/asia/hong-kong-protests-explained.html?smid=pc-thedaily" target="_blank"> a guide to what prompted the Hong Kong protests</a>, and a look at how they have evolved. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/moeG5s36ShGLUKv8BR4B_htTULNCKiMnMfyYXmJZmsk</guid>
      <pubDate>Wed, 14 Aug 2019 09:47:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e6a4439b-c55c-429a-ad3f-bbc005b6bea0.mp3" type="audio/mpeg" length="21286661"/>
    </item>
    <item>
      <title>The Epstein Investigation, Now That He’s Dead</title>
      <description>
        <![CDATA[<p>Federal prosecutors were confident that, this time, justice would be served in the case of Jeffrey Epstein. What happens to the case against him now that he is dead?&nbsp; Guest: <a href="https://www.nytimes.com/by/benjamin-weiser" target="_blank">Benjamin Weiser</a>, an investigative criminal justice reporter for The New York Times.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Despite Jeffrey Epstein's death, <a href="https://www.nytimes.com/2019/08/11/nyregion/jeffrey-epstein-suicide-investigation.html?searchResultPosition=1?smid=pc-thedaily" target="_blank">the criminal investigation that led to the sex-trafficking charges continues</a>. Prosecutors will focus on those who may have aided him.</li><li>At Mr. Epstein’s Palm Beach home,<a href="https://www.nytimes.com/2019/08/09/nyregion/epstein-sex-slave-documents.html?rref=collection%2Fbyline%2Fbenjamin-weiser&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=4&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> it was hard for workers to miss what was happening</a>, with about 100 masseuses seen there at various times.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>The Epstein Investigation, Now That He’s Dead</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Federal prosecutors were confident that, this time, justice would be served in the case of Jeffrey Epstein. What happens to the case against him now that he is dead?  Guest: Benjamin Weiser, an investigative criminal justice reporter for The New York Times.

For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Despite Jeffrey Epstein's death, the criminal investigation that led to the sex-trafficking charges continues. Prosecutors will focus on those who may have aided him.At Mr. Epstein’s Palm Beach home, it was hard for workers to miss what was happening, with about 100 masseuses seen there at various times. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Federal prosecutors were confident that, this time, justice would be served in the case of Jeffrey Epstein. What happens to the case against him now that he is dead?&nbsp; Guest: <a href="https://www.nytimes.com/by/benjamin-weiser" target="_blank">Benjamin Weiser</a>, an investigative criminal justice reporter for The New York Times.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Despite Jeffrey Epstein's death, <a href="https://www.nytimes.com/2019/08/11/nyregion/jeffrey-epstein-suicide-investigation.html?searchResultPosition=1?smid=pc-thedaily" target="_blank">the criminal investigation that led to the sex-trafficking charges continues</a>. Prosecutors will focus on those who may have aided him.</li><li>At Mr. Epstein’s Palm Beach home,<a href="https://www.nytimes.com/2019/08/09/nyregion/epstein-sex-slave-documents.html?rref=collection%2Fbyline%2Fbenjamin-weiser&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=4&amp;pgtype=collection?smid=pc-thedaily" target="_blank"> it was hard for workers to miss what was happening</a>, with about 100 masseuses seen there at various times.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/EVfwC6fgu9BZwXHxdKISm4vDp5J6U90Xq6-k2v6DIro</guid>
      <pubDate>Tue, 13 Aug 2019 09:52:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f44fa997-5876-4482-b2aa-02ed15e595b8.mp3" type="audio/mpeg" length="19708865"/>
    </item>
    <item>
      <title>The Freshmen: Mikie Sherrill</title>
      <description>
        <![CDATA[<p>Since Democrats retook the House last November, the world has come to know the progressive and divisive vision of four freshmen congresswomen known as “the squad.” But it was moderates — less well-known and laser-focused on common ground between Democrats and Republicans — who were responsible for flipping seats and winning back the House. Today, we meet a moderate Democrat who offers a competing vision of the party ahead of the 2020 election.&nbsp;</p><p>Guests: Representative Mikie Sherrill, Democrat of New Jersey; Kate Zernike, a political reporter for The New York Times; and Lisa Chow and Rachel Quester, producers for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/07/28/us/politics/house-democrats-unity.html?smid=pc-thedaily" target="_blank">Disconnects between liberal and moderate House Democrats</a> have exploded into public view at critical moments during their seven months in power.</li><li>The two rounds of Democratic presidential debates<a href="https://www.nytimes.com/2019/08/01/us/politics/biden-obama.html?smid=pc-thedaily" target="_blank"> showcased divisions over ideology and identity</a> in a party that appears united only in its desire to defeat President Trump.</li></ul>]]>
      </description>
      <itunes:title>The Freshmen: Mikie Sherrill</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Since Democrats retook the House last November, the world has come to know the progressive and divisive vision of four freshmen congresswomen known as “the squad.” But it was moderates — less well-known and laser-focused on common ground between Democrats and Republicans — who were responsible for flipping seats and winning back the House. Today, we meet a moderate Democrat who offers a competing vision of the party ahead of the 2020 election. 

Guests: Representative Mikie Sherrill, Democrat of New Jersey; Kate Zernike, a political reporter for The New York Times; and Lisa Chow and Rachel Quester, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Disconnects between liberal and moderate House Democrats have exploded into public view at critical moments during their seven months in power.The two rounds of Democratic presidential debates showcased divisions over ideology and identity in a party that appears united only in its desire to defeat President Trump.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Since Democrats retook the House last November, the world has come to know the progressive and divisive vision of four freshmen congresswomen known as “the squad.” But it was moderates — less well-known and laser-focused on common ground between Democrats and Republicans — who were responsible for flipping seats and winning back the House. Today, we meet a moderate Democrat who offers a competing vision of the party ahead of the 2020 election.&nbsp;</p><p>Guests: Representative Mikie Sherrill, Democrat of New Jersey; Kate Zernike, a political reporter for The New York Times; and Lisa Chow and Rachel Quester, producers for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/07/28/us/politics/house-democrats-unity.html?smid=pc-thedaily" target="_blank">Disconnects between liberal and moderate House Democrats</a> have exploded into public view at critical moments during their seven months in power.</li><li>The two rounds of Democratic presidential debates<a href="https://www.nytimes.com/2019/08/01/us/politics/biden-obama.html?smid=pc-thedaily" target="_blank"> showcased divisions over ideology and identity</a> in a party that appears united only in its desire to defeat President Trump.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QmcyiaEyC3sE8jBoaY2vVDj6UjG3Rp8ZyNV1P58BmNY</guid>
      <pubDate>Mon, 12 Aug 2019 09:54:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8f83b29f-616e-4f46-8a15-74b0f4a71a0f.mp3" type="audio/mpeg" length="34235036"/>
    </item>
    <item>
      <title>The Crackdown on Kashmir</title>
      <description>
        <![CDATA[<p>India has guaranteed a degree of autonomy to the people of Kashmir, a disputed territory between India and Pakistan, since 1947. Why did India unilaterally erase that autonomy this week? Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>To Prime Minister Narendra Modi of India,<a href="https://www.nytimes.com/2019/08/05/world/asia/india-pakistan-kashmir-jammu.html?smid=pc-thedaily" target="_blank"> eliminating the autonomy of Kashmir</a> was an administrative move. But to his critics, the decision was a<a href="https://www.nytimes.com/2019/08/08/world/asia/kashmir-india-modi.html?smid=pc-thedaily" target="_blank"> blow to India’s democracy and secular identity</a>.</li><li>On Thursday, Mr. Modi <a href="https://www.nytimes.com/2019/08/08/world/asia/kashmir-india-modi.html?smid=pc-thedaily" target="_blank">addressed the nation about the decision</a> against a backdrop of rising protests, mass arrests and<a href="https://www.nytimes.com/2019/08/07/world/asia/pakistan-kashmir-india.html?smid=pc-thedaily" target="_blank"> escalating tensions with Pakistan</a>.</li><li><a href="https://www.nytimes.com/interactive/2019/world/asia/india-pakistan-crisis.html?smid=pc-thedaily" target="_blank">Read more about the roots of the crisis</a> and what could happen next.</li></ul>]]>
      </description>
      <itunes:title>The Crackdown on Kashmir</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>India has guaranteed a degree of autonomy to the people of Kashmir, a disputed territory between India and Pakistan, since 1947. Why did India unilaterally erase that autonomy this week? Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: To Prime Minister Narendra Modi of India, eliminating the autonomy of Kashmir was an administrative move. But to his critics, the decision was a blow to India’s democracy and secular identity.On Thursday, Mr. Modi addressed the nation about the decision against a backdrop of rising protests, mass arrests and escalating tensions with Pakistan.Read more about the roots of the crisis and what could happen next.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>India has guaranteed a degree of autonomy to the people of Kashmir, a disputed territory between India and Pakistan, since 1947. Why did India unilaterally erase that autonomy this week? Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>To Prime Minister Narendra Modi of India,<a href="https://www.nytimes.com/2019/08/05/world/asia/india-pakistan-kashmir-jammu.html?smid=pc-thedaily" target="_blank"> eliminating the autonomy of Kashmir</a> was an administrative move. But to his critics, the decision was a<a href="https://www.nytimes.com/2019/08/08/world/asia/kashmir-india-modi.html?smid=pc-thedaily" target="_blank"> blow to India’s democracy and secular identity</a>.</li><li>On Thursday, Mr. Modi <a href="https://www.nytimes.com/2019/08/08/world/asia/kashmir-india-modi.html?smid=pc-thedaily" target="_blank">addressed the nation about the decision</a> against a backdrop of rising protests, mass arrests and<a href="https://www.nytimes.com/2019/08/07/world/asia/pakistan-kashmir-india.html?smid=pc-thedaily" target="_blank"> escalating tensions with Pakistan</a>.</li><li><a href="https://www.nytimes.com/interactive/2019/world/asia/india-pakistan-crisis.html?smid=pc-thedaily" target="_blank">Read more about the roots of the crisis</a> and what could happen next.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0pZqqX07sReFGEG1MX0JQGbF7aNhtmRh6yEUU_aVsBw</guid>
      <pubDate>Fri, 09 Aug 2019 09:53:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/04ac8fc3-266d-4308-8d78-4fcc674d67a6.mp3" type="audio/mpeg" length="22794657"/>
    </item>
    <item>
      <title>Two Cities in Mourning</title>
      <description>
        <![CDATA[<p>President Trump traveled on Wednesday to Dayton, Ohio, and El Paso, where mass shootings killed 31 people. Our colleagues described the scene in both cities. Guests: Mitch Smith, who covers the Midwest for The New York Times, and Michael Crowley, a White House correspondent. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump began a day set aside for healing in Dayton and El Paso by lashing out at rivals,<a href="https://www.nytimes.com/2019/08/07/us/politics/trump-el-paso-dayton-shootings.html?smid=pc-thedaily" target="_blank"> using the kind of divisive language that prompted protests</a> in both cities even before he arrived.</li><li>Across El Paso,<a href="https://www.nytimes.com/2019/08/07/us/el-paso-trump-escobar.html?smid=pc-thedaily" target="_blank"> </a>some residents <a href="https://www.nytimes.com/2019/08/07/us/el-paso-trump-escobar.html?smid=pc-thedaily" target="_blank">worried that Mr. Trump’s visit might do more harm than good</a>.</li></ul>]]>
      </description>
      <itunes:title>Two Cities in Mourning</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump traveled on Wednesday to Dayton, Ohio, and El Paso, where mass shootings killed 31 people. Our colleagues described the scene in both cities. Guests: Mitch Smith, who covers the Midwest for The New York Times, and Michael Crowley, a White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: President Trump began a day set aside for healing in Dayton and El Paso by lashing out at rivals, using the kind of divisive language that prompted protests in both cities even before he arrived.Across El Paso, some residents worried that Mr. Trump’s visit might do more harm than good.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump traveled on Wednesday to Dayton, Ohio, and El Paso, where mass shootings killed 31 people. Our colleagues described the scene in both cities. Guests: Mitch Smith, who covers the Midwest for The New York Times, and Michael Crowley, a White House correspondent. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump began a day set aside for healing in Dayton and El Paso by lashing out at rivals,<a href="https://www.nytimes.com/2019/08/07/us/politics/trump-el-paso-dayton-shootings.html?smid=pc-thedaily" target="_blank"> using the kind of divisive language that prompted protests</a> in both cities even before he arrived.</li><li>Across El Paso,<a href="https://www.nytimes.com/2019/08/07/us/el-paso-trump-escobar.html?smid=pc-thedaily" target="_blank"> </a>some residents <a href="https://www.nytimes.com/2019/08/07/us/el-paso-trump-escobar.html?smid=pc-thedaily" target="_blank">worried that Mr. Trump’s visit might do more harm than good</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OxZBEXF5V0soS_VjnZeMfxrKsQbyeib55MKD8qozK2I</guid>
      <pubDate>Thu, 08 Aug 2019 09:52:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fa3f417b-91ba-4414-b34d-67835f71b3fb.mp3" type="audio/mpeg" length="25587043"/>
    </item>
    <item>
      <title>Osama bin Laden’s Successor</title>
      <description>
        <![CDATA[<p>In the years before his death, Osama bin Laden seemed to be grooming a successor to lead Al Qaeda: his own son. Here’s what we learned this week about those plans. Guest: <a href="https://www.nytimes.com/by/rukmini-callimachi" target="_blank">Rukmini Callimachi</a>, who covers terrorism for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The care Osama bin Laden showed his son was not just fatherly, but appears to have been <a href="https://www.nytimes.com/2019/08/01/world/middleeast/hamza-bin-laden.html?smid=pc-thedaily" target="_blank">an attempt </a><a href="https://www.nytimes.com/2019/08/01/world/middleeast/hamza-bin-laden.html" target="_blank">by the world’s most hunted terrorist </a><a href="https://www.nytimes.com/2019/08/01/world/middleeast/hamza-bin-laden.html?smid=pc-thedaily" target="_blank">to secure his legacy</a>.</li><li>The United States had a role in<a href="https://www.nytimes.com/2019/07/31/us/politics/hamza-bin-laden-al-qaeda.html?smid=pc-thedaily" target="_blank"> the operation that killed Hamza bin Laden</a>, officials said. But other details, including where he died, are unknown.</li></ul>]]>
      </description>
      <itunes:title>Osama bin Laden’s Successor</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the years before his death, Osama bin Laden seemed to be grooming a successor to lead Al Qaeda: his own son. Here’s what we learned this week about those plans. Guest: Rukmini Callimachi, who covers terrorism for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The care Osama bin Laden showed his son was not just fatherly, but appears to have been an attempt by the world’s most hunted terrorist to secure his legacy.The United States had a role in the operation that killed Hamza bin Laden, officials said. But other details, including where he died, are unknown.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the years before his death, Osama bin Laden seemed to be grooming a successor to lead Al Qaeda: his own son. Here’s what we learned this week about those plans. Guest: <a href="https://www.nytimes.com/by/rukmini-callimachi" target="_blank">Rukmini Callimachi</a>, who covers terrorism for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The care Osama bin Laden showed his son was not just fatherly, but appears to have been <a href="https://www.nytimes.com/2019/08/01/world/middleeast/hamza-bin-laden.html?smid=pc-thedaily" target="_blank">an attempt </a><a href="https://www.nytimes.com/2019/08/01/world/middleeast/hamza-bin-laden.html" target="_blank">by the world’s most hunted terrorist </a><a href="https://www.nytimes.com/2019/08/01/world/middleeast/hamza-bin-laden.html?smid=pc-thedaily" target="_blank">to secure his legacy</a>.</li><li>The United States had a role in<a href="https://www.nytimes.com/2019/07/31/us/politics/hamza-bin-laden-al-qaeda.html?smid=pc-thedaily" target="_blank"> the operation that killed Hamza bin Laden</a>, officials said. But other details, including where he died, are unknown.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/SIxUY32GdLEmfXZgXQXAXawCQWlGdJkt9j8Y3yK0CEQ</guid>
      <pubDate>Wed, 07 Aug 2019 09:49:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a986cd55-2ccc-4959-947d-cbaf174c03db.mp3" type="audio/mpeg" length="21047170"/>
    </item>
    <item>
      <title>Shutting Down 8chan</title>
      <description>
        <![CDATA[<p>At least three mass shootings this year — including one in El Paso — have been announced in advance on the online message board 8chan, often accompanied by racist writings. We look at the battle over shutting down the site. Guests: <a href="https://www.nytimes.com/by/kevin-roose" target="_blank">Kevin Roose</a>, who writes about technology for The New York Times, spoke with Fredrick Brennan, the founder of 8chan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Fredrick Brennan started 8chan as a free speech utopia. But<a href="https://www.nytimes.com/2019/08/04/technology/8chan-shooting-manifesto.html?smid=pc-thedaily" target="_blank"> the site became known as something else</a>: a megaphone for mass shooters, and a recruiting platform for violent white nationalists.</li><li>Several tech providers pulled support for 8chan, temporarily taking the site offline.<a href="https://www.nytimes.com/2019/08/05/technology/8chan-cloudflare-el-paso.html?smid=pc-thedaily" target="_blank"> The decision to do so was not a straightforward one</a> for the security company Cloudflare.</li></ul>]]>
      </description>
      <itunes:title>Shutting Down 8chan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At least three mass shootings this year — including one in El Paso — have been announced in advance on the online message board 8chan, often accompanied by racist writings. We look at the battle over shutting down the site. Guests: Kevin Roose, who writes about technology for The New York Times, spoke with Fredrick Brennan, the founder of 8chan. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Fredrick Brennan started 8chan as a free speech utopia. But the site became known as something else: a megaphone for mass shooters, and a recruiting platform for violent white nationalists.Several tech providers pulled support for 8chan, temporarily taking the site offline. The decision to do so was not a straightforward one for the security company Cloudflare.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At least three mass shootings this year — including one in El Paso — have been announced in advance on the online message board 8chan, often accompanied by racist writings. We look at the battle over shutting down the site. Guests: <a href="https://www.nytimes.com/by/kevin-roose" target="_blank">Kevin Roose</a>, who writes about technology for The New York Times, spoke with Fredrick Brennan, the founder of 8chan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Fredrick Brennan started 8chan as a free speech utopia. But<a href="https://www.nytimes.com/2019/08/04/technology/8chan-shooting-manifesto.html?smid=pc-thedaily" target="_blank"> the site became known as something else</a>: a megaphone for mass shooters, and a recruiting platform for violent white nationalists.</li><li>Several tech providers pulled support for 8chan, temporarily taking the site offline.<a href="https://www.nytimes.com/2019/08/05/technology/8chan-cloudflare-el-paso.html?smid=pc-thedaily" target="_blank"> The decision to do so was not a straightforward one</a> for the security company Cloudflare.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vtK-nzq_BCC5Lr_XZg-HjTV1vs7H6yMfnvEIoyMEXLQ</guid>
      <pubDate>Tue, 06 Aug 2019 09:50:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/18954964-c3c7-4bc7-abc3-d47d8dbac46a.mp3" type="audio/mpeg" length="22637505"/>
    </item>
    <item>
      <title>Two Days, Two Cities, Two Massacres</title>
      <description>
        <![CDATA[<p>In two days, in two cities — El Paso and Dayton, Ohio — two mass shootings have left at least 29 people dead. We look at two stories from one of those shootings. Guests: Simon Romero, a national correspondent for The New York Times, and Jennifer Medina, who is covering the 2020 presidential campaign, spoke with us from El Paso. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>The back-to-back bursts of gun violence <a href="https://www.nytimes.com/2019/08/04/us/mass-shootings-dayton-el-paso.html?smid=pc-thedaily" target="_blank">left a nation stunned and shaken</a>.</li><li>The shooting rampage in El Paso was the <a href="https://www.nytimes.com/2019/08/04/us/el-paso-shooting-mexico-border.html?smid=pc-thedaily" target="_blank">deadliest anti-Latino attack in modern American history</a>. It is being investigated as domestic terrorism.</li><li>The Democratic presidential candidate Beto O’Rourke, who represented El Paso for years in Congress, <a href="https://www.nytimes.com/2019/08/04/us/politics/beto-el-paso-shooting.html?smid=pc-thedaily" target="_blank">said that President Trump had “a lot to do with what happened.”</a></li></ul>]]>
      </description>
      <itunes:title>Two Days, Two Cities, Two Massacres</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In two days, in two cities — El Paso and Dayton, Ohio — two mass shootings have left at least 29 people dead. We look at two stories from one of those shootings. Guests: Simon Romero, a national correspondent for The New York Times, and Jennifer Medina, who is covering the 2020 presidential campaign, spoke with us from El Paso. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: The back-to-back bursts of gun violence left a nation stunned and shaken.The shooting rampage in El Paso was the deadliest anti-Latino attack in modern American history. It is being investigated as domestic terrorism.The Democratic presidential candidate Beto O’Rourke, who represented El Paso for years in Congress, said that President Trump had “a lot to do with what happened.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In two days, in two cities — El Paso and Dayton, Ohio — two mass shootings have left at least 29 people dead. We look at two stories from one of those shootings. Guests: Simon Romero, a national correspondent for The New York Times, and Jennifer Medina, who is covering the 2020 presidential campaign, spoke with us from El Paso. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>The back-to-back bursts of gun violence <a href="https://www.nytimes.com/2019/08/04/us/mass-shootings-dayton-el-paso.html?smid=pc-thedaily" target="_blank">left a nation stunned and shaken</a>.</li><li>The shooting rampage in El Paso was the <a href="https://www.nytimes.com/2019/08/04/us/el-paso-shooting-mexico-border.html?smid=pc-thedaily" target="_blank">deadliest anti-Latino attack in modern American history</a>. It is being investigated as domestic terrorism.</li><li>The Democratic presidential candidate Beto O’Rourke, who represented El Paso for years in Congress, <a href="https://www.nytimes.com/2019/08/04/us/politics/beto-el-paso-shooting.html?smid=pc-thedaily" target="_blank">said that President Trump had “a lot to do with what happened.”</a></li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/r9b2SYtpy5_E8aPfjun4oPiVeOhIDltswKmlG0aqys4</guid>
      <pubDate>Mon, 05 Aug 2019 09:50:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b1eb7ec0-a085-4138-89a8-717f64c2a642.mp3" type="audio/mpeg" length="20006452"/>
    </item>
    <item>
      <title>How the Democratic Debates Narrow the Field</title>
      <description>
        <![CDATA[<p>Twenty Democratic presidential candidates have appeared on the debate stage for the last time. That’s in part because the Democratic National Committee has introduced a set of rules explicitly designed to narrow the field. We look at the intended and unintended consequences of that change. Guest: Reid J. Epstein, a political reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>It will be twice as hard for the 2020 Democrats to qualify for the next debate. In addition to<a href="https://www.nytimes.com/2019/08/01/us/politics/next-democratic-debate.html?smid=pc=thedaily" target="_blank"> the seven who already have</a>, three are within striking distance.</li><li>Democratic candidates aiming to replace President Trump are<a href="https://www.nytimes.com/2019/07/19/us/politics/next-democratic-debates.html?smid=pc-thedaily" target="_blank"> forced to choose between adopting his media tactics or being left behind as others do</a>.</li></ul>]]>
      </description>
      <itunes:title>How the Democratic Debates Narrow the Field</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Twenty Democratic presidential candidates have appeared on the debate stage for the last time. That’s in part because the Democratic National Committee has introduced a set of rules explicitly designed to narrow the field. We look at the intended and unintended consequences of that change. Guest: Reid J. Epstein, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: It will be twice as hard for the 2020 Democrats to qualify for the next debate. In addition to the seven who already have, three are within striking distance.Democratic candidates aiming to replace President Trump are forced to choose between adopting his media tactics or being left behind as others do.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Twenty Democratic presidential candidates have appeared on the debate stage for the last time. That’s in part because the Democratic National Committee has introduced a set of rules explicitly designed to narrow the field. We look at the intended and unintended consequences of that change. Guest: Reid J. Epstein, a political reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>It will be twice as hard for the 2020 Democrats to qualify for the next debate. In addition to<a href="https://www.nytimes.com/2019/08/01/us/politics/next-democratic-debate.html?smid=pc=thedaily" target="_blank"> the seven who already have</a>, three are within striking distance.</li><li>Democratic candidates aiming to replace President Trump are<a href="https://www.nytimes.com/2019/07/19/us/politics/next-democratic-debates.html?smid=pc-thedaily" target="_blank"> forced to choose between adopting his media tactics or being left behind as others do</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/SAjO6lqwHN-9S015bcenmLOYHZ6F-9BiBwv9f9v46Gw</guid>
      <pubDate>Fri, 02 Aug 2019 09:53:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d2194dde-304c-4cc1-99dc-5e6b2128dc0a.mp3" type="audio/mpeg" length="24328568"/>
    </item>
    <item>
      <title>The Economy Is Booming. Or Is It?</title>
      <description>
        <![CDATA[<p>The United States economy is in the middle of a record-long expansion. So why is the government deploying an economic weapon it last used during the 2008 financial crisis? Guest: Ben Casselman, who covers the economy for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Federal Reserve<a href="https://www.nytimes.com/2019/07/31/business/economy/federal-reserve-interest-rate-cut.html?smid=pc-thedaily" target="_blank"> cut its benchmark interest rate for the first time in more than a decade</a> as it tried to insulate the economy from President Trump’s trade war and a global slowdown.</li><li>The quarter-point reduction is unlikely to get you a better mortgage rate. Here’s<a href="https://www.nytimes.com/2019/07/31/your-money/fed-interest-rates.html?smid=pc-thedaily" target="_blank"> where you might see effects</a>.</li></ul>]]>
      </description>
      <itunes:title>The Economy Is Booming. Or Is It?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States economy is in the middle of a record-long expansion. So why is the government deploying an economic weapon it last used during the 2008 financial crisis? Guest: Ben Casselman, who covers the economy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The Federal Reserve cut its benchmark interest rate for the first time in more than a decade as it tried to insulate the economy from President Trump’s trade war and a global slowdown.The quarter-point reduction is unlikely to get you a better mortgage rate. Here’s where you might see effects.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States economy is in the middle of a record-long expansion. So why is the government deploying an economic weapon it last used during the 2008 financial crisis? Guest: Ben Casselman, who covers the economy for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The Federal Reserve<a href="https://www.nytimes.com/2019/07/31/business/economy/federal-reserve-interest-rate-cut.html?smid=pc-thedaily" target="_blank"> cut its benchmark interest rate for the first time in more than a decade</a> as it tried to insulate the economy from President Trump’s trade war and a global slowdown.</li><li>The quarter-point reduction is unlikely to get you a better mortgage rate. Here’s<a href="https://www.nytimes.com/2019/07/31/your-money/fed-interest-rates.html?smid=pc-thedaily" target="_blank"> where you might see effects</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/eRPqpzNIzIJQ-_rIKp18ZW9XOhwIrGQh-lCo3U173bQ</guid>
      <pubDate>Thu, 01 Aug 2019 09:52:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6249beab-0398-43d7-be35-3846cb31e61f.mp3" type="audio/mpeg" length="21261583"/>
    </item>
    <item>
      <title>What Does Kamala Harris Stand For?</title>
      <description>
        <![CDATA[<p>Democratic voters have been drawn to Senator Kamala Harris as a messenger, even though her message remains a work in progress. Ahead of her second presidential debate appearance, we consider what the candidate says she believes. Guest: Alexander Burns, who covers national politics for The New York Times, spoke with Ms. Harris. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Ms. Harris says she wants relevant policy, not “a beautiful sonnet.” <a href="https://www.nytimes.com/2019/07/27/us/politics/kamala-harris-2020-election.html?smid=pc-thedaily" target="_blank">Is that enough for voters</a>?</li><li>Read a <a href="https://www.nytimes.com/2019/07/30/us/politics/kamala-harris-interview-transcript.html?smid=pc-thedaily" target="_blank">transcript of our reporter’s conversation with Ms. Harris</a>.</li></ul>]]>
      </description>
      <itunes:title>What Does Kamala Harris Stand For?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Democratic voters have been drawn to Senator Kamala Harris as a messenger, even though her message remains a work in progress. Ahead of her second presidential debate appearance, we consider what the candidate says she believes. Guest: Alexander Burns, who covers national politics for The New York Times, spoke with Ms. Harris. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Ms. Harris says she wants relevant policy, not “a beautiful sonnet.” Is that enough for voters?Read a transcript of our reporter’s conversation with Ms. Harris.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Democratic voters have been drawn to Senator Kamala Harris as a messenger, even though her message remains a work in progress. Ahead of her second presidential debate appearance, we consider what the candidate says she believes. Guest: Alexander Burns, who covers national politics for The New York Times, spoke with Ms. Harris. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Ms. Harris says she wants relevant policy, not “a beautiful sonnet.” <a href="https://www.nytimes.com/2019/07/27/us/politics/kamala-harris-2020-election.html?smid=pc-thedaily" target="_blank">Is that enough for voters</a>?</li><li>Read a <a href="https://www.nytimes.com/2019/07/30/us/politics/kamala-harris-interview-transcript.html?smid=pc-thedaily" target="_blank">transcript of our reporter’s conversation with Ms. Harris</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bzJ3E7if2jvTn1Flr0fW3ZtI-GgpsBiGfs-_tFkP2tU</guid>
      <pubDate>Wed, 31 Jul 2019 09:53:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8e082330-fd9a-4bb9-b6c0-c05d95f3dd13.mp3" type="audio/mpeg" length="23643115"/>
    </item>
    <item>
      <title>The Origins of Boeing’s 737 Max Crisis</title>
      <description>
        <![CDATA[<p>Two crashes involving Boeing 737 Max jets have been linked to a software system that helped send the planes into a deadly nose-dive. Our colleague investigated what federal regulators responsible for ensuring the safety of the jets knew about that system. Guest: Natalie Kitroeff, a business reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A Times investigation found that the Federal Aviation Administration’s regulatory process, which gave Boeing significant oversight authority, <a href="https://www.nytimes.com/2019/07/27/business/boeing-737-max-faa.html?smid=pc-thedaily" target="_blank">compromised the safety of the 737 Max</a>.</li></ul>]]>
      </description>
      <itunes:title>The Origins of Boeing’s 737 Max Crisis</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two crashes involving Boeing 737 Max jets have been linked to a software system that helped send the planes into a deadly nose-dive. Our colleague investigated what federal regulators responsible for ensuring the safety of the jets knew about that system. Guest: Natalie Kitroeff, a business reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A Times investigation found that the Federal Aviation Administration’s regulatory process, which gave Boeing significant oversight authority, compromised the safety of the 737 Max.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Two crashes involving Boeing 737 Max jets have been linked to a software system that helped send the planes into a deadly nose-dive. Our colleague investigated what federal regulators responsible for ensuring the safety of the jets knew about that system. Guest: Natalie Kitroeff, a business reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A Times investigation found that the Federal Aviation Administration’s regulatory process, which gave Boeing significant oversight authority, <a href="https://www.nytimes.com/2019/07/27/business/boeing-737-max-faa.html?smid=pc-thedaily" target="_blank">compromised the safety of the 737 Max</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/AtWRqO6UfwuwECbj2cs38WyfIkRM5eEBjKmt5ubHHak</guid>
      <pubDate>Tue, 30 Jul 2019 09:52:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c1ee8374-f968-4696-afa1-61ffc476dbb7.mp3" type="audio/mpeg" length="24293877"/>
    </item>
    <item>
      <title>A Plan to End Partisan Gerrymandering</title>
      <description>
        <![CDATA[<p>The Supreme Court ruled last month that federal courts cannot rule on cases of partisan gerrymandering, saying that judges are not entitled to second-guess the decisions made by state legislators who draw voting maps. We spoke to one man who has long believed there’s a way to address the issue without the courts. Guest: Eric H. Holder Jr., who served as the United States attorney general for six years under President Barack Obama. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The <a href="https://www.nytimes.com/2019/06/27/us/politics/supreme-court-gerrymandering.html?smid=pc-thedaily" target="_blank">Supreme Court’s decision</a> on gerrymandering <a href="https://www.nytimes.com/2019/07/05/us/gerrymandering-state-legislatures-elections.html?smid=pc-thedaily" target="_blank">instantly raised the stakes for the nation’s state legislative races</a>, which are often overlooked by voters, but can shape the course of policy from abortion rights to education.</li><li>What is gerrymandering, and why did the Supreme Court rule on it? <a href="https://www.nytimes.com/2019/06/27/us/what-is-gerrymandering.html?smid=pc-thedaily" target="_blank">Here’s a refresher</a>.</li></ul>]]>
      </description>
      <itunes:title>A Plan to End Partisan Gerrymandering</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Supreme Court ruled last month that federal courts cannot rule on cases of partisan gerrymandering, saying that judges are not entitled to second-guess the decisions made by state legislators who draw voting maps. We spoke to one man who has long believed there’s a way to address the issue without the courts. Guest: Eric H. Holder Jr., who served as the United States attorney general for six years under President Barack Obama. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The Supreme Court’s decision on gerrymandering instantly raised the stakes for the nation’s state legislative races, which are often overlooked by voters, but can shape the course of policy from abortion rights to education.What is gerrymandering, and why did the Supreme Court rule on it? Here’s a refresher.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Supreme Court ruled last month that federal courts cannot rule on cases of partisan gerrymandering, saying that judges are not entitled to second-guess the decisions made by state legislators who draw voting maps. We spoke to one man who has long believed there’s a way to address the issue without the courts. Guest: Eric H. Holder Jr., who served as the United States attorney general for six years under President Barack Obama. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The <a href="https://www.nytimes.com/2019/06/27/us/politics/supreme-court-gerrymandering.html?smid=pc-thedaily" target="_blank">Supreme Court’s decision</a> on gerrymandering <a href="https://www.nytimes.com/2019/07/05/us/gerrymandering-state-legislatures-elections.html?smid=pc-thedaily" target="_blank">instantly raised the stakes for the nation’s state legislative races</a>, which are often overlooked by voters, but can shape the course of policy from abortion rights to education.</li><li>What is gerrymandering, and why did the Supreme Court rule on it? <a href="https://www.nytimes.com/2019/06/27/us/what-is-gerrymandering.html?smid=pc-thedaily" target="_blank">Here’s a refresher</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/s5DAyRU9eS7PFE9XsVC-bpPE8VouXyjmjfQ0HWUJSXs</guid>
      <pubDate>Mon, 29 Jul 2019 09:53:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/daced084-f0b4-4cd6-bb8c-fe4a61c9a3f7.mp3" type="audio/mpeg" length="22602396"/>
    </item>
    <item>
      <title>The Next Chapter of the Epstein Story</title>
      <description>
        <![CDATA[<p>Maxwell’s yearslong relationship with Jeffrey Epstein has raised questions about what she may have known about the allegations of sex trafficking against him. Now, thousands of pages of sealed documents stemming from their relationship are about to be made public. Guest: Megan Twohey, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>With Mr. Epstein under federal indictment on charges of sexually trafficking and abusing young girls, there are<a href="https://www.nytimes.com/2019/07/15/us/ghislaine-maxwell-epstein.html?smid=pc-thedaily" target="_blank"> growing questions about his relationship with Ms. Maxwell</a>. For more than a decade she helped manage Mr. Epstein’s homes, facilitate his social relationships and recruit masseuses, according to his former employees.</li></ul>]]>
      </description>
      <itunes:title>The Next Chapter of the Epstein Story</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Maxwell’s yearslong relationship with Jeffrey Epstein has raised questions about what she may have known about the allegations of sex trafficking against him. Now, thousands of pages of sealed documents stemming from their relationship are about to be made public. Guest: Megan Twohey, an investigative reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:With Mr. Epstein under federal indictment on charges of sexually trafficking and abusing young girls, there are growing questions about his relationship with Ms. Maxwell. For more than a decade she helped manage Mr. Epstein’s homes, facilitate his social relationships and recruit masseuses, according to his former employees.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Maxwell’s yearslong relationship with Jeffrey Epstein has raised questions about what she may have known about the allegations of sex trafficking against him. Now, thousands of pages of sealed documents stemming from their relationship are about to be made public. Guest: Megan Twohey, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>With Mr. Epstein under federal indictment on charges of sexually trafficking and abusing young girls, there are<a href="https://www.nytimes.com/2019/07/15/us/ghislaine-maxwell-epstein.html?smid=pc-thedaily" target="_blank"> growing questions about his relationship with Ms. Maxwell</a>. For more than a decade she helped manage Mr. Epstein’s homes, facilitate his social relationships and recruit masseuses, according to his former employees.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/B_JLiAYZ2rLnywmYNJgWI9z_SLxbOpy_xKVb-xgeL_M</guid>
      <pubDate>Fri, 26 Jul 2019 09:57:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ca1342bb-3d79-462a-ab06-40ef1f85eb3c.mp3" type="audio/mpeg" length="21037557"/>
    </item>
    <item>
      <title>Robert Mueller’s Testimony</title>
      <description>
        <![CDATA[<p>The former special counsel, Robert S. Mueller III, testified on Wednesday before Congress. He declared that his two-year investigation did not exonerate President Trump and that Russia would meddle again in American elections. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Lawmakers hunted for viral sound bites and tried to score political points, but<a href="https://www.nytimes.com/2019/07/24/us/politics/trump-mueller-testimony.html?smid=pc-thedaily" target="_blank"> Mr. Mueller consistently refused to accommodate them</a> in his long-awaited appearance before Congress.</li><li>Here are<a href="https://www.nytimes.com/2019/07/24/us/politics/mueller-testimony-takeaways.html?smid=pc-thedaily" target="_blank"> seven takeaways from the hearings</a>.</li></ul>]]>
      </description>
      <itunes:title>Robert Mueller’s Testimony</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The former special counsel, Robert S. Mueller III, testified on Wednesday before Congress. He declared that his two-year investigation did not exonerate President Trump and that Russia would meddle again in American elections. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Lawmakers hunted for viral sound bites and tried to score political points, but Mr. Mueller consistently refused to accommodate them in his long-awaited appearance before Congress.Here are seven takeaways from the hearings.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The former special counsel, Robert S. Mueller III, testified on Wednesday before Congress. He declared that his two-year investigation did not exonerate President Trump and that Russia would meddle again in American elections. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Lawmakers hunted for viral sound bites and tried to score political points, but<a href="https://www.nytimes.com/2019/07/24/us/politics/trump-mueller-testimony.html?smid=pc-thedaily" target="_blank"> Mr. Mueller consistently refused to accommodate them</a> in his long-awaited appearance before Congress.</li><li>Here are<a href="https://www.nytimes.com/2019/07/24/us/politics/mueller-testimony-takeaways.html?smid=pc-thedaily" target="_blank"> seven takeaways from the hearings</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wEr9Zj_yk4z_mr-edMSlxZmVk2Swao42cSp0L8fzZ0s</guid>
      <pubDate>Thu, 25 Jul 2019 09:52:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3c5a9ecb-1b79-4a64-aa88-022b561f71cd.mp3" type="audio/mpeg" length="27432751"/>
    </item>
    <item>
      <title>‘Send Her Back’: White Voters and Trump’s Path to Re-election</title>
      <description>
        <![CDATA[<p>The majority of Americans disapprove of President Trump. But in 2020, Democrats will still have a hard time defeating him. Here’s why. Guest: Nate Cohn, who covers elections, polling and demographics for The Upshot at The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump’s edge in the Electoral College<a href="https://www.nytimes.com/2019/07/19/upshot/trump-electoral-college-edge-.html" target="_blank"> may leave him closer to re-election than one might think based on his approval ratings</a> — and may also blunt the electoral cost of actions like his attacks against four congresswomen of color.&nbsp;</li></ul>]]>
      </description>
      <itunes:title>‘Send Her Back’: White Voters and Trump’s Path to Re-election</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The majority of Americans disapprove of President Trump. But in 2020, Democrats will still have a hard time defeating him. Here’s why. Guest: Nate Cohn, who covers elections, polling and demographics for The Upshot at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: President Trump’s edge in the Electoral College may leave him closer to re-election than one might think based on his approval ratings — and may also blunt the electoral cost of actions like his attacks against four congresswomen of color. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The majority of Americans disapprove of President Trump. But in 2020, Democrats will still have a hard time defeating him. Here’s why. Guest: Nate Cohn, who covers elections, polling and demographics for The Upshot at The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>President Trump’s edge in the Electoral College<a href="https://www.nytimes.com/2019/07/19/upshot/trump-electoral-college-edge-.html" target="_blank"> may leave him closer to re-election than one might think based on his approval ratings</a> — and may also blunt the electoral cost of actions like his attacks against four congresswomen of color.&nbsp;</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/FsGllA4nbF2XlklXVGm1rypjfXiH5IbHn_0lUG9sn6o</guid>
      <pubDate>Wed, 24 Jul 2019 09:47:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ae8c3636-44a4-475d-a97b-99adca15ef15.mp3" type="audio/mpeg" length="22192378"/>
    </item>
    <item>
      <title>Special Edition: A Guide to the Mueller Hearings</title>
      <description>
        <![CDATA[<p>Robert S. Mueller III, the former special counsel, will testify before the House Judiciary Committee and the House Intelligence Committee beginning at 8:30 a.m. Eastern on Wednesday. We spoke to our colleague about what to expect. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Read more about <a href="https://www.nytimes.com/2019/07/23/us/politics/robert-mueller-testimony-time-date.html?smid=pc-thedaily" target="_blank">what you need to know before the testimony</a>.</li><li>Here are <a href="https://www.nytimes.com/interactive/2019/07/22/us/politics/mueller-testimony-questions.html?smid=pc-thedaily" target="_blank">19 lingering questions for Mr. Mueller</a>, along with what we know or don’t know about the answers.</li></ul>]]>
      </description>
      <itunes:title>Special Edition: A Guide to the Mueller Hearings</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Robert S. Mueller III, the former special counsel, will testify before the House Judiciary Committee and the House Intelligence Committee beginning at 8:30 a.m. Eastern on Wednesday. We spoke to our colleague about what to expect. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Read more about what you need to know before the testimony.Here are 19 lingering questions for Mr. Mueller, along with what we know or don’t know about the answers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Robert S. Mueller III, the former special counsel, will testify before the House Judiciary Committee and the House Intelligence Committee beginning at 8:30 a.m. Eastern on Wednesday. We spoke to our colleague about what to expect. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Read more about <a href="https://www.nytimes.com/2019/07/23/us/politics/robert-mueller-testimony-time-date.html?smid=pc-thedaily" target="_blank">what you need to know before the testimony</a>.</li><li>Here are <a href="https://www.nytimes.com/interactive/2019/07/22/us/politics/mueller-testimony-questions.html?smid=pc-thedaily" target="_blank">19 lingering questions for Mr. Mueller</a>, along with what we know or don’t know about the answers.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_sk4CBawcW10nHVIGjnBs-xnvUI3eXU0IHd1a8kkSws</guid>
      <pubDate>Tue, 23 Jul 2019 22:43:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6eccd851-77af-42ad-83d1-72f3f2d69383.mp3" type="audio/mpeg" length="18177462"/>
    </item>
    <item>
      <title>The Fight Over Planned Parenthood’s Future</title>
      <description>
        <![CDATA[<p>Dr. Leana Wen, the first physician to lead Planned Parenthood in decades, was ousted after just eight months on the job. Her departure highlights a central tension over the direction of the group: Is it a political organization first, or a health organization?&nbsp;Guest: Sarah Kliff, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>As states began to pass ever more restrictive laws on abortion, Planned Parenthood’s leaders<a href="https://www.nytimes.com/2019/07/17/us/politics/planned-parenthood-wen.html?smid=pc-thedaily" target="_blank"> felt they needed a more aggressive political leader</a> to fight efforts to roll back abortion access.</li><li>“I was asked to leave for the same reason I was hired: I was changing the direction of Planned Parenthood,” <a href="https://www.nytimes.com/2019/07/19/opinion/sunday/leana-wen-planned-parenthood.html?smid=pc-thedaily" target="_blank">Dr. Wen wrote in an Op-Ed for The Times</a>.</li></ul>]]>
      </description>
      <itunes:title>The Fight Over Planned Parenthood’s Future</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Dr. Leana Wen, the first physician to lead Planned Parenthood in decades, was ousted after just eight months on the job. Her departure highlights a central tension over the direction of the group: Is it a political organization first, or a health organization? Guest: Sarah Kliff, an investigative reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: As states began to pass ever more restrictive laws on abortion, Planned Parenthood’s leaders felt they needed a more aggressive political leader to fight efforts to roll back abortion access.“I was asked to leave for the same reason I was hired: I was changing the direction of Planned Parenthood,” Dr. Wen wrote in an Op-Ed for The Times.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Dr. Leana Wen, the first physician to lead Planned Parenthood in decades, was ousted after just eight months on the job. Her departure highlights a central tension over the direction of the group: Is it a political organization first, or a health organization?&nbsp;Guest: Sarah Kliff, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>As states began to pass ever more restrictive laws on abortion, Planned Parenthood’s leaders<a href="https://www.nytimes.com/2019/07/17/us/politics/planned-parenthood-wen.html?smid=pc-thedaily" target="_blank"> felt they needed a more aggressive political leader</a> to fight efforts to roll back abortion access.</li><li>“I was asked to leave for the same reason I was hired: I was changing the direction of Planned Parenthood,” <a href="https://www.nytimes.com/2019/07/19/opinion/sunday/leana-wen-planned-parenthood.html?smid=pc-thedaily" target="_blank">Dr. Wen wrote in an Op-Ed for The Times</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2AEzScTfPk5EIzqsPWNis15UQ3NgQc-z_DjEarxnLoE</guid>
      <pubDate>Tue, 23 Jul 2019 09:50:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/be090698-fe47-43f9-9755-912e3182a11a.mp3" type="audio/mpeg" length="20862850"/>
    </item>
    <item>
      <title>The Making of Boris Johnson</title>
      <description>
        <![CDATA[<p>After trying and failing to withdraw Britain from the European Union, Theresa May will resign this week as the country’s prime minister. Here’s how the man expected to succeed her, Boris Johnson, made Brexit — and how Brexit may soon make him prime minister. Guest: Sarah Lyall, a writer at large for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Johnson has become<a href="https://www.nytimes.com/2019/06/26/world/europe/boris-johnson-prime-minister-uk.html?smid=pc-thedaily" target="_blank"> one of the great escape artists of British politics</a>.</li><li>Some of Mr. Johnson’s family members, once staunch opponents of Brexit,<a href="https://www.nytimes.com/2019/07/21/world/europe/for-boris-johnsons-clan-blood-is-thicker-than-political-conviction.html?smid=pc-thedaily" target="_blank"> have had to perform a complicated political jujitsu</a> around his candidacy for prime minister.</li><li>Prime Minister Theresa May is scheduled to step down on Wednesday. Only 160,000 Conservative Party members can vote for the next leader,<a href="https://www.nytimes.com/2019/07/20/world/europe/uk-prime-minister-vote.html?smid=pc-thedaily" target="_blank"> sidelining 99 percent of registered voters</a>.</li></ul>]]>
      </description>
      <itunes:title>The Making of Boris Johnson</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After trying and failing to withdraw Britain from the European Union, Theresa May will resign this week as the country’s prime minister. Here’s how the man expected to succeed her, Boris Johnson, made Brexit — and how Brexit may soon make him prime minister. Guest: Sarah Lyall, a writer at large for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Johnson has become one of the great escape artists of British politics.Some of Mr. Johnson’s family members, once staunch opponents of Brexit, have had to perform a complicated political jujitsu around his candidacy for prime minister.Prime Minister Theresa May is scheduled to step down on Wednesday. Only 160,000 Conservative Party members can vote for the next leader, sidelining 99 percent of registered voters.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After trying and failing to withdraw Britain from the European Union, Theresa May will resign this week as the country’s prime minister. Here’s how the man expected to succeed her, Boris Johnson, made Brexit — and how Brexit may soon make him prime minister. Guest: Sarah Lyall, a writer at large for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Johnson has become<a href="https://www.nytimes.com/2019/06/26/world/europe/boris-johnson-prime-minister-uk.html?smid=pc-thedaily" target="_blank"> one of the great escape artists of British politics</a>.</li><li>Some of Mr. Johnson’s family members, once staunch opponents of Brexit,<a href="https://www.nytimes.com/2019/07/21/world/europe/for-boris-johnsons-clan-blood-is-thicker-than-political-conviction.html?smid=pc-thedaily" target="_blank"> have had to perform a complicated political jujitsu</a> around his candidacy for prime minister.</li><li>Prime Minister Theresa May is scheduled to step down on Wednesday. Only 160,000 Conservative Party members can vote for the next leader,<a href="https://www.nytimes.com/2019/07/20/world/europe/uk-prime-minister-vote.html?smid=pc-thedaily" target="_blank"> sidelining 99 percent of registered voters</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/P0RU4Q8bhoCbRZYdShRAzhuBbLArM4CHHzBk1RbEDgY</guid>
      <pubDate>Mon, 22 Jul 2019 09:55:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/266a7476-4bce-4675-83a7-7c9f95c2e08d.mp3" type="audio/mpeg" length="26826292"/>
    </item>
    <item>
      <title>The Almost Moon Man</title>
      <description>
        <![CDATA[<p>There are two stories from the 1960s that America likes to tell about itself — the civil rights movement and the space race. We look at the brief moment when the two collided. Guest: Emily Ludolph, who covered this story for The New York Times, spoke with Ed Dwight, a former Air Force pilot who had trained to be the first black astronaut. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>President John F. Kennedy was Ed Dwight’s champion. Within weeks of the president’s assassination, <a href="https://www.nytimes.com/2019/07/16/us/ed-dwight-was-set-to-be-the-first-black-astronaut-heres-why-that-never-happened.html?smid=pc-thedaily" target="_blank">Mr. Dwight’s career as a prospective astronaut ended</a>.</li></ul>]]>
      </description>
      <itunes:title>The Almost Moon Man</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>There are two stories from the 1960s that America likes to tell about itself — the civil rights movement and the space race. We look at the brief moment when the two collided. Guest: Emily Ludolph, who covered this story for The New York Times, spoke with Ed Dwight, a former Air Force pilot who had trained to be the first black astronaut. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: President John F. Kennedy was Ed Dwight’s champion. Within weeks of the president’s assassination, Mr. Dwight’s career as a prospective astronaut ended.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>There are two stories from the 1960s that America likes to tell about itself — the civil rights movement and the space race. We look at the brief moment when the two collided. Guest: Emily Ludolph, who covered this story for The New York Times, spoke with Ed Dwight, a former Air Force pilot who had trained to be the first black astronaut. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:&nbsp;</p><ul><li>President John F. Kennedy was Ed Dwight’s champion. Within weeks of the president’s assassination, <a href="https://www.nytimes.com/2019/07/16/us/ed-dwight-was-set-to-be-the-first-black-astronaut-heres-why-that-never-happened.html?smid=pc-thedaily" target="_blank">Mr. Dwight’s career as a prospective astronaut ended</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Qu4CsUPcx_78WFW431F5s29aysSXDjcdC1Dq6P5_ZMM</guid>
      <pubDate>Sun, 21 Jul 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:27</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0d52b7ba-0c10-41ed-b310-0d97b4024548.mp3" type="audio/mpeg" length="22524656"/>
    </item>
    <item>
      <title>The Political Crisis in Puerto Rico</title>
      <description>
        <![CDATA[<p>Hundreds of leaked text messages revealed the governor of Puerto Rico mocking his own citizens. For many Puerto Ricans, it was the last straw. Guest: Patricia Mazzei, the Miami bureau chief for The New York Times, spoke with us from San Juan, P.R. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Tens of thousands of people from across Puerto Rican society have united in nearly a week of protests that reveal <a href="https://www.nytimes.com/2019/07/18/us/puerto-rico-rossello-governor-protests.html?smid=pc-thedaily" target="_blank">deep dissatisfaction with how the island is governed</a>.</li></ul>]]>
      </description>
      <itunes:title>The Political Crisis in Puerto Rico</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Hundreds of leaked text messages revealed the governor of Puerto Rico mocking his own citizens. For many Puerto Ricans, it was the last straw. Guest: Patricia Mazzei, the Miami bureau chief for The New York Times, spoke with us from San Juan, P.R. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Tens of thousands of people from across Puerto Rican society have united in nearly a week of protests that reveal deep dissatisfaction with how the island is governed.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Hundreds of leaked text messages revealed the governor of Puerto Rico mocking his own citizens. For many Puerto Ricans, it was the last straw. Guest: Patricia Mazzei, the Miami bureau chief for The New York Times, spoke with us from San Juan, P.R. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Tens of thousands of people from across Puerto Rican society have united in nearly a week of protests that reveal <a href="https://www.nytimes.com/2019/07/18/us/puerto-rico-rossello-governor-protests.html?smid=pc-thedaily" target="_blank">deep dissatisfaction with how the island is governed</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/B7olSvxNQ5ADep3-XbHij17HD7RXzc9ph4t3fnYFYGQ</guid>
      <pubDate>Fri, 19 Jul 2019 09:55:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4c023bf6-6aad-4aca-8a6f-ea232a864cb6.mp3" type="audio/mpeg" length="22499160"/>
    </item>
    <item>
      <title>The Myth That Busing Failed</title>
      <description>
        <![CDATA[<p>The first Democratic debate brought renewed attention to busing as a tool of school desegregation. We spoke to a colleague about what the conversation has been missing. Guest: Nikole Hannah-Jones, who writes about racial injustice for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>“The school bus, treasured when it was serving as a tool of segregation,<a href="https://www.nytimes.com/2019/07/12/opinion/sunday/it-was-never-about-busing.html?smid=pc-thedaily" target="_blank"> became reviled only when it transformed into a tool of integration</a>,” Nikole Hannah-Jones writes in a news analysis.</li></ul>]]>
      </description>
      <itunes:title>The Myth That Busing Failed</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The first Democratic debate brought renewed attention to busing as a tool of school desegregation. We spoke to a colleague about what the conversation has been missing. Guest: Nikole Hannah-Jones, who writes about racial injustice for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: “The school bus, treasured when it was serving as a tool of segregation, became reviled only when it transformed into a tool of integration,” Nikole Hannah-Jones writes in a news analysis.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The first Democratic debate brought renewed attention to busing as a tool of school desegregation. We spoke to a colleague about what the conversation has been missing. Guest: Nikole Hannah-Jones, who writes about racial injustice for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>“The school bus, treasured when it was serving as a tool of segregation,<a href="https://www.nytimes.com/2019/07/12/opinion/sunday/it-was-never-about-busing.html?smid=pc-thedaily" target="_blank"> became reviled only when it transformed into a tool of integration</a>,” Nikole Hannah-Jones writes in a news analysis.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/iszli6lxtV6rwD_GCksP_97n1slM3t_-ZOvbU3AvEIA</guid>
      <pubDate>Thu, 18 Jul 2019 09:55:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/65f2c39b-3a5f-4f25-bf0e-7ce1325a0a8a.mp3" type="audio/mpeg" length="25987448"/>
    </item>
    <item>
      <title>A Decision in the Eric Garner Case</title>
      <description>
        <![CDATA[<p>One day before the fifth anniversary of Eric Garner’s death at the hands of police officers in New York, the Justice Department said it would not bring federal civil rights charges against an officer involved. We look at that decision. Guest: Ashley Southall, who covers New York for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Attorney General William P. Barr<a href="https://www.nytimes.com/2019/07/16/nyregion/eric-garner-case-death-daniel-pantaleo.html?smid=pc-thedaily" target="_blank"> made the call not to seek a civil rights indictment</a> against Officer Daniel Pantaleo.</li><li>“The D.O.J. has failed us,”<a href="https://www.nytimes.com/2019/07/16/nyregion/eric-garner-justice-department-charges.html?smid=pc-thedaily" target="_blank"> Mr. Garner’s mother, Gwen Carr, said</a>. “Five years ago, my son said ‘I can’t breathe’ 11 times. Today, we can’t breathe. Because they have let us down.”</li></ul>]]>
      </description>
      <itunes:title>A Decision in the Eric Garner Case</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>One day before the fifth anniversary of Eric Garner’s death at the hands of police officers in New York, the Justice Department said it would not bring federal civil rights charges against an officer involved. We look at that decision. Guest: Ashley Southall, who covers New York for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Attorney General William P. Barr made the call not to seek a civil rights indictment against Officer Daniel Pantaleo.“The D.O.J. has failed us,” Mr. Garner’s mother, Gwen Carr, said. “Five years ago, my son said ‘I can’t breathe’ 11 times. Today, we can’t breathe. Because they have let us down.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>One day before the fifth anniversary of Eric Garner’s death at the hands of police officers in New York, the Justice Department said it would not bring federal civil rights charges against an officer involved. We look at that decision. Guest: Ashley Southall, who covers New York for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Attorney General William P. Barr<a href="https://www.nytimes.com/2019/07/16/nyregion/eric-garner-case-death-daniel-pantaleo.html?smid=pc-thedaily" target="_blank"> made the call not to seek a civil rights indictment</a> against Officer Daniel Pantaleo.</li><li>“The D.O.J. has failed us,”<a href="https://www.nytimes.com/2019/07/16/nyregion/eric-garner-justice-department-charges.html?smid=pc-thedaily" target="_blank"> Mr. Garner’s mother, Gwen Carr, said</a>. “Five years ago, my son said ‘I can’t breathe’ 11 times. Today, we can’t breathe. Because they have let us down.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WbnlyLiuGQ6r7x51mrm1KCRE-xu7W7d4fS9e5pKDBLA</guid>
      <pubDate>Wed, 17 Jul 2019 09:53:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/90e30138-b92a-419c-9eb7-f482c734239b.mp3" type="audio/mpeg" length="21483937"/>
    </item>
    <item>
      <title>Trump and ‘the Squad’</title>
      <description>
        <![CDATA[<p>In a second day of attacks, President Trump said that four Democratic congresswomen hated the United States and were free to leave the country. The lawmakers — Representatives Alexandria Ocasio-Cortez of New York, Ilhan Omar of Minnesota, Ayanna S. Pressley of Massachusetts and Rashida Tlaib of Michigan — said they refused to be silenced. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;This episode includes disturbing language.</p><p>Background reading:&nbsp;</p><ul><li>President Trump appeared determined on Monday to amplify<a href="https://www.nytimes.com/2019/07/14/us/politics/trump-twitter-squad-congress.html?smid=pc-thedaily" target="_blank"> remarks that members of his own party called racist</a>. The lawmakers he singled out<a href="https://www.nytimes.com/2019/07/15/us/politics/trump-go-back-tweet-racism.html?smid=pc-thedaily" target="_blank"> responded by charging that the president was pressing the agenda of white nationalists</a>.</li></ul>]]>
      </description>
      <itunes:title>Trump and ‘the Squad’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a second day of attacks, President Trump said that four Democratic congresswomen hated the United States and were free to leave the country. The lawmakers — Representatives Alexandria Ocasio-Cortez of New York, Ilhan Omar of Minnesota, Ayanna S. Pressley of Massachusetts and Rashida Tlaib of Michigan — said they refused to be silenced. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. This episode includes disturbing language.

Background reading: President Trump appeared determined on Monday to amplify remarks that members of his own party called racist. The lawmakers he singled out responded by charging that the president was pressing the agenda of white nationalists.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a second day of attacks, President Trump said that four Democratic congresswomen hated the United States and were free to leave the country. The lawmakers — Representatives Alexandria Ocasio-Cortez of New York, Ilhan Omar of Minnesota, Ayanna S. Pressley of Massachusetts and Rashida Tlaib of Michigan — said they refused to be silenced. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;This episode includes disturbing language.</p><p>Background reading:&nbsp;</p><ul><li>President Trump appeared determined on Monday to amplify<a href="https://www.nytimes.com/2019/07/14/us/politics/trump-twitter-squad-congress.html?smid=pc-thedaily" target="_blank"> remarks that members of his own party called racist</a>. The lawmakers he singled out<a href="https://www.nytimes.com/2019/07/15/us/politics/trump-go-back-tweet-racism.html?smid=pc-thedaily" target="_blank"> responded by charging that the president was pressing the agenda of white nationalists</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Z8Iqjwbb7mKsz9xY0F6Lgk45sKwpT6X-PcQbZTSxeyM</guid>
      <pubDate>Tue, 16 Jul 2019 09:53:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/39edc95f-faff-453e-b0b8-c8bc6d9ad3a0.mp3" type="audio/mpeg" length="24598151"/>
    </item>
    <item>
      <title>Waiting for the Immigration Raids</title>
      <description>
        <![CDATA[<p>This past weekend, immigration officials were scheduled to begin arresting and deporting thousands of undocumented immigrants who had been ordered to leave the United States but had remained. On Friday evening, we spoke to one woman who feared she was on the list. Guest: Herminia, an undocumented immigrant who has been living in the United States with her husband and children for more than a decade. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>A small number of raids targeting recently arrived undocumented migrant parents and their children took place over the weekend. <a href="https://www.nytimes.com/2019/07/14/us/ice-immigration-raids.html?smid=pc-thedaily" target="_blank">More raids are expected to follow throughout the week</a>.</li></ul>]]>
      </description>
      <itunes:title>Waiting for the Immigration Raids</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This past weekend, immigration officials were scheduled to begin arresting and deporting thousands of undocumented immigrants who had been ordered to leave the United States but had remained. On Friday evening, we spoke to one woman who feared she was on the list. Guest: Herminia, an undocumented immigrant who has been living in the United States with her husband and children for more than a decade. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:A small number of raids targeting recently arrived undocumented migrant parents and their children took place over the weekend. More raids are expected to follow throughout the week.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This past weekend, immigration officials were scheduled to begin arresting and deporting thousands of undocumented immigrants who had been ordered to leave the United States but had remained. On Friday evening, we spoke to one woman who feared she was on the list. Guest: Herminia, an undocumented immigrant who has been living in the United States with her husband and children for more than a decade. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>A small number of raids targeting recently arrived undocumented migrant parents and their children took place over the weekend. <a href="https://www.nytimes.com/2019/07/14/us/ice-immigration-raids.html?smid=pc-thedaily" target="_blank">More raids are expected to follow throughout the week</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/S8zFsv4jSHQ094ijDICIISukKmG5xm9qoXGaw9CNeVs</guid>
      <pubDate>Mon, 15 Jul 2019 09:54:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b2912d00-2ed3-4d45-adf6-f6efeb1ce7a7.mp3" type="audio/mpeg" length="25179533"/>
    </item>
    <item>
      <title>Can Gun Makers Be Held Accountable for Mass Shootings?</title>
      <description>
        <![CDATA[<p>As mass shootings became commonplace, attempts to hold gun makers accountable kept hitting the same roadblock — until now. We look at a lawsuit that could transform the firearms industry. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with David Wheeler, whose 6-year-old son, Ben, died in the massacre at Sandy Hook Elementary School; and Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A Connecticut Supreme Court ruling <a href="https://www.nytimes.com/2019/03/14/nyregion/sandy-hook-supreme-court.html?smid=pc-thedaily" target="_blank">has created a potential opening for Sandy Hook families</a> to maneuver around the gun industry’s legal shield and hold companies liable for the attack.</li><li>The families are <a href="https://www.nytimes.com/2019/04/08/nyregion/sandy-hook-gun-lawsuit.html?smid=pc-thedaily" target="_blank">hoping to replicate a tactic used in lawsuits against cigarette manufacturers</a>.</li></ul>]]>
      </description>
      <itunes:title>Can Gun Makers Be Held Accountable for Mass Shootings?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As mass shootings became commonplace, attempts to hold gun makers accountable kept hitting the same roadblock — until now. We look at a lawsuit that could transform the firearms industry. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with David Wheeler, whose 6-year-old son, Ben, died in the massacre at Sandy Hook Elementary School; and Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A Connecticut Supreme Court ruling has created a potential opening for Sandy Hook families to maneuver around the gun industry’s legal shield and hold companies liable for the attack.The families are hoping to replicate a tactic used in lawsuits against cigarette manufacturers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As mass shootings became commonplace, attempts to hold gun makers accountable kept hitting the same roadblock — until now. We look at a lawsuit that could transform the firearms industry. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with David Wheeler, whose 6-year-old son, Ben, died in the massacre at Sandy Hook Elementary School; and Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A Connecticut Supreme Court ruling <a href="https://www.nytimes.com/2019/03/14/nyregion/sandy-hook-supreme-court.html?smid=pc-thedaily" target="_blank">has created a potential opening for Sandy Hook families</a> to maneuver around the gun industry’s legal shield and hold companies liable for the attack.</li><li>The families are <a href="https://www.nytimes.com/2019/04/08/nyregion/sandy-hook-gun-lawsuit.html?smid=pc-thedaily" target="_blank">hoping to replicate a tactic used in lawsuits against cigarette manufacturers</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5KvZWeHEiq-3dMbE4IOKSJjRjbhz_tF2TXNpZ85dAi0</guid>
      <pubDate>Fri, 12 Jul 2019 09:57:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9983f54f-ae07-4eb5-b337-ccbf08e421b9.mp3" type="audio/mpeg" length="29804669"/>
    </item>
    <item>
      <title>The President and the Census</title>
      <description>
        <![CDATA[<p>Federal courts keep rejecting President Trump’s attempts to ask about citizenship on the 2020 census. But no matter what the courts decide, the president may have already achieved his goal. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A day after pledging that the census would not ask about citizenship, Justice Department officials <a href="https://www.nytimes.com/2019/07/03/us/politics/census-citizenship-question.html?smid=pc-thedaily" target="_blank">said they were seeking a way to restore the question</a> on orders from President Trump.</li><li>But for many immigrant communities, the <a href="https://www.nytimes.com/2019/06/27/us/supreme-court-citizenship-census-immigrants.html?smid=pc-thedaily" target="_blank">damage may be done</a> when it comes to the census.</li></ul>]]>
      </description>
      <itunes:title>The President and the Census</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Federal courts keep rejecting President Trump’s attempts to ask about citizenship on the 2020 census. But no matter what the courts decide, the president may have already achieved his goal. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A day after pledging that the census would not ask about citizenship, Justice Department officials said they were seeking a way to restore the question on orders from President Trump.But for many immigrant communities, the damage may be done when it comes to the census.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Federal courts keep rejecting President Trump’s attempts to ask about citizenship on the 2020 census. But no matter what the courts decide, the president may have already achieved his goal. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>A day after pledging that the census would not ask about citizenship, Justice Department officials <a href="https://www.nytimes.com/2019/07/03/us/politics/census-citizenship-question.html?smid=pc-thedaily" target="_blank">said they were seeking a way to restore the question</a> on orders from President Trump.</li><li>But for many immigrant communities, the <a href="https://www.nytimes.com/2019/06/27/us/supreme-court-citizenship-census-immigrants.html?smid=pc-thedaily" target="_blank">damage may be done</a> when it comes to the census.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3TCmozNF8px6GDeMchdw1cPRDqQ3TXR4zu0AV225hG4</guid>
      <pubDate>Thu, 11 Jul 2019 09:58:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1d1da369-42b7-47b6-89cd-73336174f803.mp3" type="audio/mpeg" length="23513965"/>
    </item>
    <item>
      <title>The Plan to Elect Republican Women</title>
      <description>
        <![CDATA[<p>Out of 198 Republicans in the House of Representatives, just 13 are women. This week, a closely watched election in North Carolina may help determine how serious the party is about changing that. Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis" target="_blank">Julie Hirschfeld Davis</a>, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Dr. Greg Murphy, a state representative and urological surgeon,<a href="https://www.nytimes.com/interactive/2019/07/09/us/elections/results-north-carolina-house-3-special-primary-runoff.html?smid=pc-thedaily" target="_blank"> defeated Dr. Joan Perry</a>, a pediatrician, in a race that<a href="https://www.nytimes.com/2019/07/07/us/politics/north-carolina-republican-women.html?smid=pc-thedaily" target="_blank"> set off a clash at the highest levels of the Republican Party</a>.</li><li>After watching Democratic women make historic gains in the 2018 midterm election, Republican women<a href="https://www.nytimes.com/2019/07/09/us/politics/republican-women-congress.html?smid=pc-thedaily" target="_blank"> have decided to adopt the Democrats’ strategy for themselves</a>.</li></ul>]]>
      </description>
      <itunes:title>The Plan to Elect Republican Women</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Out of 198 Republicans in the House of Representatives, just 13 are women. This week, a closely watched election in North Carolina may help determine how serious the party is about changing that. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Dr. Greg Murphy, a state representative and urological surgeon, defeated Dr. Joan Perry, a pediatrician, in a race that set off a clash at the highest levels of the Republican Party.After watching Democratic women make historic gains in the 2018 midterm election, Republican women have decided to adopt the Democrats’ strategy for themselves.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Out of 198 Republicans in the House of Representatives, just 13 are women. This week, a closely watched election in North Carolina may help determine how serious the party is about changing that. Guest: <a href="https://www.nytimes.com/by/julie-hirschfeld-davis" target="_blank">Julie Hirschfeld Davis</a>, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Dr. Greg Murphy, a state representative and urological surgeon,<a href="https://www.nytimes.com/interactive/2019/07/09/us/elections/results-north-carolina-house-3-special-primary-runoff.html?smid=pc-thedaily" target="_blank"> defeated Dr. Joan Perry</a>, a pediatrician, in a race that<a href="https://www.nytimes.com/2019/07/07/us/politics/north-carolina-republican-women.html?smid=pc-thedaily" target="_blank"> set off a clash at the highest levels of the Republican Party</a>.</li><li>After watching Democratic women make historic gains in the 2018 midterm election, Republican women<a href="https://www.nytimes.com/2019/07/09/us/politics/republican-women-congress.html?smid=pc-thedaily" target="_blank"> have decided to adopt the Democrats’ strategy for themselves</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/cqGnL-TMXYGp67JAZxlfhtcz784WQpa36vx29kSGUTI</guid>
      <pubDate>Wed, 10 Jul 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ffafbf8d-0f35-41c2-9744-58921a3f649e.mp3" type="audio/mpeg" length="22982321"/>
    </item>
    <item>
      <title>United States v. Jeffrey Epstein</title>
      <description>
        <![CDATA[<p>Prosecutors in New York have accused the billionaire financier Jeffrey Epstein of sexually abusing dozens of underage girls and of asking them to recruit others. We spoke with our colleague about what happened in a similar case against Mr. Epstein over a decade ago. Guest: <a href="https://www.nytimes.com/by/patricia-mazzei" target="_blank">Patricia Mazzei</a>, the Miami bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The new indictment of Mr. Epstein<a href="https://www.nytimes.com/2019/07/08/nyregion/jeffrey-epstein-charges.html?smid=pc-thedaily" target="_blank"> could prompt a reckoning for the Justice Department</a>, which is facing fresh scrutiny over a plea deal in 2008 that protected him from federal charges.</li><li>Alexander Acosta, President Trump’s labor secretary and the former United States attorney in the Southern District of Florida,<a href="https://www.nytimes.com/2019/07/07/nyregion/jeffrey-epstein-trump.html?smid=pc-thedaily" target="_blank"> was personally involved in negotiating that plea deal</a>.</li></ul>]]>
      </description>
      <itunes:title>United States v. Jeffrey Epstein</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Prosecutors in New York have accused the billionaire financier Jeffrey Epstein of sexually abusing dozens of underage girls and of asking them to recruit others. We spoke with our colleague about what happened in a similar case against Mr. Epstein over a decade ago. Guest: Patricia Mazzei, the Miami bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The new indictment of Mr. Epstein could prompt a reckoning for the Justice Department, which is facing fresh scrutiny over a plea deal in 2008 that protected him from federal charges.Alexander Acosta, President Trump’s labor secretary and the former United States attorney in the Southern District of Florida, was personally involved in negotiating that plea deal.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Prosecutors in New York have accused the billionaire financier Jeffrey Epstein of sexually abusing dozens of underage girls and of asking them to recruit others. We spoke with our colleague about what happened in a similar case against Mr. Epstein over a decade ago. Guest: <a href="https://www.nytimes.com/by/patricia-mazzei" target="_blank">Patricia Mazzei</a>, the Miami bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The new indictment of Mr. Epstein<a href="https://www.nytimes.com/2019/07/08/nyregion/jeffrey-epstein-charges.html?smid=pc-thedaily" target="_blank"> could prompt a reckoning for the Justice Department</a>, which is facing fresh scrutiny over a plea deal in 2008 that protected him from federal charges.</li><li>Alexander Acosta, President Trump’s labor secretary and the former United States attorney in the Southern District of Florida,<a href="https://www.nytimes.com/2019/07/07/nyregion/jeffrey-epstein-trump.html?smid=pc-thedaily" target="_blank"> was personally involved in negotiating that plea deal</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/O4tB1TzO0x5OWoP74bKoy8yafwLBB8a49eJFQ44xiCU</guid>
      <pubDate>Tue, 09 Jul 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5221992a-b7e2-4d4d-8f57-0ffd41a89bec.mp3" type="audio/mpeg" length="22594455"/>
    </item>
    <item>
      <title>The Trial of a Navy SEAL Chief</title>
      <description>
        <![CDATA[<p>The trial of Special Operations Chief Edward Gallagher, a decorated member of the Navy SEALs, offered rare insight into a culture that is, by design, difficult to penetrate. Our colleague tells us what he learned from the verdict. Guest: <a href="https://www.nytimes.com/by/dave-philipps" target="_blank">Dave Philipps</a>, who covers the military for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>After a key witness for prosecutors<a href="https://www.nytimes.com/2019/06/20/us/navy-seal-edward-gallagher-corey-scott.html?smid=pc-thedaily" target="_blank"> changed his story on the stand</a>, Chief Gallagher<a href="https://www.nytimes.com/2019/07/02/us/navy-seal-trial-verdict.html?smid=pc-thedaily" target="_blank"> was found not guilty of the most serious charges against him</a>, including the first-degree murder of a captive ISIS fighter and attempted murder of civilians in Iraq.</li><li>Some SEAL commanders<a href="https://www.nytimes.com/2019/07/03/us/Edward-Gallagher-acquitted.html?smid=pc-thedaily" target="_blank"> expressed worry that the verdict would discourage others</a> from reporting possible war crimes in the future.</li></ul>]]>
      </description>
      <itunes:title>The Trial of a Navy SEAL Chief</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The trial of Special Operations Chief Edward Gallagher, a decorated member of the Navy SEALs, offered rare insight into a culture that is, by design, difficult to penetrate. Our colleague tells us what he learned from the verdict. Guest: Dave Philipps, who covers the military for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: After a key witness for prosecutors changed his story on the stand, Chief Gallagher was found not guilty of the most serious charges against him, including the first-degree murder of a captive ISIS fighter and attempted murder of civilians in Iraq.Some SEAL commanders expressed worry that the verdict would discourage others from reporting possible war crimes in the future.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The trial of Special Operations Chief Edward Gallagher, a decorated member of the Navy SEALs, offered rare insight into a culture that is, by design, difficult to penetrate. Our colleague tells us what he learned from the verdict. Guest: <a href="https://www.nytimes.com/by/dave-philipps" target="_blank">Dave Philipps</a>, who covers the military for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>After a key witness for prosecutors<a href="https://www.nytimes.com/2019/06/20/us/navy-seal-edward-gallagher-corey-scott.html?smid=pc-thedaily" target="_blank"> changed his story on the stand</a>, Chief Gallagher<a href="https://www.nytimes.com/2019/07/02/us/navy-seal-trial-verdict.html?smid=pc-thedaily" target="_blank"> was found not guilty of the most serious charges against him</a>, including the first-degree murder of a captive ISIS fighter and attempted murder of civilians in Iraq.</li><li>Some SEAL commanders<a href="https://www.nytimes.com/2019/07/03/us/Edward-Gallagher-acquitted.html?smid=pc-thedaily" target="_blank"> expressed worry that the verdict would discourage others</a> from reporting possible war crimes in the future.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GhDlCvi1Gn7JCUR5cXNH-8jAWRxgKtpJpeCEKAoLybo</guid>
      <pubDate>Mon, 08 Jul 2019 09:49:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c7e52a7d-8cd0-481c-b786-57e627f170c5.mp3" type="audio/mpeg" length="25612120"/>
    </item>
    <item>
      <title>When a G.M. Plant Shut Down in Ohio</title>
      <description>
        <![CDATA[<p>In 2016, Lordstown, Ohio, helped deliver the presidency to Donald J. Trump, betting that he would fulfill his promise to save its auto industry. Our colleague went there to examine the political fallout from the fact that he didn’t. Guests: <a href="https://www.nytimes.com/by/sabrina-tavernise" target="_blank">Sabrina Tavernise</a>, a national correspondent for The New York Times, met with Brian Milo, who worked at the General Motors plant in Lordstown for a decade; <a href="https://www.nytimes.com/by/natalie-kitroeff" target="_blank">Natalie Kitroeff</a>, a business reporter for The Times, spoke with Sabrina. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The path to the White House next year runs through places like Lordstown, but many voters there<a href="https://www.nytimes.com/2019/05/27/us/auto-worker-jobs-lost.html?smid=pc-thedaily" target="_blank"> say the G.M. plant shutdown has left them even more at sea politically</a>.</li><li>For more from Sabrina Tavernise on G.M.’s big tech move and how it’s leaving thousands of workers behind, <a href="https://www.nytimes.com/theweekly" target="_blank">watch The Times’s new TV show, “The Weekly,”</a> this Sunday night on FX at 10/9c, or Monday on Hulu.</li></ul>]]>
      </description>
      <itunes:title>When a G.M. Plant Shut Down in Ohio</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 2016, Lordstown, Ohio, helped deliver the presidency to Donald J. Trump, betting that he would fulfill his promise to save its auto industry. Our colleague went there to examine the political fallout from the fact that he didn’t. Guests: Sabrina Tavernise, a national correspondent for The New York Times, met with Brian Milo, who worked at the General Motors plant in Lordstown for a decade; Natalie Kitroeff, a business reporter for The Times, spoke with Sabrina. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The path to the White House next year runs through places like Lordstown, but many voters there say the G.M. plant shutdown has left them even more at sea politically.For more from Sabrina Tavernise on G.M.’s big tech move and how it’s leaving thousands of workers behind, watch The Times’s new TV show, “The Weekly,” this Sunday night on FX at 10/9c, or Monday on Hulu.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In 2016, Lordstown, Ohio, helped deliver the presidency to Donald J. Trump, betting that he would fulfill his promise to save its auto industry. Our colleague went there to examine the political fallout from the fact that he didn’t. Guests: <a href="https://www.nytimes.com/by/sabrina-tavernise" target="_blank">Sabrina Tavernise</a>, a national correspondent for The New York Times, met with Brian Milo, who worked at the General Motors plant in Lordstown for a decade; <a href="https://www.nytimes.com/by/natalie-kitroeff" target="_blank">Natalie Kitroeff</a>, a business reporter for The Times, spoke with Sabrina. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>The path to the White House next year runs through places like Lordstown, but many voters there<a href="https://www.nytimes.com/2019/05/27/us/auto-worker-jobs-lost.html?smid=pc-thedaily" target="_blank"> say the G.M. plant shutdown has left them even more at sea politically</a>.</li><li>For more from Sabrina Tavernise on G.M.’s big tech move and how it’s leaving thousands of workers behind, <a href="https://www.nytimes.com/theweekly" target="_blank">watch The Times’s new TV show, “The Weekly,”</a> this Sunday night on FX at 10/9c, or Monday on Hulu.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4306Ls5e0D8wUshzVDOmazClihTVIcYRp6zEW0uQyc0</guid>
      <pubDate>Fri, 05 Jul 2019 09:49:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7ae675e6-5bcd-4866-ae78-7d1cd4d8bfa3.mp3" type="audio/mpeg" length="27959797"/>
    </item>
    <item>
      <title>Joe Biden’s Record on Race</title>
      <description>
        <![CDATA[<p>In the contest to become the Democratic candidate for president, Joseph R. Biden Jr. is being asked to confront his record on race, including past positions that some in his party now see as outdated and unjust. We look at the policies Mr. Biden embraced and how they were viewed at the time. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Biden’s efforts to play down his role in overhauling crime legislation with segregationist senators in the 1980s and ’90s is<a href="https://www.nytimes.com/2019/06/25/us/joe-biden-crime-laws.html?smid=pc-thedaily" target="_blank"> at odds with his actions and rhetoric back then</a>.</li><li>Though a liberal on most civil rights issues, Mr. Biden was a <a href="https://www.nytimes.com/2019/06/21/us/politics/joe-biden-james-eastland.html?smid=pc-thedaily" target="_blank">leading opponent of busing as a tool to integrate schools</a>.</li></ul>]]>
      </description>
      <itunes:title>Joe Biden’s Record on Race</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the contest to become the Democratic candidate for president, Joseph R. Biden Jr. is being asked to confront his record on race, including past positions that some in his party now see as outdated and unjust. We look at the policies Mr. Biden embraced and how they were viewed at the time. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Mr. Biden’s efforts to play down his role in overhauling crime legislation with segregationist senators in the 1980s and ’90s is at odds with his actions and rhetoric back then.Though a liberal on most civil rights issues, Mr. Biden was a leading opponent of busing as a tool to integrate schools.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the contest to become the Democratic candidate for president, Joseph R. Biden Jr. is being asked to confront his record on race, including past positions that some in his party now see as outdated and unjust. We look at the policies Mr. Biden embraced and how they were viewed at the time. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Mr. Biden’s efforts to play down his role in overhauling crime legislation with segregationist senators in the 1980s and ’90s is<a href="https://www.nytimes.com/2019/06/25/us/joe-biden-crime-laws.html?smid=pc-thedaily" target="_blank"> at odds with his actions and rhetoric back then</a>.</li><li>Though a liberal on most civil rights issues, Mr. Biden was a <a href="https://www.nytimes.com/2019/06/21/us/politics/joe-biden-james-eastland.html?smid=pc-thedaily" target="_blank">leading opponent of busing as a tool to integrate schools</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jkdiVx517y53a95zBgIetrrOPS4wPbCDzeF__LlzIVs</guid>
      <pubDate>Wed, 03 Jul 2019 09:54:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/78a7bc3e-7e74-455c-bd99-89fd5ba10750.mp3" type="audio/mpeg" length="28859245"/>
    </item>
    <item>
      <title>What Iran Is Learning From North Korea</title>
      <description>
        <![CDATA[<p>President Trump made history over the weekend when he became the first sitting American president to step into North Korea. But the biggest impact of that gesture may have been on Iran. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Trump administration officials are at odds over<a href="https://www.nytimes.com/2019/07/01/us/politics/trump-bolton-north-korea.html?smid=pc-thedaily" target="_blank"> what demands to make in new talks with North Korea</a>, with some now<a href="https://www.nytimes.com/2019/06/30/world/asia/trump-kim-north-korea-negotiations.html?smid=pc-thedaily" target="_blank"> considering a nuclear freeze as a first step</a>.</li><li>Iran on Monday<a href="https://www.nytimes.com/2019/07/01/us/politics/iran-nuclear-limit-compliance.html?smid=pc-thedaily" target="_blank"> violated a key element of the 2015 nuclear deal</a>, from which Mr. Trump withdrew the United States last year.</li></ul>]]>
      </description>
      <itunes:title>What Iran Is Learning From North Korea</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump made history over the weekend when he became the first sitting American president to step into North Korea. But the biggest impact of that gesture may have been on Iran. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Trump administration officials are at odds over what demands to make in new talks with North Korea, with some now considering a nuclear freeze as a first step.Iran on Monday violated a key element of the 2015 nuclear deal, from which Mr. Trump withdrew the United States last year.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump made history over the weekend when he became the first sitting American president to step into North Korea. But the biggest impact of that gesture may have been on Iran. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Trump administration officials are at odds over<a href="https://www.nytimes.com/2019/07/01/us/politics/trump-bolton-north-korea.html?smid=pc-thedaily" target="_blank"> what demands to make in new talks with North Korea</a>, with some now<a href="https://www.nytimes.com/2019/06/30/world/asia/trump-kim-north-korea-negotiations.html?smid=pc-thedaily" target="_blank"> considering a nuclear freeze as a first step</a>.</li><li>Iran on Monday<a href="https://www.nytimes.com/2019/07/01/us/politics/iran-nuclear-limit-compliance.html?smid=pc-thedaily" target="_blank"> violated a key element of the 2015 nuclear deal</a>, from which Mr. Trump withdrew the United States last year.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/f3YHzbcq-876Bd2MBHISHh-XUnomKthTkRtmxMYw450</guid>
      <pubDate>Tue, 02 Jul 2019 09:51:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b86759b3-240e-4b88-aa12-52f0d389bdc2.mp3" type="audio/mpeg" length="22245041"/>
    </item>
    <item>
      <title>Inside the Migrant Detention Center in Clint, Tex.</title>
      <description>
        <![CDATA[<p>Federal courts have ruled that migrant children inside the United States must be housed in “safe and sanitary” accommodation. So what explains the conditions at a Border Patrol station in Clint, Tex.? Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/06/21/us/migrant-children-border-soap.html?smid=pc-thedaily" target="_blank">Soiled clothes, no diapers and no access to showers or soap</a> — read more about the conditions that migrant children faced in an overcrowded border station in Texas.</li><li>The authorities emptied the station, then<a href="https://www.nytimes.com/2019/06/25/us/john-sanders-cbp.html?smid=pc-thedaily" target="_blank"> moved more than 100 children back in</a>. A Times reporter<a href="https://www.nytimes.com/2019/06/26/us/migrant-children-border-clint-texas.html?smid=pc-thedaily" target="_blank"> toured the site last week</a>.</li><li>Congress<a href="https://www.nytimes.com/2019/06/27/us/politics/border-funding-immigration.html?smid=pc-thedaily" target="_blank"> sent President Trump a $4.6 billion border aid package</a> that left Democratic lawmakers badly divided.</li></ul>]]>
      </description>
      <itunes:title>Inside the Migrant Detention Center in Clint, Tex.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Federal courts have ruled that migrant children inside the United States must be housed in “safe and sanitary” accommodation. So what explains the conditions at a Border Patrol station in Clint, Tex.? Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Soiled clothes, no diapers and no access to showers or soap — read more about the conditions that migrant children faced in an overcrowded border station in Texas.The authorities emptied the station, then moved more than 100 children back in. A Times reporter toured the site last week.Congress sent President Trump a $4.6 billion border aid package that left Democratic lawmakers badly divided.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Federal courts have ruled that migrant children inside the United States must be housed in “safe and sanitary” accommodation. So what explains the conditions at a Border Patrol station in Clint, Tex.? Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li><a href="https://www.nytimes.com/2019/06/21/us/migrant-children-border-soap.html?smid=pc-thedaily" target="_blank">Soiled clothes, no diapers and no access to showers or soap</a> — read more about the conditions that migrant children faced in an overcrowded border station in Texas.</li><li>The authorities emptied the station, then<a href="https://www.nytimes.com/2019/06/25/us/john-sanders-cbp.html?smid=pc-thedaily" target="_blank"> moved more than 100 children back in</a>. A Times reporter<a href="https://www.nytimes.com/2019/06/26/us/migrant-children-border-clint-texas.html?smid=pc-thedaily" target="_blank"> toured the site last week</a>.</li><li>Congress<a href="https://www.nytimes.com/2019/06/27/us/politics/border-funding-immigration.html?smid=pc-thedaily" target="_blank"> sent President Trump a $4.6 billion border aid package</a> that left Democratic lawmakers badly divided.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ACuPDx4vfXsYn3sJp7msNKKL1H48r4rXBPbpyZYWJdA</guid>
      <pubDate>Mon, 01 Jul 2019 09:51:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9a6ee26f-f94c-4c7e-8631-8d2f10051840.mp3" type="audio/mpeg" length="24661681"/>
    </item>
    <item>
      <title>A Clash Over Inclusion at Pride</title>
      <description>
        <![CDATA[<p>Fifty years after the Stonewall riots, as the largest L.G.B.T.Q. Pride celebration in the world takes place in New York this weekend, some leaders of the community are asking a difficult question: What’s lost as the Pride movement becomes mainstream? Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Shane O’Neill, a video editor. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Divisions have emerged in the L.G.B.T.Q. community over <a href="https://www.nytimes.com/2019/06/20/nyregion/nyc-pride-march.html?smid=pc-thedaily" target="_blank">the role of corporate sponsors</a> and <a href="https://www.nytimes.com/2019/06/26/us/pride-parade-police-cops.html?smid=pc-thedaily" target="_blank">of the police</a> in Pride celebrations.</li><li>Who threw the first brick during the Stonewall uprising? Whatever you’ve heard, it’s probably a myth — and that’s O.K. <a href="https://www.nytimes.com/2019/05/31/us/first-brick-at-stonewall-lgbtq.html?smid=pc-thedaily" target="_blank">Here’s why</a>.</li><li>To capture the evolving ways in which we describe ourselves, The Times asked readers to tell us who they are. <a href="https://www.nytimes.com/interactive/2019/06/28/us/pride-identity.html?smid=pc-thedaily" target="_blank">More than 5,000 people wrote in</a>.</li></ul>]]>
      </description>
      <itunes:title>A Clash Over Inclusion at Pride</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Fifty years after the Stonewall riots, as the largest L.G.B.T.Q. Pride celebration in the world takes place in New York this weekend, some leaders of the community are asking a difficult question: What’s lost as the Pride movement becomes mainstream? Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Shane O’Neill, a video editor. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Divisions have emerged in the L.G.B.T.Q. community over the role of corporate sponsors and of the police in Pride celebrations.Who threw the first brick during the Stonewall uprising? Whatever you’ve heard, it’s probably a myth — and that’s O.K. Here’s why.To capture the evolving ways in which we describe ourselves, The Times asked readers to tell us who they are. More than 5,000 people wrote in.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Fifty years after the Stonewall riots, as the largest L.G.B.T.Q. Pride celebration in the world takes place in New York this weekend, some leaders of the community are asking a difficult question: What’s lost as the Pride movement becomes mainstream? Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Shane O’Neill, a video editor. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:</p><ul><li>Divisions have emerged in the L.G.B.T.Q. community over <a href="https://www.nytimes.com/2019/06/20/nyregion/nyc-pride-march.html?smid=pc-thedaily" target="_blank">the role of corporate sponsors</a> and <a href="https://www.nytimes.com/2019/06/26/us/pride-parade-police-cops.html?smid=pc-thedaily" target="_blank">of the police</a> in Pride celebrations.</li><li>Who threw the first brick during the Stonewall uprising? Whatever you’ve heard, it’s probably a myth — and that’s O.K. <a href="https://www.nytimes.com/2019/05/31/us/first-brick-at-stonewall-lgbtq.html?smid=pc-thedaily" target="_blank">Here’s why</a>.</li><li>To capture the evolving ways in which we describe ourselves, The Times asked readers to tell us who they are. <a href="https://www.nytimes.com/interactive/2019/06/28/us/pride-identity.html?smid=pc-thedaily" target="_blank">More than 5,000 people wrote in</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wOEWw-1y1xtmBSSyDbbkoJNldgJ-gxelC3zNTqQw-VI</guid>
      <pubDate>Sat, 29 Jun 2019 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6a757dbd-7d0a-4940-8e04-1363c5e344e6.mp3" type="audio/mpeg" length="20502569"/>
    </item>
    <item>
      <title>The Democratic Debates</title>
      <description>
        <![CDATA[<p>Twenty Democrats seeking their party’s presidential nomination have now made their case to American voters. We take a look at their visions for the future, the breakout performances and the state of the race. Guest: <a href="https://www.nytimes.com/by/alexander-burns" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Here are takeaways from the<a href="https://www.nytimes.com/2019/06/26/us/politics/2020-democratic-debate-tonight.html?smid=pc-thedaily" target="_blank"> first night</a> and the<a href="https://www.nytimes.com/2019/06/27/us/politics/democratic-debate-live.html?smid=pc-thedaily" target="_blank"> second night</a> of the debates.</li><li>See which candidates spoke the most<a href="https://www.nytimes.com/interactive/2019/06/26/us/elections/debate-speaking-time.html?smid=pc-thedaily" target="_blank"> on Wednesday</a> and<a href="https://www.nytimes.com/interactive/2019/06/27/us/elections/debate-speaking-time.html?smid=pc-thedaily" target="_blank"> on Thursday</a>.</li><li>Read more of our<a href="https://www.nytimes.com/news-event/2020-election?smid=pc-thedaily" target="_blank"> 2020 election coverage</a>.</li></ul>]]>
      </description>
      <itunes:title>The Democratic Debates</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Twenty Democrats seeking their party’s presidential nomination have now made their case to American voters. We take a look at their visions for the future, the breakout performances and the state of the race. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Here are takeaways from the first night and the second night of the debates.See which candidates spoke the most on Wednesday and on Thursday.Read more of our 2020 election coverage.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Twenty Democrats seeking their party’s presidential nomination have now made their case to American voters. We take a look at their visions for the future, the breakout performances and the state of the race. Guest: <a href="https://www.nytimes.com/by/alexander-burns" target="_blank">Alexander Burns</a>, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Here are takeaways from the<a href="https://www.nytimes.com/2019/06/26/us/politics/2020-democratic-debate-tonight.html?smid=pc-thedaily" target="_blank"> first night</a> and the<a href="https://www.nytimes.com/2019/06/27/us/politics/democratic-debate-live.html?smid=pc-thedaily" target="_blank"> second night</a> of the debates.</li><li>See which candidates spoke the most<a href="https://www.nytimes.com/interactive/2019/06/26/us/elections/debate-speaking-time.html?smid=pc-thedaily" target="_blank"> on Wednesday</a> and<a href="https://www.nytimes.com/interactive/2019/06/27/us/elections/debate-speaking-time.html?smid=pc-thedaily" target="_blank"> on Thursday</a>.</li><li>Read more of our<a href="https://www.nytimes.com/news-event/2020-election?smid=pc-thedaily" target="_blank"> 2020 election coverage</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5m4dXu1UbccX-ypSKTKq_8Jv64sFUN6NsLvOxAz4NAA</guid>
      <pubDate>Fri, 28 Jun 2019 10:24:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/40317217-f6e4-405a-9768-0ef0813d374b.mp3" type="audio/mpeg" length="30518543"/>
    </item>
    <item>
      <title>Corroborating E. Jean Carroll</title>
      <description>
        <![CDATA[<p>Note: This episode contains detailed descriptions of an alleged sexual assault.</p><p>The writer E. Jean Carroll came forward last week with explosive accusations that Donald Trump sexually assaulted her in the 1990s. Today, the two women she privately confided in after the alleged attack go on the record for the first time with our colleague. Guests: Megan Twohey, an investigative reporter for The New York Times, spoke with Ms. Carroll, Lisa Birnbach and Carol Martin. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Read more about <a href="https://www.nytimes.com/2019/06/27/us/politics/jean-carroll-trump-sexual-assault.html?smid=pc-thedaily" target="_blank">why Ms. Carroll, Ms. Birnbach and Ms. Martin went public</a> with the allegations against the president.</li><li>Ms. Carroll <a href="https://www.nytimes.com/2019/06/21/books/e-jean-carroll-trump.html?smid=pc-thedaily" target="_blank">alleges in a forthcoming book</a> that Mr. Trump sexually assaulted her in a Bergdorf Goodman dressing room in the mid-1990s.</li><li>The president <a href="https://www.nytimes.com/2019/06/24/us/politics/jean-carroll-trump.html?smid=pc-thedaily" target="_blank">denied the accusations</a> by resorting to a familiar insult: “She’s not my type.”</li><li>The Times’s top editor, Dean Baquet, acknowledged <a href="https://www.nytimes.com/2019/06/24/reader-center/e-jean-carroll-trump-allegations.html?smid=pc-thedaily" target="_blank">“we were overly cautious” in our initial coverage</a> of Ms. Carroll’s accusations.</li></ul>]]>
      </description>
      <itunes:title>Corroborating E. Jean Carroll</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Note: This episode contains detailed descriptions of an alleged sexual assault.

The writer E. Jean Carroll came forward last week with explosive accusations that Donald Trump sexually assaulted her in the 1990s. Today, the two women she privately confided in after the alleged attack go on the record for the first time with our colleague. Guests: Megan Twohey, an investigative reporter for The New York Times, spoke with Ms. Carroll, Lisa Birnbach and Carol Martin. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Read more about why Ms. Carroll, Ms. Birnbach and Ms. Martin went public with the allegations against the president.Ms. Carroll alleges in a forthcoming book that Mr. Trump sexually assaulted her in a Bergdorf Goodman dressing room in the mid-1990s.The president denied the accusations by resorting to a familiar insult: “She’s not my type.”The Times’s top editor, Dean Baquet, acknowledged “we were overly cautious” in our initial coverage of Ms. Carroll’s accusations.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Note: This episode contains detailed descriptions of an alleged sexual assault.</p><p>The writer E. Jean Carroll came forward last week with explosive accusations that Donald Trump sexually assaulted her in the 1990s. Today, the two women she privately confided in after the alleged attack go on the record for the first time with our colleague. Guests: Megan Twohey, an investigative reporter for The New York Times, spoke with Ms. Carroll, Lisa Birnbach and Carol Martin. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Read more about <a href="https://www.nytimes.com/2019/06/27/us/politics/jean-carroll-trump-sexual-assault.html?smid=pc-thedaily" target="_blank">why Ms. Carroll, Ms. Birnbach and Ms. Martin went public</a> with the allegations against the president.</li><li>Ms. Carroll <a href="https://www.nytimes.com/2019/06/21/books/e-jean-carroll-trump.html?smid=pc-thedaily" target="_blank">alleges in a forthcoming book</a> that Mr. Trump sexually assaulted her in a Bergdorf Goodman dressing room in the mid-1990s.</li><li>The president <a href="https://www.nytimes.com/2019/06/24/us/politics/jean-carroll-trump.html?smid=pc-thedaily" target="_blank">denied the accusations</a> by resorting to a familiar insult: “She’s not my type.”</li><li>The Times’s top editor, Dean Baquet, acknowledged <a href="https://www.nytimes.com/2019/06/24/reader-center/e-jean-carroll-trump-allegations.html?smid=pc-thedaily" target="_blank">“we were overly cautious” in our initial coverage</a> of Ms. Carroll’s accusations.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/E1JhlGQiAoAIo-Npg7bB2xpsiv9ZzJ313K3VBWJLFVE</guid>
      <pubDate>Thu, 27 Jun 2019 10:01:55 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/27/podcasts/the-daily/e-jean-carroll-trump-interview.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ca028af2-92f0-4d23-addf-438b862a8c69.mp3" type="audio/mpeg" length="27585306"/>
    </item>
    <item>
      <title>A Guide to the Democratic Debates</title>
      <description>
        <![CDATA[<p>Over the next two days, 20 Democrats will take the stage for the first debates of the 2020 presidential race. We look at the competing visions for America they’ll be fighting over this week, and throughout the campaign. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Does anyone deserve to have a billion dollars? How many hours of sleep do you get? The Times asked 21 Democratic presidential candidates the same set of questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/2020-candidate-interviews.html?smid=pc-thedaily" target="_blank"> Here’s what they said</a>, and<a href="https://www.nytimes.com/2019/06/19/us/politics/2020-democratic-candidate-interviews.html?smid=pc-thedaily" target="_blank"> here are some takeaways</a>.</li><li>For the candidates, these early debates may represent the first, best — and, in some cases, only — opportunity to stand out from competitors and build national momentum in the primary.<a href="https://www.nytimes.com/2019/06/24/us/politics/democratic-candidates-debates-preparation.html?smid=pc-thedaily" target="_blank"> Here’s how they’re preparing</a>.</li><li>Senator Elizabeth Warren is the only candidate on the first night who is polling in double digits, but there are<a href="https://www.nytimes.com/interactive/2019/06/26/us/politics/democratic-debate-night-1.html?smid=pc-thedaily" target="_blank"> plenty of story lines and political dynamics to watch for</a>.</li></ul>]]>
      </description>
      <itunes:title>A Guide to the Democratic Debates</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Over the next two days, 20 Democrats will take the stage for the first debates of the 2020 presidential race. We look at the competing visions for America they’ll be fighting over this week, and throughout the campaign. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Does anyone deserve to have a billion dollars? How many hours of sleep do you get? The Times asked 21 Democratic presidential candidates the same set of questions. Here’s what they said, and here are some takeaways.For the candidates, these early debates may represent the first, best — and, in some cases, only — opportunity to stand out from competitors and build national momentum in the primary. Here’s how they’re preparing.Senator Elizabeth Warren is the only candidate on the first night who is polling in double digits, but there are plenty of story lines and political dynamics to watch for.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Over the next two days, 20 Democrats will take the stage for the first debates of the 2020 presidential race. We look at the competing visions for America they’ll be fighting over this week, and throughout the campaign. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>Does anyone deserve to have a billion dollars? How many hours of sleep do you get? The Times asked 21 Democratic presidential candidates the same set of questions.<a href="https://www.nytimes.com/interactive/2019/us/politics/2020-candidate-interviews.html?smid=pc-thedaily" target="_blank"> Here’s what they said</a>, and<a href="https://www.nytimes.com/2019/06/19/us/politics/2020-democratic-candidate-interviews.html?smid=pc-thedaily" target="_blank"> here are some takeaways</a>.</li><li>For the candidates, these early debates may represent the first, best — and, in some cases, only — opportunity to stand out from competitors and build national momentum in the primary.<a href="https://www.nytimes.com/2019/06/24/us/politics/democratic-candidates-debates-preparation.html?smid=pc-thedaily" target="_blank"> Here’s how they’re preparing</a>.</li><li>Senator Elizabeth Warren is the only candidate on the first night who is polling in double digits, but there are<a href="https://www.nytimes.com/interactive/2019/06/26/us/politics/democratic-debate-night-1.html?smid=pc-thedaily" target="_blank"> plenty of story lines and political dynamics to watch for</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0t2JinKXFq4my9qXNJtSx5rzSp-2T1iDQrXiNA1bbFw</guid>
      <pubDate>Wed, 26 Jun 2019 09:50:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5c14305a-371a-40de-9c16-2e347f7ff5f8.mp3" type="audio/mpeg" length="20486269"/>
    </item>
    <item>
      <title>The Likelihood of Impeachment</title>
      <description>
        <![CDATA[<p>In the weeks since the Mueller report, nearly 80 House Democrats have called for impeaching the president. But with the 2020 campaign underway, the likelihood of such action appears to be fading. That may be exactly what some Democratic leaders want. Guests: <a href="https://www.nytimes.com/by/peter-baker" target="_blank">Peter Baker</a>, who covers the White House for The New York Times, spoke with Representative Zoe Lofgren, a California Democrat and a member of the House Judiciary Committee. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>In a House that can be dominated by voices on the left, centrist freshman Democrats who flipped seats in 2018<a href="https://www.nytimes.com/2019/06/16/us/politics/trump-impeachment.html?smid=pc-thedaily" target="_blank"> may have the final say on impeachment</a>.</li><li>Here’s a refresher on<a href="https://www.nytimes.com/2019/05/30/us/donald-trump-impeachment.html?smid=pc-thedaily" target="_blank"> how impeachment works</a>.</li></ul>]]>
      </description>
      <itunes:title>The Likelihood of Impeachment</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the weeks since the Mueller report, nearly 80 House Democrats have called for impeaching the president. But with the 2020 campaign underway, the likelihood of such action appears to be fading. That may be exactly what some Democratic leaders want. Guests: Peter Baker, who covers the White House for The New York Times, spoke with Representative Zoe Lofgren, a California Democrat and a member of the House Judiciary Committee. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: In a House that can be dominated by voices on the left, centrist freshman Democrats who flipped seats in 2018 may have the final say on impeachment.Here’s a refresher on how impeachment works.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the weeks since the Mueller report, nearly 80 House Democrats have called for impeaching the president. But with the 2020 campaign underway, the likelihood of such action appears to be fading. That may be exactly what some Democratic leaders want. Guests: <a href="https://www.nytimes.com/by/peter-baker" target="_blank">Peter Baker</a>, who covers the White House for The New York Times, spoke with Representative Zoe Lofgren, a California Democrat and a member of the House Judiciary Committee. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.&nbsp;</p><p>Background reading:&nbsp;</p><ul><li>In a House that can be dominated by voices on the left, centrist freshman Democrats who flipped seats in 2018<a href="https://www.nytimes.com/2019/06/16/us/politics/trump-impeachment.html?smid=pc-thedaily" target="_blank"> may have the final say on impeachment</a>.</li><li>Here’s a refresher on<a href="https://www.nytimes.com/2019/05/30/us/donald-trump-impeachment.html?smid=pc-thedaily" target="_blank"> how impeachment works</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xtdBPEVnur9ZU-da83run2senc0rdljwgTmUH_cBGOE</guid>
      <pubDate>Tue, 25 Jun 2019 09:50:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5e93b2f0-e42b-4628-a4ca-d49b68c95fd1.mp3" type="audio/mpeg" length="24392515"/>
    </item>
    <item>
      <title>A Military Crackdown in Sudan</title>
      <description>
        <![CDATA[<p>A military crackdown in Sudan has left more than 100 pro-democracy protesters dead, just weeks after the military offered support in overthrowing the country’s dictator. Our colleague spoke with us from Sudan’s capital, Khartoum. Guest: Declan Walsh, the Cairo bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>Lt. Gen. Mohamed Hamdan, the leader of the paramilitary forces that carried out the killings, is<a href="https://www.nytimes.com/2019/06/15/world/africa/sudan-leader-hemeti.html?smid=pc-thedaily" target="_blank"> now considered by many to be the de facto ruler of Sudan</a>.</li><li>Listen to<a href="https://www.nytimes.com/2019/05/01/podcasts/the-daily/sudan-protests-al-bashir.html?smid=pc-thedaily" target="_blank"> an episode of “The Daily” about the fall of Sudan’s longtime dictator</a>, President Omar Hassan al-Bashir, who was deposed by his own generals in May.</li></ul>]]>
      </description>
      <itunes:title>A Military Crackdown in Sudan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A military crackdown in Sudan has left more than 100 pro-democracy protesters dead, just weeks after the military offered support in overthrowing the country’s dictator. Our colleague spoke with us from Sudan’s capital, Khartoum. Guest: Declan Walsh, the Cairo bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Lt. Gen. Mohamed Hamdan, the leader of the paramilitary forces that carried out the killings, is now considered by many to be the de facto ruler of Sudan.Listen to an episode of “The Daily” about the fall of Sudan’s longtime dictator, President Omar Hassan al-Bashir, who was deposed by his own generals in May.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A military crackdown in Sudan has left more than 100 pro-democracy protesters dead, just weeks after the military offered support in overthrowing the country’s dictator. Our colleague spoke with us from Sudan’s capital, Khartoum. Guest: Declan Walsh, the Cairo bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>Lt. Gen. Mohamed Hamdan, the leader of the paramilitary forces that carried out the killings, is<a href="https://www.nytimes.com/2019/06/15/world/africa/sudan-leader-hemeti.html?smid=pc-thedaily" target="_blank"> now considered by many to be the de facto ruler of Sudan</a>.</li><li>Listen to<a href="https://www.nytimes.com/2019/05/01/podcasts/the-daily/sudan-protests-al-bashir.html?smid=pc-thedaily" target="_blank"> an episode of “The Daily” about the fall of Sudan’s longtime dictator</a>, President Omar Hassan al-Bashir, who was deposed by his own generals in May.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rOIV7HQifnq3APJZALluwMgBqK_79OBVhM0Yzp3yCq8</guid>
      <pubDate>Mon, 24 Jun 2019 09:53:01 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/24/podcasts/the-daily/sudan-revolution-protests-military.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4b5d42dc-4ef0-4f48-80ac-2971f55e7492.mp3" type="audio/mpeg" length="23187957"/>
    </item>
    <item>
      <title>The Standoff With Iran</title>
      <description>
        <![CDATA[<p>The Trump administration has been debating a military strike against Iran as tensions with the country escalate. Here’s how we got to this point. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>President Trump approved military strikes against Iran in retaliation for downing an American drone, but<a href="https://www.nytimes.com/2019/06/20/world/middleeast/iran-us-drone.html?smid=pc-thedaily" target="_blank"> abruptly called them off on Thursday night</a>.</li><li>Mr. Trump has veered between bellicose threats against America’s enemies and promises to get the United States out of foreign wars.<a href="https://www.nytimes.com/2019/06/20/us/politics/trump-iran.html?smid=pc-thedaily" target="_blank"> He may soon have to choose</a>. </li><li>The United States and Iran, two longtime adversaries, are once again hurtling toward potential crisis.<a href="https://www.nytimes.com/2019/06/14/us/politics/us-iran.html?smid=pc-thedaily" target="_blank"> That course was set a year ago</a>.</li></ul>]]>
      </description>
      <itunes:title>The Standoff With Iran</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Trump administration has been debating a military strike against Iran as tensions with the country escalate. Here’s how we got to this point. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: President Trump approved military strikes against Iran in retaliation for downing an American drone, but abruptly called them off on Thursday night.Mr. Trump has veered between bellicose threats against America’s enemies and promises to get the United States out of foreign wars. He may soon have to choose. The United States and Iran, two longtime adversaries, are once again hurtling toward potential crisis. That course was set a year ago.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Trump administration has been debating a military strike against Iran as tensions with the country escalate. Here’s how we got to this point. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>President Trump approved military strikes against Iran in retaliation for downing an American drone, but<a href="https://www.nytimes.com/2019/06/20/world/middleeast/iran-us-drone.html?smid=pc-thedaily" target="_blank"> abruptly called them off on Thursday night</a>.</li><li>Mr. Trump has veered between bellicose threats against America’s enemies and promises to get the United States out of foreign wars.<a href="https://www.nytimes.com/2019/06/20/us/politics/trump-iran.html?smid=pc-thedaily" target="_blank"> He may soon have to choose</a>. </li><li>The United States and Iran, two longtime adversaries, are once again hurtling toward potential crisis.<a href="https://www.nytimes.com/2019/06/14/us/politics/us-iran.html?smid=pc-thedaily" target="_blank"> That course was set a year ago</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6wp4I6GOVUUk-bi8cGuC_9PequTm34aX-rfSeT1XnRg</guid>
      <pubDate>Fri, 21 Jun 2019 09:57:22 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/21/podcasts/the-daily/iran-trump.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4c22ae57-d94a-437c-af9f-e96ea18d3239.mp3" type="audio/mpeg" length="23314599"/>
    </item>
    <item>
      <title>Why Asylum Seekers Are Being Sent Back to Mexico</title>
      <description>
        <![CDATA[<p>With asylum requests at a record high, the Trump administration is telling migrants to wait in Mexico. We look at how that policy could fundamentally change immigration in the United States. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Zolan Kanno-Youngs, who covers homeland security. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A recent State Department report acknowledged the<a href="https://www.nytimes.com/2019/04/05/us/politics/asylum-united-states-migrants-mexico.html?smid=pc-thedaily" target="_blank"> </a>possibility that <a href="https://www.nytimes.com/2019/04/05/us/politics/asylum-united-states-migrants-mexico.html?smid=pc-thedaily" target="_blank">migrants from Central America were no safer in Mexico</a> than at home from the gangs that had threatened them.</li><li>The cornerstone of President Trump’s deal to avert tariffs with Mexico — the terms of which<a href="https://www.nytimes.com/2019/06/10/us/politics/immigration-mexico-deal-trump.html?smid=pc-thedaily" target="_blank"> were largely already agreed-upon in December</a> — was<a href="https://www.nytimes.com/2019/06/08/us/politics/trump-mexico-deal-tariffs.html?smid=pc-thedaily" target="_blank"> an expansion of the “Remain in Mexico” program</a>.</li></ul>]]>
      </description>
      <itunes:title>Why Asylum Seekers Are Being Sent Back to Mexico</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With asylum requests at a record high, the Trump administration is telling migrants to wait in Mexico. We look at how that policy could fundamentally change immigration in the United States. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Zolan Kanno-Youngs, who covers homeland security. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A recent State Department report acknowledged the possibility that migrants from Central America were no safer in Mexico than at home from the gangs that had threatened them.The cornerstone of President Trump’s deal to avert tariffs with Mexico — the terms of which were largely already agreed-upon in December — was an expansion of the “Remain in Mexico” program.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>With asylum requests at a record high, the Trump administration is telling migrants to wait in Mexico. We look at how that policy could fundamentally change immigration in the United States. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Zolan Kanno-Youngs, who covers homeland security. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A recent State Department report acknowledged the<a href="https://www.nytimes.com/2019/04/05/us/politics/asylum-united-states-migrants-mexico.html?smid=pc-thedaily" target="_blank"> </a>possibility that <a href="https://www.nytimes.com/2019/04/05/us/politics/asylum-united-states-migrants-mexico.html?smid=pc-thedaily" target="_blank">migrants from Central America were no safer in Mexico</a> than at home from the gangs that had threatened them.</li><li>The cornerstone of President Trump’s deal to avert tariffs with Mexico — the terms of which<a href="https://www.nytimes.com/2019/06/10/us/politics/immigration-mexico-deal-trump.html?smid=pc-thedaily" target="_blank"> were largely already agreed-upon in December</a> — was<a href="https://www.nytimes.com/2019/06/08/us/politics/trump-mexico-deal-tariffs.html?smid=pc-thedaily" target="_blank"> an expansion of the “Remain in Mexico” program</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/YxRWKVu7CJHi3tAZCFLKYf3OevVe9g1ptl2IyoI94Yg</guid>
      <pubDate>Thu, 20 Jun 2019 09:50:34 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/20/podcasts/the-daily/immigration-asylum-mexico-trump.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9ea76f2b-4793-4f6a-a61f-d6031a5a0de5.mp3" type="audio/mpeg" length="28371487"/>
    </item>
    <item>
      <title>Trump’s Re-election Rally</title>
      <description>
        <![CDATA[<p>The president kicked off his re-election campaign on Tuesday with a rally in Orlando, Fla. We spoke with a colleague who was there. Guest: Maggie Haberman, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>President Trump’s messaging at the rally<a href="https://www.nytimes.com/2019/06/18/us/politics/trump-orlando-rally.html?smid=pc-thedaily" target="_blank"> signals a bet that his 2020 campaign will be a replay of 2016</a> — but this time, with the full support of the Republican Party.</li><li>Here are<a href="https://www.nytimes.com/2019/06/18/us/politics/trump-rally.html?smid=pc-thedaily" target="_blank"> eight things our reporters learned</a> from attending the rally.</li><li>The<a href="https://www.nytimes.com/2019/06/17/us/politics/trump-reelection-campaign-kickoff.html?smid=pc-thedaily" target="_blank"> 2020 election is shaping up as a test</a>: Was Mr. Trump’s victory a historical fluke, or a genuine reflection of America today?</li></ul>]]>
      </description>
      <itunes:title>Trump’s Re-election Rally</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The president kicked off his re-election campaign on Tuesday with a rally in Orlando, Fla. We spoke with a colleague who was there. Guest: Maggie Haberman, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: President Trump’s messaging at the rally signals a bet that his 2020 campaign will be a replay of 2016 — but this time, with the full support of the Republican Party.Here are eight things our reporters learned from attending the rally.The 2020 election is shaping up as a test: Was Mr. Trump’s victory a historical fluke, or a genuine reflection of America today?</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The president kicked off his re-election campaign on Tuesday with a rally in Orlando, Fla. We spoke with a colleague who was there. Guest: Maggie Haberman, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>President Trump’s messaging at the rally<a href="https://www.nytimes.com/2019/06/18/us/politics/trump-orlando-rally.html?smid=pc-thedaily" target="_blank"> signals a bet that his 2020 campaign will be a replay of 2016</a> — but this time, with the full support of the Republican Party.</li><li>Here are<a href="https://www.nytimes.com/2019/06/18/us/politics/trump-rally.html?smid=pc-thedaily" target="_blank"> eight things our reporters learned</a> from attending the rally.</li><li>The<a href="https://www.nytimes.com/2019/06/17/us/politics/trump-reelection-campaign-kickoff.html?smid=pc-thedaily" target="_blank"> 2020 election is shaping up as a test</a>: Was Mr. Trump’s victory a historical fluke, or a genuine reflection of America today?</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RLGhYF2Bup2hlXKdAdzu0046ndmeYJPwXsmUHwW8eys</guid>
      <pubDate>Wed, 19 Jun 2019 09:52:14 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/19/podcasts/the-daily/donald-trump-rally-orlando.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a00bacea-409d-4154-916e-217a8c0105b1.mp3" type="audio/mpeg" length="22161449"/>
    </item>
    <item>
      <title>Hacking the Russian Power Grid</title>
      <description>
        <![CDATA[<p>A New York Times investigation found that the United States is actively infiltrating Russia’s electric power grid. We look at what that means for the future of cyberwarfare. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The cyberattacks on Russia’s power grid are intended<a href="https://www.nytimes.com/2019/06/15/us/politics/trump-cyber-russia-grid.html?smid=pc-thedaily" target="_blank"> partly as a warning, and partly to be poised to act</a> if a major conflict broke out between Washington and Moscow.</li><li>In response to The Times’s report, the Kremlin<a href="https://www.nytimes.com/2019/06/17/world/europe/russia-us-cyberwar-grid.html?smid=pc-thedaily" target="_blank"> warned that American attacks could escalate into cyberwar</a>.</li></ul>]]>
      </description>
      <itunes:title>Hacking the Russian Power Grid</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A New York Times investigation found that the United States is actively infiltrating Russia’s electric power grid. We look at what that means for the future of cyberwarfare. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The cyberattacks on Russia’s power grid are intended partly as a warning, and partly to be poised to act if a major conflict broke out between Washington and Moscow.In response to The Times’s report, the Kremlin warned that American attacks could escalate into cyberwar.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A New York Times investigation found that the United States is actively infiltrating Russia’s electric power grid. We look at what that means for the future of cyberwarfare. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The cyberattacks on Russia’s power grid are intended<a href="https://www.nytimes.com/2019/06/15/us/politics/trump-cyber-russia-grid.html?smid=pc-thedaily" target="_blank"> partly as a warning, and partly to be poised to act</a> if a major conflict broke out between Washington and Moscow.</li><li>In response to The Times’s report, the Kremlin<a href="https://www.nytimes.com/2019/06/17/world/europe/russia-us-cyberwar-grid.html?smid=pc-thedaily" target="_blank"> warned that American attacks could escalate into cyberwar</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WgsZJ4oxEeeUMNdbvLPDbWVl3lB0kWM2O2Q-x826RNY</guid>
      <pubDate>Tue, 18 Jun 2019 09:50:07 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/18/podcasts/the-daily/trump-russia-cyber-grid.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/036eaee0-eacb-4e63-9e2a-cd2314646f51.mp3" type="audio/mpeg" length="24914964"/>
    </item>
    <item>
      <title>Why Hong Kong Is Still Protesting</title>
      <description>
        <![CDATA[<p>In Hong Kong, hundreds of thousands remain in the streets, even after city officials said they would suspend the contentious extradition bill that prompted the demonstrations in the first place. We look at why the protesters still don’t trust their government. Guest: Austin Ramzy, who covers Hong Kong for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>If the shelving of the<a href="https://www.nytimes.com/2019/06/15/world/asia/hong-kong-murder-taiwan-extradition.html?smid=pc-thedaily" target="_blank"> extradition bill</a> and an apology from Hong Kong’s leader were aimed at mollifying the protesters,<a href="https://www.nytimes.com/2019/06/16/world/asia/carrie-lam-hong-kong-protests.html?smid=pc-thedaily" target="_blank"> the measures seem to have had the opposite effect</a>.</li><li>The bill’s suspension is<a href="https://www.nytimes.com/2019/06/16/world/asia/hong-kong-xi-jinping.html?smid=pc-thedaily" target="_blank"> China’s biggest concession to public pressure in President Xi Jinping’s nearly seven years</a> as leader of the country.</li><li><a href="https://www.nytimes.com/2019/06/16/world/asia/hong-kong-protests-pictures.html?smid=pc-thedaily" target="_blank">Here are photographs of the protests</a>, which are some of the largest in the history of Hong Kong. </li></ul>]]>
      </description>
      <itunes:title>Why Hong Kong Is Still Protesting</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In Hong Kong, hundreds of thousands remain in the streets, even after city officials said they would suspend the contentious extradition bill that prompted the demonstrations in the first place. We look at why the protesters still don’t trust their government. Guest: Austin Ramzy, who covers Hong Kong for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: If the shelving of the extradition bill and an apology from Hong Kong’s leader were aimed at mollifying the protesters, the measures seem to have had the opposite effect.The bill’s suspension is China’s biggest concession to public pressure in President Xi Jinping’s nearly seven years as leader of the country.Here are photographs of the protests, which are some of the largest in the history of Hong Kong. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In Hong Kong, hundreds of thousands remain in the streets, even after city officials said they would suspend the contentious extradition bill that prompted the demonstrations in the first place. We look at why the protesters still don’t trust their government. Guest: Austin Ramzy, who covers Hong Kong for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>If the shelving of the<a href="https://www.nytimes.com/2019/06/15/world/asia/hong-kong-murder-taiwan-extradition.html?smid=pc-thedaily" target="_blank"> extradition bill</a> and an apology from Hong Kong’s leader were aimed at mollifying the protesters,<a href="https://www.nytimes.com/2019/06/16/world/asia/carrie-lam-hong-kong-protests.html?smid=pc-thedaily" target="_blank"> the measures seem to have had the opposite effect</a>.</li><li>The bill’s suspension is<a href="https://www.nytimes.com/2019/06/16/world/asia/hong-kong-xi-jinping.html?smid=pc-thedaily" target="_blank"> China’s biggest concession to public pressure in President Xi Jinping’s nearly seven years</a> as leader of the country.</li><li><a href="https://www.nytimes.com/2019/06/16/world/asia/hong-kong-protests-pictures.html?smid=pc-thedaily" target="_blank">Here are photographs of the protests</a>, which are some of the largest in the history of Hong Kong. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4si1r2a6O_9zuepzmTwxIcrLXEzy3vB_6mleweKjZts</guid>
      <pubDate>Mon, 17 Jun 2019 09:52:26 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/17/podcasts/the-daily/hong-kong-protests.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f6320d47-6a93-46d0-9aae-9edb3f02039d.mp3" type="audio/mpeg" length="22354546"/>
    </item>
    <item>
      <title>Part 5: Can Liberal Democracy Survive in Europe?</title>
      <description>
        <![CDATA[<p>Across Europe, populists are saying that it’s not democracy they aim to discard, but liberalism. To end our series, we returned to Germany, the country at the heart of a liberal Europe, to see if the rejection of liberalism had also taken hold there.</p><p>Guests: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” went to an election party in Berlin for the far-right party Alternative for Germany. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Germany’s<a href="https://www.nytimes.com/2019/05/28/world/europe/eu-elections-germany-merkel.html?smid=pc-thedaily" target="_blank"> political establishment looks increasingly fragile</a> after the European Parliament elections.</li><li>As<a href="https://www.nytimes.com/2019/05/14/world/europe/anti-semitic-crime-germany.html?smid=pc-thedaily" target="_blank"> anti-Semitic crime rises</a> in Germany,<a href="https://www.nytimes.com/2019/05/21/magazine/anti-semitism-germany.html?smid=pc-thedaily" target="_blank"> new forms of old hatreds are stoking fear</a> for the nation’s estimated 200,000 Jews.</li><li><a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html?smid=pc-thedaily" target="_blank">Katrin Bennhold offers her main takeaway</a> after 10 days on the road: “Europe cannot be taken for granted. But neither can its demise.”</li></ul>]]>
      </description>
      <itunes:title>Part 5: Can Liberal Democracy Survive in Europe?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Across Europe, populists are saying that it’s not democracy they aim to discard, but liberalism. To end our series, we returned to Germany, the country at the heart of a liberal Europe, to see if the rejection of liberalism had also taken hold there.

Guests: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” went to an election party in Berlin for the far-right party Alternative for Germany. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Germany’s political establishment looks increasingly fragile after the European Parliament elections.As anti-Semitic crime rises in Germany, new forms of old hatreds are stoking fear for the nation’s estimated 200,000 Jews.Katrin Bennhold offers her main takeaway after 10 days on the road: “Europe cannot be taken for granted. But neither can its demise.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Across Europe, populists are saying that it’s not democracy they aim to discard, but liberalism. To end our series, we returned to Germany, the country at the heart of a liberal Europe, to see if the rejection of liberalism had also taken hold there.</p><p>Guests: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” went to an election party in Berlin for the far-right party Alternative for Germany. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Germany’s<a href="https://www.nytimes.com/2019/05/28/world/europe/eu-elections-germany-merkel.html?smid=pc-thedaily" target="_blank"> political establishment looks increasingly fragile</a> after the European Parliament elections.</li><li>As<a href="https://www.nytimes.com/2019/05/14/world/europe/anti-semitic-crime-germany.html?smid=pc-thedaily" target="_blank"> anti-Semitic crime rises</a> in Germany,<a href="https://www.nytimes.com/2019/05/21/magazine/anti-semitism-germany.html?smid=pc-thedaily" target="_blank"> new forms of old hatreds are stoking fear</a> for the nation’s estimated 200,000 Jews.</li><li><a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html?smid=pc-thedaily" target="_blank">Katrin Bennhold offers her main takeaway</a> after 10 days on the road: “Europe cannot be taken for granted. But neither can its demise.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/A6ul_GbOQvg2Tu3EhZO-SORlE8Spd7nbqLY6ZA6gEWo</guid>
      <pubDate>Fri, 14 Jun 2019 10:04:25 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/14/podcasts/the-daily/europe-liberal-democracy-germany.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2a34eddb-4ef5-4a75-a40a-ac98b3c0fed9.mp3" type="audio/mpeg" length="27346233"/>
    </item>
    <item>
      <title>Part 4: Poland’s Culture Wars</title>
      <description>
        <![CDATA[<p>In Poland, a nationalist party has been in power for four years. We went to Warsaw, the capital, and Gdansk, the birthplace of a movement that brought down Communism, to see how this government has changed democratic institutions. </p><p>Guests: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” spoke with Jaroslaw Kurski, a newspaper editor; Magdalena Adamowicz, a politician and the widow of a liberal mayor who was murdered; and Danuta Bialooka-Kostenecka, an official with the governing Law and Justice party. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Poland’s nationalists aren’t seeking to take the country out of the European Union,<a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html?smid=pc-thedaily" target="_blank"> but to take the European Union out of Poland</a>.</li><li>With national elections approaching, both the government and its opponents<a href="https://www.nytimes.com/2019/06/04/world/europe/poland-election-anniversary-solidarity.html?smid=pc-thedaily" target="_blank"> have sought to shape the country’s historical memory</a>.</li><li>Poland’s governing party has<a href="https://www.nytimes.com/2019/04/07/world/europe/poland-gay-rights.html?smid=pc-thedaily" target="_blank"> made opposition to gay rights a cornerstone</a> of its campaigning, escalating<a href="https://www.nytimes.com/2019/01/19/world/europe/poland-gdansk-mayor-funeral-pawel-adamowicz.html" target="_blank"> fears that the divisive rhetoric could translate to violence</a>. </li></ul>]]>
      </description>
      <itunes:title>Part 4: Poland’s Culture Wars</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In Poland, a nationalist party has been in power for four years. We went to Warsaw, the capital, and Gdansk, the birthplace of a movement that brought down Communism, to see how this government has changed democratic institutions. 

Guests: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” spoke with Jaroslaw Kurski, a newspaper editor; Magdalena Adamowicz, a politician and the widow of a liberal mayor who was murdered; and Danuta Bialooka-Kostenecka, an official with the governing Law and Justice party. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Poland’s nationalists aren’t seeking to take the country out of the European Union, but to take the European Union out of Poland.With national elections approaching, both the government and its opponents have sought to shape the country’s historical memory.Poland’s governing party has made opposition to gay rights a cornerstone of its campaigning, escalating fears that the divisive rhetoric could translate to violence. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In Poland, a nationalist party has been in power for four years. We went to Warsaw, the capital, and Gdansk, the birthplace of a movement that brought down Communism, to see how this government has changed democratic institutions. </p><p>Guests: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” spoke with Jaroslaw Kurski, a newspaper editor; Magdalena Adamowicz, a politician and the widow of a liberal mayor who was murdered; and Danuta Bialooka-Kostenecka, an official with the governing Law and Justice party. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Poland’s nationalists aren’t seeking to take the country out of the European Union,<a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html?smid=pc-thedaily" target="_blank"> but to take the European Union out of Poland</a>.</li><li>With national elections approaching, both the government and its opponents<a href="https://www.nytimes.com/2019/06/04/world/europe/poland-election-anniversary-solidarity.html?smid=pc-thedaily" target="_blank"> have sought to shape the country’s historical memory</a>.</li><li>Poland’s governing party has<a href="https://www.nytimes.com/2019/04/07/world/europe/poland-gay-rights.html?smid=pc-thedaily" target="_blank"> made opposition to gay rights a cornerstone</a> of its campaigning, escalating<a href="https://www.nytimes.com/2019/01/19/world/europe/poland-gdansk-mayor-funeral-pawel-adamowicz.html" target="_blank"> fears that the divisive rhetoric could translate to violence</a>. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dFCtNELCjDaCnKPgcZNX10xsOHN4laCh9j0DVWoHY-M</guid>
      <pubDate>Thu, 13 Jun 2019 09:58:19 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/13/podcasts/the-daily/poland-nationalism-democracy.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e03188c6-6cd9-4b25-9214-cf36be1df609.mp3" type="audio/mpeg" length="31797080"/>
    </item>
    <item>
      <title>Part 3: ‘Italy First’</title>
      <description>
        <![CDATA[<p>In Italy, hard-right populists have moved from the fringes to become part of the national government. Now, the country is on the front lines of a nationalist resurgence in Europe. To understand why, we spent a day with Susanna Ceccardi, a rising star of the far-right League party. Guest Host: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” hit the campaign trail with Ms. Ceccardi in Tuscany. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Ms. Ceccardi is among a group of nationalist politicians<a href="https://www.nytimes.com/2019/05/25/world/europe/europe-parliament-elections-populists.html?smid=pc-thedaily" target="_blank"> seeking to break the European Union from the inside</a>.</li><li>A victory for the anti-immigrant League party in the European Parliament elections gave Matteo Salvini, the party’s leader and Italy’s interior minister, the<a href="https://www.nytimes.com/2019/05/27/world/europe/europe-election-results-populism.html?smid=pc-thedaily" target="_blank"> strongest claim to the leadership of Europe’s populists</a>.</li></ul>]]>
      </description>
      <itunes:title>Part 3: ‘Italy First’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In Italy, hard-right populists have moved from the fringes to become part of the national government. Now, the country is on the front lines of a nationalist resurgence in Europe. To understand why, we spent a day with Susanna Ceccardi, a rising star of the far-right League party. Guest Host: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” hit the campaign trail with Ms. Ceccardi in Tuscany. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:Ms. Ceccardi is among a group of nationalist politicians seeking to break the European Union from the inside.A victory for the anti-immigrant League party in the European Parliament elections gave Matteo Salvini, the party’s leader and Italy’s interior minister, the strongest claim to the leadership of Europe’s populists.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In Italy, hard-right populists have moved from the fringes to become part of the national government. Now, the country is on the front lines of a nationalist resurgence in Europe. To understand why, we spent a day with Susanna Ceccardi, a rising star of the far-right League party. Guest Host: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” hit the campaign trail with Ms. Ceccardi in Tuscany. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Ms. Ceccardi is among a group of nationalist politicians<a href="https://www.nytimes.com/2019/05/25/world/europe/europe-parliament-elections-populists.html?smid=pc-thedaily" target="_blank"> seeking to break the European Union from the inside</a>.</li><li>A victory for the anti-immigrant League party in the European Parliament elections gave Matteo Salvini, the party’s leader and Italy’s interior minister, the<a href="https://www.nytimes.com/2019/05/27/world/europe/europe-election-results-populism.html?smid=pc-thedaily" target="_blank"> strongest claim to the leadership of Europe’s populists</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8LdgjeZc25QNhtDHbCavM4pgX_lrFoufdYVZwq4uC28</guid>
      <pubDate>Wed, 12 Jun 2019 09:52:06 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/12/podcasts/the-daily/italy-nationalism-salvini.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f6281b8f-8d98-49c0-bc13-80f38e1903c3.mp3" type="audio/mpeg" length="29895784"/>
    </item>
    <item>
      <title>Part 2: The French Rebellion</title>
      <description>
        <![CDATA[<p>President Emmanuel Macron of France had been viewed as the next leader of a liberal Europe. But when the Yellow Vest movement swept the country, protesters took to the streets, rejecting him as elitist and questioning the vision of Europe that he stood for. In Part 2 of our series, we traveled to a city in northern France to hear from some of these protesters. Guest Host: <a href="https://www.nytimes.com/by/katrin-bennhold" target="_blank">Katrin Bennhold</a>, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” met with Yellow Vest demonstrators in Reims. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>For some followers of the Yellow Vest movement, Europe <a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html?smid=pc-thedaily" target="_blank">embodies everything they have come to hate</a>: shuttered factories, stagnating wages and a young banker-turned-president in favor of deeper integration.</li><li>In elections last month for the European Parliament, the <a href="https://www.nytimes.com/2019/05/27/world/europe/european-vote-france.html?smid=pc-thedaily" target="_blank">far-right leader Marine Le Pen won in the rural, depressed and deindustrialized areas</a> of northern, south-central and eastern France that gave rise to the Yellow Vest revolt.</li></ul>]]>
      </description>
      <itunes:title>Part 2: The French Rebellion</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Emmanuel Macron of France had been viewed as the next leader of a liberal Europe. But when the Yellow Vest movement swept the country, protesters took to the streets, rejecting him as elitist and questioning the vision of Europe that he stood for. In Part 2 of our series, we traveled to a city in northern France to hear from some of these protesters. Guest Host: Katrin Bennhold, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” met with Yellow Vest demonstrators in Reims. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:For some followers of the Yellow Vest movement, Europe embodies everything they have come to hate: shuttered factories, stagnating wages and a young banker-turned-president in favor of deeper integration.In elections last month for the European Parliament, the far-right leader Marine Le Pen won in the rural, depressed and deindustrialized areas of northern, south-central and eastern France that gave rise to the Yellow Vest revolt.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Emmanuel Macron of France had been viewed as the next leader of a liberal Europe. But when the Yellow Vest movement swept the country, protesters took to the streets, rejecting him as elitist and questioning the vision of Europe that he stood for. In Part 2 of our series, we traveled to a city in northern France to hear from some of these protesters. Guest Host: <a href="https://www.nytimes.com/by/katrin-bennhold" target="_blank">Katrin Bennhold</a>, the Berlin bureau chief for The New York Times, and Clare Toeniskoetter and Lynsea Garrison, producers for “The Daily,” met with Yellow Vest demonstrators in Reims. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>For some followers of the Yellow Vest movement, Europe <a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html?smid=pc-thedaily" target="_blank">embodies everything they have come to hate</a>: shuttered factories, stagnating wages and a young banker-turned-president in favor of deeper integration.</li><li>In elections last month for the European Parliament, the <a href="https://www.nytimes.com/2019/05/27/world/europe/european-vote-france.html?smid=pc-thedaily" target="_blank">far-right leader Marine Le Pen won in the rural, depressed and deindustrialized areas</a> of northern, south-central and eastern France that gave rise to the Yellow Vest revolt.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jxOWojnqreNlbnLpqjkD2sQ2LuoTHpmua3vl1Ol2PX0</guid>
      <pubDate>Tue, 11 Jun 2019 09:50:31 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/11/podcasts/the-daily/france-yellow-vests-macron.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a8787f17-7254-49c2-8d5f-1e38fbf71a7f.mp3" type="audio/mpeg" length="27415196"/>
    </item>
    <item>
      <title>Part 1: The Battle for Europe</title>
      <description>
        <![CDATA[<p>The decades-long plan to stitch together countries and cultures into the European Union was ultimately blamed for two crises: mass migration and crippling debt. Together, those events contributed to a wave of nationalism across Europe. In a five-part series this week, we take a look at some of the movements aiming to disrupt the E.U. from within. Guest: Katrin Bennhold, the Berlin bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Before the European Parliament elections last month, Katrin Bennhold and producers of “The Daily” set out on a 10-day trip to find out <a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html" target="_blank">what Europe means to Europeans today</a>.</li><li>The<a href="https://www.nytimes.com/2019/05/26/world/europe/european-elections-results.html" target="_blank"> results of the elections</a> indicated that the <a href="https://www.nytimes.com/2019/05/25/world/europe/europe-parliament-elections-populists.html" target="_blank">struggle over the future direction of the European Union</a> would only intensify.</li></ul>]]>
      </description>
      <itunes:title>Part 1: The Battle for Europe</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The decades-long plan to stitch together countries and cultures into the European Union was ultimately blamed for two crises: mass migration and crippling debt. Together, those events contributed to a wave of nationalism across Europe. In a five-part series this week, we take a look at some of the movements aiming to disrupt the E.U. from within. Guest: Katrin Bennhold, the Berlin bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:Before the European Parliament elections last month, Katrin Bennhold and producers of “The Daily” set out on a 10-day trip to find out what Europe means to Europeans today.The results of the elections indicated that the struggle over the future direction of the European Union would only intensify.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The decades-long plan to stitch together countries and cultures into the European Union was ultimately blamed for two crises: mass migration and crippling debt. Together, those events contributed to a wave of nationalism across Europe. In a five-part series this week, we take a look at some of the movements aiming to disrupt the E.U. from within. Guest: Katrin Bennhold, the Berlin bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Before the European Parliament elections last month, Katrin Bennhold and producers of “The Daily” set out on a 10-day trip to find out <a href="https://www.nytimes.com/2019/05/22/world/europe/europe-election-parliament.html" target="_blank">what Europe means to Europeans today</a>.</li><li>The<a href="https://www.nytimes.com/2019/05/26/world/europe/european-elections-results.html" target="_blank"> results of the elections</a> indicated that the <a href="https://www.nytimes.com/2019/05/25/world/europe/europe-parliament-elections-populists.html" target="_blank">struggle over the future direction of the European Union</a> would only intensify.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RGeOND5uRXSujrR0mwNIzDcRQk_cvv3y0I5Xn6ZDyQg</guid>
      <pubDate>Mon, 10 Jun 2019 09:51:27 -0000</pubDate>
      <link>https://www.nytimes.com/2019/06/10/podcasts/the-daily/europe-nationalism.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/06596768-3f5f-4951-add6-c8afe6f24392.mp3" type="audio/mpeg" length="21833769"/>
    </item>
    <item>
      <title>A New Way to Solve a Murder, Part 2: The Future of Genetic Privacy</title>
      <description>
        <![CDATA[<p>The police identified a suspect in a double murder after combing through DNA profiles on a website designed to connect family members. We look at what his trial will tell us about the future of genetic genealogy in solving crimes. Guests: Heather Murphy, a New York Times reporter, spoke with CeCe Moore, a genetic genealogist, and Curtis Rogers, a creator of the genealogy website GEDMatch. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The <a href="https://www.nytimes.com/2018/05/18/science/ancestry-site-arrest-washington.html?smid=pc-thedaily" target="_blank">case of William Earl Talbott II</a>, who is accused of killing a Canadian couple in Washington State 32 years ago,<a href="https://www.nytimes.com/2019/04/25/us/golden-state-killer-dna.html?smid=pc-thedaily" target="_blank"> could result in legal precedents</a> involving the use of genetic genealogy techniques by law enforcement.</li></ul>]]>
      </description>
      <itunes:title>A New Way to Solve a Murder, Part 2: The Future of Genetic Privacy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The police identified a suspect in a double murder after combing through DNA profiles on a website designed to connect family members. We look at what his trial will tell us about the future of genetic genealogy in solving crimes. Guests: Heather Murphy, a New York Times reporter, spoke with CeCe Moore, a genetic genealogist, and Curtis Rogers, a creator of the genealogy website GEDMatch. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The case of William Earl Talbott II, who is accused of killing a Canadian couple in Washington State 32 years ago, could result in legal precedents involving the use of genetic genealogy techniques by law enforcement.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The police identified a suspect in a double murder after combing through DNA profiles on a website designed to connect family members. We look at what his trial will tell us about the future of genetic genealogy in solving crimes. Guests: Heather Murphy, a New York Times reporter, spoke with CeCe Moore, a genetic genealogist, and Curtis Rogers, a creator of the genealogy website GEDMatch. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The <a href="https://www.nytimes.com/2018/05/18/science/ancestry-site-arrest-washington.html?smid=pc-thedaily" target="_blank">case of William Earl Talbott II</a>, who is accused of killing a Canadian couple in Washington State 32 years ago,<a href="https://www.nytimes.com/2019/04/25/us/golden-state-killer-dna.html?smid=pc-thedaily" target="_blank"> could result in legal precedents</a> involving the use of genetic genealogy techniques by law enforcement.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CIXYQP7ve1mnQNfkI1Im7IA6DAiEsSOnvHca-eKAEZI</guid>
      <pubDate>Fri, 07 Jun 2019 09:52:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/74b8cb3f-99cf-437c-983f-894d7f6a3073.mp3" type="audio/mpeg" length="27114684"/>
    </item>
    <item>
      <title>A New Way to Solve a Murder, Part 1: The Genetic Detectives</title>
      <description>
        <![CDATA[<p>A year after police used a genetic database to help identify a suspect in the Golden State Killer case, the same technique has been used to arrest dozens of people. Now, for the first time, one of those cases is headed to trial. In Part 1 of a two-part series, we look at the tool that is transforming law enforcement and testing the limits of privacy. Guests: Heather Murphy, a New York Times reporter, spoke with Curtis Rogers, a creator of the genealogy website GEDMatch; Peter Headley, a detective with the San Bernardino County Sheriff’s Department; and Barbara Rae-Venter, a genetic genealogist. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Using a technique that relies on DNA submitted to online genealogy sites, investigators have solved dozens of violent crimes. But <a href="https://www.nytimes.com/2019/04/25/us/golden-state-killer-dna.html?smid=pc-thedaily" target="_blank">some question the ethics and legality of the technique</a>.</li><li>GEDMatch, a free site that began as a side project, <a href="https://www.nytimes.com/2018/10/15/science/gedmatch-genealogy-cold-cases.html?smid=pc-thedaily" target="_blank">has upended how investigators across the country are approaching cold cases</a>.</li><li>Read about how genetic sleuthing through GEDMatch <a href="https://www.nytimes.com/interactive/2018/10/15/science/gedmatch-genetic-sleuthing.html?smid=pc-thedaily" target="_blank">helped a woman who had been kidnapped as a child recover her identity</a>.</li></ul>]]>
      </description>
      <itunes:title>A New Way to Solve a Murder, Part 1: The Genetic Detectives</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A year after police used a genetic database to help identify a suspect in the Golden State Killer case, the same technique has been used to arrest dozens of people. Now, for the first time, one of those cases is headed to trial. In Part 1 of a two-part series, we look at the tool that is transforming law enforcement and testing the limits of privacy. Guests: Heather Murphy, a New York Times reporter, spoke with Curtis Rogers, a creator of the genealogy website GEDMatch; Peter Headley, a detective with the San Bernardino County Sheriff’s Department; and Barbara Rae-Venter, a genetic genealogist. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:Using a technique that relies on DNA submitted to online genealogy sites, investigators have solved dozens of violent crimes. But some question the ethics and legality of the technique.GEDMatch, a free site that began as a side project, has upended how investigators across the country are approaching cold cases.Read about how genetic sleuthing through GEDMatch helped a woman who had been kidnapped as a child recover her identity.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A year after police used a genetic database to help identify a suspect in the Golden State Killer case, the same technique has been used to arrest dozens of people. Now, for the first time, one of those cases is headed to trial. In Part 1 of a two-part series, we look at the tool that is transforming law enforcement and testing the limits of privacy. Guests: Heather Murphy, a New York Times reporter, spoke with Curtis Rogers, a creator of the genealogy website GEDMatch; Peter Headley, a detective with the San Bernardino County Sheriff’s Department; and Barbara Rae-Venter, a genetic genealogist. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Using a technique that relies on DNA submitted to online genealogy sites, investigators have solved dozens of violent crimes. But <a href="https://www.nytimes.com/2019/04/25/us/golden-state-killer-dna.html?smid=pc-thedaily" target="_blank">some question the ethics and legality of the technique</a>.</li><li>GEDMatch, a free site that began as a side project, <a href="https://www.nytimes.com/2018/10/15/science/gedmatch-genealogy-cold-cases.html?smid=pc-thedaily" target="_blank">has upended how investigators across the country are approaching cold cases</a>.</li><li>Read about how genetic sleuthing through GEDMatch <a href="https://www.nytimes.com/interactive/2018/10/15/science/gedmatch-genetic-sleuthing.html?smid=pc-thedaily" target="_blank">helped a woman who had been kidnapped as a child recover her identity</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mxryHYAAbDZ13aBQsNIopMrz8tkT4qR4sxC-w93lVvs</guid>
      <pubDate>Thu, 06 Jun 2019 09:50:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4b42a136-84b3-4f7d-8285-dc2507ef3ba2.mp3" type="audio/mpeg" length="24424280"/>
    </item>
    <item>
      <title>This Drug Could End H.I.V. Why Hasn’t It?</title>
      <description>
        <![CDATA[<p>Dr. Robert Grant developed a treatment — a daily pill known as pre-exposure prophylaxis, or PrEP — that could stop the AIDS crisis. We look at why that hasn’t happened. Guests: Dr. Grant, who has been working on H.I.V. treatment and prevention for over 30 years, and Donald G. McNeil Jr., a science and health reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Gilead Sciences, the maker of Truvada, the only drug approved to prevent H.I.V. infection, will donate enough of the drug to supply 200,000 patients, but<a href="https://www.nytimes.com/2019/05/09/health/gilead-truvada-hiv-aids.html?smid=pc-thedaily" target="_blank"> critics questioned the company’s motives</a>.</li><li>The<a href="https://www.nytimes.com/2019/03/12/health/trump-hiv-aids-costs.html?smid=pc-thedaily" target="_blank"> high cost of drugs remains a major obstacle</a> to ending the AIDS epidemic.</li><li>Here’s<a href="https://www.cdc.gov/hiv/risk/prep/index.html" target="_blank"> more information about PrEP</a> from the Centers for Disease Control and Prevention website.</li></ul>]]>
      </description>
      <itunes:title>This Drug Could End H.I.V. Why Hasn’t It?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Dr. Robert Grant developed a treatment — a daily pill known as pre-exposure prophylaxis, or PrEP — that could stop the AIDS crisis. We look at why that hasn’t happened. Guests: Dr. Grant, who has been working on H.I.V. treatment and prevention for over 30 years, and Donald G. McNeil Jr., a science and health reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Gilead Sciences, the maker of Truvada, the only drug approved to prevent H.I.V. infection, will donate enough of the drug to supply 200,000 patients, but critics questioned the company’s motives.The high cost of drugs remains a major obstacle to ending the AIDS epidemic.Here’s more information about PrEP from the Centers for Disease Control and Prevention website.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Dr. Robert Grant developed a treatment — a daily pill known as pre-exposure prophylaxis, or PrEP — that could stop the AIDS crisis. We look at why that hasn’t happened. Guests: Dr. Grant, who has been working on H.I.V. treatment and prevention for over 30 years, and Donald G. McNeil Jr., a science and health reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Gilead Sciences, the maker of Truvada, the only drug approved to prevent H.I.V. infection, will donate enough of the drug to supply 200,000 patients, but<a href="https://www.nytimes.com/2019/05/09/health/gilead-truvada-hiv-aids.html?smid=pc-thedaily" target="_blank"> critics questioned the company’s motives</a>.</li><li>The<a href="https://www.nytimes.com/2019/03/12/health/trump-hiv-aids-costs.html?smid=pc-thedaily" target="_blank"> high cost of drugs remains a major obstacle</a> to ending the AIDS epidemic.</li><li>Here’s<a href="https://www.cdc.gov/hiv/risk/prep/index.html" target="_blank"> more information about PrEP</a> from the Centers for Disease Control and Prevention website.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GAAluLwoPdcfe_5A9JdL7FmE9KHH6tRxJ7QxCHmSeNU</guid>
      <pubDate>Wed, 05 Jun 2019 09:52:39 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/10cdebc7-7d17-4b40-973f-0ebe1dc8c796.mp3" type="audio/mpeg" length="26194337"/>
    </item>
    <item>
      <title>How a Secret U.S. Cyberweapon Backfired</title>
      <description>
        <![CDATA[<p>A criminal group has held computer systems for the city of Baltimore hostage for nearly a month — paralyzing everything from email to the real estate market to the payment of water bills. But what residents don’t know is that a major component of the malware used to shut down the system was developed nearby by a federal government agency. Guest: Scott Shane, who covers national security and the U.S. intelligence community for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>People involved in the investigation say the N.S.A. tool, EternalBlue, was found in Baltimore’s network by four contractors hired to restore computer services.<a href="https://www.nytimes.com/2019/05/31/us/nsa-baltimore-ransomware.html?smid=pc-thedaily" target="_blank"> The N.S.A. says that’s not the case</a>. </li><li>Cybercriminals have been<a href="https://www.nytimes.com/2019/05/25/us/nsa-hacking-tool-baltimore.html?smid=pc-thedaily" target="_blank"> targeting other vulnerable American towns and cities</a>, from Pennsylvania to Texas, in ways that could disrupt local governments for months. </li></ul>]]>
      </description>
      <itunes:title>How a Secret U.S. Cyberweapon Backfired</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A criminal group has held computer systems for the city of Baltimore hostage for nearly a month — paralyzing everything from email to the real estate market to the payment of water bills. But what residents don’t know is that a major component of the malware used to shut down the system was developed nearby by a federal government agency. Guest: Scott Shane, who covers national security and the U.S. intelligence community for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:People involved in the investigation say the N.S.A. tool, EternalBlue, was found in Baltimore’s network by four contractors hired to restore computer services. The N.S.A. says that’s not the case. Cybercriminals have been targeting other vulnerable American towns and cities, from Pennsylvania to Texas, in ways that could disrupt local governments for months. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A criminal group has held computer systems for the city of Baltimore hostage for nearly a month — paralyzing everything from email to the real estate market to the payment of water bills. But what residents don’t know is that a major component of the malware used to shut down the system was developed nearby by a federal government agency. Guest: Scott Shane, who covers national security and the U.S. intelligence community for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>People involved in the investigation say the N.S.A. tool, EternalBlue, was found in Baltimore’s network by four contractors hired to restore computer services.<a href="https://www.nytimes.com/2019/05/31/us/nsa-baltimore-ransomware.html?smid=pc-thedaily" target="_blank"> The N.S.A. says that’s not the case</a>. </li><li>Cybercriminals have been<a href="https://www.nytimes.com/2019/05/25/us/nsa-hacking-tool-baltimore.html?smid=pc-thedaily" target="_blank"> targeting other vulnerable American towns and cities</a>, from Pennsylvania to Texas, in ways that could disrupt local governments for months. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/m_JEULeammGViPJFg0sd-opf4jF3hkonA5F_X8dHWxc</guid>
      <pubDate>Tue, 04 Jun 2019 09:53:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/023daafc-2f10-43e3-ac16-38a72e5f40f7.mp3" type="audio/mpeg" length="23015340"/>
    </item>
    <item>
      <title>The Legacy of Rachel Held Evans</title>
      <description>
        <![CDATA[<p>In a brief but prolific career, a young writer asked whether evangelical Christianity could change. In doing so, she changed it. Guests: Elizabeth Dias, who covers religion for The Times, in conversation with Natalie Kitroeff. &nbsp;For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Read the Times obituary for <a href="https://www.nytimes.com/2019/05/04/us/rachel-held-evans.html?smid=pc-thedaily" target="_blank">Rachel Held Evans</a>, the best-selling author who challenged conservative Christianity and gave voice to a generation of wandering evangelicals wrestling with their faith.</li></ul>]]>
      </description>
      <itunes:title>The Legacy of Rachel Held Evans</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a brief but prolific career, a young writer asked whether evangelical Christianity could change. In doing so, she changed it. Guests: Elizabeth Dias, who covers religion for The Times, in conversation with Natalie Kitroeff.  For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Read the Times obituary for Rachel Held Evans, the best-selling author who challenged conservative Christianity and gave voice to a generation of wandering evangelicals wrestling with their faith.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a brief but prolific career, a young writer asked whether evangelical Christianity could change. In doing so, she changed it. Guests: Elizabeth Dias, who covers religion for The Times, in conversation with Natalie Kitroeff. &nbsp;For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Read the Times obituary for <a href="https://www.nytimes.com/2019/05/04/us/rachel-held-evans.html?smid=pc-thedaily" target="_blank">Rachel Held Evans</a>, the best-selling author who challenged conservative Christianity and gave voice to a generation of wandering evangelicals wrestling with their faith.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/f-l5nU4GxX2dEi3aWxQosLOqtBpbbcOU0HNlFEWj2JM</guid>
      <pubDate>Mon, 03 Jun 2019 09:51:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/18cf5e21-b942-46e2-89ea-b5bb80e1e9d6.mp3" type="audio/mpeg" length="24996049"/>
    </item>
    <item>
      <title>Death, Profit and Disclosure at a Children’s Hospital</title>
      <description>
        <![CDATA[<p>A Times investigation found that doctors at UNC Children’s Hospital suspected that children with complex heart conditions had been dying at higher-than-expected rates, and even children with low-risk conditions seemed to do poorly. Secret recordings shared with our colleague reveal what was happening inside the hospital. Guest: Ellen Gabler, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>Limited information released by UNC shows that the hospital’s cardiac surgery mortality rate from July 2013 through June 2017 was <a href="https://www.nytimes.com/interactive/2019/05/30/us/children-heart-surgery-cardiac.html?smid=pc-thedaily" target="_blank">higher than those of most of the 82 hospitals that publicly report similar information</a>.</li><li>Listen to<a href="https://www.nytimes.com/2019/05/30/us/children-heart-surgery-takeaways.html?smid=pc-thedaily" target="_blank"> the audio recordings that provide an unfiltered look</a> behind closed doors at the hospital. </li></ul>]]>
      </description>
      <itunes:title>Death, Profit and Disclosure at a Children’s Hospital</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A Times investigation found that doctors at UNC Children’s Hospital suspected that children with complex heart conditions had been dying at higher-than-expected rates, and even children with low-risk conditions seemed to do poorly. Secret recordings shared with our colleague reveal what was happening inside the hospital. Guest: Ellen Gabler, an investigative reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Limited information released by UNC shows that the hospital’s cardiac surgery mortality rate from July 2013 through June 2017 was higher than those of most of the 82 hospitals that publicly report similar information.Listen to the audio recordings that provide an unfiltered look behind closed doors at the hospital. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A Times investigation found that doctors at UNC Children’s Hospital suspected that children with complex heart conditions had been dying at higher-than-expected rates, and even children with low-risk conditions seemed to do poorly. Secret recordings shared with our colleague reveal what was happening inside the hospital. Guest: Ellen Gabler, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>Limited information released by UNC shows that the hospital’s cardiac surgery mortality rate from July 2013 through June 2017 was <a href="https://www.nytimes.com/interactive/2019/05/30/us/children-heart-surgery-cardiac.html?smid=pc-thedaily" target="_blank">higher than those of most of the 82 hospitals that publicly report similar information</a>.</li><li>Listen to<a href="https://www.nytimes.com/2019/05/30/us/children-heart-surgery-takeaways.html?smid=pc-thedaily" target="_blank"> the audio recordings that provide an unfiltered look</a> behind closed doors at the hospital. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3LdNLDdAxMRhuRHAzBu1PuhpWbRnv5atOOjXtAzprtk</guid>
      <pubDate>Fri, 31 May 2019 09:52:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/607be1a7-1116-4598-a30a-7e981f0e07a2.mp3" type="audio/mpeg" length="33457214"/>
    </item>
    <item>
      <title>Robert Mueller Breaks His Silence</title>
      <description>
        <![CDATA[<p>Robert Mueller, the special counsel, discussed his investigation of Russian election interference for the first time on Wednesday. He did not absolve President Trump of obstruction of justice, saying: “If we had enough confidence that the president clearly did not commit a crime, we would have said so.” Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The news conference presented an extraordinary spectacle of a top law enforcement official<a href="https://www.nytimes.com/2019/05/29/us/politics/mueller-special-counsel.html?smid=pc-thedaily" target="_blank"> publicly stating that the president’s conduct warranted a criminal investigation</a>, even though it was impossible to indict him for any crimes.</li><li>Here’s<a href="https://www.nytimes.com/2019/05/29/us/politics/mueller-transcript.html?smid=pc-thedaily" target="_blank"> the full transcript of Mr. Mueller’s statement</a>. </li></ul>]]>
      </description>
      <itunes:title>Robert Mueller Breaks His Silence</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Robert Mueller, the special counsel, discussed his investigation of Russian election interference for the first time on Wednesday. He did not absolve President Trump of obstruction of justice, saying: “If we had enough confidence that the president clearly did not commit a crime, we would have said so.” Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The news conference presented an extraordinary spectacle of a top law enforcement official publicly stating that the president’s conduct warranted a criminal investigation, even though it was impossible to indict him for any crimes.Here’s the full transcript of Mr. Mueller’s statement. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Robert Mueller, the special counsel, discussed his investigation of Russian election interference for the first time on Wednesday. He did not absolve President Trump of obstruction of justice, saying: “If we had enough confidence that the president clearly did not commit a crime, we would have said so.” Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The news conference presented an extraordinary spectacle of a top law enforcement official<a href="https://www.nytimes.com/2019/05/29/us/politics/mueller-special-counsel.html?smid=pc-thedaily" target="_blank"> publicly stating that the president’s conduct warranted a criminal investigation</a>, even though it was impossible to indict him for any crimes.</li><li>Here’s<a href="https://www.nytimes.com/2019/05/29/us/politics/mueller-transcript.html?smid=pc-thedaily" target="_blank"> the full transcript of Mr. Mueller’s statement</a>. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jWRw84lzh2Xx5cH5K16O0V3Xq6NPWcNl2gRXAVFqJoo</guid>
      <pubDate>Thu, 30 May 2019 09:51:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/89b9c014-e483-421e-b8e4-3fd790124a38.mp3" type="audio/mpeg" length="21473906"/>
    </item>
    <item>
      <title>The White House Plan to Change Climate Science</title>
      <description>
        <![CDATA[<p>From Day 1, the Trump administration has tried to dismantle regulations aimed at curbing climate change. Now officials are attempting to undermine the very science on which such policies rest. Guest: Coral Davenport, who covers energy and environmental policy for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Parts of the federal government will no longer fulfill what scientists say is one of the most urgent jobs of climate science studies:<a href="https://www.nytimes.com/2019/05/27/us/politics/trump-climate-science.html?smid=pc-thedaily" target="_blank"> reporting on the future effects of a rapidly warming planet</a>. </li><li><a href="https://www.nytimes.com/2018/11/23/climate/us-climate-report.html?smid=pc-thedaily" target="_blank">Here is a breakdown</a> of the 1,656-page report released last fall that warns of a damaged environment and shrinking economy. </li></ul>]]>
      </description>
      <itunes:title>The White House Plan to Change Climate Science</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From Day 1, the Trump administration has tried to dismantle regulations aimed at curbing climate change. Now officials are attempting to undermine the very science on which such policies rest. Guest: Coral Davenport, who covers energy and environmental policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Parts of the federal government will no longer fulfill what scientists say is one of the most urgent jobs of climate science studies: reporting on the future effects of a rapidly warming planet. Here is a breakdown of the 1,656-page report released last fall that warns of a damaged environment and shrinking economy. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>From Day 1, the Trump administration has tried to dismantle regulations aimed at curbing climate change. Now officials are attempting to undermine the very science on which such policies rest. Guest: Coral Davenport, who covers energy and environmental policy for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Parts of the federal government will no longer fulfill what scientists say is one of the most urgent jobs of climate science studies:<a href="https://www.nytimes.com/2019/05/27/us/politics/trump-climate-science.html?smid=pc-thedaily" target="_blank"> reporting on the future effects of a rapidly warming planet</a>. </li><li><a href="https://www.nytimes.com/2018/11/23/climate/us-climate-report.html?smid=pc-thedaily" target="_blank">Here is a breakdown</a> of the 1,656-page report released last fall that warns of a damaged environment and shrinking economy. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lBqxPq0TJ_mt6x1JXzqahE04kCGtw7wFUfDXiKeSqHk</guid>
      <pubDate>Wed, 29 May 2019 09:50:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7567dbf0-f785-4d03-b11e-d5493ff6051d.mp3" type="audio/mpeg" length="20837773"/>
    </item>
    <item>
      <title>What Actually Happened to New York’s Taxi Drivers</title>
      <description>
        <![CDATA[<p>In the past year, many New York City taxi drivers have fallen deeper into debt, even as the city moved to rein in ride-hailing apps like Uber and Lyft. Our colleague explains how the rush to blame those apps shielded those who were really behind the crisis. Guests: Brian M. Rosenthal, an investigative reporter on the Metro desk of The New York Times, and Nicolae Hent, a taxi driver in New York City.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A<a href="https://www.nytimes.com/2018/10/02/nyregion/suicides-taxi-drivers-nyc.html?smid=pc-thedaily" target="_blank"> spate of suicides by taxi drivers</a> in New York City over the past year has highlighted in brutal terms the financial plight of those with ownership permits. Officials blamed the crisis on competition from ride-hailing companies such as Uber and Lyft.</li><li>But thousands of immigrants who were chasing the dream of owning a New York taxi were<a href="https://www.nytimes.com/2019/05/19/nyregion/nyc-taxis-medallions-suicides.html?smid=pc-thedaily" target="_blank"> trapped in reckless loans by bankers who made huge profits</a>, The Times found. Despite years of warning signs,<a href="https://www.nytimes.com/2019/05/19/nyregion/taxi-medallions.html?smid=pc-thedaily" target="_blank"> government agencies did little to stop it</a>. </li></ul>]]>
      </description>
      <itunes:title>What Actually Happened to New York’s Taxi Drivers</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the past year, many New York City taxi drivers have fallen deeper into debt, even as the city moved to rein in ride-hailing apps like Uber and Lyft. Our colleague explains how the rush to blame those apps shielded those who were really behind the crisis. Guests: Brian M. Rosenthal, an investigative reporter on the Metro desk of The New York Times, and Nicolae Hent, a taxi driver in New York City.

For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A spate of suicides by taxi drivers in New York City over the past year has highlighted in brutal terms the financial plight of those with ownership permits. Officials blamed the crisis on competition from ride-hailing companies such as Uber and Lyft.But thousands of immigrants who were chasing the dream of owning a New York taxi were trapped in reckless loans by bankers who made huge profits, The Times found. Despite years of warning signs, government agencies did little to stop it. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the past year, many New York City taxi drivers have fallen deeper into debt, even as the city moved to rein in ride-hailing apps like Uber and Lyft. Our colleague explains how the rush to blame those apps shielded those who were really behind the crisis. Guests: Brian M. Rosenthal, an investigative reporter on the Metro desk of The New York Times, and Nicolae Hent, a taxi driver in New York City.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A<a href="https://www.nytimes.com/2018/10/02/nyregion/suicides-taxi-drivers-nyc.html?smid=pc-thedaily" target="_blank"> spate of suicides by taxi drivers</a> in New York City over the past year has highlighted in brutal terms the financial plight of those with ownership permits. Officials blamed the crisis on competition from ride-hailing companies such as Uber and Lyft.</li><li>But thousands of immigrants who were chasing the dream of owning a New York taxi were<a href="https://www.nytimes.com/2019/05/19/nyregion/nyc-taxis-medallions-suicides.html?smid=pc-thedaily" target="_blank"> trapped in reckless loans by bankers who made huge profits</a>, The Times found. Despite years of warning signs,<a href="https://www.nytimes.com/2019/05/19/nyregion/taxi-medallions.html?smid=pc-thedaily" target="_blank"> government agencies did little to stop it</a>. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8e9kSVkr-Jox9keVD54IMrt7--ipqvYDZr_pxzJGKjc</guid>
      <pubDate>Tue, 28 May 2019 09:52:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4d883af9-34a0-4cdb-a098-ab4dad3f8fef.mp3" type="audio/mpeg" length="28162089"/>
    </item>
    <item>
      <title>Confronting a Childhood Abuser</title>
      <description>
        <![CDATA[<p>Three months ago, a recording of Sterling Van Wagenen, a founder of the Sundance Film Festival, appeared on an obscure website for whistle-blowers in the Mormon Church. The “Daily” producer Annie Brown spoke with our colleague about the story that recording told. Guest: Elizabeth Harris, a culture reporter for The New York Times, talked to Sean Escobar, who made the recording of Mr. Van Wagenen.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. This episode contains descriptions of abuse.</p><p>Background reading:</p><ul><li>Read about<a href="https://www.nytimes.com/2019/04/28/arts/sundance-founder-abuse-arrest.html?smid=pc-thedaily" target="_blank"> how Mr. Escobar’s actions led to the arrest of Mr. Van Wagenen</a>.</li><li>Mr. Van Wagenen is expected to go to prison for at least six years after<a href="https://www.nytimes.com/2019/04/30/movies/sundance-founder-guilty-abuse.html?smid=pc-thedaily" target="_blank"> pleading guilty to child sexual abuse</a>.</li></ul>]]>
      </description>
      <itunes:title>Confronting a Childhood Abuser</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Three months ago, a recording of Sterling Van Wagenen, a founder of the Sundance Film Festival, appeared on an obscure website for whistle-blowers in the Mormon Church. The “Daily” producer Annie Brown spoke with our colleague about the story that recording told. Guest: Elizabeth Harris, a culture reporter for The New York Times, talked to Sean Escobar, who made the recording of Mr. Van Wagenen.

For more information on today’s episode, visit nytimes.com/thedaily. This episode contains descriptions of abuse.

Background reading:Read about how Mr. Escobar’s actions led to the arrest of Mr. Van Wagenen.Mr. Van Wagenen is expected to go to prison for at least six years after pleading guilty to child sexual abuse.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Three months ago, a recording of Sterling Van Wagenen, a founder of the Sundance Film Festival, appeared on an obscure website for whistle-blowers in the Mormon Church. The “Daily” producer Annie Brown spoke with our colleague about the story that recording told. Guest: Elizabeth Harris, a culture reporter for The New York Times, talked to Sean Escobar, who made the recording of Mr. Van Wagenen.</p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. This episode contains descriptions of abuse.</p><p>Background reading:</p><ul><li>Read about<a href="https://www.nytimes.com/2019/04/28/arts/sundance-founder-abuse-arrest.html?smid=pc-thedaily" target="_blank"> how Mr. Escobar’s actions led to the arrest of Mr. Van Wagenen</a>.</li><li>Mr. Van Wagenen is expected to go to prison for at least six years after<a href="https://www.nytimes.com/2019/04/30/movies/sundance-founder-guilty-abuse.html?smid=pc-thedaily" target="_blank"> pleading guilty to child sexual abuse</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZeFKW5POnl2MeDMsAXbbSha4FF5DmmjeGn0uX3qReXQ</guid>
      <pubDate>Fri, 24 May 2019 09:54:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:42:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e161b2bb-9a22-490d-a17d-fc99a9a63671.mp3" type="audio/mpeg" length="40552907"/>
    </item>
    <item>
      <title>The Bank That Kept Saying Yes to Trump</title>
      <description>
        <![CDATA[<p>At a time when most Wall Street firms had stopped doing business with Donald J. Trump, a single bank lent him more than $2 billion. We look at the two-decade relationship that could unlock the president’s financial secrets. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with David Enrich, the finance editor and author of the forthcoming book “<a href="https://www.harpercollins.com/9780062878816/unti-on-deutsche-bank/" target="_blank">Dark Towers: The Inside Story of the World’s Most Destructive Bank</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A real estate mogul made toxic by polarizing rhetoric and a pattern of defaults. A bank with longstanding financial problems and a record of misconduct.<a href="https://www.nytimes.com/2019/03/18/business/trump-deutsche-bank.html?smid=pc-thedaily" target="_blank"> Read about President Trump’s tumultuous history with Deutsche Bank</a>.</li><li>A federal judge on Wednesday<a href="https://www.nytimes.com/2019/05/22/business/deutsche-bank-trump-subpoena.html?smid=pc-thedaily" target="_blank"> ruled against a request from the president to block Deutsche Bank from complying</a> with congressional subpoenas.</li></ul>]]>
      </description>
      <itunes:title>The Bank That Kept Saying Yes to Trump</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At a time when most Wall Street firms had stopped doing business with Donald J. Trump, a single bank lent him more than $2 billion. We look at the two-decade relationship that could unlock the president’s financial secrets. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with David Enrich, the finance editor and author of the forthcoming book “Dark Towers: The Inside Story of the World’s Most Destructive Bank.” For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A real estate mogul made toxic by polarizing rhetoric and a pattern of defaults. A bank with longstanding financial problems and a record of misconduct. Read about President Trump’s tumultuous history with Deutsche Bank.A federal judge on Wednesday ruled against a request from the president to block Deutsche Bank from complying with congressional subpoenas.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At a time when most Wall Street firms had stopped doing business with Donald J. Trump, a single bank lent him more than $2 billion. We look at the two-decade relationship that could unlock the president’s financial secrets. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with David Enrich, the finance editor and author of the forthcoming book “<a href="https://www.harpercollins.com/9780062878816/unti-on-deutsche-bank/" target="_blank">Dark Towers: The Inside Story of the World’s Most Destructive Bank</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A real estate mogul made toxic by polarizing rhetoric and a pattern of defaults. A bank with longstanding financial problems and a record of misconduct.<a href="https://www.nytimes.com/2019/03/18/business/trump-deutsche-bank.html?smid=pc-thedaily" target="_blank"> Read about President Trump’s tumultuous history with Deutsche Bank</a>.</li><li>A federal judge on Wednesday<a href="https://www.nytimes.com/2019/05/22/business/deutsche-bank-trump-subpoena.html?smid=pc-thedaily" target="_blank"> ruled against a request from the president to block Deutsche Bank from complying</a> with congressional subpoenas.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5lmehHU7qs45AGCFnO7tcaFh78rPMOZ05_l47fF-PXA</guid>
      <pubDate>Thu, 23 May 2019 09:51:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b078b2a7-e095-4660-b7d8-d5175bac9cbf.mp3" type="audio/mpeg" length="27222099"/>
    </item>
    <item>
      <title>A Growing Call for Impeachment</title>
      <description>
        <![CDATA[<p>In the weeks since the release of the Mueller report, the Democratic Party has been struggling with how to proceed. Now, divisions are emerging as a group of House members push their leaders to open impeachment proceedings. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Some liberal Democrats<a href="https://www.nytimes.com/2019/05/21/us/politics/mcgahn-subpoena-house-impeachment.html" target="_blank"> called for an impeachment inquiry of President Trump</a> after the former White House counsel, Donald F. McGahn II, under the direction of the president, skipped a scheduled House Judiciary Committee hearing.</li></ul>]]>
      </description>
      <itunes:title>A Growing Call for Impeachment</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the weeks since the release of the Mueller report, the Democratic Party has been struggling with how to proceed. Now, divisions are emerging as a group of House members push their leaders to open impeachment proceedings. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Some liberal Democrats called for an impeachment inquiry of President Trump after the former White House counsel, Donald F. McGahn II, under the direction of the president, skipped a scheduled House Judiciary Committee hearing.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the weeks since the release of the Mueller report, the Democratic Party has been struggling with how to proceed. Now, divisions are emerging as a group of House members push their leaders to open impeachment proceedings. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Some liberal Democrats<a href="https://www.nytimes.com/2019/05/21/us/politics/mcgahn-subpoena-house-impeachment.html" target="_blank"> called for an impeachment inquiry of President Trump</a> after the former White House counsel, Donald F. McGahn II, under the direction of the president, skipped a scheduled House Judiciary Committee hearing.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4uDW2uGI67SpVvOVo-7j-FbzyQlVASnF6b3o3xZCNvY</guid>
      <pubDate>Wed, 22 May 2019 09:50:39 -0000</pubDate>
      <link>https://www.nytimes.com/2019/05/22/podcasts/the-daily/house-democrats-mcgahn-impeachment.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3852455d-8dd1-43f8-9bf0-7085b9d29246.mp3" type="audio/mpeg" length="22126341"/>
    </item>
    <item>
      <title>The Rise of Modi: India’s Rightward Turn</title>
      <description>
        <![CDATA[<p>India’s prime minister, Narendra Modi, has governed as a right-wing populist whose nationalist message has often pitted Hindus against Muslims. We look at what Mr. Modi’s likely re-election this week tells us about the country’s political future. Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Mr. Modi’s Hindu nationalist politics and his efforts to project a strong image of India abroad<a href="https://www.nytimes.com/2019/05/19/world/asia/india-modi-election-polls.html?smid=pc-thedaily" target="_blank"> appeared to have played well among the country’s 900 million registered voters</a>, according to exit polls.</li><li>The results of the election may reveal not just a decision on Mr. Modi but also<a href="https://www.nytimes.com/2019/05/20/world/asia/modi-india-election.html?smid=pc-thedaily" target="_blank"> a deeper one on what kind of government India really wants</a>.</li></ul>]]>
      </description>
      <itunes:title>The Rise of Modi: India’s Rightward Turn</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>India’s prime minister, Narendra Modi, has governed as a right-wing populist whose nationalist message has often pitted Hindus against Muslims. We look at what Mr. Modi’s likely re-election this week tells us about the country’s political future. Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Mr. Modi’s Hindu nationalist politics and his efforts to project a strong image of India abroad appeared to have played well among the country’s 900 million registered voters, according to exit polls.The results of the election may reveal not just a decision on Mr. Modi but also a deeper one on what kind of government India really wants.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>India’s prime minister, Narendra Modi, has governed as a right-wing populist whose nationalist message has often pitted Hindus against Muslims. We look at what Mr. Modi’s likely re-election this week tells us about the country’s political future. Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Mr. Modi’s Hindu nationalist politics and his efforts to project a strong image of India abroad<a href="https://www.nytimes.com/2019/05/19/world/asia/india-modi-election-polls.html?smid=pc-thedaily" target="_blank"> appeared to have played well among the country’s 900 million registered voters</a>, according to exit polls.</li><li>The results of the election may reveal not just a decision on Mr. Modi but also<a href="https://www.nytimes.com/2019/05/20/world/asia/modi-india-election.html?smid=pc-thedaily" target="_blank"> a deeper one on what kind of government India really wants</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/oMN3YxeKDfIPkGDpqfyJuXbNbCenHrMO4G7eht6KVyg</guid>
      <pubDate>Tue, 21 May 2019 09:52:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/deeebf11-1332-4fca-a7c7-95650b6a07a1.mp3" type="audio/mpeg" length="23819911"/>
    </item>
    <item>
      <title>The Legal Vulnerability of Roe v. Wade</title>
      <description>
        <![CDATA[<p>From the day Roe v. Wade was decided, some have seen the constitutional right to an abortion as an inferred right rather than a guaranteed one. That distinction has become a threat to the law’s survival. Guests: Sabrina Tavernise, a national correspondent for The New York Times, spoke with Adam Liptak, who covers the Supreme Court for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Because the court led by Chief Justice John Roberts tends toward incrementalism, it is<a href="https://www.nytimes.com/2019/05/15/us/politics/supreme-court-abortion.html?smid=pc-thedaily" target="_blank"> more likely to hear cases that chip away at abortion rights</a> than to overturn Roe v. Wade directly.</li><li>But after nearly five decades, the anti-abortion movement is<a href="https://www.nytimes.com/2019/05/18/us/anti-abortion-laws.html?smid=pc-thedaily" target="_blank"> closer than it has ever been to dismantling Roe</a>.</li></ul>]]>
      </description>
      <itunes:title>The Legal Vulnerability of Roe v. Wade</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From the day Roe v. Wade was decided, some have seen the constitutional right to an abortion as an inferred right rather than a guaranteed one. That distinction has become a threat to the law’s survival. Guests: Sabrina Tavernise, a national correspondent for The New York Times, spoke with Adam Liptak, who covers the Supreme Court for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Because the court led by Chief Justice John Roberts tends toward incrementalism, it is more likely to hear cases that chip away at abortion rights than to overturn Roe v. Wade directly.But after nearly five decades, the anti-abortion movement is closer than it has ever been to dismantling Roe.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>From the day Roe v. Wade was decided, some have seen the constitutional right to an abortion as an inferred right rather than a guaranteed one. That distinction has become a threat to the law’s survival. Guests: Sabrina Tavernise, a national correspondent for The New York Times, spoke with Adam Liptak, who covers the Supreme Court for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Because the court led by Chief Justice John Roberts tends toward incrementalism, it is<a href="https://www.nytimes.com/2019/05/15/us/politics/supreme-court-abortion.html?smid=pc-thedaily" target="_blank"> more likely to hear cases that chip away at abortion rights</a> than to overturn Roe v. Wade directly.</li><li>But after nearly five decades, the anti-abortion movement is<a href="https://www.nytimes.com/2019/05/18/us/anti-abortion-laws.html?smid=pc-thedaily" target="_blank"> closer than it has ever been to dismantling Roe</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dK8j_9JdnkbOkBj7pdwyYCX15Fws5i2-G2xAsFWZTE4</guid>
      <pubDate>Mon, 20 May 2019 09:54:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba08b7a5-cfc4-459c-807f-2edfe1f701b3.mp3" type="audio/mpeg" length="22386729"/>
    </item>
    <item>
      <title>A Direct Challenge to Roe v. Wade in Alabama</title>
      <description>
        <![CDATA[<p>Alabama has adopted a law that would criminalize nearly all abortions and make the penalty for providing one up to 99 years in prison. The man who wrote the law knew it was unconstitutional — and did it anyway. We asked him why. Guests: Eric Johnston, a lawyer in Alabama who has spent more than 30 years trying to ban abortion, and Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading: </p><ul><li>States across the country are passing some of the most restrictive abortion legislation in decades,<a href="https://www.nytimes.com/2019/05/15/us/abortion-laws-2019.html?smid=pc-thedaily" target="_blank"> setting up court battles that could profoundly reshape abortion access in America</a>.</li><li>On Wednesday, Alabama’s governor signed into law<a href="https://www.nytimes.com/2019/05/14/us/abortion-law-alabama.html?smid=pc-thedaily" target="_blank"> a measure to ban most abortions in the state</a>. Here’s<a href="https://www.nytimes.com/2019/05/15/us/alabama-abortion-facts-law-bill.html?smid=pc-thedaily" target="_blank"> what’s likely to happen next</a>.</li><li>Among residents of Alabama,<a href="https://www.nytimes.com/2019/05/16/us/abortion-law-women.html?smid=pc-thedaily" target="_blank"> opposition to abortion is widespread</a>.</li></ul>]]>
      </description>
      <itunes:title>A Direct Challenge to Roe v. Wade in Alabama</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Alabama has adopted a law that would criminalize nearly all abortions and make the penalty for providing one up to 99 years in prison. The man who wrote the law knew it was unconstitutional — and did it anyway. We asked him why. Guests: Eric Johnston, a lawyer in Alabama who has spent more than 30 years trying to ban abortion, and Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: States across the country are passing some of the most restrictive abortion legislation in decades, setting up court battles that could profoundly reshape abortion access in America.On Wednesday, Alabama’s governor signed into law a measure to ban most abortions in the state. Here’s what’s likely to happen next.Among residents of Alabama, opposition to abortion is widespread.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Alabama has adopted a law that would criminalize nearly all abortions and make the penalty for providing one up to 99 years in prison. The man who wrote the law knew it was unconstitutional — and did it anyway. We asked him why. Guests: Eric Johnston, a lawyer in Alabama who has spent more than 30 years trying to ban abortion, and Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading: </p><ul><li>States across the country are passing some of the most restrictive abortion legislation in decades,<a href="https://www.nytimes.com/2019/05/15/us/abortion-laws-2019.html?smid=pc-thedaily" target="_blank"> setting up court battles that could profoundly reshape abortion access in America</a>.</li><li>On Wednesday, Alabama’s governor signed into law<a href="https://www.nytimes.com/2019/05/14/us/abortion-law-alabama.html?smid=pc-thedaily" target="_blank"> a measure to ban most abortions in the state</a>. Here’s<a href="https://www.nytimes.com/2019/05/15/us/alabama-abortion-facts-law-bill.html?smid=pc-thedaily" target="_blank"> what’s likely to happen next</a>.</li><li>Among residents of Alabama,<a href="https://www.nytimes.com/2019/05/16/us/abortion-law-women.html?smid=pc-thedaily" target="_blank"> opposition to abortion is widespread</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/G5hCoHDL74uGX3pcSjmIT-EwNbHtWTZLb-wEnxG8y_Y</guid>
      <pubDate>Fri, 17 May 2019 09:50:25 -0000</pubDate>
      <link>https://www.nytimes.com/2019/05/17/podcasts/the-daily/alabama-abortion-law-roe-wade.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fdc93151-0cdb-4e93-a94a-6252d225a2e2.mp3" type="audio/mpeg" length="25245988"/>
    </item>
    <item>
      <title>Caught in the Middle of the Trade War</title>
      <description>
        <![CDATA[<p>Yesterday, we told the story of President Trump’s trade war with China. Today, our colleague speaks with two Americans who have been feeling the effects of that war. Guests: <a href="https://www.nytimes.com/by/natalie-kitroeff" target="_blank">Natalie Kitroeff</a>, a business reporter for The New York Times, talked to Kevin Watje, a truck manufacturer in Iowa, and Eldon Gould, a farmer in Illinois. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>President Trump’s tariffs, initially seen as a cudgel to break down trade barriers,<a href="https://www.nytimes.com/2019/05/14/us/politics/trump-tariffs-china.html?smid=pc-thedaily" target="_blank"> increasingly look like more permanent measures</a> intended to shelter American industry.</li><li>Some Republicans<a href="https://www.nytimes.com/2019/05/14/us/politics/china-tariffs-republicans.html?smid=pc-thedaily" target="_blank"> are balking at the president’s trade policy</a> as the Trump administration considers another bailout for farmers.</li></ul>]]>
      </description>
      <itunes:title>Caught in the Middle of the Trade War</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Yesterday, we told the story of President Trump’s trade war with China. Today, our colleague speaks with two Americans who have been feeling the effects of that war. Guests: Natalie Kitroeff, a business reporter for The New York Times, talked to Kevin Watje, a truck manufacturer in Iowa, and Eldon Gould, a farmer in Illinois. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:President Trump’s tariffs, initially seen as a cudgel to break down trade barriers, increasingly look like more permanent measures intended to shelter American industry.Some Republicans are balking at the president’s trade policy as the Trump administration considers another bailout for farmers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Yesterday, we told the story of President Trump’s trade war with China. Today, our colleague speaks with two Americans who have been feeling the effects of that war. Guests: <a href="https://www.nytimes.com/by/natalie-kitroeff" target="_blank">Natalie Kitroeff</a>, a business reporter for The New York Times, talked to Kevin Watje, a truck manufacturer in Iowa, and Eldon Gould, a farmer in Illinois. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>President Trump’s tariffs, initially seen as a cudgel to break down trade barriers,<a href="https://www.nytimes.com/2019/05/14/us/politics/trump-tariffs-china.html?smid=pc-thedaily" target="_blank"> increasingly look like more permanent measures</a> intended to shelter American industry.</li><li>Some Republicans<a href="https://www.nytimes.com/2019/05/14/us/politics/china-tariffs-republicans.html?smid=pc-thedaily" target="_blank"> are balking at the president’s trade policy</a> as the Trump administration considers another bailout for farmers.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/q5Nt41BtwU9H_R8NepjZA-1caQ424GgG3TLP8Zqb6NE</guid>
      <pubDate>Thu, 16 May 2019 09:52:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b7c31e39-f410-4867-b7f2-0e6d888183a6.mp3" type="audio/mpeg" length="25976999"/>
    </item>
    <item>
      <title>The President Takes On China, Alone</title>
      <description>
        <![CDATA[<p>Years of multinational efforts have failed to get China to play by the international rules of trade. Now, President Trump has launched an all-out trade war in which the United States is confronting China on its own. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Peter S. Goodman, an economics correspondent. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>The intensifying trade war between the United States and China, the two largest economies on earth, has become the<a href="https://www.nytimes.com/2019/05/15/business/us-china-trade-war-economy.html?smid=pc-thedaily" target="_blank"> biggest threat to the global economy</a>.</li><li>Both countries seem to be<a href="https://www.nytimes.com/2019/05/14/upshot/us-china-trade-war.html?smid=pc-thedaily" target="_blank"> hardening their positions in ways that will be difficult to resolve</a> with the mutual face-saving that typically facilitates trade deals.</li></ul>]]>
      </description>
      <itunes:title>The President Takes On China, Alone</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Years of multinational efforts have failed to get China to play by the international rules of trade. Now, President Trump has launched an all-out trade war in which the United States is confronting China on its own. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Peter S. Goodman, an economics correspondent. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The intensifying trade war between the United States and China, the two largest economies on earth, has become the biggest threat to the global economy.Both countries seem to be hardening their positions in ways that will be difficult to resolve with the mutual face-saving that typically facilitates trade deals.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Years of multinational efforts have failed to get China to play by the international rules of trade. Now, President Trump has launched an all-out trade war in which the United States is confronting China on its own. Guests: Natalie Kitroeff, a business reporter for The New York Times, spoke with Peter S. Goodman, an economics correspondent. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>The intensifying trade war between the United States and China, the two largest economies on earth, has become the<a href="https://www.nytimes.com/2019/05/15/business/us-china-trade-war-economy.html?smid=pc-thedaily" target="_blank"> biggest threat to the global economy</a>.</li><li>Both countries seem to be<a href="https://www.nytimes.com/2019/05/14/upshot/us-china-trade-war.html?smid=pc-thedaily" target="_blank"> hardening their positions in ways that will be difficult to resolve</a> with the mutual face-saving that typically facilitates trade deals.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0siHqMPyw1xrx-VA5oq70YFCkfIl23zthUeb3-fQgL0</guid>
      <pubDate>Wed, 15 May 2019 09:51:44 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e9bfb438-88f8-4598-9bd3-0aa0d1fbc561.mp3" type="audio/mpeg" length="25756316"/>
    </item>
    <item>
      <title>The Freshmen: Rashida Tlaib, Part 2</title>
      <description>
        <![CDATA[<p>When we last spoke with Representative Rashida Tlaib, she had just been sworn in — and had fulfilled the fears of Democratic leaders by calling for the impeachment of President Trump. In the months since, she’s been challenging her party on a different front, attracting controversy for her criticisms of Israel, which some have characterized as anti-Semitic.</p><p>Ms. Tlaib has repeatedly denied that there’s any anti-Semitism behind what she’s said. But she hasn’t spoken at length about the controversy or explained where she’s coming from. So a few weeks ago, we traveled back to visit her at her congressional office in Detroit.</p><p>Guests: Representative Rashida Tlaib, Democrat of Michigan; and Andy Mills and Jessica Cheung, producers for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. This episode contains explicit language.</p><p>Background reading:</p><ul><li>Remarks by Ms. Tlaib about the Palestinian role in the founding of Israel<a href="https://www.nytimes.com/2019/05/13/us/politics/rashida-tlaib-holocaust.html?smid=pc-thedaily" target="_blank"> further inflamed a feud</a> over the Jewish state, anti-Semitism and the first two Muslim women in the House.</li><li>This episode of “The Daily” includes excerpts from an interview with Ms. Tlaib on “Skullduggery,” a podcast from Yahoo News. Listen to the full interview<a href="https://news.yahoo.com/skullduggery-tv-rashida-love-022051273.html?smid=pc-thedaily" target="_blank"> here</a>.</li></ul>]]>
      </description>
      <itunes:title>The Freshmen: Rashida Tlaib, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When we last spoke with Representative Rashida Tlaib, she had just been sworn in — and had fulfilled the fears of Democratic leaders by calling for the impeachment of President Trump. In the months since, she’s been challenging her party on a different front, attracting controversy for her criticisms of Israel, which some have characterized as anti-Semitic.

Ms. Tlaib has repeatedly denied that there’s any anti-Semitism behind what she’s said. But she hasn’t spoken at length about the controversy or explained where she’s coming from. So a few weeks ago, we traveled back to visit her at her congressional office in Detroit.

Guests: Representative Rashida Tlaib, Democrat of Michigan; and Andy Mills and Jessica Cheung, producers for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily. This episode contains explicit language.

Background reading:Remarks by Ms. Tlaib about the Palestinian role in the founding of Israel further inflamed a feud over the Jewish state, anti-Semitism and the first two Muslim women in the House.This episode of “The Daily” includes excerpts from an interview with Ms. Tlaib on “Skullduggery,” a podcast from Yahoo News. Listen to the full interview here.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When we last spoke with Representative Rashida Tlaib, she had just been sworn in — and had fulfilled the fears of Democratic leaders by calling for the impeachment of President Trump. In the months since, she’s been challenging her party on a different front, attracting controversy for her criticisms of Israel, which some have characterized as anti-Semitic.</p><p>Ms. Tlaib has repeatedly denied that there’s any anti-Semitism behind what she’s said. But she hasn’t spoken at length about the controversy or explained where she’s coming from. So a few weeks ago, we traveled back to visit her at her congressional office in Detroit.</p><p>Guests: Representative Rashida Tlaib, Democrat of Michigan; and Andy Mills and Jessica Cheung, producers for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. This episode contains explicit language.</p><p>Background reading:</p><ul><li>Remarks by Ms. Tlaib about the Palestinian role in the founding of Israel<a href="https://www.nytimes.com/2019/05/13/us/politics/rashida-tlaib-holocaust.html?smid=pc-thedaily" target="_blank"> further inflamed a feud</a> over the Jewish state, anti-Semitism and the first two Muslim women in the House.</li><li>This episode of “The Daily” includes excerpts from an interview with Ms. Tlaib on “Skullduggery,” a podcast from Yahoo News. Listen to the full interview<a href="https://news.yahoo.com/skullduggery-tv-rashida-love-022051273.html?smid=pc-thedaily" target="_blank"> here</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g7qsG2YVpr5YRPmUGQMSt0BD39Q7jyp15lWbuHmM1uc</guid>
      <pubDate>Tue, 14 May 2019 09:53:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/674cd140-bcb2-4070-bcdc-096ef42122f0.mp3" type="audio/mpeg" length="33426703"/>
    </item>
    <item>
      <title>John Bolton’s Plan for Iran</title>
      <description>
        <![CDATA[<p>Iran is warning that it may resume production on its nuclear program, reviving a crisis that had been contained by the signing of the Iran nuclear deal four years ago. One man within the United States government may have intentionally brought us to this point. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading: </p><ul><li>After President Hassan Rouhani of Iran declared that he would begin to walk away from the terms of the nuclear deal, the Trump administration<a href="https://www.nytimes.com/2019/05/08/us/politics/iran-nuclear-deal.html?smid=pc-thedaily" target="_blank"> responded with a new round of sanctions</a>.</li><li>The lack of ideological coherence in President Trump’s approach to foreign intervention<a href="https://www.nytimes.com/2019/05/08/us/politics/trump-regime-change-analysis.html?smid=pc-thedaily" target="_blank"> has played to the advantage of more hawkish advisers</a>.</li></ul>]]>
      </description>
      <itunes:title>John Bolton’s Plan for Iran</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Iran is warning that it may resume production on its nuclear program, reviving a crisis that had been contained by the signing of the Iran nuclear deal four years ago. One man within the United States government may have intentionally brought us to this point. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading: After President Hassan Rouhani of Iran declared that he would begin to walk away from the terms of the nuclear deal, the Trump administration responded with a new round of sanctions.The lack of ideological coherence in President Trump’s approach to foreign intervention has played to the advantage of more hawkish advisers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Iran is warning that it may resume production on its nuclear program, reviving a crisis that had been contained by the signing of the Iran nuclear deal four years ago. One man within the United States government may have intentionally brought us to this point. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading: </p><ul><li>After President Hassan Rouhani of Iran declared that he would begin to walk away from the terms of the nuclear deal, the Trump administration<a href="https://www.nytimes.com/2019/05/08/us/politics/iran-nuclear-deal.html?smid=pc-thedaily" target="_blank"> responded with a new round of sanctions</a>.</li><li>The lack of ideological coherence in President Trump’s approach to foreign intervention<a href="https://www.nytimes.com/2019/05/08/us/politics/trump-regime-change-analysis.html?smid=pc-thedaily" target="_blank"> has played to the advantage of more hawkish advisers</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6uJwg6etqm3r4TwxeM8Ht13q6HY9HdyGKCBwSvaDnCI</guid>
      <pubDate>Mon, 13 May 2019 09:50:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f8589c80-54e0-4785-817e-a8d6cef54809.mp3" type="audio/mpeg" length="22900819"/>
    </item>
    <item>
      <title>A Founder of Facebook Says It’s Time to Break It Up</title>
      <description>
        <![CDATA[<p>Chris Hughes, a Facebook co-founder and Mark Zuckerberg’s college roommate, has written an Op-Ed in The New York Times saying that Mr. Zuckerberg has become too powerful and that Facebook should be broken up. Our colleague sits down with him to talk about why he’s speaking out. Guest: Kevin Roose, a technology writer for The Times who interviewed Mr. Hughes. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>“It’s been 15 years since I co-founded Facebook at Harvard, and I haven’t worked at the company in a decade,” Mr. Hughes<a href="https://www.nytimes.com/2019/05/09/opinion/sunday/chris-hughes-facebook-zuckerberg.html?smid=pc-thedaily" target="_blank"> writes in his Op-Ed</a>. “But I feel a sense of anger and responsibility.”</li></ul>]]>
      </description>
      <itunes:title>A Founder of Facebook Says It’s Time to Break It Up</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Chris Hughes, a Facebook co-founder and Mark Zuckerberg’s college roommate, has written an Op-Ed in The New York Times saying that Mr. Zuckerberg has become too powerful and that Facebook should be broken up. Our colleague sits down with him to talk about why he’s speaking out. Guest: Kevin Roose, a technology writer for The Times who interviewed Mr. Hughes. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: “It’s been 15 years since I co-founded Facebook at Harvard, and I haven’t worked at the company in a decade,” Mr. Hughes writes in his Op-Ed. “But I feel a sense of anger and responsibility.”</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Chris Hughes, a Facebook co-founder and Mark Zuckerberg’s college roommate, has written an Op-Ed in The New York Times saying that Mr. Zuckerberg has become too powerful and that Facebook should be broken up. Our colleague sits down with him to talk about why he’s speaking out. Guest: Kevin Roose, a technology writer for The Times who interviewed Mr. Hughes. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>“It’s been 15 years since I co-founded Facebook at Harvard, and I haven’t worked at the company in a decade,” Mr. Hughes<a href="https://www.nytimes.com/2019/05/09/opinion/sunday/chris-hughes-facebook-zuckerberg.html?smid=pc-thedaily" target="_blank"> writes in his Op-Ed</a>. “But I feel a sense of anger and responsibility.”</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/TapjdmWADJ8cy3iLY2xE2sdb2krg4p_UNk8cABjroxo</guid>
      <pubDate>Fri, 10 May 2019 09:52:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2facf9e4-13a2-4537-953b-138a45cdafb2.mp3" type="audio/mpeg" length="29427670"/>
    </item>
    <item>
      <title>Holding the Attorney General in Contempt</title>
      <description>
        <![CDATA[<p>The House Judiciary Committee voted to recommend holding Attorney General William Barr in contempt after President Trump asserted executive privilege over the full Mueller report. But little is likely to happen as a result. We look at why Congress is running out of options for investigating the president. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The House Judiciary Committee<a href="https://www.nytimes.com/2019/05/08/us/politics/trump-executive-privilege-mueller-report.html?smid=pc-thedaily" target="_blank"> voted 24 to 16 to hold the attorney general in contempt</a> after President Trump asserted executive privilege to shield the unredacted Mueller report from Congress.</li><li>The president’s stonewalling of Congress<a href="https://www.nytimes.com/2019/05/07/us/politics/trump-democrats.html?smid=pc-thedaily" target="_blank"> may threaten to upend the separation of powers</a> outlined in the Constitution.</li></ul>]]>
      </description>
      <itunes:title>Holding the Attorney General in Contempt</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House Judiciary Committee voted to recommend holding Attorney General William Barr in contempt after President Trump asserted executive privilege over the full Mueller report. But little is likely to happen as a result. We look at why Congress is running out of options for investigating the president. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The House Judiciary Committee voted 24 to 16 to hold the attorney general in contempt after President Trump asserted executive privilege to shield the unredacted Mueller report from Congress.The president’s stonewalling of Congress may threaten to upend the separation of powers outlined in the Constitution.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House Judiciary Committee voted to recommend holding Attorney General William Barr in contempt after President Trump asserted executive privilege over the full Mueller report. But little is likely to happen as a result. We look at why Congress is running out of options for investigating the president. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The House Judiciary Committee<a href="https://www.nytimes.com/2019/05/08/us/politics/trump-executive-privilege-mueller-report.html?smid=pc-thedaily" target="_blank"> voted 24 to 16 to hold the attorney general in contempt</a> after President Trump asserted executive privilege to shield the unredacted Mueller report from Congress.</li><li>The president’s stonewalling of Congress<a href="https://www.nytimes.com/2019/05/07/us/politics/trump-democrats.html?smid=pc-thedaily" target="_blank"> may threaten to upend the separation of powers</a> outlined in the Constitution.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NEzsHPNF3uu1U8vLs1yRNWgOoLqd_rG4Je0Bmk01PmU</guid>
      <pubDate>Thu, 09 May 2019 09:50:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/30be9119-feb8-423f-8cde-ee875f983cb9.mp3" type="audio/mpeg" length="23366844"/>
    </item>
    <item>
      <title>$1 Billion in Losses: A Decade of Trump’s Taxes</title>
      <description>
        <![CDATA[<p>In October, The New York Times published an investigation into the tax returns of President Trump’s father, revealing the president’s past involvement in tax evasion and stark inconsistencies in his account of his success. Two reporters who broke that story are back with new information about the president’s own taxes. Guests: Russ Buettner and Susanne Craig, investigative reporters for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The Times has obtained figures from President Trump’s federal income tax returns from 1985 through 1994. They<a href="https://www.nytimes.com/interactive/2019/05/07/us/politics/donald-trump-taxes.html?smid=pc-thedaily" target="_blank"> paint a far bleaker picture of his financial condition than was previously known</a>.</li><li>Here are<a href="https://www.nytimes.com/2019/05/07/us/trump-tax-figures.html?smid=pc-thedaily" target="_blank"> five takeaways of what the numbers show</a>.</li><li>Listen to an episode of “The Daily” about<a href="https://www.nytimes.com/2018/10/03/podcasts/the-daily/donald-trump-fred-trump-tax-money.html?smid=pc-thedaily" target="_blank"> Mr. Trump’s participation in dubious tax schemes during the 1990s</a>. </li></ul>]]>
      </description>
      <itunes:title>$1 Billion in Losses: A Decade of Trump’s Taxes</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In October, The New York Times published an investigation into the tax returns of President Trump’s father, revealing the president’s past involvement in tax evasion and stark inconsistencies in his account of his success. Two reporters who broke that story are back with new information about the president’s own taxes. Guests: Russ Buettner and Susanne Craig, investigative reporters for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The Times has obtained figures from President Trump’s federal income tax returns from 1985 through 1994. They paint a far bleaker picture of his financial condition than was previously known.Here are five takeaways of what the numbers show.Listen to an episode of “The Daily” about Mr. Trump’s participation in dubious tax schemes during the 1990s. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In October, The New York Times published an investigation into the tax returns of President Trump’s father, revealing the president’s past involvement in tax evasion and stark inconsistencies in his account of his success. Two reporters who broke that story are back with new information about the president’s own taxes. Guests: Russ Buettner and Susanne Craig, investigative reporters for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The Times has obtained figures from President Trump’s federal income tax returns from 1985 through 1994. They<a href="https://www.nytimes.com/interactive/2019/05/07/us/politics/donald-trump-taxes.html?smid=pc-thedaily" target="_blank"> paint a far bleaker picture of his financial condition than was previously known</a>.</li><li>Here are<a href="https://www.nytimes.com/2019/05/07/us/trump-tax-figures.html?smid=pc-thedaily" target="_blank"> five takeaways of what the numbers show</a>.</li><li>Listen to an episode of “The Daily” about<a href="https://www.nytimes.com/2018/10/03/podcasts/the-daily/donald-trump-fred-trump-tax-money.html?smid=pc-thedaily" target="_blank"> Mr. Trump’s participation in dubious tax schemes during the 1990s</a>. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dK3j808ha_oJH4dDUuDCi__vEZy1BOgARG4d5atOJoQ</guid>
      <pubDate>Wed, 08 May 2019 09:52:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fe753e64-5bc8-4c31-8989-8de7852a8d3d.mp3" type="audio/mpeg" length="22115892"/>
    </item>
    <item>
      <title>The Chinese Surveillance State, Part 2</title>
      <description>
        <![CDATA[<p>In Part 2 of our series, we tell the story of an American citizen whose family members have been detained in Chinese re-education camps for Uighurs and members of other Muslim minority groups. We look at what his efforts to free them reveal about the global reach of China’s surveillance. Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur and American citizen who lives in Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Ethnic Uighurs and other Muslim minorities<a href="https://www.nytimes.com/2018/09/08/world/asia/china-uighur-muslim-detention-camp.html?smid=pc-thedaily" target="_blank"> have been sent to camps in vast numbers</a> in what is China’s most sweeping internment operation since the Mao era.</li><li>Chinese officers<a href="https://www.nytimes.com/2018/10/18/world/asia/uighur-muslims-china-detainment.html?smid=pc-thedaily" target="_blank"> have attempted to suppress opposition from Uighurs abroad</a> by detaining their relatives.</li><li>The Trump administration<a href="https://www.nytimes.com/2019/05/04/world/asia/trump-china-uighurs-trade-deal.html?smid=pc-thedaily" target="_blank"> has avoided addressing the persecution of the Uighurs during trade talks with China</a>, fearing such a move could jeopardize a deal.</li></ul>]]>
      </description>
      <itunes:title>The Chinese Surveillance State, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In Part 2 of our series, we tell the story of an American citizen whose family members have been detained in Chinese re-education camps for Uighurs and members of other Muslim minority groups. We look at what his efforts to free them reveal about the global reach of China’s surveillance. Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur and American citizen who lives in Virginia. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Ethnic Uighurs and other Muslim minorities have been sent to camps in vast numbers in what is China’s most sweeping internment operation since the Mao era.Chinese officers have attempted to suppress opposition from Uighurs abroad by detaining their relatives.The Trump administration has avoided addressing the persecution of the Uighurs during trade talks with China, fearing such a move could jeopardize a deal.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In Part 2 of our series, we tell the story of an American citizen whose family members have been detained in Chinese re-education camps for Uighurs and members of other Muslim minority groups. We look at what his efforts to free them reveal about the global reach of China’s surveillance. Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai, spoke with Ferkat Jawdat, a Uighur and American citizen who lives in Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Ethnic Uighurs and other Muslim minorities<a href="https://www.nytimes.com/2018/09/08/world/asia/china-uighur-muslim-detention-camp.html?smid=pc-thedaily" target="_blank"> have been sent to camps in vast numbers</a> in what is China’s most sweeping internment operation since the Mao era.</li><li>Chinese officers<a href="https://www.nytimes.com/2018/10/18/world/asia/uighur-muslims-china-detainment.html?smid=pc-thedaily" target="_blank"> have attempted to suppress opposition from Uighurs abroad</a> by detaining their relatives.</li><li>The Trump administration<a href="https://www.nytimes.com/2019/05/04/world/asia/trump-china-uighurs-trade-deal.html?smid=pc-thedaily" target="_blank"> has avoided addressing the persecution of the Uighurs during trade talks with China</a>, fearing such a move could jeopardize a deal.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mzkzh7CmrMPBU4-8B-D3bg7vCu49C4_mUQBbLM6Vo_A</guid>
      <pubDate>Tue, 07 May 2019 10:09:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0e452d60-84c2-4eb4-9943-fa9f9cc724e1.mp3" type="audio/mpeg" length="26430066"/>
    </item>
    <item>
      <title>The Chinese Surveillance State, Part 1</title>
      <description>
        <![CDATA[<p>Under President Xi Jinping, China is pioneering a new form of governance by surveillance. In the first of a two-part series, we look at how China tested that system by targeting one minority group. Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Chinese authorities are expanding an<a href="https://www.nytimes.com/interactive/2019/04/04/world/asia/xinjiang-china-surveillance-prison.html?smid=pc-thedaily" target="_blank"> extensive surveillance net</a> by using a<a href="https://www.nytimes.com/2019/04/14/technology/china-surveillance-artificial-intelligence-racial-profiling.html?smid=pc-thedaily" target="_blank"> vast, secret system of facial recognition technology to control the Uighurs</a>, a largely Muslim minority.</li><li>Technology built for China’s surveillance system<a href="https://www.nytimes.com/2019/04/24/technology/ecuador-surveillance-cameras-police-government.html?smid=pc-thedaily" target="_blank"> is now being applied — and sometimes abused — by other governments</a>.</li></ul>]]>
      </description>
      <itunes:title>The Chinese Surveillance State, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Under President Xi Jinping, China is pioneering a new form of governance by surveillance. In the first of a two-part series, we look at how China tested that system by targeting one minority group. Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: Chinese authorities are expanding an extensive surveillance net by using a vast, secret system of facial recognition technology to control the Uighurs, a largely Muslim minority.Technology built for China’s surveillance system is now being applied — and sometimes abused — by other governments.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Under President Xi Jinping, China is pioneering a new form of governance by surveillance. In the first of a two-part series, we look at how China tested that system by targeting one minority group. Guest: Paul Mozur, a technology reporter for The New York Times based in Shanghai. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>Chinese authorities are expanding an<a href="https://www.nytimes.com/interactive/2019/04/04/world/asia/xinjiang-china-surveillance-prison.html?smid=pc-thedaily" target="_blank"> extensive surveillance net</a> by using a<a href="https://www.nytimes.com/2019/04/14/technology/china-surveillance-artificial-intelligence-racial-profiling.html?smid=pc-thedaily" target="_blank"> vast, secret system of facial recognition technology to control the Uighurs</a>, a largely Muslim minority.</li><li>Technology built for China’s surveillance system<a href="https://www.nytimes.com/2019/04/24/technology/ecuador-surveillance-cameras-police-government.html?smid=pc-thedaily" target="_blank"> is now being applied — and sometimes abused — by other governments</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PKIWCovYRA7yrG7lF7skWZnTzF5mfs8cBvsJHadyDD4</guid>
      <pubDate>Mon, 06 May 2019 09:55:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:28</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/172d6dd7-a5d9-4308-aa90-bc0ed2b2447b.mp3" type="audio/mpeg" length="20614582"/>
    </item>
    <item>
      <title>A Secret Dossier in Venezuela</title>
      <description>
        <![CDATA[<p>After mass protests and international pressure failed to unseat President Nicolás Maduro of Venezuela, it became clear that it would take defections from within his own government to remove him from power. Now, secret documents suggest that some of Mr. Maduro’s people are starting to turn on him. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A<a href="https://www.nytimes.com/2019/05/02/world/americas/venezuela-maduro-hezbollah-drugs.html?smid=pc-thedaily" target="_blank"> secret dossier compiled by Venezuela’s intelligence agency</a> and provided to The New York Times shows how Tareck El Aissami, a confidant of Mr. Maduro, became a wealthy man even as his country headed toward economic collapse. </li><li><a href="https://www.nytimes.com/2018/03/12/podcasts/the-daily/venezuela-leopoldo-lopez.html?smid=pc-thedaily" target="_blank">Listen to a series from “The Daily” about Leopoldo López</a>, a prominent opposition politician who was put under house arrest after staging protests in 2014.</li></ul>]]>
      </description>
      <itunes:title>A Secret Dossier in Venezuela</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After mass protests and international pressure failed to unseat President Nicolás Maduro of Venezuela, it became clear that it would take defections from within his own government to remove him from power. Now, secret documents suggest that some of Mr. Maduro’s people are starting to turn on him. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: A secret dossier compiled by Venezuela’s intelligence agency and provided to The New York Times shows how Tareck El Aissami, a confidant of Mr. Maduro, became a wealthy man even as his country headed toward economic collapse. Listen to a series from “The Daily” about Leopoldo López, a prominent opposition politician who was put under house arrest after staging protests in 2014.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After mass protests and international pressure failed to unseat President Nicolás Maduro of Venezuela, it became clear that it would take defections from within his own government to remove him from power. Now, secret documents suggest that some of Mr. Maduro’s people are starting to turn on him. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>A<a href="https://www.nytimes.com/2019/05/02/world/americas/venezuela-maduro-hezbollah-drugs.html?smid=pc-thedaily" target="_blank"> secret dossier compiled by Venezuela’s intelligence agency</a> and provided to The New York Times shows how Tareck El Aissami, a confidant of Mr. Maduro, became a wealthy man even as his country headed toward economic collapse. </li><li><a href="https://www.nytimes.com/2018/03/12/podcasts/the-daily/venezuela-leopoldo-lopez.html?smid=pc-thedaily" target="_blank">Listen to a series from “The Daily” about Leopoldo López</a>, a prominent opposition politician who was put under house arrest after staging protests in 2014.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/uawhdCU5bg1qN2mv2kyuV6gOFnmc4hWDd2cntDP8sP4</guid>
      <pubDate>Fri, 03 May 2019 09:56:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/46b6095b-251d-42ce-af5e-4a60996288dc.mp3" type="audio/mpeg" length="19412114"/>
    </item>
    <item>
      <title>The Senate Testimony of William Barr</title>
      <description>
        <![CDATA[<p>In testimony before the Senate Judiciary Committee, Attorney General William Barr defended his handling of the Mueller report, saying he did not misrepresent its findings. We spoke with our colleague who spent the day in the hearing room. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>At<a href="https://www.nytimes.com/2019/05/01/us/politics/william-barr-testimony.html?smid=pc-thedaily" target="_blank"> a contentious hearing marked by a deep partisan divide</a>, the center of the clash was nothing less than the presidency and the integrity of the law enforcement system.</li><li>Here are the<a href="https://www.nytimes.com/2019/05/01/us/politics/william-barr-hearing.html?smid=pc-thedaily" target="_blank"> highlights of Mr. Barr’s testimony</a> on Wednesday.</li></ul>]]>
      </description>
      <itunes:title>The Senate Testimony of William Barr</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In testimony before the Senate Judiciary Committee, Attorney General William Barr defended his handling of the Mueller report, saying he did not misrepresent its findings. We spoke with our colleague who spent the day in the hearing room. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: At a contentious hearing marked by a deep partisan divide, the center of the clash was nothing less than the presidency and the integrity of the law enforcement system.Here are the highlights of Mr. Barr’s testimony on Wednesday.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In testimony before the Senate Judiciary Committee, Attorney General William Barr defended his handling of the Mueller report, saying he did not misrepresent its findings. We spoke with our colleague who spent the day in the hearing room. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>At<a href="https://www.nytimes.com/2019/05/01/us/politics/william-barr-testimony.html?smid=pc-thedaily" target="_blank"> a contentious hearing marked by a deep partisan divide</a>, the center of the clash was nothing less than the presidency and the integrity of the law enforcement system.</li><li>Here are the<a href="https://www.nytimes.com/2019/05/01/us/politics/william-barr-hearing.html?smid=pc-thedaily" target="_blank"> highlights of Mr. Barr’s testimony</a> on Wednesday.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/D2NLuN3yXR3UI1HXcSqyxZlQ4rsyBBDFtPcwPj9ISlo</guid>
      <pubDate>Thu, 02 May 2019 09:55:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/722dcff8-1aff-453c-a1e3-bd03113bac72.mp3" type="audio/mpeg" length="24504529"/>
    </item>
    <item>
      <title>A Dictator’s Fall in Sudan</title>
      <description>
        <![CDATA[<p>After a brutal 30-year reign, President Omar Hassan al-Bashir of Sudan has been deposed by his own generals. The story of one of those generals and his son could signal what comes next for the country. Guest: Declan Walsh, the Cairo bureau chief for The New York Times, spoke with Lt. Gen. Salah Abdelkhalig and Abdelkhalig Salah in Khartoum, Sudan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>When Sudan’s Air Force chief stepped out to address a crowd calling for the ouster of the president, the chief’s own son was among the protesters —<a href="https://www.nytimes.com/2019/04/23/world/africa/sudan-protesters-al-bashir-abdelkhalig-.html?smid=pc-thedaily" target="_blank"> a family split that mirrors broader tensions between the military and civilians</a>.</li><li>Mr. al-Bashir, who is under indictment by the International Criminal Court for genocide, war crimes and crimes against humanity,<a href="https://www.nytimes.com/2019/04/11/world/africa/omar-bashir-sudan.html?smid=pc-thedaily" target="_blank"> was unseated amid sweeping demonstrations</a> that began in December over the price of bread.</li></ul>]]>
      </description>
      <itunes:title>A Dictator’s Fall in Sudan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After a brutal 30-year reign, President Omar Hassan al-Bashir of Sudan has been deposed by his own generals. The story of one of those generals and his son could signal what comes next for the country. Guest: Declan Walsh, the Cairo bureau chief for The New York Times, spoke with Lt. Gen. Salah Abdelkhalig and Abdelkhalig Salah in Khartoum, Sudan. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: When Sudan’s Air Force chief stepped out to address a crowd calling for the ouster of the president, the chief’s own son was among the protesters — a family split that mirrors broader tensions between the military and civilians.Mr. al-Bashir, who is under indictment by the International Criminal Court for genocide, war crimes and crimes against humanity, was unseated amid sweeping demonstrations that began in December over the price of bread.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After a brutal 30-year reign, President Omar Hassan al-Bashir of Sudan has been deposed by his own generals. The story of one of those generals and his son could signal what comes next for the country. Guest: Declan Walsh, the Cairo bureau chief for The New York Times, spoke with Lt. Gen. Salah Abdelkhalig and Abdelkhalig Salah in Khartoum, Sudan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>When Sudan’s Air Force chief stepped out to address a crowd calling for the ouster of the president, the chief’s own son was among the protesters —<a href="https://www.nytimes.com/2019/04/23/world/africa/sudan-protesters-al-bashir-abdelkhalig-.html?smid=pc-thedaily" target="_blank"> a family split that mirrors broader tensions between the military and civilians</a>.</li><li>Mr. al-Bashir, who is under indictment by the International Criminal Court for genocide, war crimes and crimes against humanity,<a href="https://www.nytimes.com/2019/04/11/world/africa/omar-bashir-sudan.html?smid=pc-thedaily" target="_blank"> was unseated amid sweeping demonstrations</a> that began in December over the price of bread.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/13JjbRE_TBZoJeaw0inbPcUarwBwfVK69OWYzdLt7g4</guid>
      <pubDate>Wed, 01 May 2019 09:55:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/667bc513-6035-4ffb-bf9a-3088da2d34dc.mp3" type="audio/mpeg" length="19995167"/>
    </item>
    <item>
      <title>A Crisis at the N.R.A.</title>
      <description>
        <![CDATA[<p>A bitter power struggle has broken out inside the nation’s pre-eminent gun rights group. We look at how the mere threat of a financial investigation plunged the National Rifle Association into crisis. Guest: Danny Hakim, an investigative reporter for The New York Times, spoke with us from the N.R.A.’s annual convention in Indianapolis. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>Wayne LaPierre was<a href="https://www.nytimes.com/2019/04/29/us/nra-wayne-lapierre-oliver-north.html?smid=pc-thedaily" target="_blank"> unanimously re-elected as chief executive of the N.R.A. </a>after infighting with Oliver L. North, who was replaced as the group’s president.</li><li>The N.R.A. is facing a number of challenges, including the New York attorney general’s<a href="https://www.nytimes.com/2019/04/27/us/oliver-north-nra.html?smid=pc-thedaily" target="_blank"> investigation into the group’s tax-exempt status</a> and the<a href="https://www.nytimes.com/2018/11/16/us/politics/nra-gun-control-fund-raising.html?smid=pc-thedaily" target="_blank"> new financial strength of the gun control movement</a>.</li></ul>]]>
      </description>
      <itunes:title>A Crisis at the N.R.A.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A bitter power struggle has broken out inside the nation’s pre-eminent gun rights group. We look at how the mere threat of a financial investigation plunged the National Rifle Association into crisis. Guest: Danny Hakim, an investigative reporter for The New York Times, spoke with us from the N.R.A.’s annual convention in Indianapolis. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:Wayne LaPierre was unanimously re-elected as chief executive of the N.R.A. after infighting with Oliver L. North, who was replaced as the group’s president.The N.R.A. is facing a number of challenges, including the New York attorney general’s investigation into the group’s tax-exempt status and the new financial strength of the gun control movement.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A bitter power struggle has broken out inside the nation’s pre-eminent gun rights group. We look at how the mere threat of a financial investigation plunged the National Rifle Association into crisis. Guest: Danny Hakim, an investigative reporter for The New York Times, spoke with us from the N.R.A.’s annual convention in Indianapolis. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>Wayne LaPierre was<a href="https://www.nytimes.com/2019/04/29/us/nra-wayne-lapierre-oliver-north.html?smid=pc-thedaily" target="_blank"> unanimously re-elected as chief executive of the N.R.A. </a>after infighting with Oliver L. North, who was replaced as the group’s president.</li><li>The N.R.A. is facing a number of challenges, including the New York attorney general’s<a href="https://www.nytimes.com/2019/04/27/us/oliver-north-nra.html?smid=pc-thedaily" target="_blank"> investigation into the group’s tax-exempt status</a> and the<a href="https://www.nytimes.com/2018/11/16/us/politics/nra-gun-control-fund-raising.html?smid=pc-thedaily" target="_blank"> new financial strength of the gun control movement</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZIl2-4WgfgHl2j9y7GHfQAIb1VBSwaaMxUsnj-gxnKE</guid>
      <pubDate>Tue, 30 Apr 2019 09:55:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e4d31fa0-74db-4935-9e5d-81f022dc4f30.mp3" type="audio/mpeg" length="21269942"/>
    </item>
    <item>
      <title>Why the Supreme Court Is Ruling on the Census</title>
      <description>
        <![CDATA[<p>Before the 2020 census begins in the United States, a case has been fast-tracked to the nation’s highest court about who is counted and why. It has become the biggest case in front of the Supreme Court this session. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The Supreme Court’s conservative majority<a href="https://www.nytimes.com/2019/04/23/us/politics/supreme-court-census-citizenship.html?smid=pc-thedaily" target="_blank"> appeared ready to allow the Trump administration to add a question about citizenship status</a> to the 2020 census. A decision is expected in June. </li><li>Political<a href="https://www.nytimes.com/2019/04/23/us/noncitizens-census-political-maps.html?smid=pc-thedaily" target="_blank"> maps based only on the citizen population</a> could tilt in favor of Republicans. </li></ul>]]>
      </description>
      <itunes:title>Why the Supreme Court Is Ruling on the Census</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Before the 2020 census begins in the United States, a case has been fast-tracked to the nation’s highest court about who is counted and why. It has become the biggest case in front of the Supreme Court this session. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading: The Supreme Court’s conservative majority appeared ready to allow the Trump administration to add a question about citizenship status to the 2020 census. A decision is expected in June. Political maps based only on the citizen population could tilt in favor of Republicans. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Before the 2020 census begins in the United States, a case has been fast-tracked to the nation’s highest court about who is counted and why. It has become the biggest case in front of the Supreme Court this session. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading: </p><ul><li>The Supreme Court’s conservative majority<a href="https://www.nytimes.com/2019/04/23/us/politics/supreme-court-census-citizenship.html?smid=pc-thedaily" target="_blank"> appeared ready to allow the Trump administration to add a question about citizenship status</a> to the 2020 census. A decision is expected in June. </li><li>Political<a href="https://www.nytimes.com/2019/04/23/us/noncitizens-census-political-maps.html?smid=pc-thedaily" target="_blank"> maps based only on the citizen population</a> could tilt in favor of Republicans. </li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xbENGQ01DOKkGo07_kuwUEozRKetxooGiIqE-bXDffc</guid>
      <pubDate>Mon, 29 Apr 2019 09:53:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b456b017-77e7-474b-9668-12692bae19bb.mp3" type="audio/mpeg" length="24890723"/>
    </item>
    <item>
      <title>How the Measles Outbreak Started</title>
      <description>
        <![CDATA[<p>The number of measles cases in the United States has risen to nearly 700 — the highest annual number recorded since 2000, when the disease was declared eliminated in the country. Many of those cases can be traced to ultra-Orthodox Jewish communities in New York. Guest: Sarah Maslin Nir, who covers New York City for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Officials in New York have taken extraordinary measures to fight the measles outbreak,<a href="https://www.nytimes.com/2019/04/24/health/measles-outbreaks-us.html?smid=pc-thedaily" target="_blank"> including $1,000 fines and bans on unvaccinated children in public</a>.</li><li>The outbreak has Orthodox Jewish communities<a href="https://www.nytimes.com/2019/03/29/nyregion/measles-jewish-community.html?smid=pc-thedaily" target="_blank"> fearing a rise in anti-Semitism</a>.</li><li>How is measles transmitted? How safe is the vaccine?<a href="https://www.nytimes.com/2019/02/20/us/measles-outbreak.html?smid=pc-thedaily" target="_blank"> Here are answers to some questions about the disease</a>.</li></ul>]]>
      </description>
      <itunes:title>How the Measles Outbreak Started</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The number of measles cases in the United States has risen to nearly 700 — the highest annual number recorded since 2000, when the disease was declared eliminated in the country. Many of those cases can be traced to ultra-Orthodox Jewish communities in New York. Guest: Sarah Maslin Nir, who covers New York City for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:Officials in New York have taken extraordinary measures to fight the measles outbreak, including $1,000 fines and bans on unvaccinated children in public.The outbreak has Orthodox Jewish communities fearing a rise in anti-Semitism.How is measles transmitted? How safe is the vaccine? Here are answers to some questions about the disease.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The number of measles cases in the United States has risen to nearly 700 — the highest annual number recorded since 2000, when the disease was declared eliminated in the country. Many of those cases can be traced to ultra-Orthodox Jewish communities in New York. Guest: Sarah Maslin Nir, who covers New York City for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Officials in New York have taken extraordinary measures to fight the measles outbreak,<a href="https://www.nytimes.com/2019/04/24/health/measles-outbreaks-us.html?smid=pc-thedaily" target="_blank"> including $1,000 fines and bans on unvaccinated children in public</a>.</li><li>The outbreak has Orthodox Jewish communities<a href="https://www.nytimes.com/2019/03/29/nyregion/measles-jewish-community.html?smid=pc-thedaily" target="_blank"> fearing a rise in anti-Semitism</a>.</li><li>How is measles transmitted? How safe is the vaccine?<a href="https://www.nytimes.com/2019/02/20/us/measles-outbreak.html?smid=pc-thedaily" target="_blank"> Here are answers to some questions about the disease</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VvUUaey9w-QJYI-lIw1uIZcw-ENoaSgT8mHpxhrV5To</guid>
      <pubDate>Fri, 26 Apr 2019 09:55:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/310638c8-30fc-4426-8c08-545588ff96b9.mp3" type="audio/mpeg" length="23843735"/>
    </item>
    <item>
      <title>A Secret in the Navy SEALs</title>
      <description>
        <![CDATA[<p>Navy SEAL commandos said they had seen their decorated platoon leader, Special Operations Chief Edward Gallagher, commit war crimes. They were warned not to report it. They did so anyway. Guest: Dave Philipps, who covers the military for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>A confidential Navy criminal investigation report obtained by The Times paints a disturbing picture of<a href="https://www.nytimes.com/2019/04/23/us/navy-seals-crimes-of-war.html?smid=pc-thedaily" target="_blank"> a subculture within the SEALs that prized aggression and protected wrongdoers</a>.</li></ul>]]>
      </description>
      <itunes:title>A Secret in the Navy SEALs</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Navy SEAL commandos said they had seen their decorated platoon leader, Special Operations Chief Edward Gallagher, commit war crimes. They were warned not to report it. They did so anyway. Guest: Dave Philipps, who covers the military for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:A confidential Navy criminal investigation report obtained by The Times paints a disturbing picture of a subculture within the SEALs that prized aggression and protected wrongdoers.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Navy SEAL commandos said they had seen their decorated platoon leader, Special Operations Chief Edward Gallagher, commit war crimes. They were warned not to report it. They did so anyway. Guest: Dave Philipps, who covers the military for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>A confidential Navy criminal investigation report obtained by The Times paints a disturbing picture of<a href="https://www.nytimes.com/2019/04/23/us/navy-seals-crimes-of-war.html?smid=pc-thedaily" target="_blank"> a subculture within the SEALs that prized aggression and protected wrongdoers</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wmxAtuxQd6-kYlmr8wZvKv7xnC1bBZtfNo9ldtNsDPo</guid>
      <pubDate>Thu, 25 Apr 2019 09:54:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7431031d-37c1-4851-8a75-5e94d6f2ca09.mp3" type="audio/mpeg" length="25718700"/>
    </item>
    <item>
      <title>The Terrorist Attacks in Sri Lanka</title>
      <description>
        <![CDATA[<p>A series of highly coordinated bombings in Sri Lanka has left more than 350 people dead. How did a small, obscure and underfinanced local group carry out one of the deadliest terrorist attacks since 9/11? Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>The Islamic State<a href="https://www.nytimes.com/2019/04/23/world/asia/isis-sri-lanka-blasts.html?smid=pc-thedaily" target="_blank"> claimed responsibility for the bombings</a>, but the extent of its involvement is not yet clear.</li><li>Here’s<a href="https://www.nytimes.com/2019/04/24/world/asia/sri-lanka-attacks-news.html?smid=pc-thedaily" target="_blank"> what we currently know and don’t know</a> about the attacks.</li></ul>]]>
      </description>
      <itunes:title>The Terrorist Attacks in Sri Lanka</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A series of highly coordinated bombings in Sri Lanka has left more than 350 people dead. How did a small, obscure and underfinanced local group carry out one of the deadliest terrorist attacks since 9/11? Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

Background reading:The Islamic State claimed responsibility for the bombings, but the extent of its involvement is not yet clear.Here’s what we currently know and don’t know about the attacks.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A series of highly coordinated bombings in Sri Lanka has left more than 350 people dead. How did a small, obscure and underfinanced local group carry out one of the deadliest terrorist attacks since 9/11? Guest: Jeffrey Gettleman, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>Background reading:</p><ul><li>The Islamic State<a href="https://www.nytimes.com/2019/04/23/world/asia/isis-sri-lanka-blasts.html?smid=pc-thedaily" target="_blank"> claimed responsibility for the bombings</a>, but the extent of its involvement is not yet clear.</li><li>Here’s<a href="https://www.nytimes.com/2019/04/24/world/asia/sri-lanka-attacks-news.html?smid=pc-thedaily" target="_blank"> what we currently know and don’t know</a> about the attacks.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/SOdxsNurbdpF_wd2up-jY8uU0ETVPBKU7SY2ASyk9TA</guid>
      <pubDate>Wed, 24 Apr 2019 09:55:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e9fac08b-288c-4ac9-aa4b-cec723ce12c0.mp3" type="audio/mpeg" length="19041802"/>
    </item>
    <item>
      <title>The Whistle-Blowers at Boeing</title>
      <description>
        <![CDATA[<p>After two crashes of Boeing 737 Max jets, regulators and lawmakers began asking whether competitive pressure may have led the company to miss safety risks, like an anti-stall system that played a role in both crashes. In reporting that story, our colleagues began to look into whether the problems extended beyond the 737 Max. Guest: Natalie Kitroeff, a business reporter for The New York Times, spoke with John Barnett, a former quality manager at Boeing. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>In an industry where safety is paramount, concerns involving two crucial Boeing plane models — the 737 Max and the 787 Dreamliner —<a href="https://www.nytimes.com/2019/04/20/business/boeing-dreamliner-production-problems.html" target="_blank"> </a><a href="https://www.nytimes.com/2019/04/20/business/boeing-dreamliner-production-problems.html?smid=pc-thedaily" target="_blank">point to potentially systemic problems</a> at the company.</li></ul>]]>
      </description>
      <itunes:title>The Whistle-Blowers at Boeing</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After two crashes of Boeing 737 Max jets, regulators and lawmakers began asking whether competitive pressure may have led the company to miss safety risks, like an anti-stall system that played a role in both crashes. In reporting that story, our colleagues began to look into whether the problems extended beyond the 737 Max. Guest: Natalie Kitroeff, a business reporter for The New York Times, spoke with John Barnett, a former quality manager at Boeing. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:In an industry where safety is paramount, concerns involving two crucial Boeing plane models — the 737 Max and the 787 Dreamliner — point to potentially systemic problems at the company.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After two crashes of Boeing 737 Max jets, regulators and lawmakers began asking whether competitive pressure may have led the company to miss safety risks, like an anti-stall system that played a role in both crashes. In reporting that story, our colleagues began to look into whether the problems extended beyond the 737 Max. Guest: Natalie Kitroeff, a business reporter for The New York Times, spoke with John Barnett, a former quality manager at Boeing. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>In an industry where safety is paramount, concerns involving two crucial Boeing plane models — the 737 Max and the 787 Dreamliner —<a href="https://www.nytimes.com/2019/04/20/business/boeing-dreamliner-production-problems.html" target="_blank"> </a><a href="https://www.nytimes.com/2019/04/20/business/boeing-dreamliner-production-problems.html?smid=pc-thedaily" target="_blank">point to potentially systemic problems</a> at the company.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ToUM8BbNWj8gwtgkrWTG4SyywDaxBPdSHYiknfwnAvQ</guid>
      <pubDate>Tue, 23 Apr 2019 09:54:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/55e0b863-cbb6-4519-aea7-bf8e46c1e4b1.mp3" type="audio/mpeg" length="25849103"/>
    </item>
    <item>
      <title>How Trump’s Protector Became Mueller’s Best Witness</title>
      <description>
        <![CDATA[<p>The most interesting figure in the Mueller report may be the man who was hired to protect President Trump, but turned out to be the most damaging witness against him. We look at the role of Donald F. McGahn II, the former White House counsel. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Mr. McGahn’s interviews — including an account of being asked by President Trump to remove the special counsel — <a href="https://www.nytimes.com/2019/04/20/us/politics/mueller-witnesses-trump.html?smid=pc-thedaily" target="_blank">&nbsp;were cited in the Mueller report 157 times, more than any other witness</a>.</li><li>Mr. McGahn is one of many Trump aides who took notes of their interactions with the president. In some cases, it was to help them do their jobs,<a href="https://www.nytimes.com/2019/04/21/us/politics/trump-mueller-note-taking.html?smid=pc-thedaily" target="_blank"> but in others it was for self-preservation</a>.</li></ul>]]>
      </description>
      <itunes:title>How Trump’s Protector Became Mueller’s Best Witness</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The most interesting figure in the Mueller report may be the man who was hired to protect President Trump, but turned out to be the most damaging witness against him. We look at the role of Donald F. McGahn II, the former White House counsel. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:Mr. McGahn’s interviews — including an account of being asked by President Trump to remove the special counsel —  were cited in the Mueller report 157 times, more than any other witness.Mr. McGahn is one of many Trump aides who took notes of their interactions with the president. In some cases, it was to help them do their jobs, but in others it was for self-preservation.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The most interesting figure in the Mueller report may be the man who was hired to protect President Trump, but turned out to be the most damaging witness against him. We look at the role of Donald F. McGahn II, the former White House counsel. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Mr. McGahn’s interviews — including an account of being asked by President Trump to remove the special counsel — <a href="https://www.nytimes.com/2019/04/20/us/politics/mueller-witnesses-trump.html?smid=pc-thedaily" target="_blank">&nbsp;were cited in the Mueller report 157 times, more than any other witness</a>.</li><li>Mr. McGahn is one of many Trump aides who took notes of their interactions with the president. In some cases, it was to help them do their jobs,<a href="https://www.nytimes.com/2019/04/21/us/politics/trump-mueller-note-taking.html?smid=pc-thedaily" target="_blank"> but in others it was for self-preservation</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0mkpcCaR2Hc9sOF_2dVlgPnfdG-VmDuqMULM-dAc67A</guid>
      <pubDate>Mon, 22 Apr 2019 09:55:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e1306ac4-c340-46fd-a996-0b2894fd5226.mp3" type="audio/mpeg" length="22594037"/>
    </item>
    <item>
      <title>The Mueller Report Is Released</title>
      <description>
        <![CDATA[<p>Two years and 448 pages later, a redacted version of the Mueller report has been made public. Here’s what we’ve learned. Guests: Michael S. Schmidt and Mark Mazzetti, who have been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p><p>Background reading:</p><ul><li>The Mueller report laid out <a href="https://www.nytimes.com/2019/04/18/us/politics/mueller-report-russian-interference-donald-trump.html?smid=pc-thedaily" target="_blank">the scope of Russian election interference</a> and President Trump’s frantic efforts to thwart the special counsel investigation.</li><li>Read<a href="https://www.nytimes.com/2019/04/18/us/politics/mueller-report-released-live.html" target="_blank"> </a>a rundown of <a href="https://www.nytimes.com/2019/04/18/us/politics/mueller-report-released-live.html?smid=pc-thedaily" target="_blank">what we know so far from the report</a>.</li><li>Times reporters shared<a href="https://www.nytimes.com/2019/04/18/us/politics/the-mueller-report-excerpts.html?smid=pc-thedaily" target="_blank"> key annotated excerpts</a> from the report.</li></ul>]]>
      </description>
      <itunes:title>The Mueller Report Is Released</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two years and 448 pages later, a redacted version of the Mueller report has been made public. Here’s what we’ve learned. Guests: Michael S. Schmidt and Mark Mazzetti, who have been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language.

Background reading:The Mueller report laid out the scope of Russian election interference and President Trump’s frantic efforts to thwart the special counsel investigation.Read a rundown of what we know so far from the report.Times reporters shared key annotated excerpts from the report.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Two years and 448 pages later, a redacted version of the Mueller report has been made public. Here’s what we’ve learned. Guests: Michael S. Schmidt and Mark Mazzetti, who have been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p><p>Background reading:</p><ul><li>The Mueller report laid out <a href="https://www.nytimes.com/2019/04/18/us/politics/mueller-report-russian-interference-donald-trump.html?smid=pc-thedaily" target="_blank">the scope of Russian election interference</a> and President Trump’s frantic efforts to thwart the special counsel investigation.</li><li>Read<a href="https://www.nytimes.com/2019/04/18/us/politics/mueller-report-released-live.html" target="_blank"> </a>a rundown of <a href="https://www.nytimes.com/2019/04/18/us/politics/mueller-report-released-live.html?smid=pc-thedaily" target="_blank">what we know so far from the report</a>.</li><li>Times reporters shared<a href="https://www.nytimes.com/2019/04/18/us/politics/the-mueller-report-excerpts.html?smid=pc-thedaily" target="_blank"> key annotated excerpts</a> from the report.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_X3S7BWb9193UOWmCEBMlcRqQAzAlt0dVmxFL4KMcP0</guid>
      <pubDate>Fri, 19 Apr 2019 10:21:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/700f1722-779a-47ba-8721-c6213aa824fd.mp3" type="audio/mpeg" length="25470014"/>
    </item>
    <item>
      <title>The Abortion Wars, Part 2: The Illinois Option</title>
      <description>
        <![CDATA[<p>Four states have passed laws this year that effectively ban abortion after six weeks of pregnancy, and others, including Missouri, are expected to follow suit. Some Missourians are crossing the state line to Illinois, where abortion access is protected. We spent a day at a clinic in Illinois with three women who were getting abortions. Guests: Sabrina Tavernise, a national correspondent for The New York Times, and Lynsea Garrison, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p><p>Background coverage:</p><ul><li>Bans on abortion in the very early weeks of pregnancy — after a fetal heartbeat is detected — used to be rare. But in the past three months,<a href="https://www.nytimes.com/2019/04/18/us/ohio-abortion-heartbeat-bill.html?smid=pc-thedaily" target="_blank"> four states have passed so-called heartbeat bills</a>, and 11 others are considering them. </li><li>In 1973, the Supreme Court ruled — with little controversy — that women had a constitutional right to abortion. How did the decision give way to today’s deep political divide?<a href="https://www.nytimes.com/2018/07/23/podcasts/the-daily/roe-wade-abortion-norma-mccorvey.html?smid=pc-thedaily" target="_blank"> Listen to a series from “The Daily” on Roe v. Wade</a>.</li></ul>]]>
      </description>
      <itunes:title>The Abortion Wars, Part 2: The Illinois Option</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Four states have passed laws this year that effectively ban abortion after six weeks of pregnancy, and others, including Missouri, are expected to follow suit. Some Missourians are crossing the state line to Illinois, where abortion access is protected. We spent a day at a clinic in Illinois with three women who were getting abortions. Guests: Sabrina Tavernise, a national correspondent for The New York Times, and Lynsea Garrison, a producer for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language.

Background coverage:Bans on abortion in the very early weeks of pregnancy — after a fetal heartbeat is detected — used to be rare. But in the past three months, four states have passed so-called heartbeat bills, and 11 others are considering them. In 1973, the Supreme Court ruled — with little controversy — that women had a constitutional right to abortion. How did the decision give way to today’s deep political divide? Listen to a series from “The Daily” on Roe v. Wade.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Four states have passed laws this year that effectively ban abortion after six weeks of pregnancy, and others, including Missouri, are expected to follow suit. Some Missourians are crossing the state line to Illinois, where abortion access is protected. We spent a day at a clinic in Illinois with three women who were getting abortions. Guests: Sabrina Tavernise, a national correspondent for The New York Times, and Lynsea Garrison, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p><p>Background coverage:</p><ul><li>Bans on abortion in the very early weeks of pregnancy — after a fetal heartbeat is detected — used to be rare. But in the past three months,<a href="https://www.nytimes.com/2019/04/18/us/ohio-abortion-heartbeat-bill.html?smid=pc-thedaily" target="_blank"> four states have passed so-called heartbeat bills</a>, and 11 others are considering them. </li><li>In 1973, the Supreme Court ruled — with little controversy — that women had a constitutional right to abortion. How did the decision give way to today’s deep political divide?<a href="https://www.nytimes.com/2018/07/23/podcasts/the-daily/roe-wade-abortion-norma-mccorvey.html?smid=pc-thedaily" target="_blank"> Listen to a series from “The Daily” on Roe v. Wade</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_zzyLIwrovJpZQVtb1_A4uaXNBAwGDqC2ZAoaYjUGXE</guid>
      <pubDate>Thu, 18 Apr 2019 09:54:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9807b177-e2c9-4590-a7e0-061a4fedb1d1.mp3" type="audio/mpeg" length="28973766"/>
    </item>
    <item>
      <title>The Abortion Wars, Part 1: The Last Clinic in Missouri</title>
      <description>
        <![CDATA[<p>When Justice Brett Kavanaugh’s ascendance to the Supreme Court threw the future of abortion rights into question, states scrambled to enact new laws. Two neighboring states in the Midwest are moving in opposite directions: Missouri is taking action to end abortion access, while Illinois is trying to preserve it. In a two-part series, we explore what those changes look like on the ground.</p><p>Guests: Sabrina Tavernise, a national correspondent for The New York Times, and Lynsea Garrison, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background coverage:</p><ul><li>Anti-abortion activists are pursuing what they see as<a href="https://www.nytimes.com/2019/02/08/us/anti-abortion-activists-roe-v-wade.html?smid=pc-thedaily" target="_blank"> their best chance in years to restrict abortion access</a> with a Supreme Court they believe to be in their favor.</li><li><a href="https://www.nytimes.com/2018/07/23/podcasts/the-daily/roe-wade-abortion-norma-mccorvey.html?smid=pc-thedaily" target="_blank">Listen to “Roe v. Wade,” a series from “The Daily”</a> about how abortion became one of the most divisive political issues in the United States.</li></ul>]]>
      </description>
      <itunes:title>The Abortion Wars, Part 1: The Last Clinic in Missouri</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When Justice Brett Kavanaugh’s ascendance to the Supreme Court threw the future of abortion rights into question, states scrambled to enact new laws. Two neighboring states in the Midwest are moving in opposite directions: Missouri is taking action to end abortion access, while Illinois is trying to preserve it. In a two-part series, we explore what those changes look like on the ground.

Guests: Sabrina Tavernise, a national correspondent for The New York Times, and Lynsea Garrison, a producer for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.

Background coverage:Anti-abortion activists are pursuing what they see as their best chance in years to restrict abortion access with a Supreme Court they believe to be in their favor.Listen to “Roe v. Wade,” a series from “The Daily” about how abortion became one of the most divisive political issues in the United States.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When Justice Brett Kavanaugh’s ascendance to the Supreme Court threw the future of abortion rights into question, states scrambled to enact new laws. Two neighboring states in the Midwest are moving in opposite directions: Missouri is taking action to end abortion access, while Illinois is trying to preserve it. In a two-part series, we explore what those changes look like on the ground.</p><p>Guests: Sabrina Tavernise, a national correspondent for The New York Times, and Lynsea Garrison, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background coverage:</p><ul><li>Anti-abortion activists are pursuing what they see as<a href="https://www.nytimes.com/2019/02/08/us/anti-abortion-activists-roe-v-wade.html?smid=pc-thedaily" target="_blank"> their best chance in years to restrict abortion access</a> with a Supreme Court they believe to be in their favor.</li><li><a href="https://www.nytimes.com/2018/07/23/podcasts/the-daily/roe-wade-abortion-norma-mccorvey.html?smid=pc-thedaily" target="_blank">Listen to “Roe v. Wade,” a series from “The Daily”</a> about how abortion became one of the most divisive political issues in the United States.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/e8dcuiFlpljPW2cy7sxWm7B_i0-E-02JvBlablVuVh4</guid>
      <pubDate>Wed, 17 Apr 2019 09:56:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bd83eadc-6081-4089-b701-109ace7dd57e.mp3" type="audio/mpeg" length="27705678"/>
    </item>
    <item>
      <title>The Rise and Fall of Carlos Ghosn</title>
      <description>
        <![CDATA[<p>Carlos Ghosn, the former head of Nissan, was the rare foreign executive to reach rock-star status in Japan by breaking the rules of its culture. Now, he’s accused of financial wrongdoing at the company he helped save. Guest: Motoko Rich, the Tokyo bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Mr. Ghosn has been<a href="https://www.nytimes.com/2019/04/04/business/carlos-ghosn-carole-wife-japan-nissan-arrest.html" target="_blank"> arrested on charges of financial misconduct</a> at Nissan. He<a href="https://www.nytimes.com/2019/04/09/business/carlos-ghosn-nissan-video.html" target="_blank"> said in a video statement that the accusations were part of a plot</a> by company executives to engineer his downfall.</li><li>Mr. Ghosn wasn’t expected to succeed in Japan, a nation known for its distrust of outsiders.<a href="https://www.nytimes.com/2018/12/30/business/carlos-ghosn-nissan.html" target="_blank"> But he also wasn’t expected to fail like this</a>.</li></ul>]]>
      </description>
      <itunes:title>The Rise and Fall of Carlos Ghosn</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Carlos Ghosn, the former head of Nissan, was the rare foreign executive to reach rock-star status in Japan by breaking the rules of its culture. Now, he’s accused of financial wrongdoing at the company he helped save. Guest: Motoko Rich, the Tokyo bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

Background reading:Mr. Ghosn has been arrested on charges of financial misconduct at Nissan. He said in a video statement that the accusations were part of a plot by company executives to engineer his downfall.Mr. Ghosn wasn’t expected to succeed in Japan, a nation known for its distrust of outsiders. But he also wasn’t expected to fail like this.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Carlos Ghosn, the former head of Nissan, was the rare foreign executive to reach rock-star status in Japan by breaking the rules of its culture. Now, he’s accused of financial wrongdoing at the company he helped save. Guest: Motoko Rich, the Tokyo bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>Background reading:</p><ul><li>Mr. Ghosn has been<a href="https://www.nytimes.com/2019/04/04/business/carlos-ghosn-carole-wife-japan-nissan-arrest.html" target="_blank"> arrested on charges of financial misconduct</a> at Nissan. He<a href="https://www.nytimes.com/2019/04/09/business/carlos-ghosn-nissan-video.html" target="_blank"> said in a video statement that the accusations were part of a plot</a> by company executives to engineer his downfall.</li><li>Mr. Ghosn wasn’t expected to succeed in Japan, a nation known for its distrust of outsiders.<a href="https://www.nytimes.com/2018/12/30/business/carlos-ghosn-nissan.html" target="_blank"> But he also wasn’t expected to fail like this</a>.</li></ul>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5ya-WByenogcYV__55DYKtI0XGZTPG2QRBZK_R5NQMM</guid>
      <pubDate>Tue, 16 Apr 2019 09:55:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9acae7fc-c221-4d1b-a760-333bace3c73b.mp3" type="audio/mpeg" length="25144424"/>
    </item>
    <item>
      <title>The Moral Complexities of Working With Julian Assange</title>
      <description>
        <![CDATA[<p>Many have considered Julian Assange, the founder of WikiLeaks, to be a hero of the free speech movement and a partner to journalists. He also came to be seen as a threat to national security. Then, he helped Russia interfere in a United States election. And now, he has been arrested. Our colleague tells us about the moral complexities of working with Mr. Assange. Guest: Scott Shane, who covers national security for The New York Times, has been following Mr. Assange’s decade-long saga. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Moral Complexities of Working With Julian Assange</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Many have considered Julian Assange, the founder of WikiLeaks, to be a hero of the free speech movement and a partner to journalists. He also came to be seen as a threat to national security. Then, he helped Russia interfere in a United States election. And now, he has been arrested. Our colleague tells us about the moral complexities of working with Mr. Assange. Guest: Scott Shane, who covers national security for The New York Times, has been following Mr. Assange’s decade-long saga. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Many have considered Julian Assange, the founder of WikiLeaks, to be a hero of the free speech movement and a partner to journalists. He also came to be seen as a threat to national security. Then, he helped Russia interfere in a United States election. And now, he has been arrested. Our colleague tells us about the moral complexities of working with Mr. Assange. Guest: Scott Shane, who covers national security for The New York Times, has been following Mr. Assange’s decade-long saga. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/tEeCsbzjsVhYgrH5zASnIof7rMppAoXwBkNKvAkaV3g</guid>
      <pubDate>Mon, 15 Apr 2019 09:56:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/11b2167f-e06a-4a18-ad61-bcca90a41020.mp3" type="audio/mpeg" length="27917583"/>
    </item>
    <item>
      <title>Israel’s Election, Through the Eyes of a Young Palestinian</title>
      <description>
        <![CDATA[<p>Prime Minister Benjamin Netanyahu of Israel has promised to assert sovereignty over dozens of Jewish settlements on the West Bank. For Palestinians there, that could mean the end of a decades-long struggle for a state of their own. We hear the perspective of one young man living on the West Bank. Guest: Fadi Quran, who grew up in a Palestinian community near an Israeli settlement. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Israel’s Election, Through the Eyes of a Young Palestinian</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Prime Minister Benjamin Netanyahu of Israel has promised to assert sovereignty over dozens of Jewish settlements on the West Bank. For Palestinians there, that could mean the end of a decades-long struggle for a state of their own. We hear the perspective of one young man living on the West Bank. Guest: Fadi Quran, who grew up in a Palestinian community near an Israeli settlement. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Prime Minister Benjamin Netanyahu of Israel has promised to assert sovereignty over dozens of Jewish settlements on the West Bank. For Palestinians there, that could mean the end of a decades-long struggle for a state of their own. We hear the perspective of one young man living on the West Bank. Guest: Fadi Quran, who grew up in a Palestinian community near an Israeli settlement. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mlFzRgOkX8WlE7twRs3H-Zfz5gMXu9RbPStp8os-o_w</guid>
      <pubDate>Fri, 12 Apr 2019 09:58:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7947daef-b0a6-48ea-b6da-a7b42d23ee94.mp3" type="audio/mpeg" length="25675232"/>
    </item>
    <item>
      <title>Netanyahu Won. The Two-State Solution Lost.</title>
      <description>
        <![CDATA[<p>President Trump has promised to broker the deal of the century between Israelis and Palestinians. His partnership with Israel’s prime minister, Benjamin Netanyahu, may have made such a peace deal all but impossible. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Netanyahu Won. The Two-State Solution Lost.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has promised to broker the deal of the century between Israelis and Palestinians. His partnership with Israel’s prime minister, Benjamin Netanyahu, may have made such a peace deal all but impossible. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has promised to broker the deal of the century between Israelis and Palestinians. His partnership with Israel’s prime minister, Benjamin Netanyahu, may have made such a peace deal all but impossible. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0ZwPkUmMiBQP1rAL-5w8sPgat0Hijv9pG88-9dKSMDo</guid>
      <pubDate>Thu, 11 Apr 2019 09:54:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c0e61ac9-9b99-4c49-984d-4f7dd184af6b.mp3" type="audio/mpeg" length="26562977"/>
    </item>
    <item>
      <title>When the Lights Went Out in Venezuela</title>
      <description>
        <![CDATA[<p>Economic collapse, crumbling infrastructure, a contested presidential election result — Venezuela was already in crisis. Then the power went out. Guest: Nicholas Casey, the Andes bureau chief for The New York Times, who recently returned from Venezuela. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>When the Lights Went Out in Venezuela</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Economic collapse, crumbling infrastructure, a contested presidential election result — Venezuela was already in crisis. Then the power went out. Guest: Nicholas Casey, the Andes bureau chief for The New York Times, who recently returned from Venezuela. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Economic collapse, crumbling infrastructure, a contested presidential election result — Venezuela was already in crisis. Then the power went out. Guest: Nicholas Casey, the Andes bureau chief for The New York Times, who recently returned from Venezuela. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9Fyja1dP3ltHA-wHVOAEJqOpnV4IyfqxK3GDddHtJxs</guid>
      <pubDate>Wed, 10 Apr 2019 09:59:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/30c0f24f-e34f-4ad3-a9cd-1c2582446ee0.mp3" type="audio/mpeg" length="17931702"/>
    </item>
    <item>
      <title>The Brief, Controversial Tenure of Kirstjen Nielsen</title>
      <description>
        <![CDATA[<p>Kirstjen Nielsen was forced out as secretary of homeland security, even after carrying out and defending President Trump’s hard-line immigration policies. We look at why that wasn’t enough. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Brief, Controversial Tenure of Kirstjen Nielsen</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Kirstjen Nielsen was forced out as secretary of homeland security, even after carrying out and defending President Trump’s hard-line immigration policies. We look at why that wasn’t enough. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Kirstjen Nielsen was forced out as secretary of homeland security, even after carrying out and defending President Trump’s hard-line immigration policies. We look at why that wasn’t enough. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Jbdg3OpNPSP4mCFIf4aqVSKDgA8uLW4f9zbXNW06Tr4</guid>
      <pubDate>Tue, 09 Apr 2019 09:53:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cfcafa79-0070-450c-b82a-0cc4892cc01a.mp3" type="audio/mpeg" length="23428284"/>
    </item>
    <item>
      <title>A Russian Assassin Tells His Story</title>
      <description>
        <![CDATA[<p>Under President Vladimir Putin, Russia has carried out a brazen campaign of state-sponsored assassinations. Our colleague tracked down one of the hitmen. Guest: Michael Schwirtz, an investigative reporter for The New York Times, spoke with Oleg Smorodinov, a Russian hit man. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Russian Assassin Tells His Story</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Under President Vladimir Putin, Russia has carried out a brazen campaign of state-sponsored assassinations. Our colleague tracked down one of the hitmen. Guest: Michael Schwirtz, an investigative reporter for The New York Times, spoke with Oleg Smorodinov, a Russian hit man. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Under President Vladimir Putin, Russia has carried out a brazen campaign of state-sponsored assassinations. Our colleague tracked down one of the hitmen. Guest: Michael Schwirtz, an investigative reporter for The New York Times, spoke with Oleg Smorodinov, a Russian hit man. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/tFnLZQt3L1rc_FNBG4VqEVSJIvLMJRLLU3pZiwjiBG4</guid>
      <pubDate>Mon, 08 Apr 2019 09:53:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/93087900-1f03-4daa-97c5-1afefd56cc80.mp3" type="audio/mpeg" length="22545136"/>
    </item>
    <item>
      <title>The Battle to Control the Murdoch Media Empire</title>
      <description>
        <![CDATA[<p>Through his media empire, Rupert Murdoch has reshaped the politics of countries across the English-speaking world, pushing their governments to the right. We look inside the struggle over who will control that empire once he’s gone. Guests: Jonathan Mahler and Jim Rutenberg, who spent six months investigating the Murdoch family for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Battle to Control the Murdoch Media Empire</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Through his media empire, Rupert Murdoch has reshaped the politics of countries across the English-speaking world, pushing their governments to the right. We look inside the struggle over who will control that empire once he’s gone. Guests: Jonathan Mahler and Jim Rutenberg, who spent six months investigating the Murdoch family for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Through his media empire, Rupert Murdoch has reshaped the politics of countries across the English-speaking world, pushing their governments to the right. We look inside the struggle over who will control that empire once he’s gone. Guests: Jonathan Mahler and Jim Rutenberg, who spent six months investigating the Murdoch family for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3usWRe4IA5gdQA3OV8fncjZwJh3nye82mwa_bpoHfbY</guid>
      <pubDate>Fri, 05 Apr 2019 09:55:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/69d20930-c986-45cd-9e82-eff6bafba829.mp3" type="audio/mpeg" length="29973524"/>
    </item>
    <item>
      <title>New Insights Into the Mueller Report</title>
      <description>
        <![CDATA[<p>The special counsel’s team sent its report to the attorney general, William P. Barr, who sent a summary of that report to Congress. But some members of the special counsel’s team have told associates that their findings are more troubling for President Trump than Mr. Barr indicated. Guests: Nicholas Fandos, who covers Congress for The New York Times, and Michael S. Schmidt, who has been covering the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>New Insights Into the Mueller Report</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The special counsel’s team sent its report to the attorney general, William P. Barr, who sent a summary of that report to Congress. But some members of the special counsel’s team have told associates that their findings are more troubling for President Trump than Mr. Barr indicated. Guests: Nicholas Fandos, who covers Congress for The New York Times, and Michael S. Schmidt, who has been covering the special counsel investigation. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The special counsel’s team sent its report to the attorney general, William P. Barr, who sent a summary of that report to Congress. But some members of the special counsel’s team have told associates that their findings are more troubling for President Trump than Mr. Barr indicated. Guests: Nicholas Fandos, who covers Congress for The New York Times, and Michael S. Schmidt, who has been covering the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/c-HUc0FEaTis0yoW-Fs6935-7FhUlOfCr5uvdW8Qy1g</guid>
      <pubDate>Thu, 04 Apr 2019 09:55:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/778f0415-183e-4c12-812a-d5a77df3e154.mp3" type="audio/mpeg" length="23014086"/>
    </item>
    <item>
      <title>Trump Wanted to Scrap Obamacare. His Party Didn’t.</title>
      <description>
        <![CDATA[<p>President Trump has backed away from his call to replace the Affordable Care Act with a Republican alternative. Why did his own party talk him out of it? Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Trump Wanted to Scrap Obamacare. His Party Didn’t.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has backed away from his call to replace the Affordable Care Act with a Republican alternative. Why did his own party talk him out of it? Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has backed away from his call to replace the Affordable Care Act with a Republican alternative. Why did his own party talk him out of it? Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xZhzjvyQFuKg17Jm8G23s_2o3ZZjEss1pFx6dpOEkNw</guid>
      <pubDate>Wed, 03 Apr 2019 09:53:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7438063c-089a-4d3f-9f23-b78a50d03dee.mp3" type="audio/mpeg" length="16927346"/>
    </item>
    <item>
      <title>Why Did New York’s Most Selective Public High School Admit Only 7 Black Students?</title>
      <description>
        <![CDATA[<p>Nearly 900 students have been offered admission to one of New York City’s most elite public high schools. Just seven of those students are black. Guest: Eliza Shapiro, who covers New York City education for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Did New York’s Most Selective Public High School Admit Only 7 Black Students?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nearly 900 students have been offered admission to one of New York City’s most elite public high schools. Just seven of those students are black. Guest: Eliza Shapiro, who covers New York City education for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nearly 900 students have been offered admission to one of New York City’s most elite public high schools. Just seven of those students are black. Guest: Eliza Shapiro, who covers New York City education for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Z8Xld2aVccL6mSGUfD6T4N3zzNKTWqruRUwFnAwl8l0</guid>
      <pubDate>Tue, 02 Apr 2019 09:55:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c26027cf-25cc-40f7-bd8f-fa0a97ecfa7f.mp3" type="audio/mpeg" length="24981838"/>
    </item>
    <item>
      <title>The Agony of Being Theresa May</title>
      <description>
        <![CDATA[<p>After months of trying and failing to pass a deal on Britain’s withdrawal from the European Union, Prime Minister Theresa May had one final thing to offer: herself. Guest: Ellen Barry, chief international correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Agony of Being Theresa May</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After months of trying and failing to pass a deal on Britain’s withdrawal from the European Union, Prime Minister Theresa May had one final thing to offer: herself. Guest: Ellen Barry, chief international correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After months of trying and failing to pass a deal on Britain’s withdrawal from the European Union, Prime Minister Theresa May had one final thing to offer: herself. Guest: Ellen Barry, chief international correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BgnA6TBCdDyLpv2NeVuyyCxlnmSnEk7O7dmJAjBkQW8</guid>
      <pubDate>Mon, 01 Apr 2019 09:55:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c937945b-41ef-4828-afec-a21275d9abea.mp3" type="audio/mpeg" length="20558576"/>
    </item>
    <item>
      <title>One Family’s Story of Survival and Loss in New Zealand</title>
      <description>
        <![CDATA[<p>New Zealand is holding a national day of remembrance today for the 50 people killed in the mosque shootings in Christchurch. Our colleague spent several days with one family of one man who died in the attack. Guest: Charlotte Graham-McLay, who spent time with the family of Atta Elayyan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>One Family’s Story of Survival and Loss in New Zealand</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>New Zealand is holding a national day of remembrance today for the 50 people killed in the mosque shootings in Christchurch. Our colleague spent several days with one family of one man who died in the attack. Guest: Charlotte Graham-McLay, who spent time with the family of Atta Elayyan. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>New Zealand is holding a national day of remembrance today for the 50 people killed in the mosque shootings in Christchurch. Our colleague spent several days with one family of one man who died in the attack. Guest: Charlotte Graham-McLay, who spent time with the family of Atta Elayyan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KjzvilEMjU0XHIroUd7-QVsH36pktjkVYNKMFjAFoGM</guid>
      <pubDate>Fri, 29 Mar 2019 09:54:44 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7527746c-3c09-4449-a5d3-7a7dc45f383c.mp3" type="audio/mpeg" length="22686824"/>
    </item>
    <item>
      <title>Prosecuting R. Kelly</title>
      <description>
        <![CDATA[<p>This year, Chicago’s top prosecutor, Kim Foxx, took the unusual step of asking women to come forward with allegations against the musician R. Kelly. In an interview, she explained that decision. Guest: John Eligon, a national correspondent for The New York Times, spoke with Ms. Foxx. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Prosecuting R. Kelly</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This year, Chicago’s top prosecutor, Kim Foxx, took the unusual step of asking women to come forward with allegations against the musician R. Kelly. In an interview, she explained that decision. Guest: John Eligon, a national correspondent for The New York Times, spoke with Ms. Foxx. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This year, Chicago’s top prosecutor, Kim Foxx, took the unusual step of asking women to come forward with allegations against the musician R. Kelly. In an interview, she explained that decision. Guest: John Eligon, a national correspondent for The New York Times, spoke with Ms. Foxx. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/C9HJOGEESjxcmvvHSR_ulpclfM06pnya2kFoIX5FmBs</guid>
      <pubDate>Thu, 28 Mar 2019 09:55:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ed4f8561-22b2-4246-ae66-662dcbdd20d0.mp3" type="audio/mpeg" length="26341877"/>
    </item>
    <item>
      <title>Israel’s Indispensable Prime Minister?</title>
      <description>
        <![CDATA[<p>Prime Minister Benjamin Netanyahu of Israel faces indictment over an alleged scheme involving brazen acts of bribery and fraud. Why are so many Israelis ready to re-elect him? Guest: David M. Halbfinger, the Jerusalem bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Israel’s Indispensable Prime Minister?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Prime Minister Benjamin Netanyahu of Israel faces indictment over an alleged scheme involving brazen acts of bribery and fraud. Why are so many Israelis ready to re-elect him? Guest: David M. Halbfinger, the Jerusalem bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Prime Minister Benjamin Netanyahu of Israel faces indictment over an alleged scheme involving brazen acts of bribery and fraud. Why are so many Israelis ready to re-elect him? Guest: David M. Halbfinger, the Jerusalem bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PRbQiyQJjKgGBu-jEFlBp3PxbJP9DYbVh9rrsVggZyg</guid>
      <pubDate>Wed, 27 Mar 2019 09:56:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a6c14653-33d6-462a-a505-e0f78628c622.mp3" type="audio/mpeg" length="22967693"/>
    </item>
    <item>
      <title>Why Didn’t Mueller Decide on Obstruction?</title>
      <description>
        <![CDATA[<p>The special counsel, Robert Mueller, was supposed to decide whether President Trump had committed a crime. Why did the attorney general, William P. Barr, do it instead? Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Didn’t Mueller Decide on Obstruction?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The special counsel, Robert Mueller, was supposed to decide whether President Trump had committed a crime. Why did the attorney general, William P. Barr, do it instead? Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The special counsel, Robert Mueller, was supposed to decide whether President Trump had committed a crime. Why did the attorney general, William P. Barr, do it instead? Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Jo-SKhXUT4LXEauD4Ch9PNMKNm3hb8VvcXholVs9C-o</guid>
      <pubDate>Tue, 26 Mar 2019 09:54:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9af0c5ab-8bb4-40cc-a8b5-6144b787216d.mp3" type="audio/mpeg" length="20448235"/>
    </item>
    <item>
      <title>Coordination: Not Established. Obstruction: More Complicated.</title>
      <description>
        <![CDATA[<p>Attorney General William P. Barr sent a letter to Congress summarizing the Mueller report: The special counsel investigation did not establish coordination with Russia, but there was a more complicated story when it came to obstruction of justice. Guests: The Times reporters Maggie Haberman, who covers the White House; and Michael S. Schmidt, who has been covering the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Coordination: Not Established. Obstruction: More Complicated.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Attorney General William P. Barr sent a letter to Congress summarizing the Mueller report: The special counsel investigation did not establish coordination with Russia, but there was a more complicated story when it came to obstruction of justice. Guests: The Times reporters Maggie Haberman, who covers the White House; and Michael S. Schmidt, who has been covering the special counsel investigation. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Attorney General William P. Barr sent a letter to Congress summarizing the Mueller report: The special counsel investigation did not establish coordination with Russia, but there was a more complicated story when it came to obstruction of justice. Guests: The Times reporters Maggie Haberman, who covers the White House; and Michael S. Schmidt, who has been covering the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/skPiVQGAkeyn0b__VgeZ7CSJqHMNGnmzEpecKv-jTNM</guid>
      <pubDate>Mon, 25 Mar 2019 09:55:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e6e912e5-6a36-488c-95f8-f84a16e50690.mp3" type="audio/mpeg" length="27016881"/>
    </item>
    <item>
      <title>Special Edition: Robert Mueller Submits His Report</title>
      <description>
        <![CDATA[<p>The Mueller report has been sent to the attorney general. Here’s a look at what this means and what comes next. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Special Edition: Robert Mueller Submits His Report</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Mueller report has been sent to the attorney general. Here’s a look at what this means and what comes next. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Mueller report has been sent to the attorney general. Here’s a look at what this means and what comes next. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OeLJSlLfxqLfX2OzQeQJCxaA2ND-4IDabldBKFNBYzs</guid>
      <pubDate>Fri, 22 Mar 2019 22:35:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:15:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/48af7e79-c8eb-4b4c-8e83-5c4fc911980e.mp3" type="audio/mpeg" length="14701296"/>
    </item>
    <item>
      <title>How New Zealand Banned Assault Rifles in Six Days</title>
      <description>
        <![CDATA[<p>Prime Minister Jacinda Ardern of New Zealand promised to change the country’s gun laws after a mass shooting in Christchurch left 50 people dead. Less than a week later, she did it. Guest: Jamie Tarabay, a New York Times correspondent based in Australia who has been reporting in New Zealand. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>How New Zealand Banned Assault Rifles in Six Days</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Prime Minister Jacinda Ardern of New Zealand promised to change the country’s gun laws after a mass shooting in Christchurch left 50 people dead. Less than a week later, she did it. Guest: Jamie Tarabay, a New York Times correspondent based in Australia who has been reporting in New Zealand. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Prime Minister Jacinda Ardern of New Zealand promised to change the country’s gun laws after a mass shooting in Christchurch left 50 people dead. Less than a week later, she did it. Guest: Jamie Tarabay, a New York Times correspondent based in Australia who has been reporting in New Zealand. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/b_K-4tm9b0V4k1qp4j6Iu8wL2ycFTdMqFeM4i3ec4x8</guid>
      <pubDate>Fri, 22 Mar 2019 09:55:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5a8d7af3-b0ce-4283-b2ba-4c6975cc37ab.mp3" type="audio/mpeg" length="20113449"/>
    </item>
    <item>
      <title>A Path to Curing H.I.V.</title>
      <description>
        <![CDATA[<p>For only the second time since the start of a global epidemic, a person was reported this month to have been cured of H.I.V., the virus that causes AIDS. Scientists and activists had almost given up on reaching that milestone. Here’s a look at how we got to this point. Guest: Peter Staley, a longtime AIDS activist. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Path to Curing H.I.V.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For only the second time since the start of a global epidemic, a person was reported this month to have been cured of H.I.V., the virus that causes AIDS. Scientists and activists had almost given up on reaching that milestone. Here’s a look at how we got to this point. Guest: Peter Staley, a longtime AIDS activist. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For only the second time since the start of a global epidemic, a person was reported this month to have been cured of H.I.V., the virus that causes AIDS. Scientists and activists had almost given up on reaching that milestone. Here’s a look at how we got to this point. Guest: Peter Staley, a longtime AIDS activist. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/IPCOpOhjPGk7iXQPbLj7UYPwS9BMCsAXve1Vx6EJsF0</guid>
      <pubDate>Thu, 21 Mar 2019 09:55:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1f9134e2-2f51-460b-9957-8f316bf985d1.mp3" type="audio/mpeg" length="26004584"/>
    </item>
    <item>
      <title>‘Trump of the Tropics’: How Brazil’s President Came to Power</title>
      <description>
        <![CDATA[<p>President Trump welcomed Brazil’s far-right president, Jair Bolsonaro, to the White House on Tuesday. We look at the back story of Mr. Bolsonaro, whose campaign tactics, incendiary rhetoric and brash style have earned him the nickname “Trump of the tropics.” Guest: Ernesto Londoño, the Brazil bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>‘Trump of the Tropics’: How Brazil’s President Came to Power</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump welcomed Brazil’s far-right president, Jair Bolsonaro, to the White House on Tuesday. We look at the back story of Mr. Bolsonaro, whose campaign tactics, incendiary rhetoric and brash style have earned him the nickname “Trump of the tropics.” Guest: Ernesto Londoño, the Brazil bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump welcomed Brazil’s far-right president, Jair Bolsonaro, to the White House on Tuesday. We look at the back story of Mr. Bolsonaro, whose campaign tactics, incendiary rhetoric and brash style have earned him the nickname “Trump of the tropics.” Guest: Ernesto Londoño, the Brazil bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4_UmHJySELyKgIEmGDjb1oFWgmAsMR5Vud6_flXPP6A</guid>
      <pubDate>Wed, 20 Mar 2019 09:56:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4f82de74-c8f7-44ae-9e54-ee31d08b5a65.mp3" type="audio/mpeg" length="21167960"/>
    </item>
    <item>
      <title>Two Crashes, a Single Jet: The Story of Boeing’s 737 Max</title>
      <description>
        <![CDATA[<p>As Boeing developed a new line of passenger jets, it was determined to avoid costly training for pilots. Then, two of those jets crashed. Guest: Natalie Kitroeff, a business reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Two Crashes, a Single Jet: The Story of Boeing’s 737 Max</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As Boeing developed a new line of passenger jets, it was determined to avoid costly training for pilots. Then, two of those jets crashed. Guest: Natalie Kitroeff, a business reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As Boeing developed a new line of passenger jets, it was determined to avoid costly training for pilots. Then, two of those jets crashed. Guest: Natalie Kitroeff, a business reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_2YiIS6s2poiYJ8fReaGSvO_fXrQxCM_TUWojrUuLpw</guid>
      <pubDate>Tue, 19 Mar 2019 09:55:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a7b139aa-e259-4991-9820-084daa7e8be1.mp3" type="audio/mpeg" length="22856097"/>
    </item>
    <item>
      <title>The Mosque Attacks in New Zealand</title>
      <description>
        <![CDATA[<p>A gunman opened fire at two mosques in Christchurch, New Zealand, killing at least 50 people. The massacre was partly streamed online. We look at why the attack was, in some ways, made by and for the internet. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Mosque Attacks in New Zealand</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A gunman opened fire at two mosques in Christchurch, New Zealand, killing at least 50 people. The massacre was partly streamed online. We look at why the attack was, in some ways, made by and for the internet. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A gunman opened fire at two mosques in Christchurch, New Zealand, killing at least 50 people. The massacre was partly streamed online. We look at why the attack was, in some ways, made by and for the internet. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LxErkyXdmCaovK8GHOCNqpiZwButVdFdCJqiba82OTs</guid>
      <pubDate>Mon, 18 Mar 2019 09:55:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7d02473f-add9-4a16-82e4-88388cc19720.mp3" type="audio/mpeg" length="20705697"/>
    </item>
    <item>
      <title>The Family That Profited From the Opioid Crisis</title>
      <description>
        <![CDATA[<p>The family that built its fortune on the opioid painkiller OxyContin has never been held legally accountable for the epidemic that the drug helped unleash. Here’s why that could change. Guest: Barry Meier, the author of “Pain Killer: An Empire of Deceit and the Origin of America’s Opioid Epidemic,” who has reported on the opioid crisis for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Family That Profited From the Opioid Crisis</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The family that built its fortune on the opioid painkiller OxyContin has never been held legally accountable for the epidemic that the drug helped unleash. Here’s why that could change. Guest: Barry Meier, the author of “Pain Killer: An Empire of Deceit and the Origin of America’s Opioid Epidemic,” who has reported on the opioid crisis for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The family that built its fortune on the opioid painkiller OxyContin has never been held legally accountable for the epidemic that the drug helped unleash. Here’s why that could change. Guest: Barry Meier, the author of “Pain Killer: An Empire of Deceit and the Origin of America’s Opioid Epidemic,” who has reported on the opioid crisis for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1ctGu-7uOMRPn8kaWwBTV-zjn_B7IFAWXti74eXMhBc</guid>
      <pubDate>Fri, 15 Mar 2019 09:56:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7b379aca-3667-4564-aa51-e3c6ac6450a9.mp3" type="audio/mpeg" length="25757988"/>
    </item>
    <item>
      <title>Bribing Their Way Into College</title>
      <description>
        <![CDATA[<p>When a federal prosecutor revealed a $25 million scheme to seek an edge in college admissions for the children of celebrities, executives and other rich parents, he declared, “There can be no separate college admissions system for the wealthy.” But, as it turns out, there is. Guests: Jennifer Medina, a national correspondent for The New York Times, and Katie Benner, who covers the Justice Department for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Bribing Their Way Into College</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When a federal prosecutor revealed a $25 million scheme to seek an edge in college admissions for the children of celebrities, executives and other rich parents, he declared, “There can be no separate college admissions system for the wealthy.” But, as it turns out, there is. Guests: Jennifer Medina, a national correspondent for The New York Times, and Katie Benner, who covers the Justice Department for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When a federal prosecutor revealed a $25 million scheme to seek an edge in college admissions for the children of celebrities, executives and other rich parents, he declared, “There can be no separate college admissions system for the wealthy.” But, as it turns out, there is. Guests: Jennifer Medina, a national correspondent for The New York Times, and Katie Benner, who covers the Justice Department for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5VEl7PxAvRKrBIbMpXsh1pNvwAIzNyPHFQ4T7c7RDMc</guid>
      <pubDate>Thu, 14 Mar 2019 09:57:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b5a8bd73-d297-4027-accc-33055d95cd3c.mp3" type="audio/mpeg" length="20341655"/>
    </item>
    <item>
      <title>How ‘Medicare for All’ Would Work (or Not Work)</title>
      <description>
        <![CDATA[<p>“Medicare for all” has become a punching bag for Republicans and a rallying cry for many Democrats. But what exactly is it? Guest: Margot Sanger-Katz, who covers health care for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>How ‘Medicare for All’ Would Work (or Not Work)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“Medicare for all” has become a punching bag for Republicans and a rallying cry for many Democrats. But what exactly is it? Guest: Margot Sanger-Katz, who covers health care for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>“Medicare for all” has become a punching bag for Republicans and a rallying cry for many Democrats. But what exactly is it? Guest: Margot Sanger-Katz, who covers health care for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rU0tSZVAhpnoPhPEOTubBbc_fwJdKYQYjSi9Q7mC-HE</guid>
      <pubDate>Wed, 13 Mar 2019 09:55:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3298c494-b88d-4be8-aa18-ec5bf2d18bf7.mp3" type="audio/mpeg" length="25904692"/>
    </item>
    <item>
      <title>Part 3: What to Expect When You’re Expecting (the Mueller Report)</title>
      <description>
        <![CDATA[<p>Once the special counsel’s report has been released, it’s up to Congress and its oversight committees to determine what happens next. We spoke to the head of the House Judiciary Committee, who will have to make that decision. Guest: Representative Jerry Nadler, Democrat of New York. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Part 3: What to Expect When You’re Expecting (the Mueller Report)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Once the special counsel’s report has been released, it’s up to Congress and its oversight committees to determine what happens next. We spoke to the head of the House Judiciary Committee, who will have to make that decision. Guest: Representative Jerry Nadler, Democrat of New York. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Once the special counsel’s report has been released, it’s up to Congress and its oversight committees to determine what happens next. We spoke to the head of the House Judiciary Committee, who will have to make that decision. Guest: Representative Jerry Nadler, Democrat of New York. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xOlY5GH42Gx6F4li6yQ-DSOXOBd5w8lUSFhouucSFtw</guid>
      <pubDate>Tue, 12 Mar 2019 09:55:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fd5e475e-cd65-4be9-972f-6af8eb094ec5.mp3" type="audio/mpeg" length="21270778"/>
    </item>
    <item>
      <title>Part 2: What to Expect When You’re Expecting (the Mueller Report)</title>
      <description>
        <![CDATA[<p>As the special counsel finishes his investigation, he can pursue three different paths — each with a profoundly different effect on how Congress will proceed. Recent history makes one of those paths especially treacherous. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Part 2: What to Expect When You’re Expecting (the Mueller Report)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the special counsel finishes his investigation, he can pursue three different paths — each with a profoundly different effect on how Congress will proceed. Recent history makes one of those paths especially treacherous. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the special counsel finishes his investigation, he can pursue three different paths — each with a profoundly different effect on how Congress will proceed. Recent history makes one of those paths especially treacherous. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XQlcmpEwjE2kxBkb2C5NO-fhvYn9bMhw89OigTZcw7M</guid>
      <pubDate>Mon, 11 Mar 2019 09:55:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1e9ed590-8787-445e-9d1d-499b4d7ea9a2.mp3" type="audio/mpeg" length="22944705"/>
    </item>
    <item>
      <title>Reckoning With the Real Michael Jackson</title>
      <description>
        <![CDATA[<p>For decades, despite a swirl of allegations around him, Michael Jackson earned the world’s admiration, bewilderment and pity. A New York Times culture critic reflects on the moment the spell broke for him. Guest: Wesley Morris, a critic at large for The Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><br></p><p>This episode contains descriptions of abuse.</p>]]>
      </description>
      <itunes:title>Reckoning With the Real Michael Jackson</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For decades, despite a swirl of allegations around him, Michael Jackson earned the world’s admiration, bewilderment and pity. A New York Times culture critic reflects on the moment the spell broke for him. Guest: Wesley Morris, a critic at large for The Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit nytimes.com/thedaily.




This episode contains descriptions of abuse.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For decades, despite a swirl of allegations around him, Michael Jackson earned the world’s admiration, bewilderment and pity. A New York Times culture critic reflects on the moment the spell broke for him. Guest: Wesley Morris, a critic at large for The Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><br></p><p>This episode contains descriptions of abuse.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Vi_r25AvgOleWkyZc1HiTPGXlxo0lmDCbfideMOWgGA</guid>
      <pubDate>Fri, 08 Mar 2019 10:55:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c20904be-5bd1-4926-b94a-98a0160826cd.mp3" type="audio/mpeg" length="28242337"/>
    </item>
    <item>
      <title>Promise and Peril of the Green New Deal</title>
      <description>
        <![CDATA[<p>From the moment it was unveiled, a sweeping plan for tackling climate change called the Green New Deal has divided Democrats and handed a political weapon to Republicans. Here’s a look at the plan’s effects in Washington. Guest: Coral Davenport, who covers energy and the environment for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Promise and Peril of the Green New Deal</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From the moment it was unveiled, a sweeping plan for tackling climate change called the Green New Deal has divided Democrats and handed a political weapon to Republicans. Here’s a look at the plan’s effects in Washington. Guest: Coral Davenport, who covers energy and the environment for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>From the moment it was unveiled, a sweeping plan for tackling climate change called the Green New Deal has divided Democrats and handed a political weapon to Republicans. Here’s a look at the plan’s effects in Washington. Guest: Coral Davenport, who covers energy and the environment for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Nz8wu7n6hZBLlTXnwEFenahCVhVNiMLaMqvwov5m7V8</guid>
      <pubDate>Thu, 07 Mar 2019 10:55:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:28</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/96df0fc5-147a-4697-a610-7c6e5ac0d22a.mp3" type="audio/mpeg" length="24453537"/>
    </item>
    <item>
      <title>Silicon Valley’s Military Dilemma</title>
      <description>
        <![CDATA[<p>Across Silicon Valley, tech companies are pursuing contracts with the Defense Department. But seemingly lucrative deals can come with hidden costs. To explain, we look at a company that sold something to the military and later came to regret it. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Silicon Valley’s Military Dilemma</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Across Silicon Valley, tech companies are pursuing contracts with the Defense Department. But seemingly lucrative deals can come with hidden costs. To explain, we look at a company that sold something to the military and later came to regret it. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Across Silicon Valley, tech companies are pursuing contracts with the Defense Department. But seemingly lucrative deals can come with hidden costs. To explain, we look at a company that sold something to the military and later came to regret it. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6wOXmyPhl7RmVl0xlpHMMuriWNAIrolYdONIQ8QJG7k</guid>
      <pubDate>Wed, 06 Mar 2019 10:57:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/66145b74-2b13-4a96-b646-56c3714e8c44.mp3" type="audio/mpeg" length="22933002"/>
    </item>
    <item>
      <title>What Happened to Lindsey Graham?</title>
      <description>
        <![CDATA[<p>Two years ago, Senator Lindsey Graham of South Carolina called Donald Trump a “kook,” a “bigot,” “crazy” and “unfit for office.” Now he lavishes praise on the president at every turn. What’s going on? Guest: Mark Leibovich, who interviewed the senator for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What Happened to Lindsey Graham?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two years ago, Senator Lindsey Graham of South Carolina called Donald Trump a “kook,” a “bigot,” “crazy” and “unfit for office.” Now he lavishes praise on the president at every turn. What’s going on? Guest: Mark Leibovich, who interviewed the senator for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Two years ago, Senator Lindsey Graham of South Carolina called Donald Trump a “kook,” a “bigot,” “crazy” and “unfit for office.” Now he lavishes praise on the president at every turn. What’s going on? Guest: Mark Leibovich, who interviewed the senator for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/iFEYVIQcXpIJlEV5LwLOXKEfgJMtmiI0ctHTIFoVpQ8</guid>
      <pubDate>Tue, 05 Mar 2019 10:55:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fdb8107c-8e89-47a3-84f0-a16e6842aadf.mp3" type="audio/mpeg" length="25719954"/>
    </item>
    <item>
      <title>Part 1: What to Expect When You’re Expecting (the Mueller Report)</title>
      <description>
        <![CDATA[<p>There have only been a handful of investigations into possible criminal conduct by a sitting president of the United States. Each time, an outside investigator has been appointed under a set of rules to ensure independence and accountability — and those rules have changed with each inquiry. Now, the latest set of rules is being tested as the special counsel, Robert Mueller, prepares to release his report. Guest: Neal Katyal, a lawyer who drafted the regulations that govern the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Part 1: What to Expect When You’re Expecting (the Mueller Report)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>There have only been a handful of investigations into possible criminal conduct by a sitting president of the United States. Each time, an outside investigator has been appointed under a set of rules to ensure independence and accountability — and those rules have changed with each inquiry. Now, the latest set of rules is being tested as the special counsel, Robert Mueller, prepares to release his report. Guest: Neal Katyal, a lawyer who drafted the regulations that govern the special counsel investigation. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>There have only been a handful of investigations into possible criminal conduct by a sitting president of the United States. Each time, an outside investigator has been appointed under a set of rules to ensure independence and accountability — and those rules have changed with each inquiry. Now, the latest set of rules is being tested as the special counsel, Robert Mueller, prepares to release his report. Guest: Neal Katyal, a lawyer who drafted the regulations that govern the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2IdDUHWtwsypP8KupDXK1ROy0p3Sxwt2riuUS8wpcMI</guid>
      <pubDate>Mon, 04 Mar 2019 10:57:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/aac3125f-884f-4721-8fbc-028230784845.mp3" type="audio/mpeg" length="21496894"/>
    </item>
    <item>
      <title>Why the North Korea Deal Fell Apart (Again)</title>
      <description>
        <![CDATA[<p>President Trump was so confident thahe would reach a nuclear pact with North Korea that he scheduled a signing ceremony before an agreement had even been struck. Here’s how it all unraveled. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Why the North Korea Deal Fell Apart (Again)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump was so confident thahe would reach a nuclear pact with North Korea that he scheduled a signing ceremony before an agreement had even been struck. Here’s how it all unraveled. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump was so confident thahe would reach a nuclear pact with North Korea that he scheduled a signing ceremony before an agreement had even been struck. Here’s how it all unraveled. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/hSTSaPnOXnDXxXVyk4YhzixBGp-BG4PPoxqIQ3a7z5w</guid>
      <pubDate>Fri, 01 Mar 2019 10:55:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/013c9f41-6c25-4e09-9f42-458860da2e74.mp3" type="audio/mpeg" length="24467748"/>
    </item>
    <item>
      <title>The Testimony of Michael Cohen</title>
      <description>
        <![CDATA[<p>Michael Cohen is headed to prison for lying on behalf of Donald Trump. On Wednesday, he told Congress that he’s done protecting the president. Guest: Maggie Haberman, who covers the White House for The New York Times. &nbsp;For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Testimony of Michael Cohen</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Michael Cohen is headed to prison for lying on behalf of Donald Trump. On Wednesday, he told Congress that he’s done protecting the president. Guest: Maggie Haberman, who covers the White House for The New York Times.  For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Michael Cohen is headed to prison for lying on behalf of Donald Trump. On Wednesday, he told Congress that he’s done protecting the president. Guest: Maggie Haberman, who covers the White House for The New York Times. &nbsp;For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WLiePDyJp02JVSBwEC0S2Q0GnKKPX48I6fTfh0uL96U</guid>
      <pubDate>Thu, 28 Feb 2019 10:59:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f774f922-e6b1-45fe-bf1f-d0dbb6ef8893.mp3" type="audio/mpeg" length="28368143"/>
    </item>
    <item>
      <title>A Fraudulent Election in North Carolina</title>
      <description>
        <![CDATA[<p>For months, allegations of fraud have swirled around a congressional race in North Carolina’s Ninth District, but the Republican at the center of the controversy has held on. Why is he giving up now? Guest: Alan Blinder, who covers the American South for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Fraudulent Election in North Carolina</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For months, allegations of fraud have swirled around a congressional race in North Carolina’s Ninth District, but the Republican at the center of the controversy has held on. Why is he giving up now? Guest: Alan Blinder, who covers the American South for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For months, allegations of fraud have swirled around a congressional race in North Carolina’s Ninth District, but the Republican at the center of the controversy has held on. Why is he giving up now? Guest: Alan Blinder, who covers the American South for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lau0v83lJTHWdYLXKRGH_vVlqm1W0GWjY8Roj8OhV40</guid>
      <pubDate>Wed, 27 Feb 2019 10:56:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a3d99ffb-9505-4b60-a5e9-f1d675c56874.mp3" type="audio/mpeg" length="22955572"/>
    </item>
    <item>
      <title>What Hollywood Keeps Getting Wrong About Race</title>
      <description>
        <![CDATA[<p>Three decades ago, the highest honor at the Academy Awards was given to a movie about a white passenger learning to love her black chauffeur. Sunday night, the same award was given to a film about a white chauffeur learning to love his black passenger. We look at Hollywood’s obsession with fantasies of racial reconciliation. Guest: Wesley Morris, a critic at large for The New York Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What Hollywood Keeps Getting Wrong About Race</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Three decades ago, the highest honor at the Academy Awards was given to a movie about a white passenger learning to love her black chauffeur. Sunday night, the same award was given to a film about a white chauffeur learning to love his black passenger. We look at Hollywood’s obsession with fantasies of racial reconciliation. Guest: Wesley Morris, a critic at large for The New York Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Three decades ago, the highest honor at the Academy Awards was given to a movie about a white passenger learning to love her black chauffeur. Sunday night, the same award was given to a film about a white chauffeur learning to love his black passenger. We look at Hollywood’s obsession with fantasies of racial reconciliation. Guest: Wesley Morris, a critic at large for The New York Times and a host of the podcast “Still Processing.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/JngqlU7nqZNgnL5L-FXf2Vm1ym6_8ZamXlkTNmJNSaA</guid>
      <pubDate>Tue, 26 Feb 2019 10:55:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/92c97a9b-4166-48d9-8b10-857eb25867cd.mp3" type="audio/mpeg" length="28856320"/>
    </item>
    <item>
      <title>Why Controlling 5G Could Mean Controlling the World</title>
      <description>
        <![CDATA[<p>The United States believes that whoever controls fifth-generation cellular networks, known as 5G, will have a global advantage for decades to come. The fear is that China is almost there. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Controlling 5G Could Mean Controlling the World</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States believes that whoever controls fifth-generation cellular networks, known as 5G, will have a global advantage for decades to come. The fear is that China is almost there. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States believes that whoever controls fifth-generation cellular networks, known as 5G, will have a global advantage for decades to come. The fear is that China is almost there. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/khfhkwTEA5L_muNYCoCPkhMILdo0KVeVs33qx8EFqKg</guid>
      <pubDate>Mon, 25 Feb 2019 10:55:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/87fa072c-890a-45b5-aaf0-da441c43658f.mp3" type="audio/mpeg" length="22743666"/>
    </item>
    <item>
      <title>The American Women Who Joined ISIS</title>
      <description>
        <![CDATA[<p>They left to join the so-called caliphate and took an oath of allegiance to a terrorist group intent on destroying the West. Now they want to come home. What should the United States do with the American wives of Islamic State fighters? Guest: Rukmini Callimachi, who covers terrorism and the Islamic State for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The American Women Who Joined ISIS</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>They left to join the so-called caliphate and took an oath of allegiance to a terrorist group intent on destroying the West. Now they want to come home. What should the United States do with the American wives of Islamic State fighters? Guest: Rukmini Callimachi, who covers terrorism and the Islamic State for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>They left to join the so-called caliphate and took an oath of allegiance to a terrorist group intent on destroying the West. Now they want to come home. What should the United States do with the American wives of Islamic State fighters? Guest: Rukmini Callimachi, who covers terrorism and the Islamic State for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DDRfGnc7sIwY28aCp4VgRxNYbCfpfwaNgwwRAgezSE0</guid>
      <pubDate>Fri, 22 Feb 2019 10:55:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/01a6d09b-ea6f-41b4-8ad5-6bfb1c813682.mp3" type="audio/mpeg" length="28262400"/>
    </item>
    <item>
      <title>How New York Lost Amazon</title>
      <description>
        <![CDATA[<p>Supporters promised an economic transformation that would benefit generations. Opponents feared a billion-dollar giveaway to one of the world’s richest companies. Here’s how the deal to bring Amazon to New York City fell apart. Guest: J. David Goodman, who covers New York politics for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>How New York Lost Amazon</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Supporters promised an economic transformation that would benefit generations. Opponents feared a billion-dollar giveaway to one of the world’s richest companies. Here’s how the deal to bring Amazon to New York City fell apart. Guest: J. David Goodman, who covers New York politics for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Supporters promised an economic transformation that would benefit generations. Opponents feared a billion-dollar giveaway to one of the world’s richest companies. Here’s how the deal to bring Amazon to New York City fell apart. Guest: J. David Goodman, who covers New York politics for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5Kx3IfI754PR9eYSR4Bu2C8GjRYPcnCEmzyJQ17B6x4</guid>
      <pubDate>Thu, 21 Feb 2019 10:55:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e20fcd33-bc5e-4d86-9c59-c9e1b0e3ae17.mp3" type="audio/mpeg" length="25063758"/>
    </item>
    <item>
      <title>The Democratic Presidential Field (So Far)</title>
      <description>
        <![CDATA[<p>Senator Bernie Sanders has entered a crowded field of Democratic presidential candidates. We look at how candidates who agree on many social issues are fighting to distinguish themselves in order to beat President Trump. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Democratic Presidential Field (So Far)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Senator Bernie Sanders has entered a crowded field of Democratic presidential candidates. We look at how candidates who agree on many social issues are fighting to distinguish themselves in order to beat President Trump. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Senator Bernie Sanders has entered a crowded field of Democratic presidential candidates. We look at how candidates who agree on many social issues are fighting to distinguish themselves in order to beat President Trump. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mdzBsJ-xVEXv3L9xf57UzG7YFBl2iUt0FICk9HLS3sw</guid>
      <pubDate>Wed, 20 Feb 2019 10:54:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f94d0b57-e75e-4644-8db5-cd8409e89cbf.mp3" type="audio/mpeg" length="25134811"/>
    </item>
    <item>
      <title>The Democrats and Israel</title>
      <description>
        <![CDATA[<p>In the weeks since they’ve taken office, two freshman Democrats — Representatives Ilhan Omar and Rashida Tlaib — have been engulfed in controversy over their criticisms of Israel. We look at how, after decades of unwavering commitment to Israel, the Democratic Party is now dealing with charges of anti-Semitism. Guests: Sheryl Gay Stolberg, who covers Congress for The New York Times, and Jonathan Weisman, the deputy Washington editor of The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Democrats and Israel</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the weeks since they’ve taken office, two freshman Democrats — Representatives Ilhan Omar and Rashida Tlaib — have been engulfed in controversy over their criticisms of Israel. We look at how, after decades of unwavering commitment to Israel, the Democratic Party is now dealing with charges of anti-Semitism. Guests: Sheryl Gay Stolberg, who covers Congress for The New York Times, and Jonathan Weisman, the deputy Washington editor of The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the weeks since they’ve taken office, two freshman Democrats — Representatives Ilhan Omar and Rashida Tlaib — have been engulfed in controversy over their criticisms of Israel. We look at how, after decades of unwavering commitment to Israel, the Democratic Party is now dealing with charges of anti-Semitism. Guests: Sheryl Gay Stolberg, who covers Congress for The New York Times, and Jonathan Weisman, the deputy Washington editor of The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bDZaqJ4JsX1ond0GOKxDcYwjvD4EldeCPG1__v51FRg</guid>
      <pubDate>Tue, 19 Feb 2019 10:56:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5184540b-9c9c-4179-9aef-42741de81745.mp3" type="audio/mpeg" length="33907774"/>
    </item>
    <item>
      <title>Avoiding a Shutdown (by Declaring an Emergency)</title>
      <description>
        <![CDATA[<p>We take a look at the president’s last-minute plan to fund his border wall — and at how we got here. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Avoiding a Shutdown (by Declaring an Emergency)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>We take a look at the president’s last-minute plan to fund his border wall — and at how we got here. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>We take a look at the president’s last-minute plan to fund his border wall — and at how we got here. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vJlwBuMQaVQ9gbOJSPFBrGNv_SKtQA9q6tk8dCcnJNg</guid>
      <pubDate>Fri, 15 Feb 2019 10:55:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7b6ad5da-c232-4328-98b7-3ad3773d9134.mp3" type="audio/mpeg" length="26051395"/>
    </item>
    <item>
      <title>The Parkland Students, One Year Later</title>
      <description>
        <![CDATA[<p>It’s been a year since the shooting at Marjory Stoneman Douglas High School in Parkland. We went to Florida this week to check in on some of the students we met 12 months ago. Guest: Clare Toeniskoetter, a producer for “The Daily,” spoke with four students who survived the shooting. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Parkland Students, One Year Later</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>It’s been a year since the shooting at Marjory Stoneman Douglas High School in Parkland. We went to Florida this week to check in on some of the students we met 12 months ago. Guest: Clare Toeniskoetter, a producer for “The Daily,” spoke with four students who survived the shooting. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>It’s been a year since the shooting at Marjory Stoneman Douglas High School in Parkland. We went to Florida this week to check in on some of the students we met 12 months ago. Guest: Clare Toeniskoetter, a producer for “The Daily,” spoke with four students who survived the shooting. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KVtFsRZK1MO-BSVvA9dlgF6MJ5g-qe92-gZf49qjxWg</guid>
      <pubDate>Thu, 14 Feb 2019 10:55:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4ae72bb8-df28-4669-8f3a-854300aaaafc.mp3" type="audio/mpeg" length="24860630"/>
    </item>
    <item>
      <title>No Heat, No Power: How a Federal Jail Failed Its Inmates</title>
      <description>
        <![CDATA[<p>A New York Times investigation found that inside a Brooklyn jail, more than 1,000 inmates were locked inside freezing cells for 23 hours a day, prompting an inquiry by the Justice Department. But the involvement of the Justice Department may not be the turning point it appears to be.</p><p>Guest: Annie Correal, who covers New York for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>No Heat, No Power: How a Federal Jail Failed Its Inmates</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A New York Times investigation found that inside a Brooklyn jail, more than 1,000 inmates were locked inside freezing cells for 23 hours a day, prompting an inquiry by the Justice Department. But the involvement of the Justice Department may not be the turning point it appears to be.

Guest: Annie Correal, who covers New York for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A New York Times investigation found that inside a Brooklyn jail, more than 1,000 inmates were locked inside freezing cells for 23 hours a day, prompting an inquiry by the Justice Department. But the involvement of the Justice Department may not be the turning point it appears to be.</p><p>Guest: Annie Correal, who covers New York for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5EX60MBfk0M7pRg-TsicIbiUnw7Iag0VEhJe8H3xJ48</guid>
      <pubDate>Wed, 13 Feb 2019 10:55:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/eda8d2eb-d778-4b10-a6d5-a157a5544949.mp3" type="audio/mpeg" length="22171062"/>
    </item>
    <item>
      <title>Why Chief Justice Roberts Just Protected Abortion Rights</title>
      <description>
        <![CDATA[<p>From the moment he was confirmed, Chief Justice John G. Roberts Jr. has been a reliable conservative on the Supreme Court. So why did he just side with the court’s more liberal members to preserve abortion rights in Louisiana? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Chief Justice Roberts Just Protected Abortion Rights</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From the moment he was confirmed, Chief Justice John G. Roberts Jr. has been a reliable conservative on the Supreme Court. So why did he just side with the court’s more liberal members to preserve abortion rights in Louisiana? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>From the moment he was confirmed, Chief Justice John G. Roberts Jr. has been a reliable conservative on the Supreme Court. So why did he just side with the court’s more liberal members to preserve abortion rights in Louisiana? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4b1tC55iiTAAuQ0p_QoeJHVVjlACZt8Z-_7qITLCixM</guid>
      <pubDate>Tue, 12 Feb 2019 10:55:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a3ee1254-ed35-4c8f-ba08-1f1c2699ab52.mp3" type="audio/mpeg" length="24802951"/>
    </item>
    <item>
      <title>The Standoff Over Food and Power in Venezuela</title>
      <description>
        <![CDATA[<p>The humanitarian crisis in Venezuela is worsening as President Nicolás Maduro refuses to give up power and blocks food from entering the country despite widespread hunger. Here’s a look at why, in Mr. Maduro’s mind, giving up control of food means giving up power. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Standoff Over Food and Power in Venezuela</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The humanitarian crisis in Venezuela is worsening as President Nicolás Maduro refuses to give up power and blocks food from entering the country despite widespread hunger. Here’s a look at why, in Mr. Maduro’s mind, giving up control of food means giving up power. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The humanitarian crisis in Venezuela is worsening as President Nicolás Maduro refuses to give up power and blocks food from entering the country despite widespread hunger. Here’s a look at why, in Mr. Maduro’s mind, giving up control of food means giving up power. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1MWZMuR9E5g73qhXRr5Hu917B3rBOB_eySwC3jzeaQI</guid>
      <pubDate>Mon, 11 Feb 2019 10:53:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3e835bd4-32b0-4ee9-ad20-052133b5b9d0.mp3" type="audio/mpeg" length="21901479"/>
    </item>
    <item>
      <title>Democrats Wanted Zero Tolerance for Misconduct. Then Came Virginia.</title>
      <description>
        <![CDATA[<p>Democrats have adopted a policy of zero tolerance for misconduct, past or present, by members of their own party. The growing political crisis in Virginia is testing that approach. Guest: Jonathan Martin, who covers national politics for The New York Times, spoke with us from Richmond, Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Democrats Wanted Zero Tolerance for Misconduct. Then Came Virginia.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Democrats have adopted a policy of zero tolerance for misconduct, past or present, by members of their own party. The growing political crisis in Virginia is testing that approach. Guest: Jonathan Martin, who covers national politics for The New York Times, spoke with us from Richmond, Virginia. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Democrats have adopted a policy of zero tolerance for misconduct, past or present, by members of their own party. The growing political crisis in Virginia is testing that approach. Guest: Jonathan Martin, who covers national politics for The New York Times, spoke with us from Richmond, Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Wcu2a_QZSKqAvdQgMuHbrF20sK3i3vImHc_czk5qFrY</guid>
      <pubDate>Fri, 08 Feb 2019 10:53:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4859a085-dc74-4be0-a7bc-0e0dffa84b7a.mp3" type="audio/mpeg" length="23808626"/>
    </item>
    <item>
      <title>The Overlooked Scandal of Priests Sexually Abusing Nuns</title>
      <description>
        <![CDATA[<p>The pope acknowledged for the first time the persistent problem of sexual abuse of nuns by priests. We look at why it took the Catholic Church so long to recognize this group of victims. Guest: Laurie Goodstein, who has covered the Catholic Church for decades. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Overlooked Scandal of Priests Sexually Abusing Nuns</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The pope acknowledged for the first time the persistent problem of sexual abuse of nuns by priests. We look at why it took the Catholic Church so long to recognize this group of victims. Guest: Laurie Goodstein, who has covered the Catholic Church for decades. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The pope acknowledged for the first time the persistent problem of sexual abuse of nuns by priests. We look at why it took the Catholic Church so long to recognize this group of victims. Guest: Laurie Goodstein, who has covered the Catholic Church for decades. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/oztE4JbzNDs7XkQVs3Ip7eapM9EyffqIvC5-NVN32kg</guid>
      <pubDate>Thu, 07 Feb 2019 10:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba836be4-fc51-48ab-8fd3-c5afd56ca780.mp3" type="audio/mpeg" length="22357472"/>
    </item>
    <item>
      <title>What Past State of the Union Speeches Tell Us About the Future</title>
      <description>
        <![CDATA[<p>In his first State of the Union address since losing control of Congress, the president repeatedly spoke of bipartisan unity. But a history of these speeches suggests that it’s everything else he said that will best predict how he actually governs. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What Past State of the Union Speeches Tell Us About the Future</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In his first State of the Union address since losing control of Congress, the president repeatedly spoke of bipartisan unity. But a history of these speeches suggests that it’s everything else he said that will best predict how he actually governs. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In his first State of the Union address since losing control of Congress, the president repeatedly spoke of bipartisan unity. But a history of these speeches suggests that it’s everything else he said that will best predict how he actually governs. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/w9pml65AOCabC_3VCIhT6BMfmTPllLVrEDnE5N75cMw</guid>
      <pubDate>Wed, 06 Feb 2019 10:54:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a3fc34ce-429e-48e5-a80f-e2e3423ee243.mp3" type="audio/mpeg" length="24593554"/>
    </item>
    <item>
      <title>What Motivates Mitch McConnell?</title>
      <description>
        <![CDATA[<p>Over the past decade, the Senate Republican leader has emerged as a skilled legislative warrior, obstructing President Barack Obama’s agenda and enabling President Trump’s. But what does Mitch McConnell himself actually believe in? Guest: Charles Homans, the politics editor for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What Motivates Mitch McConnell?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Over the past decade, the Senate Republican leader has emerged as a skilled legislative warrior, obstructing President Barack Obama’s agenda and enabling President Trump’s. But what does Mitch McConnell himself actually believe in? Guest: Charles Homans, the politics editor for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Over the past decade, the Senate Republican leader has emerged as a skilled legislative warrior, obstructing President Barack Obama’s agenda and enabling President Trump’s. But what does Mitch McConnell himself actually believe in? Guest: Charles Homans, the politics editor for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/SocGGG2Kg8AsHhxl96KBX9DnIy_tcF4NlIGed2OSKiw</guid>
      <pubDate>Tue, 05 Feb 2019 10:58:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/40c4f4b9-11cb-4f0e-8637-2aa759eff36b.mp3" type="audio/mpeg" length="26520346"/>
    </item>
    <item>
      <title>Making Peace With the Taliban</title>
      <description>
        <![CDATA[<p>Nearly 18 years ago, the United States declared war on the Taliban, promising to drive it from power in Afghanistan. Here’s a look at why American officials are now offering peace to the same group. Guest: Mujib Mashal, a New York Times senior correspondent in Afghanistan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Making Peace With the Taliban</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nearly 18 years ago, the United States declared war on the Taliban, promising to drive it from power in Afghanistan. Here’s a look at why American officials are now offering peace to the same group. Guest: Mujib Mashal, a New York Times senior correspondent in Afghanistan. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nearly 18 years ago, the United States declared war on the Taliban, promising to drive it from power in Afghanistan. Here’s a look at why American officials are now offering peace to the same group. Guest: Mujib Mashal, a New York Times senior correspondent in Afghanistan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mCjHewOmEQgNwd5PVJ_a2N2h3V1HIDDEg-qMUa1gxRs</guid>
      <pubDate>Mon, 04 Feb 2019 10:53:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4cf19914-4eec-44b4-a170-7ff41071f8bf.mp3" type="audio/mpeg" length="26924094"/>
    </item>
    <item>
      <title>The President and the Publisher</title>
      <description>
        <![CDATA[<p>On Thursday in the Oval Office, the president of the United States debated the publisher of The New York Times about the role of a free press. Guest: A. G. Sulzberger, The Times’s publisher, sat down with President Trump. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The President and the Publisher</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On Thursday in the Oval Office, the president of the United States debated the publisher of The New York Times about the role of a free press. Guest: A. G. Sulzberger, The Times’s publisher, sat down with President Trump. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>On Thursday in the Oval Office, the president of the United States debated the publisher of The New York Times about the role of a free press. Guest: A. G. Sulzberger, The Times’s publisher, sat down with President Trump. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/v5YAu7LxwtCySs97xtgI_3CnJ9KDf4V4QQqFOZl65-w</guid>
      <pubDate>Fri, 01 Feb 2019 11:03:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/22dfd25a-47ae-4d2a-bf43-3dbaf4195679.mp3" type="audio/mpeg" length="30461701"/>
    </item>
    <item>
      <title>The Perils of Reporting on an Investigation of the President</title>
      <description>
        <![CDATA[<p>The special counsel’s office disputed an explosive BuzzFeed report claiming that President Trump had instructed his former lawyer, Michael Cohen, to lie to Congress — and that investigators had evidence of this. The scrutiny that followed calls to mind another reporting team and its challenges in the 1970s. Guests: Bob Woodward, one of the Washington Post reporters who broke the Watergate story, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Perils of Reporting on an Investigation of the President</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The special counsel’s office disputed an explosive BuzzFeed report claiming that President Trump had instructed his former lawyer, Michael Cohen, to lie to Congress — and that investigators had evidence of this. The scrutiny that followed calls to mind another reporting team and its challenges in the 1970s. Guests: Bob Woodward, one of the Washington Post reporters who broke the Watergate story, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The special counsel’s office disputed an explosive BuzzFeed report claiming that President Trump had instructed his former lawyer, Michael Cohen, to lie to Congress — and that investigators had evidence of this. The scrutiny that followed calls to mind another reporting team and its challenges in the 1970s. Guests: Bob Woodward, one of the Washington Post reporters who broke the Watergate story, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sus1aswT-BdNSD2FfapmLxLUCj4skBezBJQs7QZp8ds</guid>
      <pubDate>Thu, 31 Jan 2019 10:53:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/edbd2990-bf04-41be-98c6-9ec8a95cebdd.mp3" type="audio/mpeg" length="29407190"/>
    </item>
    <item>
      <title>How Democrats Will Govern (Now That Government Is Open)</title>
      <description>
        <![CDATA[<p>For weeks, House Democrats have found their agenda overshadowed by the struggle to reopen the government. Now that it’s open, they have a plan. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>How Democrats Will Govern (Now That Government Is Open)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For weeks, House Democrats have found their agenda overshadowed by the struggle to reopen the government. Now that it’s open, they have a plan. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For weeks, House Democrats have found their agenda overshadowed by the struggle to reopen the government. Now that it’s open, they have a plan. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5mwFq1Pk7VDFpK6kvjDQGx3ZYFSARo8MuReQpfO1t2s</guid>
      <pubDate>Wed, 30 Jan 2019 10:50:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f2ba7e27-1da8-4bbe-86ad-6d8f59a9d533.mp3" type="audio/mpeg" length="22224979"/>
    </item>
    <item>
      <title>Dispatches From the Border, Part 2</title>
      <description>
        <![CDATA[<p>After a 35-day government shutdown over a proposed wall along the U.S.-Mexico border, Democrats and Republicans in Congress are negotiating over what border security actually means. We checked back in with Annie Brown from “The Daily,” who’s been driving the length of the border with the New York Times reporter Azam Ahmed. Their last dispatch focused on migrants in Mexico deciding whether to cross the border illegally. Now, we hear what can happen once they cross. Guests: Annie Brown, a producer for “The Daily,” and Azam Ahmed, the Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Dispatches From the Border, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After a 35-day government shutdown over a proposed wall along the U.S.-Mexico border, Democrats and Republicans in Congress are negotiating over what border security actually means. We checked back in with Annie Brown from “The Daily,” who’s been driving the length of the border with the New York Times reporter Azam Ahmed. Their last dispatch focused on migrants in Mexico deciding whether to cross the border illegally. Now, we hear what can happen once they cross. Guests: Annie Brown, a producer for “The Daily,” and Azam Ahmed, the Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After a 35-day government shutdown over a proposed wall along the U.S.-Mexico border, Democrats and Republicans in Congress are negotiating over what border security actually means. We checked back in with Annie Brown from “The Daily,” who’s been driving the length of the border with the New York Times reporter Azam Ahmed. Their last dispatch focused on migrants in Mexico deciding whether to cross the border illegally. Now, we hear what can happen once they cross. Guests: Annie Brown, a producer for “The Daily,” and Azam Ahmed, the Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/u9z2zvMHtA3E9r8Rw4BFXLoa_uq_kIkVyNRteFJ75H8</guid>
      <pubDate>Tue, 29 Jan 2019 10:48:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/39120498-bfa1-42d7-a05e-4e68c386afc7.mp3" type="audio/mpeg" length="27925524"/>
    </item>
    <item>
      <title>The Story of Roger Stone and WikiLeaks</title>
      <description>
        <![CDATA[<p>The special counsel’s indictment of Roger J. Stone Jr. contains details as over-the-top as Mr. Stone himself, revealing, for instance, that he encouraged an associate to use a tactic straight from “The Godfather.” But the indictment — which shows the most direct link yet between the Trump campaign and WikiLeaks — is wholly serious. Guest: Mark Mazzetti, a Washington investigative correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Story of Roger Stone and WikiLeaks</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The special counsel’s indictment of Roger J. Stone Jr. contains details as over-the-top as Mr. Stone himself, revealing, for instance, that he encouraged an associate to use a tactic straight from “The Godfather.” But the indictment — which shows the most direct link yet between the Trump campaign and WikiLeaks — is wholly serious. Guest: Mark Mazzetti, a Washington investigative correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The special counsel’s indictment of Roger J. Stone Jr. contains details as over-the-top as Mr. Stone himself, revealing, for instance, that he encouraged an associate to use a tactic straight from “The Godfather.” But the indictment — which shows the most direct link yet between the Trump campaign and WikiLeaks — is wholly serious. Guest: Mark Mazzetti, a Washington investigative correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/cEHOFgctxsRvgrWUXTbfoMecSXjimMnaOE9weiqif6Q</guid>
      <pubDate>Mon, 28 Jan 2019 10:53:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1e09943b-6a28-463d-850a-004c0441b995.mp3" type="audio/mpeg" length="22698109"/>
    </item>
    <item>
      <title>One Country, Two Presidents: The Crisis in Venezuela</title>
      <description>
        <![CDATA[<p>A remarkable battle for power is playing out in Venezuela, with dueling claims to the presidency. We look at what’s happening in the country and why the situation is coming to a head. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>One Country, Two Presidents: The Crisis in Venezuela</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A remarkable battle for power is playing out in Venezuela, with dueling claims to the presidency. We look at what’s happening in the country and why the situation is coming to a head. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A remarkable battle for power is playing out in Venezuela, with dueling claims to the presidency. We look at what’s happening in the country and why the situation is coming to a head. Guest: Nicholas Casey, the Andes bureau chief for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3qcoGQOYbFKB0VvU6OkLLxAkv2uZMjI4wZpHv8v4-zA</guid>
      <pubDate>Fri, 25 Jan 2019 10:47:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:27</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/49f1ccdf-c54f-431a-9d84-5ec2f7749955.mp3" type="audio/mpeg" length="24440581"/>
    </item>
    <item>
      <title>ISIS Has Lost Its Land. What About Its Power?</title>
      <description>
        <![CDATA[<p>More than 99 percent of the territory the Islamic State once held in Iraq and Syria is gone — but the United States government may be misunderstanding what that means. Guest: Rukmini Callimachi, who covers terrorism and the Islamic State for The New York Times, spoke with us from Iraq. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>ISIS Has Lost Its Land. What About Its Power?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>More than 99 percent of the territory the Islamic State once held in Iraq and Syria is gone — but the United States government may be misunderstanding what that means. Guest: Rukmini Callimachi, who covers terrorism and the Islamic State for The New York Times, spoke with us from Iraq. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>More than 99 percent of the territory the Islamic State once held in Iraq and Syria is gone — but the United States government may be misunderstanding what that means. Guest: Rukmini Callimachi, who covers terrorism and the Islamic State for The New York Times, spoke with us from Iraq. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dpFJtjBpkq6ysPROt2On-22iIucoEN48y6EIezmss0Y</guid>
      <pubDate>Thu, 24 Jan 2019 10:56:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2986c970-e11e-4817-aa88-dccc994187ac.mp3" type="audio/mpeg" length="20253884"/>
    </item>
    <item>
      <title>The Confrontation at the Lincoln Memorial</title>
      <description>
        <![CDATA[<p>Over the course of three days, the narrative of an encounter between young men wearing “Make America Great Again” hats and a Native American veteran has become a pick-your-side story where who holds power and who’s at fault are all up for debate. What can actually be said about what happened on the steps of the Lincoln Memorial? Guest: Elizabeth Dias, who covers faith and politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Confrontation at the Lincoln Memorial</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Over the course of three days, the narrative of an encounter between young men wearing “Make America Great Again” hats and a Native American veteran has become a pick-your-side story where who holds power and who’s at fault are all up for debate. What can actually be said about what happened on the steps of the Lincoln Memorial? Guest: Elizabeth Dias, who covers faith and politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Over the course of three days, the narrative of an encounter between young men wearing “Make America Great Again” hats and a Native American veteran has become a pick-your-side story where who holds power and who’s at fault are all up for debate. What can actually be said about what happened on the steps of the Lincoln Memorial? Guest: Elizabeth Dias, who covers faith and politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/k8dFZg-p72GRcU5B7o_lvL9DzyMikC8rPo0aNfhBugM</guid>
      <pubDate>Wed, 23 Jan 2019 10:54:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fe9d398f-d683-4ef2-82d7-a7340292d079.mp3" type="audio/mpeg" length="22603650"/>
    </item>
    <item>
      <title>The Freshmen: Rashida Tlaib, Part 1</title>
      <description>
        <![CDATA[<p>Now that the Democrats have taken back the House, their plan is to govern on a message of unity heading into 2020. A small group of new, progressive lawmakers threatens to upend that plan. Meet one of them. Guests: Representative Rashida Tlaib, Democrat of Michigan, and Andy Mills, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </description>
      <itunes:title>The Freshmen: Rashida Tlaib, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Now that the Democrats have taken back the House, their plan is to govern on a message of unity heading into 2020. A small group of new, progressive lawmakers threatens to upend that plan. Meet one of them. Guests: Representative Rashida Tlaib, Democrat of Michigan, and Andy Mills, a producer for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Now that the Democrats have taken back the House, their plan is to govern on a message of unity heading into 2020. A small group of new, progressive lawmakers threatens to upend that plan. Meet one of them. Guests: Representative Rashida Tlaib, Democrat of Michigan, and Andy Mills, a producer for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/TjgFbzKDw117m7UkMS6AQ2oJtc6AuyfktLZiVMysKVo</guid>
      <pubDate>Tue, 22 Jan 2019 11:16:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:37:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/94da6a0c-0864-4675-b635-a2311943e4d8.mp3" type="audio/mpeg" length="35892662"/>
    </item>
    <item>
      <title>A Rift Over Power and Privilege in the Women’s March</title>
      <description>
        <![CDATA[<p>After the divisiveness of the 2016 election, the Women’s March became a major symbol of unity. But two years later, a rift in the movement has grown. Guest: Farah Stockman, a national reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Rift Over Power and Privilege in the Women’s March</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After the divisiveness of the 2016 election, the Women’s March became a major symbol of unity. But two years later, a rift in the movement has grown. Guest: Farah Stockman, a national reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After the divisiveness of the 2016 election, the Women’s March became a major symbol of unity. But two years later, a rift in the movement has grown. Guest: Farah Stockman, a national reporter for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Fxy0yx4gp1N_4-1CD2sLXfCwplP9iHUgz1q7UlG2GRc</guid>
      <pubDate>Fri, 18 Jan 2019 11:10:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/748e5770-8dcd-4650-af19-ff8947e7a3a9.mp3" type="audio/mpeg" length="20387631"/>
    </item>
    <item>
      <title>A Republican Congressman From Texas Who Opposes the Wall</title>
      <description>
        <![CDATA[<p>As the government shutdown approaches its fifth week, a few congressional Republicans are publicly breaking from the president in his push for a border wall. We spoke with one of them. Guest: Representative Will Hurd, Republican of Texas. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Republican Congressman From Texas Who Opposes the Wall</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the government shutdown approaches its fifth week, a few congressional Republicans are publicly breaking from the president in his push for a border wall. We spoke with one of them. Guest: Representative Will Hurd, Republican of Texas. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the government shutdown approaches its fifth week, a few congressional Republicans are publicly breaking from the president in his push for a border wall. We spoke with one of them. Guest: Representative Will Hurd, Republican of Texas. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OsKDzflsx-rjC-t5BwDQ0GLQhaCvGZLNW7mn-oqEbCk</guid>
      <pubDate>Thu, 17 Jan 2019 10:51:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/45bc392c-257c-4bc1-b7f6-bc7a1b01e5ab.mp3" type="audio/mpeg" length="19037622"/>
    </item>
    <item>
      <title>William Barr Under Oath</title>
      <description>
        <![CDATA[<p>In a hearing before the Senate Judiciary Committee, William P. Barr, the nominee for attorney general, vowed to protect the Justice Department and seemed to tell senators what they wanted to hear. But was it what the president wanted to hear? Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>William Barr Under Oath</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a hearing before the Senate Judiciary Committee, William P. Barr, the nominee for attorney general, vowed to protect the Justice Department and seemed to tell senators what they wanted to hear. But was it what the president wanted to hear? Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a hearing before the Senate Judiciary Committee, William P. Barr, the nominee for attorney general, vowed to protect the Justice Department and seemed to tell senators what they wanted to hear. But was it what the president wanted to hear? Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bE4isenNY4xvNVijj7YhKG9vZYsqzy7v0wNkYSWAh1I</guid>
      <pubDate>Wed, 16 Jan 2019 10:48:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3e8a475e-1314-43ef-b633-a98fd4b03e8e.mp3" type="audio/mpeg" length="26268734"/>
    </item>
    <item>
      <title>Trump’s Pick for Attorney General</title>
      <description>
        <![CDATA[<p>William P. Barr, President Trump’s nominee for attorney general, is set to go before senators today for the beginning of his confirmation hearings. What would it mean for the president and the special counsel to have an attorney general who is in charge of the Russia investigation? Guest: Katie Benner, who covers the Justice Department for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Trump’s Pick for Attorney General</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>William P. Barr, President Trump’s nominee for attorney general, is set to go before senators today for the beginning of his confirmation hearings. What would it mean for the president and the special counsel to have an attorney general who is in charge of the Russia investigation? Guest: Katie Benner, who covers the Justice Department for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>William P. Barr, President Trump’s nominee for attorney general, is set to go before senators today for the beginning of his confirmation hearings. What would it mean for the president and the special counsel to have an attorney general who is in charge of the Russia investigation? Guest: Katie Benner, who covers the Justice Department for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/C1NaMD3NWb__XMpm3F9tcQRF51OMWLgq7wv-hj59kPk</guid>
      <pubDate>Tue, 15 Jan 2019 10:52:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5e355426-5428-4c82-a242-830339781ec9.mp3" type="audio/mpeg" length="21780271"/>
    </item>
    <item>
      <title>Dispatches From the Border, Part 1</title>
      <description>
        <![CDATA[<p>As the shutdown continues over the president’s demand for a border wall, Annie Brown from “The Daily” joined Azam Ahmed, a New York Times reporter, and Meridith Kohut, a photojournalist, on their endeavor to drive the entire length of the U.S.-Mexico border. Here’s what they saw on the first part of that journey. Guests: Annie Brown, a producer for “The Daily”; Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean; and Meridith Kohut, a photojournalist who covers Latin America. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Dispatches From the Border, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the shutdown continues over the president’s demand for a border wall, Annie Brown from “The Daily” joined Azam Ahmed, a New York Times reporter, and Meridith Kohut, a photojournalist, on their endeavor to drive the entire length of the U.S.-Mexico border. Here’s what they saw on the first part of that journey. Guests: Annie Brown, a producer for “The Daily”; Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean; and Meridith Kohut, a photojournalist who covers Latin America. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the shutdown continues over the president’s demand for a border wall, Annie Brown from “The Daily” joined Azam Ahmed, a New York Times reporter, and Meridith Kohut, a photojournalist, on their endeavor to drive the entire length of the U.S.-Mexico border. Here’s what they saw on the first part of that journey. Guests: Annie Brown, a producer for “The Daily”; Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean; and Meridith Kohut, a photojournalist who covers Latin America. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/EP3hXkz9-AagA9R3t1l8PpWFjx6K9XAC1qc-pkQnnZg</guid>
      <pubDate>Mon, 14 Jan 2019 10:56:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/73b0d44a-9397-4740-8898-fb4d6d13c8c6.mp3" type="audio/mpeg" length="24010083"/>
    </item>
    <item>
      <title>What a Border Sheriff Thinks About the Wall</title>
      <description>
        <![CDATA[<p>A majority of Americans oppose the construction of a border wall. President Trump’s insistence on building it has led to a bitter political impasse and a government shutdown. We spoke with a sheriff on the border who supports the president’s efforts. Guest: Mark Napier, the sheriff of Pima County, Ariz. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What a Border Sheriff Thinks About the Wall</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A majority of Americans oppose the construction of a border wall. President Trump’s insistence on building it has led to a bitter political impasse and a government shutdown. We spoke with a sheriff on the border who supports the president’s efforts. Guest: Mark Napier, the sheriff of Pima County, Ariz. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A majority of Americans oppose the construction of a border wall. President Trump’s insistence on building it has led to a bitter political impasse and a government shutdown. We spoke with a sheriff on the border who supports the president’s efforts. Guest: Mark Napier, the sheriff of Pima County, Ariz. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wR_6UYcYO8bcSEFsmSp_gDXFk-tRmKUbXwlNVmtCb6A</guid>
      <pubDate>Fri, 11 Jan 2019 10:47:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1b5b16f2-6d64-4e88-b6fc-625e8e7ce791.mp3" type="audio/mpeg" length="22598217"/>
    </item>
    <item>
      <title>The Republicans’ Shutdown Strategy</title>
      <description>
        <![CDATA[<p>In his latest negotiation with Democrats over the shutdown, President Trump slammed the table and stormed out of the meeting. We look at why his strategy requires giving no ground and forcing Republican senators to stand with him, no matter the cost. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Republicans’ Shutdown Strategy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In his latest negotiation with Democrats over the shutdown, President Trump slammed the table and stormed out of the meeting. We look at why his strategy requires giving no ground and forcing Republican senators to stand with him, no matter the cost. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In his latest negotiation with Democrats over the shutdown, President Trump slammed the table and stormed out of the meeting. We look at why his strategy requires giving no ground and forcing Republican senators to stand with him, no matter the cost. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/T8s5aR6durl1wOozvRw4p8v1_26gviUk6cmuo9rvPo0</guid>
      <pubDate>Thu, 10 Jan 2019 10:49:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/28234a8e-9dcd-4d60-a930-9000f253ddb9.mp3" type="audio/mpeg" length="20701936"/>
    </item>
    <item>
      <title>Trump’s Prime-Time Address</title>
      <description>
        <![CDATA[<p>Millions of Americans watched on Tuesday night as President Trump made his case for a wall on the southern border, and as Democratic leaders dismissed his talk of crisis. Guests: Michael M. Grynbaum, who covers the media for The New York Times, and Mark Landler, a White House correspondent. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Trump’s Prime-Time Address</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Millions of Americans watched on Tuesday night as President Trump made his case for a wall on the southern border, and as Democratic leaders dismissed his talk of crisis. Guests: Michael M. Grynbaum, who covers the media for The New York Times, and Mark Landler, a White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Millions of Americans watched on Tuesday night as President Trump made his case for a wall on the southern border, and as Democratic leaders dismissed his talk of crisis. Guests: Michael M. Grynbaum, who covers the media for The New York Times, and Mark Landler, a White House correspondent. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OpA42yF_G0Gszw_GSL56ot8Uvg1-yQMY3PRlBPkKGjU</guid>
      <pubDate>Wed, 09 Jan 2019 10:57:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/380b57ac-deb5-4920-a249-c84ef4c442a3.mp3" type="audio/mpeg" length="22472829"/>
    </item>
    <item>
      <title>Is There a Crisis at the Border?</title>
      <description>
        <![CDATA[<p>President Trump plans to address the nation tonight about what he calls “the humanitarian and national security crisis on our southern border.” But much of that chaos could be a result of the administration’s policies. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Is There a Crisis at the Border?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump plans to address the nation tonight about what he calls “the humanitarian and national security crisis on our southern border.” But much of that chaos could be a result of the administration’s policies. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump plans to address the nation tonight about what he calls “the humanitarian and national security crisis on our southern border.” But much of that chaos could be a result of the administration’s policies. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jPjRcBVIJHroe6qcjurEt37cvNRA8Q3knt-jWn0dx98</guid>
      <pubDate>Tue, 08 Jan 2019 10:44:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4d9045d6-0e30-4049-a950-09cb5f7afdf9.mp3" type="audio/mpeg" length="15670125"/>
    </item>
    <item>
      <title>Trump’s Plan to Withdraw Troops From Syria</title>
      <description>
        <![CDATA[<p>President Trump’s decision to withdraw American troops from Syria surprised allies and enemies alike, and prompted public disagreement from military and civilian leaders. But the ensuing debate about the role of the United States military may be long overdue. &nbsp;Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Trump’s Plan to Withdraw Troops From Syria</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s decision to withdraw American troops from Syria surprised allies and enemies alike, and prompted public disagreement from military and civilian leaders. But the ensuing debate about the role of the United States military may be long overdue.  Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump’s decision to withdraw American troops from Syria surprised allies and enemies alike, and prompted public disagreement from military and civilian leaders. But the ensuing debate about the role of the United States military may be long overdue. &nbsp;Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jCP8spfwgdnkNul_T-Fp5JC-dsLYc_GiHeimAYAFQic</guid>
      <pubDate>Mon, 07 Jan 2019 10:45:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cdab37df-a176-4f27-a59d-aafe89e8757c.mp3" type="audio/mpeg" length="20905064"/>
    </item>
    <item>
      <title>Day 1 of a Democratic Majority</title>
      <description>
        <![CDATA[<p>The 116th Congress has been sworn in. With that, Democrats have taken control of the House, and Representative Nancy Pelosi has reclaimed her position as its leader. Here’s the scene on Capitol Hill as the day unfolded. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Day 1 of a Democratic Majority</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The 116th Congress has been sworn in. With that, Democrats have taken control of the House, and Representative Nancy Pelosi has reclaimed her position as its leader. Here’s the scene on Capitol Hill as the day unfolded. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The 116th Congress has been sworn in. With that, Democrats have taken control of the House, and Representative Nancy Pelosi has reclaimed her position as its leader. Here’s the scene on Capitol Hill as the day unfolded. Guest: Julie Hirschfeld Davis, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kEyX-tbJ3tPN6Q3K21RtWdXRW4R6iUWd1N55c9Nos6k</guid>
      <pubDate>Fri, 04 Jan 2019 10:45:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/df40000b-722c-4a35-99c3-0183b3759e35.mp3" type="audio/mpeg" length="26218579"/>
    </item>
    <item>
      <title>Chuck Schumer on the Wall, the Shutdown and the Era of Divided Government</title>
      <description>
        <![CDATA[<p>On the 12th day of the government shutdown, the Democratic congressional leaders went to the White House and proposed that the president reopen the government while the two sides ironed out differences on funding for a border wall. A couple of hours after that meeting, we spoke with Senator Chuck Schumer, the Senate minority leader, about his newly emboldened approach and how he and Ms. Pelosi plan to stick together in a divided Washington. Guest: Senator Chuck Schumer of New York, the Senate minority leader. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Chuck Schumer on the Wall, the Shutdown and the Era of Divided Government</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On the 12th day of the government shutdown, the Democratic congressional leaders went to the White House and proposed that the president reopen the government while the two sides ironed out differences on funding for a border wall. A couple of hours after that meeting, we spoke with Senator Chuck Schumer, the Senate minority leader, about his newly emboldened approach and how he and Ms. Pelosi plan to stick together in a divided Washington. Guest: Senator Chuck Schumer of New York, the Senate minority leader. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>On the 12th day of the government shutdown, the Democratic congressional leaders went to the White House and proposed that the president reopen the government while the two sides ironed out differences on funding for a border wall. A couple of hours after that meeting, we spoke with Senator Chuck Schumer, the Senate minority leader, about his newly emboldened approach and how he and Ms. Pelosi plan to stick together in a divided Washington. Guest: Senator Chuck Schumer of New York, the Senate minority leader. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/y40wrwYsICnt5WlARwOQQ99OyLOwuDZ7tTkkXLOLl48</guid>
      <pubDate>Thu, 03 Jan 2019 10:57:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/85b029c5-92ee-4f5e-9866-ded62be3d76a.mp3" type="audio/mpeg" length="23567882"/>
    </item>
    <item>
      <title>What Will Democrats Do With Their New Power?</title>
      <description>
        <![CDATA[<p>Democrats have waited two years for a chance to investigate President Trump on their own terms. Starting tomorrow, they can. We look at how they plan to use — and not use — that power. Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What Will Democrats Do With Their New Power?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Democrats have waited two years for a chance to investigate President Trump on their own terms. Starting tomorrow, they can. We look at how they plan to use — and not use — that power. Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Democrats have waited two years for a chance to investigate President Trump on their own terms. Starting tomorrow, they can. We look at how they plan to use — and not use — that power. Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Q18zet7jxplI2IE0DYe5AxisP3QHu_CzTIU-EUP6XXY</guid>
      <pubDate>Wed, 02 Jan 2019 10:46:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2e8d087b-d98f-42a0-a576-7d07957db3d4.mp3" type="audio/mpeg" length="29799235"/>
    </item>
    <item>
      <title>An Ongoing Look Into the Origins of Trump’s Wealth</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we return to a New York Times investigation into Fred and Donald Trump’s taxes. After spending much of the past year poring over never-before-seen documents, our colleagues unearthed new information about the president’s financial history that contradict his story of being a self-made billionaire. Guests: David Barstow, Susanne Craig and Russ Buettner, investigative reporters for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>An Ongoing Look Into the Origins of Trump’s Wealth</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we return to a New York Times investigation into Fred and Donald Trump’s taxes. After spending much of the past year poring over never-before-seen documents, our colleagues unearthed new information about the president’s financial history that contradict his story of being a self-made billionaire. Guests: David Barstow, Susanne Craig and Russ Buettner, investigative reporters for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we return to a New York Times investigation into Fred and Donald Trump’s taxes. After spending much of the past year poring over never-before-seen documents, our colleagues unearthed new information about the president’s financial history that contradict his story of being a self-made billionaire. Guests: David Barstow, Susanne Craig and Russ Buettner, investigative reporters for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/C9M30qeozwo294FokucT47eTnTxjxG0zIiNr-6a1OjU</guid>
      <pubDate>Mon, 31 Dec 2018 10:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a008412a-dacf-4c50-9edc-5d3180515d07.mp3" type="audio/mpeg" length="30248960"/>
    </item>
    <item>
      <title>A Mother Talks to Her Sons About Brett Kavanaugh</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. In October, we sat down with a group of teenage girls in Brooklyn to talk about their reaction to the accusations against Supreme Court Justice Brett M. Kavanaugh by Dr. Christine Blasey Ford. After that conversation aired, we received dozens of emails from listeners who wanted to hear the same questions posed to a group of boys. Guests: Ann Powers, a listener in Oregon, interviewed her two sons and one of their friends. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Mother Talks to Her Sons About Brett Kavanaugh</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. In October, we sat down with a group of teenage girls in Brooklyn to talk about their reaction to the accusations against Supreme Court Justice Brett M. Kavanaugh by Dr. Christine Blasey Ford. After that conversation aired, we received dozens of emails from listeners who wanted to hear the same questions posed to a group of boys. Guests: Ann Powers, a listener in Oregon, interviewed her two sons and one of their friends. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. In October, we sat down with a group of teenage girls in Brooklyn to talk about their reaction to the accusations against Supreme Court Justice Brett M. Kavanaugh by Dr. Christine Blasey Ford. After that conversation aired, we received dozens of emails from listeners who wanted to hear the same questions posed to a group of boys. Guests: Ann Powers, a listener in Oregon, interviewed her two sons and one of their friends. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/gpdJ-Kt75fAolnqTfIrdVrjWUrPoLsfPhg15U_Oyo0U</guid>
      <pubDate>Fri, 28 Dec 2018 10:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c5ad1624-2d57-424c-8bcc-01d1a0d41ba3.mp3" type="audio/mpeg" length="19510334"/>
    </item>
    <item>
      <title>The Scars of Family Separation</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we’re going back to an episode from this summer, when we met Nazario Jacinto Carrillo, a farmer from Guatemala who was separated from his daughter at the United States border as part of the Trump administration’s crackdown on undocumented immigrants. Guests: Caitlin Dickerson, who covers immigration for The New York Times, spoke with Mr. Carrillo. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Scars of Family Separation</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we’re going back to an episode from this summer, when we met Nazario Jacinto Carrillo, a farmer from Guatemala who was separated from his daughter at the United States border as part of the Trump administration’s crackdown on undocumented immigrants. Guests: Caitlin Dickerson, who covers immigration for The New York Times, spoke with Mr. Carrillo. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. Today, we’re going back to an episode from this summer, when we met Nazario Jacinto Carrillo, a farmer from Guatemala who was separated from his daughter at the United States border as part of the Trump administration’s crackdown on undocumented immigrants. Guests: Caitlin Dickerson, who covers immigration for The New York Times, spoke with Mr. Carrillo. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/O1qhRUqsIEpAFCf1lCpoCW3Bj_obiWUL9bftxPlwpeQ</guid>
      <pubDate>Thu, 27 Dec 2018 10:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6192ceeb-c987-473c-9a87-e8bdd547d60e.mp3" type="audio/mpeg" length="20078341"/>
    </item>
    <item>
      <title>For a Family Divided by the Korean War, a New Chapter</title>
      <description>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. In April, President Moon Jae-in of South Korea met with North Korean leader Kim Jong-un to discuss formally ending the Korean War, a conflict that has divided thousands of families for more than six decades. Sylvia Nam’s family is one of them. Guest: Sylvia Nam traveled to North Korea to find out what happened to her grandfather, who left South Korea for the North nearly 70 years ago and never returned. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>For a Family Divided by the Korean War, a New Chapter</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. In April, President Moon Jae-in of South Korea met with North Korean leader Kim Jong-un to discuss formally ending the Korean War, a conflict that has divided thousands of families for more than six decades. Sylvia Nam’s family is one of them. Guest: Sylvia Nam traveled to North Korea to find out what happened to her grandfather, who left South Korea for the North nearly 70 years ago and never returned. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>This week, “The Daily” is revisiting some of our favorite episodes of the year and checking in on what has happened since the stories first ran. In April, President Moon Jae-in of South Korea met with North Korean leader Kim Jong-un to discuss formally ending the Korean War, a conflict that has divided thousands of families for more than six decades. Sylvia Nam’s family is one of them. Guest: Sylvia Nam traveled to North Korea to find out what happened to her grandfather, who left South Korea for the North nearly 70 years ago and never returned. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/86D5d6-XsR3LnErSl1Iq5m_OfypoaO759KA42jFR5pI</guid>
      <pubDate>Wed, 26 Dec 2018 10:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9596766a-a0e9-4fd4-928f-619858785af3.mp3" type="audio/mpeg" length="20130168"/>
    </item>
    <item>
      <title>The Year in Sound: An Audio Time Capsule of 2018</title>
      <description>
        <![CDATA[<p>Between the government shutdowns that bookended the year, there were furious standoffs over a border wall; shootings at a high school, a bar, a grocery store, a synagogue; devastating wildfires in California. Handshakes and promises shared with autocrats in North Korea and Russia. Powerful men brought down by #MeToo or trying to make a comeback, and a Supreme Court nominee accused, then elevated to the bench. Questions about a murdered journalist, about election interference, about how much Facebook knew. A midterm vote that delivered one of the most diverse — and divided — governments in American history. Here’s what 2018 sounded like. </p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Year in Sound: An Audio Time Capsule of 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Between the government shutdowns that bookended the year, there were furious standoffs over a border wall; shootings at a high school, a bar, a grocery store, a synagogue; devastating wildfires in California. Handshakes and promises shared with autocrats in North Korea and Russia. Powerful men brought down by #MeToo or trying to make a comeback, and a Supreme Court nominee accused, then elevated to the bench. Questions about a murdered journalist, about election interference, about how much Facebook knew. A midterm vote that delivered one of the most diverse — and divided — governments in American history. Here’s what 2018 sounded like. 

For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Between the government shutdowns that bookended the year, there were furious standoffs over a border wall; shootings at a high school, a bar, a grocery store, a synagogue; devastating wildfires in California. Handshakes and promises shared with autocrats in North Korea and Russia. Powerful men brought down by #MeToo or trying to make a comeback, and a Supreme Court nominee accused, then elevated to the bench. Questions about a murdered journalist, about election interference, about how much Facebook knew. A midterm vote that delivered one of the most diverse — and divided — governments in American history. Here’s what 2018 sounded like. </p><p>For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g1FyxdJBIUv3F1Zbcx62NDwRSE4BRC27fcBNJW4jiLs</guid>
      <pubDate>Mon, 24 Dec 2018 10:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b4a62786-f78d-459b-a77d-127de508fd60.mp3" type="audio/mpeg" length="28699167"/>
    </item>
    <item>
      <title>The Latest Showdown Over a Shutdown</title>
      <description>
        <![CDATA[<p>President Trump seemed poised to avoid a government shutdown and to carry his fight for a border wall into 2019, when the House will be controlled by Democrats. Then he shot down the spending deal. So what happened? </p><p>Also, to cap off a chaotic day of breaking news, Jim Mattis resigned as secretary of defense. Guest: Jonathan Weisman, the deputy Washington editor of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Latest Showdown Over a Shutdown</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump seemed poised to avoid a government shutdown and to carry his fight for a border wall into 2019, when the House will be controlled by Democrats. Then he shot down the spending deal. So what happened? 

Also, to cap off a chaotic day of breaking news, Jim Mattis resigned as secretary of defense. Guest: Jonathan Weisman, the deputy Washington editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump seemed poised to avoid a government shutdown and to carry his fight for a border wall into 2019, when the House will be controlled by Democrats. Then he shot down the spending deal. So what happened? </p><p>Also, to cap off a chaotic day of breaking news, Jim Mattis resigned as secretary of defense. Guest: Jonathan Weisman, the deputy Washington editor of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g52SwJMAkG4kYhZ94zsjOWkVP28MvkFwiGhi4HNoUdQ</guid>
      <pubDate>Fri, 21 Dec 2018 10:50:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d4df4b8a-e939-4f3b-a4ad-43692c306670.mp3" type="audio/mpeg" length="23345946"/>
    </item>
    <item>
      <title>Senator Claire McCaskill on Losing Missouri and the Politics of Purity</title>
      <description>
        <![CDATA[<p>If any Democratic senator representing a red state was going to survive the midterm elections and continue serving in 2019, it was thought to be Claire McCaskill. But she lost. We spoke with her as her time in office was winding down. Guests: Senator Claire McCaskill, Democrat of Missouri, and Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </description>
      <itunes:title>Senator Claire McCaskill on Losing Missouri and the Politics of Purity</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>If any Democratic senator representing a red state was going to survive the midterm elections and continue serving in 2019, it was thought to be Claire McCaskill. But she lost. We spoke with her as her time in office was winding down. Guests: Senator Claire McCaskill, Democrat of Missouri, and Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>If any Democratic senator representing a red state was going to survive the midterm elections and continue serving in 2019, it was thought to be Claire McCaskill. But she lost. We spoke with her as her time in office was winding down. Guests: Senator Claire McCaskill, Democrat of Missouri, and Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g3GHEoJ0Q7N38dx0Y7zTjxSwtIuTBZ4O7mNs1HXfMNQ</guid>
      <pubDate>Thu, 20 Dec 2018 10:52:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/07f66da8-5524-4d06-b69e-6d0762fddb48.mp3" type="audio/mpeg" length="27047392"/>
    </item>
    <item>
      <title>The Ethics of Genetically Editing Babies</title>
      <description>
        <![CDATA[<p>Ever since scientists created the powerful gene-editing technique Crispr, they have braced for the day when it would be used to produce a genetically altered human being. Now, the moment they feared may have come. What’s likely to happen next? We also look at the latest updates on a possible government shutdown. Guests: Jennifer Senior, an Op-Ed columnist for The New York Times, and Carl Zimmer, a science columnist for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>What do you think about "The Daily"? Please fill out our listener survey at <a href="https://nyt.qualtrics.com/jfe/form/SV_ePR7Q0Q970oUWEJ?rref=vanity" target="_blank">nytimes.com/thedailysurvey</a>.</p>]]>
      </description>
      <itunes:title>The Ethics of Genetically Editing Babies</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Ever since scientists created the powerful gene-editing technique Crispr, they have braced for the day when it would be used to produce a genetically altered human being. Now, the moment they feared may have come. What’s likely to happen next? We also look at the latest updates on a possible government shutdown. Guests: Jennifer Senior, an Op-Ed columnist for The New York Times, and Carl Zimmer, a science columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 

What do you think about "The Daily"? Please fill out our listener survey at nytimes.com/thedailysurvey.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Ever since scientists created the powerful gene-editing technique Crispr, they have braced for the day when it would be used to produce a genetically altered human being. Now, the moment they feared may have come. What’s likely to happen next? We also look at the latest updates on a possible government shutdown. Guests: Jennifer Senior, an Op-Ed columnist for The New York Times, and Carl Zimmer, a science columnist for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>What do you think about "The Daily"? Please fill out our listener survey at <a href="https://nyt.qualtrics.com/jfe/form/SV_ePR7Q0Q970oUWEJ?rref=vanity" target="_blank">nytimes.com/thedailysurvey</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GA2E17AjKWnIWp_hqNcuP_guZBGnj_JgsA65dga64fM</guid>
      <pubDate>Wed, 19 Dec 2018 10:46:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/124be293-c547-450c-86ac-d956da4a353e.mp3" type="audio/mpeg" length="21745998"/>
    </item>
    <item>
      <title>A Year in the Russia Investigation</title>
      <description>
        <![CDATA[<p>At the start of 2018, the biggest threat to the Trump presidency was an investigation into his campaign’s ties to Russia. As the year draws to a close, it’s his hush payments to women. We look at what’s behind that change — and how the threat may change again next year. Guests: Mark Mazzetti and Michael S. Schmidt, New York Times reporters who have been covering the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Year in the Russia Investigation</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At the start of 2018, the biggest threat to the Trump presidency was an investigation into his campaign’s ties to Russia. As the year draws to a close, it’s his hush payments to women. We look at what’s behind that change — and how the threat may change again next year. Guests: Mark Mazzetti and Michael S. Schmidt, New York Times reporters who have been covering the special counsel investigation. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At the start of 2018, the biggest threat to the Trump presidency was an investigation into his campaign’s ties to Russia. As the year draws to a close, it’s his hush payments to women. We look at what’s behind that change — and how the threat may change again next year. Guests: Mark Mazzetti and Michael S. Schmidt, New York Times reporters who have been covering the special counsel investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Gncc3-wZJsxsVH9IipKUYmqzZYycOmFmJirdB6uRP_k</guid>
      <pubDate>Tue, 18 Dec 2018 10:49:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/48e9ddf4-4cb6-4978-9889-9361ef3088b9.mp3" type="audio/mpeg" length="17401312"/>
    </item>
    <item>
      <title>‘The Most Significant Campaign Contributions’ in U.S. History</title>
      <description>
        <![CDATA[<p>It was never clear what motivated Rod J. Rosenstein, the deputy attorney general, to hand the investigation of Michael D. Cohen, President Trump’s former lawyer, over to career prosecutors in New York rather than to the special counsel. With that investigation now implicating the president in serious campaign finance violations, we look at how fateful the decision may be. Guests: Neal Katyal, a lawyer who drafted the rules that govern special counsel investigations, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>‘The Most Significant Campaign Contributions’ in U.S. History</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>It was never clear what motivated Rod J. Rosenstein, the deputy attorney general, to hand the investigation of Michael D. Cohen, President Trump’s former lawyer, over to career prosecutors in New York rather than to the special counsel. With that investigation now implicating the president in serious campaign finance violations, we look at how fateful the decision may be. Guests: Neal Katyal, a lawyer who drafted the rules that govern special counsel investigations, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>It was never clear what motivated Rod J. Rosenstein, the deputy attorney general, to hand the investigation of Michael D. Cohen, President Trump’s former lawyer, over to career prosecutors in New York rather than to the special counsel. With that investigation now implicating the president in serious campaign finance violations, we look at how fateful the decision may be. Guests: Neal Katyal, a lawyer who drafted the rules that govern special counsel investigations, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/SdSw0NRDyEENCPlctmA0hv4H-Z06-r_1JcZU9JGMwuQ</guid>
      <pubDate>Mon, 17 Dec 2018 10:46:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/04f75998-6bc8-44d5-b62a-8e156ad736aa.mp3" type="audio/mpeg" length="20500897"/>
    </item>
    <item>
      <title>Undocumented and Working for Trump</title>
      <description>
        <![CDATA[<p>Last week, Victorina Morales came forward and said that for the last five years, she had been working as an undocumented immigrant at President Trump’s golf club in New Jersey. A couple of days ago, we visited her in her home with Miriam Jordan, the New York Times reporter who first broke the story. Guest: Victorina Morales, a former housekeeper at the Trump National Golf Club in Bedminster, N.J., and Miriam Jordan, who covers immigration for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Undocumented and Working for Trump</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Last week, Victorina Morales came forward and said that for the last five years, she had been working as an undocumented immigrant at President Trump’s golf club in New Jersey. A couple of days ago, we visited her in her home with Miriam Jordan, the New York Times reporter who first broke the story. Guest: Victorina Morales, a former housekeeper at the Trump National Golf Club in Bedminster, N.J., and Miriam Jordan, who covers immigration for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Last week, Victorina Morales came forward and said that for the last five years, she had been working as an undocumented immigrant at President Trump’s golf club in New Jersey. A couple of days ago, we visited her in her home with Miriam Jordan, the New York Times reporter who first broke the story. Guest: Victorina Morales, a former housekeeper at the Trump National Golf Club in Bedminster, N.J., and Miriam Jordan, who covers immigration for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/SwxRARgO86WT7CEiEYXIpwA2thl0ali6vdmK_eXD0QY</guid>
      <pubDate>Fri, 14 Dec 2018 10:54:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ce0f1eb0-ae13-4bd7-86a4-fd5ffc832d61.mp3" type="audio/mpeg" length="23236440"/>
    </item>
    <item>
      <title>The Rise of Right-Wing Extremism, and How U.S. Law Enforcement Ignored It</title>
      <description>
        <![CDATA[<p>Despite repeated warnings over the past two decades, federal law enforcement officials in the United States have ignored the threat of violence from far-right extremists. Now, they have no idea how to stop it. Guest: Janet Reitman, a contributing writer for The New York Times Magazine who is working on a book about the rise of the far right in post-9/11 America. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Rise of Right-Wing Extremism, and How U.S. Law Enforcement Ignored It</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Despite repeated warnings over the past two decades, federal law enforcement officials in the United States have ignored the threat of violence from far-right extremists. Now, they have no idea how to stop it. Guest: Janet Reitman, a contributing writer for The New York Times Magazine who is working on a book about the rise of the far right in post-9/11 America. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Despite repeated warnings over the past two decades, federal law enforcement officials in the United States have ignored the threat of violence from far-right extremists. Now, they have no idea how to stop it. Guest: Janet Reitman, a contributing writer for The New York Times Magazine who is working on a book about the rise of the far right in post-9/11 America. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aX_8bX5ZHebxp-iXo75HCXXD3SF0YRjuVKhW2KnbEBw</guid>
      <pubDate>Thu, 13 Dec 2018 10:46:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c68a0277-04db-45c9-9611-12b1383f9cf9.mp3" type="audio/mpeg" length="26486073"/>
    </item>
    <item>
      <title>Why Republicans Want a Criminal Justice Overhaul</title>
      <description>
        <![CDATA[<p>President Barack Obama came very close in 2015 to passing a bipartisan bill to rewrite prison and sentencing laws. Three years later, the same people who were responsible for stopping that bill may become responsible for passing a scaled-back version. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Republicans Want a Criminal Justice Overhaul</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Barack Obama came very close in 2015 to passing a bipartisan bill to rewrite prison and sentencing laws. Three years later, the same people who were responsible for stopping that bill may become responsible for passing a scaled-back version. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Barack Obama came very close in 2015 to passing a bipartisan bill to rewrite prison and sentencing laws. Three years later, the same people who were responsible for stopping that bill may become responsible for passing a scaled-back version. Guest: Nicholas Fandos, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/i8uVu-WNPfdrM0AdIjM_NQU5_CMy0zKroad4T7J5vys</guid>
      <pubDate>Wed, 12 Dec 2018 10:52:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/84c6b34a-11b4-47ff-b1e3-dbfcc5385162.mp3" type="audio/mpeg" length="21479758"/>
    </item>
    <item>
      <title>Waiting for Brexit</title>
      <description>
        <![CDATA[<p>In a humiliating last-minute move, Prime Minister Theresa May of Britain postponed a vote in Parliament on Tuesday on the terms of the country’s divorce from the European Union. We look at why Britain is so frustrated by Brexit even before Brexit has taken effect. Guests: Ellen Barry, the chief international correspondent for The New York Times, and Stephen Castle, a Times correspondent in London. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </description>
      <itunes:title>Waiting for Brexit</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a humiliating last-minute move, Prime Minister Theresa May of Britain postponed a vote in Parliament on Tuesday on the terms of the country’s divorce from the European Union. We look at why Britain is so frustrated by Brexit even before Brexit has taken effect. Guests: Ellen Barry, the chief international correspondent for The New York Times, and Stephen Castle, a Times correspondent in London. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a humiliating last-minute move, Prime Minister Theresa May of Britain postponed a vote in Parliament on Tuesday on the terms of the country’s divorce from the European Union. We look at why Britain is so frustrated by Brexit even before Brexit has taken effect. Guests: Ellen Barry, the chief international correspondent for The New York Times, and Stephen Castle, a Times correspondent in London. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/O6eXcXlUc7H018cXjWNybqFVPFUU6aP9PkPpzxzW77A</guid>
      <pubDate>Tue, 11 Dec 2018 10:55:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ed3259a9-0411-4996-8e03-61e95bc8991e.mp3" type="audio/mpeg" length="31686321"/>
    </item>
    <item>
      <title>The Business of Selling Your Location</title>
      <description>
        <![CDATA[<p>A New York Times investigation has found that the information being collected about us through apps on our smartphones is far more extensive than most of us imagine — or are aware we have consented to. Guests: Jennifer Valentino-DeVries, Natasha Singer and Michael H. Keller, reporters who cover technology for The Times; and Gabriel J.X. Dance, deputy investigations editor. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><em>A note about this episode: The Times identified a small number of people in the location data with their permission. It did not identify anyone else in the data. </em></p>]]>
      </description>
      <itunes:title>The Business of Selling Your Location</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A New York Times investigation has found that the information being collected about us through apps on our smartphones is far more extensive than most of us imagine — or are aware we have consented to. Guests: Jennifer Valentino-DeVries, Natasha Singer and Michael H. Keller, reporters who cover technology for The Times; and Gabriel J.X. Dance, deputy investigations editor. For more information on today’s episode, visit nytimes.com/thedaily.

A note about this episode: The Times identified a small number of people in the location data with their permission. It did not identify anyone else in the data. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A New York Times investigation has found that the information being collected about us through apps on our smartphones is far more extensive than most of us imagine — or are aware we have consented to. Guests: Jennifer Valentino-DeVries, Natasha Singer and Michael H. Keller, reporters who cover technology for The Times; and Gabriel J.X. Dance, deputy investigations editor. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><em>A note about this episode: The Times identified a small number of people in the location data with their permission. It did not identify anyone else in the data. </em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BrlSUytk1_2GAryuxUjpKUz8KEQ8bMRe_woIKBpW2us</guid>
      <pubDate>Mon, 10 Dec 2018 10:50:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4f87f227-39ae-4623-be33-869c97a76e59.mp3" type="audio/mpeg" length="21088548"/>
    </item>
    <item>
      <title>The Photo of the Yemeni Girl</title>
      <description>
        <![CDATA[<p>In the three years that Saudi Arabia, supported by the United States, has been at war with the Houthis in Yemen, very few journalists have been allowed into the country to document what’s happening there. The New York Times journalist Tyler Hicks is one. This is the story of how he came to take a photograph of Amal Hussain that drew international attention to the country’s plight. Guest: Tyler Hicks, a senior photographer for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Photo of the Yemeni Girl</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the three years that Saudi Arabia, supported by the United States, has been at war with the Houthis in Yemen, very few journalists have been allowed into the country to document what’s happening there. The New York Times journalist Tyler Hicks is one. This is the story of how he came to take a photograph of Amal Hussain that drew international attention to the country’s plight. Guest: Tyler Hicks, a senior photographer for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the three years that Saudi Arabia, supported by the United States, has been at war with the Houthis in Yemen, very few journalists have been allowed into the country to document what’s happening there. The New York Times journalist Tyler Hicks is one. This is the story of how he came to take a photograph of Amal Hussain that drew international attention to the country’s plight. Guest: Tyler Hicks, a senior photographer for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RHcxSODBWQgciLm0CzJM7ov342uj95mzFd4fSpbP8L4</guid>
      <pubDate>Fri, 07 Dec 2018 10:44:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/517b1b92-28f4-442d-b532-8827e52382b5.mp3" type="audio/mpeg" length="21981309"/>
    </item>
    <item>
      <title>Watering Down Democrats’ Power in Wisconsin</title>
      <description>
        <![CDATA[<p>Across the country, Democratic candidates for governor and attorney general won seats that had long been held by Republicans. But Republican-controlled legislatures in some states are resisting that transfer of power. Guest: Mitch Smith, who covers the Midwest for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Watering Down Democrats’ Power in Wisconsin</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Across the country, Democratic candidates for governor and attorney general won seats that had long been held by Republicans. But Republican-controlled legislatures in some states are resisting that transfer of power. Guest: Mitch Smith, who covers the Midwest for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Across the country, Democratic candidates for governor and attorney general won seats that had long been held by Republicans. But Republican-controlled legislatures in some states are resisting that transfer of power. Guest: Mitch Smith, who covers the Midwest for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9ZKeOAOqwmIODNocVokWHWTHB_dRLrlT7KNnqg7E2dM</guid>
      <pubDate>Thu, 06 Dec 2018 10:49:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c1cfe151-9c2b-4d90-aeb6-8d37a655996e.mp3" type="audio/mpeg" length="22122161"/>
    </item>
    <item>
      <title>What the West Got Wrong About China, Part 2</title>
      <description>
        <![CDATA[<p>When China first began experimenting with capitalism in the 1980s, the West was certain the experiment would fail. But two of its assumptions — that government controls stifle economic growth, and that the internet cannot be tamed — were quickly proven wrong.</p><p>Nearly 40 years later, China rivals the United States as a global superpower. Its continued success is challenging not just the West’s assumptions about China, but the West’s assumptions about itself. Guest: Philip P. Pan, the Asia editor for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What the West Got Wrong About China, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When China first began experimenting with capitalism in the 1980s, the West was certain the experiment would fail. But two of its assumptions — that government controls stifle economic growth, and that the internet cannot be tamed — were quickly proven wrong.

Nearly 40 years later, China rivals the United States as a global superpower. Its continued success is challenging not just the West’s assumptions about China, but the West’s assumptions about itself. Guest: Philip P. Pan, the Asia editor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When China first began experimenting with capitalism in the 1980s, the West was certain the experiment would fail. But two of its assumptions — that government controls stifle economic growth, and that the internet cannot be tamed — were quickly proven wrong.</p><p>Nearly 40 years later, China rivals the United States as a global superpower. Its continued success is challenging not just the West’s assumptions about China, but the West’s assumptions about itself. Guest: Philip P. Pan, the Asia editor for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/socce1ixHeaUOLDhKli3VubXT6XnhQOK6F5hOajJYV4</guid>
      <pubDate>Wed, 05 Dec 2018 10:54:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a6578ded-693b-43b3-9c0f-dcd636efde3c.mp3" type="audio/mpeg" length="22096248"/>
    </item>
    <item>
      <title>What the West Got Wrong About China, Part 1</title>
      <description>
        <![CDATA[<p>From the very beginning, the West was certain that China would not pull off its economic experiment. That certainty came from a set of assumptions about how societies function and political freedoms emerge. But those assumptions were wrong — and China became stronger than ever. Guest: Philip P. Pan, the Asia editor for The New York Times, spoke with us from Beijing. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What the West Got Wrong About China, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From the very beginning, the West was certain that China would not pull off its economic experiment. That certainty came from a set of assumptions about how societies function and political freedoms emerge. But those assumptions were wrong — and China became stronger than ever. Guest: Philip P. Pan, the Asia editor for The New York Times, spoke with us from Beijing. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>From the very beginning, the West was certain that China would not pull off its economic experiment. That certainty came from a set of assumptions about how societies function and political freedoms emerge. But those assumptions were wrong — and China became stronger than ever. Guest: Philip P. Pan, the Asia editor for The New York Times, spoke with us from Beijing. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aM_mTlXQKZolpLbIhorfV1BkIzUZdcvvaUim3Yz2EeA</guid>
      <pubDate>Tue, 04 Dec 2018 10:44:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2208fdcd-3f93-4279-9d77-811e3e1ac543.mp3" type="audio/mpeg" length="19715134"/>
    </item>
    <item>
      <title>The Legacy of George Bush</title>
      <description>
        <![CDATA[<p>George Bush rode the Reagan revolution to the White House, where he had one of the highest approval ratings of any president, and where he successfully oversaw the end of the Cold War. So why was he denied a second term? Guest: Peter Baker, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Legacy of George Bush</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>George Bush rode the Reagan revolution to the White House, where he had one of the highest approval ratings of any president, and where he successfully oversaw the end of the Cold War. So why was he denied a second term? Guest: Peter Baker, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>George Bush rode the Reagan revolution to the White House, where he had one of the highest approval ratings of any president, and where he successfully oversaw the end of the Cold War. So why was he denied a second term? Guest: Peter Baker, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Ku_HqLpPQRjHfja4MFEwnxmbYOZrfUN-jHX6np4-rvQ</guid>
      <pubDate>Mon, 03 Dec 2018 10:54:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a4dd8980-0109-4ef4-8d1c-23dffbe4db2f.mp3" type="audio/mpeg" length="27909224"/>
    </item>
    <item>
      <title>Why Michael Cohen Lied to Congress</title>
      <description>
        <![CDATA[<p>President Trump’s former lawyer has pleaded guilty to lying about Mr. Trump’s business ties to Russia and has agreed to cooperate with the special counsel investigation. It’s the second time this week that a subject of the inquiry has been charged with lying. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Michael Cohen Lied to Congress</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s former lawyer has pleaded guilty to lying about Mr. Trump’s business ties to Russia and has agreed to cooperate with the special counsel investigation. It’s the second time this week that a subject of the inquiry has been charged with lying. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump’s former lawyer has pleaded guilty to lying about Mr. Trump’s business ties to Russia and has agreed to cooperate with the special counsel investigation. It’s the second time this week that a subject of the inquiry has been charged with lying. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PwSUEoybJzTbSSOfncjpBlf2dhrJWJD-RkhI8c_5jYU</guid>
      <pubDate>Fri, 30 Nov 2018 10:50:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/72cb2f7e-36d0-4cba-b75a-52d5cd2ebce3.mp3" type="audio/mpeg" length="20050755"/>
    </item>
    <item>
      <title>Nancy Pelosi’s Last Fight</title>
      <description>
        <![CDATA[<p>Many newly elected Democrats in the House have voted to make Representative Nancy Pelosi the next speaker. But that doesn’t necessarily mean she has their support. Guests: Sheryl Gay Stolberg, who covers Congress for The New York Times, and Representative-elect Rashida Tlaib, Democrat of Michigan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Nancy Pelosi’s Last Fight</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Many newly elected Democrats in the House have voted to make Representative Nancy Pelosi the next speaker. But that doesn’t necessarily mean she has their support. Guests: Sheryl Gay Stolberg, who covers Congress for The New York Times, and Representative-elect Rashida Tlaib, Democrat of Michigan. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Many newly elected Democrats in the House have voted to make Representative Nancy Pelosi the next speaker. But that doesn’t necessarily mean she has their support. Guests: Sheryl Gay Stolberg, who covers Congress for The New York Times, and Representative-elect Rashida Tlaib, Democrat of Michigan. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/r6hf899-TXuhnCIJ5u49iDdWcOfVSMa4pgxPlWsRVfM</guid>
      <pubDate>Thu, 29 Nov 2018 10:51:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6ddea1f7-b194-4d57-900c-3f2daa0ff580.mp3" type="audio/mpeg" length="20136437"/>
    </item>
    <item>
      <title>What’s Going On With Paul Manafort?</title>
      <description>
        <![CDATA[<p>The special counsel’s office says that Paul Manafort, the president’s former campaign chairman, repeatedly lied to investigators, even after agreeing to cooperate in the Russia inquiry. Meanwhile, The Guardian is reporting that Mr. Manafort met with Julian Assange, the head of WikiLeaks, in 2016 — a meeting the special counsel seems to know nothing about. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What’s Going On With Paul Manafort?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The special counsel’s office says that Paul Manafort, the president’s former campaign chairman, repeatedly lied to investigators, even after agreeing to cooperate in the Russia inquiry. Meanwhile, The Guardian is reporting that Mr. Manafort met with Julian Assange, the head of WikiLeaks, in 2016 — a meeting the special counsel seems to know nothing about. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The special counsel’s office says that Paul Manafort, the president’s former campaign chairman, repeatedly lied to investigators, even after agreeing to cooperate in the Russia inquiry. Meanwhile, The Guardian is reporting that Mr. Manafort met with Julian Assange, the head of WikiLeaks, in 2016 — a meeting the special counsel seems to know nothing about. Guest: Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XRLLHVI2CMzZxkZImnsFb1ylRzX13XurBvKs8ApoSgs</guid>
      <pubDate>Wed, 28 Nov 2018 10:44:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:28</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/51edc744-51bd-4686-86c0-085b277bbdef.mp3" type="audio/mpeg" length="18694060"/>
    </item>
    <item>
      <title>The U.S. as a Place of Refuge</title>
      <description>
        <![CDATA[<p>As large groups of Central American migrants approach the U.S. border, the Trump administration is making it more difficult for them to apply for asylum. Is the president undermining the original concept of asylum, or is he restoring it?&nbsp; Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The U.S. as a Place of Refuge</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As large groups of Central American migrants approach the U.S. border, the Trump administration is making it more difficult for them to apply for asylum. Is the president undermining the original concept of asylum, or is he restoring it?  Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As large groups of Central American migrants approach the U.S. border, the Trump administration is making it more difficult for them to apply for asylum. Is the president undermining the original concept of asylum, or is he restoring it?&nbsp; Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QL-DbcTAztjv9muhbEFdSySqt4O07-4vZ83XlpZyZBo</guid>
      <pubDate>Tue, 27 Nov 2018 10:45:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f1f9c786-a511-44c2-b182-f059978d023d.mp3" type="audio/mpeg" length="24940878"/>
    </item>
    <item>
      <title>The Human Toll of Instant Delivery</title>
      <description>
        <![CDATA[<p>With the rise of online retailers like Amazon, consumers’ expectations about the speed of delivery have been transformed. A New York Times investigation examines the cost of that transformation. Guests: Jessica Silver-Greenberg, a business reporter for The Times; Tasha Murrell, a warehouse employee who shared her experience. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </description>
      <itunes:title>The Human Toll of Instant Delivery</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With the rise of online retailers like Amazon, consumers’ expectations about the speed of delivery have been transformed. A New York Times investigation examines the cost of that transformation. Guests: Jessica Silver-Greenberg, a business reporter for The Times; Tasha Murrell, a warehouse employee who shared her experience. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>With the rise of online retailers like Amazon, consumers’ expectations about the speed of delivery have been transformed. A New York Times investigation examines the cost of that transformation. Guests: Jessica Silver-Greenberg, a business reporter for The Times; Tasha Murrell, a warehouse employee who shared her experience. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/c3gRG-aNTQDv_a3G7rwuvYilM8y9SPulCaZa3DgP8Rw</guid>
      <pubDate>Mon, 26 Nov 2018 10:50:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fee93441-edb8-4236-8b03-ef2f503e5be6.mp3" type="audio/mpeg" length="27277688"/>
    </item>
    <item>
      <title>Deployed in the U.S., Just Waiting for the Caravan</title>
      <description>
        <![CDATA[<p>At nearly every turn, President Trump’s own generals tried to persuade him not to deploy active-duty troops to the United States border with Mexico. So what are 5,000 troops doing there? Guest: Helene Cooper, who covers the Pentagon for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Deployed in the U.S., Just Waiting for the Caravan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At nearly every turn, President Trump’s own generals tried to persuade him not to deploy active-duty troops to the United States border with Mexico. So what are 5,000 troops doing there? Guest: Helene Cooper, who covers the Pentagon for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At nearly every turn, President Trump’s own generals tried to persuade him not to deploy active-duty troops to the United States border with Mexico. So what are 5,000 troops doing there? Guest: Helene Cooper, who covers the Pentagon for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/nIowQLblTI4BEatHRbsmE3RiD5ZM4eGvhi0pQbB3MVs</guid>
      <pubDate>Wed, 21 Nov 2018 10:52:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8af2b3fc-adec-44d8-adb2-6cd9bc5d0499.mp3" type="audio/mpeg" length="19331448"/>
    </item>
    <item>
      <title>Why U.S. Bombs Are Falling in Yemen</title>
      <description>
        <![CDATA[<p>The killing of Jamal Khashoggi has renewed criticism of Saudi Arabia more broadly, including the kingdom’s role in the war in Yemen. It’s a war that has created what has been called the worst humanitarian crisis in the world — and one that the United States has backed from the beginning. Guest: Robert F. Worth, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why U.S. Bombs Are Falling in Yemen</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The killing of Jamal Khashoggi has renewed criticism of Saudi Arabia more broadly, including the kingdom’s role in the war in Yemen. It’s a war that has created what has been called the worst humanitarian crisis in the world — and one that the United States has backed from the beginning. Guest: Robert F. Worth, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The killing of Jamal Khashoggi has renewed criticism of Saudi Arabia more broadly, including the kingdom’s role in the war in Yemen. It’s a war that has created what has been called the worst humanitarian crisis in the world — and one that the United States has backed from the beginning. Guest: Robert F. Worth, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5cgTiNP6mfXgiLpub6YG8FQrUC55zOO3a-Og5JKqoY4</guid>
      <pubDate>Tue, 20 Nov 2018 10:55:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2431d10e-f4ae-4808-bd78-7d5be1224e31.mp3" type="audio/mpeg" length="25358419"/>
    </item>
    <item>
      <title>How El Chapo Ended Up in a Brooklyn Courtroom</title>
      <description>
        <![CDATA[<p>Nearly two years after being extradited from Mexico, Joaquín Guzmán Loera, the drug lord known as El Chapo, is finally facing trial in a United States court. Here’s why it took so long to get to this moment. Guest: Alan Feuer, who has been covering the trial for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>How El Chapo Ended Up in a Brooklyn Courtroom</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nearly two years after being extradited from Mexico, Joaquín Guzmán Loera, the drug lord known as El Chapo, is finally facing trial in a United States court. Here’s why it took so long to get to this moment. Guest: Alan Feuer, who has been covering the trial for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nearly two years after being extradited from Mexico, Joaquín Guzmán Loera, the drug lord known as El Chapo, is finally facing trial in a United States court. Here’s why it took so long to get to this moment. Guest: Alan Feuer, who has been covering the trial for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ftzIeSUqZ0BgV3ZnbHFYU-ofR6fhM1sZyX54uWr1THI</guid>
      <pubDate>Mon, 19 Nov 2018 10:48:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e96004cd-c984-465c-9cd9-2f99638e2af6.mp3" type="audio/mpeg" length="27753743"/>
    </item>
    <item>
      <title>What Facebook Knew and Tried to Hide</title>
      <description>
        <![CDATA[<p>The story of Facebook in the past few years has been that of a company slow to understand how powerful it has become. But an investigation by The New York Times finds that once Facebook’s leaders understood the problems they faced, they sought to conceal them. Guests: Nicholas Confessore and Sheera Frenkel, two of the reporters behind the investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What Facebook Knew and Tried to Hide</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The story of Facebook in the past few years has been that of a company slow to understand how powerful it has become. But an investigation by The New York Times finds that once Facebook’s leaders understood the problems they faced, they sought to conceal them. Guests: Nicholas Confessore and Sheera Frenkel, two of the reporters behind the investigation. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The story of Facebook in the past few years has been that of a company slow to understand how powerful it has become. But an investigation by The New York Times finds that once Facebook’s leaders understood the problems they faced, they sought to conceal them. Guests: Nicholas Confessore and Sheera Frenkel, two of the reporters behind the investigation. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/edb71IEHFMiwthkFK2Qw0YP0jhYk94EXrRm0LHAmnpY</guid>
      <pubDate>Fri, 16 Nov 2018 10:57:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c858bad3-e5ec-4850-b739-03e7538b1b41.mp3" type="audio/mpeg" length="26973413"/>
    </item>
    <item>
      <title>A Conversation With a Freshman Democrat</title>
      <description>
        <![CDATA[<p>Last week, we looked at the campaign of a candidate who embodied the Democratic strategy for winning the House. This week, she arrived in Washington. We spoke with Abigail Spanberger, a recently elected congresswoman from Virginia, about her first days in the Capitol and what it means to be a Democrat today. Guest: Representative-elect Abigail Spanberger, Democrat of Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Conversation With a Freshman Democrat</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Last week, we looked at the campaign of a candidate who embodied the Democratic strategy for winning the House. This week, she arrived in Washington. We spoke with Abigail Spanberger, a recently elected congresswoman from Virginia, about her first days in the Capitol and what it means to be a Democrat today. Guest: Representative-elect Abigail Spanberger, Democrat of Virginia. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Last week, we looked at the campaign of a candidate who embodied the Democratic strategy for winning the House. This week, she arrived in Washington. We spoke with Abigail Spanberger, a recently elected congresswoman from Virginia, about her first days in the Capitol and what it means to be a Democrat today. Guest: Representative-elect Abigail Spanberger, Democrat of Virginia. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VK0ou_J3_U02i9t3ipj0M0tVV8cE6DDu7dyCVsj1gvk</guid>
      <pubDate>Thu, 15 Nov 2018 10:57:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3317d636-f8ca-4665-a0ea-1486472487c1.mp3" type="audio/mpeg" length="22189035"/>
    </item>
    <item>
      <title>The Plan to Discredit the Florida Recount</title>
      <description>
        <![CDATA[<p>Republicans, seeking to secure the party’s majority and agenda in the Senate, are determined to delegitimize the statewide recount underway in Florida. We look at what Democrats have learned since the last time Republicans used that strategy. Guests: Maggie Haberman, a White House correspondent for The New York Times, and Jeremy W. Peters, who covers politics for The Times and is reporting on the recount from Tallahassee. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Plan to Discredit the Florida Recount</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans, seeking to secure the party’s majority and agenda in the Senate, are determined to delegitimize the statewide recount underway in Florida. We look at what Democrats have learned since the last time Republicans used that strategy. Guests: Maggie Haberman, a White House correspondent for The New York Times, and Jeremy W. Peters, who covers politics for The Times and is reporting on the recount from Tallahassee. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republicans, seeking to secure the party’s majority and agenda in the Senate, are determined to delegitimize the statewide recount underway in Florida. We look at what Democrats have learned since the last time Republicans used that strategy. Guests: Maggie Haberman, a White House correspondent for The New York Times, and Jeremy W. Peters, who covers politics for The Times and is reporting on the recount from Tallahassee. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QpCfyVSqo0NUs99m-Ilat4EnN-H9W5loBXjR5D-vWfU</guid>
      <pubDate>Wed, 14 Nov 2018 11:00:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c15a2c5d-9239-4196-94bf-d4e8ea911675.mp3" type="audio/mpeg" length="22122997"/>
    </item>
    <item>
      <title>Diplomacy and Deception From North Korea</title>
      <description>
        <![CDATA[<p>President Trump says the nuclear threat from North Korea is over. But new satellite images of hidden missile bases suggest that the situation has only worsened since his meeting with Kim Jong-un, the North Korean leader. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “<a href="https://www.penguinrandomhouse.com/books/547683/the-perfect-weapon-by-david-e-sanger/9780451497895/" target="_blank">The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Diplomacy and Deception From North Korea</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump says the nuclear threat from North Korea is over. But new satellite images of hidden missile bases suggest that the situation has only worsened since his meeting with Kim Jong-un, the North Korean leader. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump says the nuclear threat from North Korea is over. But new satellite images of hidden missile bases suggest that the situation has only worsened since his meeting with Kim Jong-un, the North Korean leader. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “<a href="https://www.penguinrandomhouse.com/books/547683/the-perfect-weapon-by-david-e-sanger/9780451497895/" target="_blank">The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KXduG8pX0LPlNwlmf8C005rtePvHae5GWuaw6-ERW4c</guid>
      <pubDate>Tue, 13 Nov 2018 10:56:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f39971d3-cb81-46c6-8e07-a5a927d8a2e1.mp3" type="audio/mpeg" length="21060963"/>
    </item>
    <item>
      <title>The California Wildfires</title>
      <description>
        <![CDATA[<p>One of the deadliest and most destructive wildfires in California history is raging in the north of the state, as two others burn simultaneously in the south. Devastating wildfires have already become the new normal for the state. We look at why this feels different. Guest: Kirk Johnson, a New York Times correspondent who covers the American West and is reporting from Paradise, Calif. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </description>
      <itunes:title>The California Wildfires</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>One of the deadliest and most destructive wildfires in California history is raging in the north of the state, as two others burn simultaneously in the south. Devastating wildfires have already become the new normal for the state. We look at why this feels different. Guest: Kirk Johnson, a New York Times correspondent who covers the American West and is reporting from Paradise, Calif. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>One of the deadliest and most destructive wildfires in California history is raging in the north of the state, as two others burn simultaneously in the south. Devastating wildfires have already become the new normal for the state. We look at why this feels different. Guest: Kirk Johnson, a New York Times correspondent who covers the American West and is reporting from Paradise, Calif. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode includes disturbing language.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VhS4I8FigZY38UBCBT2oL1195-LxNfpNHNcsy0ncTeU</guid>
      <pubDate>Mon, 12 Nov 2018 10:57:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e2b1de94-a86e-4562-a19f-f37e203fc86d.mp3" type="audio/mpeg" length="20110106"/>
    </item>
    <item>
      <title>How the Democrats Flipped the House</title>
      <description>
        <![CDATA[<p>In this year’s midterm elections, Democrats were battling for House seats in a range of districts. We look at how the party’s leaders came up with a winning strategy to use across vastly different places. Guest: Kate Zernike and Jonathan Martin, political reporters for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>How the Democrats Flipped the House</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In this year’s midterm elections, Democrats were battling for House seats in a range of districts. We look at how the party’s leaders came up with a winning strategy to use across vastly different places. Guest: Kate Zernike and Jonathan Martin, political reporters for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In this year’s midterm elections, Democrats were battling for House seats in a range of districts. We look at how the party’s leaders came up with a winning strategy to use across vastly different places. Guest: Kate Zernike and Jonathan Martin, political reporters for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2EgmTk8b2H9NdNLBm7j-omSH45QO-DD8AIxwYmAKas0</guid>
      <pubDate>Fri, 09 Nov 2018 11:06:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/27c61ab6-f31a-4067-9179-128b21199257.mp3" type="audio/mpeg" length="21838367"/>
    </item>
    <item>
      <title>Why Trump Is Firing Sessions Now</title>
      <description>
        <![CDATA[<p>After more than a year of mocking his attorney general, President Trump has forced Jeff Sessions to resign. The timing — only hours after the midterm elections — is not a coincidence. Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Trump Is Firing Sessions Now</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After more than a year of mocking his attorney general, President Trump has forced Jeff Sessions to resign. The timing — only hours after the midterm elections — is not a coincidence. Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After more than a year of mocking his attorney general, President Trump has forced Jeff Sessions to resign. The timing — only hours after the midterm elections — is not a coincidence. Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/N8qpUHoVXsNcTmUw8Nr3ygm_Sxvz1NIb-172--xv34M</guid>
      <pubDate>Thu, 08 Nov 2018 10:48:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fbe8ed8a-d6a9-436f-8e48-2e221277feeb.mp3" type="audio/mpeg" length="22121325"/>
    </item>
    <item>
      <title>What Happened in the Midterm Elections</title>
      <description>
        <![CDATA[<p>The results are in: Democrats gained control of the House, even as Republicans strengthened their hold in the Senate. What does this mean for the next two years? Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What Happened in the Midterm Elections</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The results are in: Democrats gained control of the House, even as Republicans strengthened their hold in the Senate. What does this mean for the next two years? Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The results are in: Democrats gained control of the House, even as Republicans strengthened their hold in the Senate. What does this mean for the next two years? Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g_1Wua89l9Dlxw1Q3HOhxIpV424HHw1fFnFnOcm0ljU</guid>
      <pubDate>Wed, 07 Nov 2018 10:57:57 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1aeb016d-3046-4aeb-8964-2c3420ec7979.mp3" type="audio/mpeg" length="20847386"/>
    </item>
    <item>
      <title>A Field Guide to Today’s Elections</title>
      <description>
        <![CDATA[<p>As the country heads to the polls, here are four themes and four races to watch. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Field Guide to Today’s Elections</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the country heads to the polls, here are four themes and four races to watch. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the country heads to the polls, here are four themes and four races to watch. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9Xh5PLRBVLCqP5sxhw3TNkgMIl7x7q-Wbx1eIj__yCc</guid>
      <pubDate>Tue, 06 Nov 2018 10:57:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5bbdfdd4-5d7f-46eb-9e26-060be1a9d95b.mp3" type="audio/mpeg" length="25727477"/>
    </item>
    <item>
      <title>White, Evangelical and Worried About Trump</title>
      <description>
        <![CDATA[<p>Two of the key groups that helped elect Donald J. Trump in 2016 were white women and evangelicals. Now, in the midterm elections, white women are turning away from the president and his party, while evangelicals are sticking with him. We look at what happens when you’re both. Guests: Annie Brown, a producer for “The Daily,” speaks with Tess Clarke, who tells us how evangelical Christianity informs her vote, and with Elizabeth Dias, who covers faith and politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>White, Evangelical and Worried About Trump</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two of the key groups that helped elect Donald J. Trump in 2016 were white women and evangelicals. Now, in the midterm elections, white women are turning away from the president and his party, while evangelicals are sticking with him. We look at what happens when you’re both. Guests: Annie Brown, a producer for “The Daily,” speaks with Tess Clarke, who tells us how evangelical Christianity informs her vote, and with Elizabeth Dias, who covers faith and politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Two of the key groups that helped elect Donald J. Trump in 2016 were white women and evangelicals. Now, in the midterm elections, white women are turning away from the president and his party, while evangelicals are sticking with him. We look at what happens when you’re both. Guests: Annie Brown, a producer for “The Daily,” speaks with Tess Clarke, who tells us how evangelical Christianity informs her vote, and with Elizabeth Dias, who covers faith and politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MprmY457ZsHz6fosWlwPiC-sOFX43rudJP3DeV6Iyv4</guid>
      <pubDate>Mon, 05 Nov 2018 10:50:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3e77e668-4e7e-4fec-9453-3c39059e8dc9.mp3" type="audio/mpeg" length="32881684"/>
    </item>
    <item>
      <title>The Problem With Polls</title>
      <description>
        <![CDATA[<p>Two years ago, news organizations including The New York Times were accused of having misled the country with voting projections. Here’s what we’re doing differently this time. Guest: Nate Cohn, who covers elections, polling and demographics for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Problem With Polls</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two years ago, news organizations including The New York Times were accused of having misled the country with voting projections. Here’s what we’re doing differently this time. Guest: Nate Cohn, who covers elections, polling and demographics for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Two years ago, news organizations including The New York Times were accused of having misled the country with voting projections. Here’s what we’re doing differently this time. Guest: Nate Cohn, who covers elections, polling and demographics for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/T-hwl1FNPn_6wMI1pCFU8iNw8deL6dYQCjQEgpwue5I</guid>
      <pubDate>Fri, 02 Nov 2018 09:55:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/135814d2-1ce4-41ca-805d-197ba96a48ac.mp3" type="audio/mpeg" length="25557368"/>
    </item>
    <item>
      <title>“I Am Not an Internet Troll”</title>
      <description>
        <![CDATA[<p>A Russian news organization with ties to the 2016 election interference operation started a website called USAReally. Its stated purpose was for Americans to get uncensored news about their own country — from Russia. We spoke to the man behind it. Guest Host: Kevin Roose, who writes about technology for The New York Times, talks to Alexander Malkevich, the founder of USAReally, and David E. Sanger, a national security correspondent for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>“I Am Not an Internet Troll”</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A Russian news organization with ties to the 2016 election interference operation started a website called USAReally. Its stated purpose was for Americans to get uncensored news about their own country — from Russia. We spoke to the man behind it. Guest Host: Kevin Roose, who writes about technology for The New York Times, talks to Alexander Malkevich, the founder of USAReally, and David E. Sanger, a national security correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A Russian news organization with ties to the 2016 election interference operation started a website called USAReally. Its stated purpose was for Americans to get uncensored news about their own country — from Russia. We spoke to the man behind it. Guest Host: Kevin Roose, who writes about technology for The New York Times, talks to Alexander Malkevich, the founder of USAReally, and David E. Sanger, a national security correspondent for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/q65nfcnQnBRwO5WFcxwCkIJgl1SrDB7XEhRpw3bF9gw</guid>
      <pubDate>Thu, 01 Nov 2018 09:51:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0ffc6393-48b7-47e5-be93-131a7f91ef9f.mp3" type="audio/mpeg" length="21150406"/>
    </item>
    <item>
      <title>The Business of Internet Outrage</title>
      <description>
        <![CDATA[<p>At the height of its reach, the right-wing website Mad World News was getting millions of views. We talked to its founders about how they hit upon the formula that made it so successful — and why it suddenly stopped working. Guest Host: Kevin Roose, who writes about technology for The New York Times, reported this story for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Business of Internet Outrage</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At the height of its reach, the right-wing website Mad World News was getting millions of views. We talked to its founders about how they hit upon the formula that made it so successful — and why it suddenly stopped working. Guest Host: Kevin Roose, who writes about technology for The New York Times, reported this story for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At the height of its reach, the right-wing website Mad World News was getting millions of views. We talked to its founders about how they hit upon the formula that made it so successful — and why it suddenly stopped working. Guest Host: Kevin Roose, who writes about technology for The New York Times, reported this story for “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8_lZtJwRtGP_POEfRHBarYIkZISXR28xLWQp043igNc</guid>
      <pubDate>Wed, 31 Oct 2018 09:54:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cfaeb17c-963f-46bd-a4c1-b4d35fb52683.mp3" type="audio/mpeg" length="24766589"/>
    </item>
    <item>
      <title>The Re-emergence of American Anti-Semitism</title>
      <description>
        <![CDATA[<p>Until recently, many American Jews believed that anti-Semitism was a European problem, one the United States had left behind. But the attack in Pittsburgh did not come out of nowhere. Guest: Jonathan Weisman, the deputy Washington editor of The New York Times and author of “<a href="https://us.macmillan.com/books/9781250169938" target="_blank">(((Semitism))): Being Jewish in America in the Age of Trump</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Re-emergence of American Anti-Semitism</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Until recently, many American Jews believed that anti-Semitism was a European problem, one the United States had left behind. But the attack in Pittsburgh did not come out of nowhere. Guest: Jonathan Weisman, the deputy Washington editor of The New York Times and author of “(((Semitism))): Being Jewish in America in the Age of Trump.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Until recently, many American Jews believed that anti-Semitism was a European problem, one the United States had left behind. But the attack in Pittsburgh did not come out of nowhere. Guest: Jonathan Weisman, the deputy Washington editor of The New York Times and author of “<a href="https://us.macmillan.com/books/9781250169938" target="_blank">(((Semitism))): Being Jewish in America in the Age of Trump</a>.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9Xo-KlzHgvqNa_PF6v3JuiNtZtetia4HvI54xDbcfiY</guid>
      <pubDate>Tue, 30 Oct 2018 09:54:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f9ee0566-b617-4a73-b9ab-35f9da19c82f.mp3" type="audio/mpeg" length="27472039"/>
    </item>
    <item>
      <title>A Shooting at the Tree of Life Synagogue</title>
      <description>
        <![CDATA[<p>The massacre in Pittsburgh was one of the worst attacks against the Jewish community in the United States in decades. The city’s mayor called it “the darkest day of Pittsburgh’s history.” Guests: Kevin Roose, who writes about technology for The New York Times, and Campbell Robertson, a national correspondent for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Shooting at the Tree of Life Synagogue</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The massacre in Pittsburgh was one of the worst attacks against the Jewish community in the United States in decades. The city’s mayor called it “the darkest day of Pittsburgh’s history.” Guests: Kevin Roose, who writes about technology for The New York Times, and Campbell Robertson, a national correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The massacre in Pittsburgh was one of the worst attacks against the Jewish community in the United States in decades. The city’s mayor called it “the darkest day of Pittsburgh’s history.” Guests: Kevin Roose, who writes about technology for The New York Times, and Campbell Robertson, a national correspondent for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/deMV9CBy2kAC91WGIVZeMaCvyvEsU6t-TEm-Uj_kBIQ</guid>
      <pubDate>Mon, 29 Oct 2018 09:50:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5d7a3955-a1fe-4d99-86d2-6385ce7ea969.mp3" type="audio/mpeg" length="21868042"/>
    </item>
    <item>
      <title>The Voters Both Parties Are Ignoring</title>
      <description>
        <![CDATA[<p>Nearly 30 million Latinos in the United States are eligible to vote, representing almost 13 percent of the American electorate. Why is so little attention being paid to them in the midterm elections? Guest: Jose A. Del Real, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Voters Both Parties Are Ignoring</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nearly 30 million Latinos in the United States are eligible to vote, representing almost 13 percent of the American electorate. Why is so little attention being paid to them in the midterm elections? Guest: Jose A. Del Real, a national correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nearly 30 million Latinos in the United States are eligible to vote, representing almost 13 percent of the American electorate. Why is so little attention being paid to them in the midterm elections? Guest: Jose A. Del Real, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/eKi3j-0JHlJisjEI6McQAIYLK8kxFaIV2fX2OnH7QGA</guid>
      <pubDate>Fri, 26 Oct 2018 09:59:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/28e41612-ef2b-4164-bd77-559efe5306b7.mp3" type="audio/mpeg" length="23618455"/>
    </item>
    <item>
      <title>How 1994 Gave Us Today’s Politics</title>
      <description>
        <![CDATA[<p>To understand the divisions that define this year’s midterm elections, you have to go back to the midterm elections of 1994. We look at the moment when exploiting differences of opinion became a winning political strategy. Guests: Jennifer Senior, an Opinion columnist for The New York Times, speaks to Vin Weber, a former Republican congressman from Minnesota. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>How 1994 Gave Us Today’s Politics</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>To understand the divisions that define this year’s midterm elections, you have to go back to the midterm elections of 1994. We look at the moment when exploiting differences of opinion became a winning political strategy. Guests: Jennifer Senior, an Opinion columnist for The New York Times, speaks to Vin Weber, a former Republican congressman from Minnesota. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>To understand the divisions that define this year’s midterm elections, you have to go back to the midterm elections of 1994. We look at the moment when exploiting differences of opinion became a winning political strategy. Guests: Jennifer Senior, an Opinion columnist for The New York Times, speaks to Vin Weber, a former Republican congressman from Minnesota. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g9QRE4S48l4suKKUCKdh-mhwHGcWbaDdNLa27nz3l10</guid>
      <pubDate>Thu, 25 Oct 2018 09:53:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/18f66e92-8f03-4df4-93bd-fcdf8458bb2e.mp3" type="audio/mpeg" length="20762958"/>
    </item>
    <item>
      <title>The Migrant Caravan and the Midterms</title>
      <description>
        <![CDATA[<p>Thousands of Central American migrants are moving north through Mexico, heading for the U.S. border. Republicans won’t stop talking about it, and Democrats are trying not to. Guest: Annie Correal, a New York Times reporter who spoke to us from Huixtla, Mexico. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Migrant Caravan and the Midterms</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Thousands of Central American migrants are moving north through Mexico, heading for the U.S. border. Republicans won’t stop talking about it, and Democrats are trying not to. Guest: Annie Correal, a New York Times reporter who spoke to us from Huixtla, Mexico. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Thousands of Central American migrants are moving north through Mexico, heading for the U.S. border. Republicans won’t stop talking about it, and Democrats are trying not to. Guest: Annie Correal, a New York Times reporter who spoke to us from Huixtla, Mexico. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DutQidc21Ilvua2M8sahMiLjJN4hn983l7T8blvpIks</guid>
      <pubDate>Wed, 24 Oct 2018 09:54:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/da26c605-c5e8-405a-8919-48ae148f7c6a.mp3" type="audio/mpeg" length="24349884"/>
    </item>
    <item>
      <title>Why Trump Can’t Quit Mohammed bin Salman</title>
      <description>
        <![CDATA[<p>From the moment he was named the country’s day-to-day leader, the crown prince of Saudi Arabia has disappointed the United States over and over again. Yet the Trump White House hasn’t let go of him. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Why Trump Can’t Quit Mohammed bin Salman</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From the moment he was named the country’s day-to-day leader, the crown prince of Saudi Arabia has disappointed the United States over and over again. Yet the Trump White House hasn’t let go of him. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>From the moment he was named the country’s day-to-day leader, the crown prince of Saudi Arabia has disappointed the United States over and over again. Yet the Trump White House hasn’t let go of him. Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5EOyEn3wH_9KJB8VS8wlZ1WqG16nKZ1PDvl5ETT_O6w</guid>
      <pubDate>Tue, 23 Oct 2018 09:48:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/37cc8e96-e7a7-40f1-b19a-b2fdd5ee11d7.mp3" type="audio/mpeg" length="25531872"/>
    </item>
    <item>
      <title>Who’s Allowed to Vote in Georgia?</title>
      <description>
        <![CDATA[<p>One candidate made a name for herself trying to register voters. Another rose to prominence trying to purge them from the rolls. We look at how one of the most closely watched governor’s races in the country became a battle over whose vote counts. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Who’s Allowed to Vote in Georgia?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>One candidate made a name for herself trying to register voters. Another rose to prominence trying to purge them from the rolls. We look at how one of the most closely watched governor’s races in the country became a battle over whose vote counts. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>One candidate made a name for herself trying to register voters. Another rose to prominence trying to purge them from the rolls. We look at how one of the most closely watched governor’s races in the country became a battle over whose vote counts. Guest: Astead W. Herndon, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/satIowX4aoZOvWGR1Djl3aLXY90lTFsvicZIW48247M</guid>
      <pubDate>Mon, 22 Oct 2018 09:50:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0eb5f5f9-a578-4cfb-a436-77061e952c6c.mp3" type="audio/mpeg" length="23332153"/>
    </item>
    <item>
      <title>A New Climate Tipping Point</title>
      <description>
        <![CDATA[<p>Last week, a long-awaited report showed that the worst consequences of global warming would occur even sooner than previously thought. Here’s the story behind the findings. Guests: Coral Davenport, who covers energy and the environment for The New York Times, and William D. Nordhaus, who was awarded a Nobel this year for his work on the economics of climate change. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A New Climate Tipping Point</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Last week, a long-awaited report showed that the worst consequences of global warming would occur even sooner than previously thought. Here’s the story behind the findings. Guests: Coral Davenport, who covers energy and the environment for The New York Times, and William D. Nordhaus, who was awarded a Nobel this year for his work on the economics of climate change. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Last week, a long-awaited report showed that the worst consequences of global warming would occur even sooner than previously thought. Here’s the story behind the findings. Guests: Coral Davenport, who covers energy and the environment for The New York Times, and William D. Nordhaus, who was awarded a Nobel this year for his work on the economics of climate change. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5AmD3d3uDOdM-5TvW58n9DPihjFFvTkBMuZCRGvD_-A</guid>
      <pubDate>Fri, 19 Oct 2018 09:54:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/66454f64-2cb1-4245-af90-bc40efb2d173.mp3" type="audio/mpeg" length="27383431"/>
    </item>
    <item>
      <title>Letting Louis C.K. Back Onstage</title>
      <description>
        <![CDATA[<p>Nine months after admitting to sexual misconduct with multiple women, Louis C.K. dropped into a New York City comedy club unannounced and tried to make a comeback. And then he returned, again and again. We talk to the club owner who gave him that stage. Guest: Noam Dworman, the owner of the Comedy Cellar. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Letting Louis C.K. Back Onstage</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nine months after admitting to sexual misconduct with multiple women, Louis C.K. dropped into a New York City comedy club unannounced and tried to make a comeback. And then he returned, again and again. We talk to the club owner who gave him that stage. Guest: Noam Dworman, the owner of the Comedy Cellar. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nine months after admitting to sexual misconduct with multiple women, Louis C.K. dropped into a New York City comedy club unannounced and tried to make a comeback. And then he returned, again and again. We talk to the club owner who gave him that stage. Guest: Noam Dworman, the owner of the Comedy Cellar. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6nxz9w6gXiB8770qmTwZVpoTgOrrLQ5Uv_2OInMDXfo</guid>
      <pubDate>Thu, 18 Oct 2018 10:02:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/796dc5ac-b2ae-4587-983a-8be9debc28a8.mp3" type="audio/mpeg" length="27537658"/>
    </item>
    <item>
      <title>The Battle for Missouri, Part 2: The Moderate</title>
      <description>
        <![CDATA[<p>When Democrats lost almost every race in Missouri in 2016, their party decided it needed to do something drastic. But the path they chose may have created an entirely new problem. Guest: Sabrina Tavernise, a national correspondent who reported this story for The New York Times and “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Battle for Missouri, Part 2: The Moderate</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When Democrats lost almost every race in Missouri in 2016, their party decided it needed to do something drastic. But the path they chose may have created an entirely new problem. Guest: Sabrina Tavernise, a national correspondent who reported this story for The New York Times and “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When Democrats lost almost every race in Missouri in 2016, their party decided it needed to do something drastic. But the path they chose may have created an entirely new problem. Guest: Sabrina Tavernise, a national correspondent who reported this story for The New York Times and “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6YtkzPff_GknOR7gZx3I4WKhDpZ5i6Ho0XnQaNuElrc</guid>
      <pubDate>Wed, 17 Oct 2018 09:53:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ce3bfc9b-92b3-4d7e-9eb1-bf99c4b960c1.mp3" type="audio/mpeg" length="18409012"/>
    </item>
    <item>
      <title>The Battle for Missouri, Part 1: The Anti-Abortion Democrat</title>
      <description>
        <![CDATA[<p>Weeks before the midterm elections, moderate and progressive Democrats in Missouri are grappling with what the party stands for and who gets to define it. What happens will determine the fate of one of the most endangered Democratic senators in the country. Guest Host: Sabrina Tavernise, a national correspondent who reported this story for The New York Times and “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Battle for Missouri, Part 1: The Anti-Abortion Democrat</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Weeks before the midterm elections, moderate and progressive Democrats in Missouri are grappling with what the party stands for and who gets to define it. What happens will determine the fate of one of the most endangered Democratic senators in the country. Guest Host: Sabrina Tavernise, a national correspondent who reported this story for The New York Times and “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Weeks before the midterm elections, moderate and progressive Democrats in Missouri are grappling with what the party stands for and who gets to define it. What happens will determine the fate of one of the most endangered Democratic senators in the country. Guest Host: Sabrina Tavernise, a national correspondent who reported this story for The New York Times and “The Daily.” For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/EA1OQ9ifuUl_Cb9KKaMdxrGxCkRpgCNaANKiLNkk0lo</guid>
      <pubDate>Tue, 16 Oct 2018 09:49:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5a1d613c-8532-4e8c-88e6-ecc4e11edaff.mp3" type="audio/mpeg" length="20841952"/>
    </item>
    <item>
      <title>The State of the Midterms (and the Country)</title>
      <description>
        <![CDATA[<p>As the Democrats fight to reclaim control of Congress, the House seems to be headed in one direction, the Senate in the other. With three weeks to go until Election Day, we look at the state of the 2018 midterms. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The State of the Midterms (and the Country)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the Democrats fight to reclaim control of Congress, the House seems to be headed in one direction, the Senate in the other. With three weeks to go until Election Day, we look at the state of the 2018 midterms. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the Democrats fight to reclaim control of Congress, the House seems to be headed in one direction, the Senate in the other. With three weeks to go until Election Day, we look at the state of the 2018 midterms. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Khq_zC9onDTpy9R7AOJrTL1SA-uqlo-r0ZvWuADxPGg</guid>
      <pubDate>Mon, 15 Oct 2018 09:48:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ae64f7b8-5049-41af-9930-0fe0fa4437fe.mp3" type="audio/mpeg" length="24084897"/>
    </item>
    <item>
      <title>The Police Shooting That Rocked Chicago</title>
      <description>
        <![CDATA[<p>On the night of Oct. 20, 2014, a white police officer shot a black teenager 16 times. It took nearly four years for the case to make it to trial. It took less than eight hours for the jury to reach a verdict. Guest: Monica Davey, the Chicago bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Police Shooting That Rocked Chicago</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On the night of Oct. 20, 2014, a white police officer shot a black teenager 16 times. It took nearly four years for the case to make it to trial. It took less than eight hours for the jury to reach a verdict. Guest: Monica Davey, the Chicago bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>On the night of Oct. 20, 2014, a white police officer shot a black teenager 16 times. It took nearly four years for the case to make it to trial. It took less than eight hours for the jury to reach a verdict. Guest: Monica Davey, the Chicago bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/86NAY6wUsEnzsmU59AaYwjGtsRuGiRDrr-Hmvg3LFl8</guid>
      <pubDate>Fri, 12 Oct 2018 09:54:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/71a07ec0-0a37-4074-8107-da03bee346ab.mp3" type="audio/mpeg" length="21374850"/>
    </item>
    <item>
      <title>The Disappearance of a Saudi Journalist</title>
      <description>
        <![CDATA[<p>Saudi Arabia’s crown prince has promoted himself to the West as a reformer determined to create a more free and open society. That image is unraveling as a prominent Saudi journalist and dissident remains missing. Guest: Carlotta Gall, the Istanbul bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Disappearance of a Saudi Journalist</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Saudi Arabia’s crown prince has promoted himself to the West as a reformer determined to create a more free and open society. That image is unraveling as a prominent Saudi journalist and dissident remains missing. Guest: Carlotta Gall, the Istanbul bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Saudi Arabia’s crown prince has promoted himself to the West as a reformer determined to create a more free and open society. That image is unraveling as a prominent Saudi journalist and dissident remains missing. Guest: Carlotta Gall, the Istanbul bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2HKvu6fcFtIHRmxfeT9tYPNodzss2czfj8aEEK9hApI</guid>
      <pubDate>Thu, 11 Oct 2018 09:49:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/40e4df3a-b140-4e11-9756-607e7f5a7239.mp3" type="audio/mpeg" length="20270184"/>
    </item>
    <item>
      <title>Who Is Believed and Who Is Blamed?</title>
      <description>
        <![CDATA[<p>Across the country, the confirmation of Justice Brett M. Kavanaugh has set off a highly personal debate among women about credibility and culpability. We sit in on two of those conversations. Guests: A group of teenagers in Brooklyn, who shared with us their reactions to the accusations against Justice Kavanaugh; and the reporters Susan Chira and Ellen Ann Fentress, who spoke to Lovetta Green and Crystal Walls, two friends in Mississippi with very different political views. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Who Is Believed and Who Is Blamed?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Across the country, the confirmation of Justice Brett M. Kavanaugh has set off a highly personal debate among women about credibility and culpability. We sit in on two of those conversations. Guests: A group of teenagers in Brooklyn, who shared with us their reactions to the accusations against Justice Kavanaugh; and the reporters Susan Chira and Ellen Ann Fentress, who spoke to Lovetta Green and Crystal Walls, two friends in Mississippi with very different political views. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Across the country, the confirmation of Justice Brett M. Kavanaugh has set off a highly personal debate among women about credibility and culpability. We sit in on two of those conversations. Guests: A group of teenagers in Brooklyn, who shared with us their reactions to the accusations against Justice Kavanaugh; and the reporters Susan Chira and Ellen Ann Fentress, who spoke to Lovetta Green and Crystal Walls, two friends in Mississippi with very different political views. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7a2ihQUHJs9BCt_2k-TprHYCv1b9T4gybEJ5N9ssS9o</guid>
      <pubDate>Wed, 10 Oct 2018 09:53:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e2f08456-cf80-4942-8fc9-eb6867ef9d75.mp3" type="audio/mpeg" length="22449423"/>
    </item>
    <item>
      <title>The Dilemma for Red-State Democrats</title>
      <description>
        <![CDATA[<p>Democratic senators in states that President Trump won had concluded that their best path to re-election was to campaign on local issues. Then came the confirmation fight over Justice Brett M. Kavanaugh. Guest: Jonathan Martin, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Dilemma for Red-State Democrats</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Democratic senators in states that President Trump won had concluded that their best path to re-election was to campaign on local issues. Then came the confirmation fight over Justice Brett M. Kavanaugh. Guest: Jonathan Martin, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Democratic senators in states that President Trump won had concluded that their best path to re-election was to campaign on local issues. Then came the confirmation fight over Justice Brett M. Kavanaugh. Guest: Jonathan Martin, who covers national politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/58TR0KgYcN-ipHBGmdnj6C10zJdI_LnSxUa0mvaEzA8</guid>
      <pubDate>Tue, 09 Oct 2018 09:51:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/80643493-c882-4b4c-a83f-4f156ffdd545.mp3" type="audio/mpeg" length="21456352"/>
    </item>
    <item>
      <title>A Supreme Court With Justice Kavanaugh</title>
      <description>
        <![CDATA[<p>Judge Kavanaugh is now Justice Kavanaugh. We look at what the last few weeks mean for the future of the Supreme Court. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Supreme Court With Justice Kavanaugh</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Judge Kavanaugh is now Justice Kavanaugh. We look at what the last few weeks mean for the future of the Supreme Court. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Judge Kavanaugh is now Justice Kavanaugh. We look at what the last few weeks mean for the future of the Supreme Court. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DSxLTOP8tuw6iUdj02goYYfHPiKOokD0rt4qq7kJD7M</guid>
      <pubDate>Mon, 08 Oct 2018 09:51:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b7b99437-9002-48ee-a13d-e441f197659c.mp3" type="audio/mpeg" length="21359804"/>
    </item>
    <item>
      <title>What the F.B.I. Found (and Didn’t Find)</title>
      <description>
        <![CDATA[<p>The agency has delivered its report on Judge Brett M. Kavanaugh to the Senate. Republicans say it reveals nothing new — but Democrats say it was specifically designed to reveal nothing new. Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>What the F.B.I. Found (and Didn’t Find)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The agency has delivered its report on Judge Brett M. Kavanaugh to the Senate. Republicans say it reveals nothing new — but Democrats say it was specifically designed to reveal nothing new. Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The agency has delivered its report on Judge Brett M. Kavanaugh to the Senate. Republicans say it reveals nothing new — but Democrats say it was specifically designed to reveal nothing new. Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/n5QbhvnV8ChiCdplHbrL15dbvV2g-glAjQRyvXkAcqM</guid>
      <pubDate>Fri, 05 Oct 2018 09:51:44 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/172361cd-044c-4d1b-9cca-c06f7323ad22.mp3" type="audio/mpeg" length="22151418"/>
    </item>
    <item>
      <title>The F.B.I.’s Kavanaugh Investigation</title>
      <description>
        <![CDATA[<p>As the F.B.I. shares the results of its investigation into Judge Brett M. Kavanaugh with the Senate, we look at what the scope of the inquiry may mean for his confirmation vote — and why Republicans are changing the way they talk about his accuser. Guests: Michael D. Shear and Peter Baker, who both cover the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The F.B.I.’s Kavanaugh Investigation</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the F.B.I. shares the results of its investigation into Judge Brett M. Kavanaugh with the Senate, we look at what the scope of the inquiry may mean for his confirmation vote — and why Republicans are changing the way they talk about his accuser. Guests: Michael D. Shear and Peter Baker, who both cover the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the F.B.I. shares the results of its investigation into Judge Brett M. Kavanaugh with the Senate, we look at what the scope of the inquiry may mean for his confirmation vote — and why Republicans are changing the way they talk about his accuser. Guests: Michael D. Shear and Peter Baker, who both cover the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/nuYhvC0OEGGP0eMlV7mgDKBJlYX-G8gJd4UQK5lDnps</guid>
      <pubDate>Thu, 04 Oct 2018 09:52:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c1f8a5a6-acf4-4b5c-9a03-5a9a23ba3a96.mp3" type="audio/mpeg" length="21377776"/>
    </item>
    <item>
      <title>How Trump Really Got Rich</title>
      <description>
        <![CDATA[<p>President Trump has long sold himself as a self-made billionaire. But after spending a year studying tens of thousands of pages of confidential records, our New York Times colleagues uncovered new details about the president’s financial history. Here’s what they found.</p>]]>
      </description>
      <itunes:title>How Trump Really Got Rich</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has long sold himself as a self-made billionaire. But after spending a year studying tens of thousands of pages of confidential records, our New York Times colleagues uncovered new details about the president’s financial history. Here’s what they found.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has long sold himself as a self-made billionaire. But after spending a year studying tens of thousands of pages of confidential records, our New York Times colleagues uncovered new details about the president’s financial history. Here’s what they found.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2ktM6uY8Jp9fddBzXNB_mZF7ZsdLPlCXnLn1apsC2sA</guid>
      <pubDate>Wed, 03 Oct 2018 09:59:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/90a1e06d-d974-493a-b7d6-cf3b2dc4c8bb.mp3" type="audio/mpeg" length="28726334"/>
    </item>
    <item>
      <title>Kavanaugh’s Classmates Speak Out</title>
      <description>
        <![CDATA[<p>The F.B.I. investigation into Judge Brett Kavanaugh is underway. More of his former classmates are now coming forward with personal stories — but it’s unclear whether the inquiry will take those stories into account. Guests: Kate Kelly, a New York Times reporter who attended an all-girls private high school in Washington, and Robin Pogrebin, a Times reporter who was Judge Kavanaugh’s classmate at Yale. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Kavanaugh’s Classmates Speak Out</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The F.B.I. investigation into Judge Brett Kavanaugh is underway. More of his former classmates are now coming forward with personal stories — but it’s unclear whether the inquiry will take those stories into account. Guests: Kate Kelly, a New York Times reporter who attended an all-girls private high school in Washington, and Robin Pogrebin, a Times reporter who was Judge Kavanaugh’s classmate at Yale. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The F.B.I. investigation into Judge Brett Kavanaugh is underway. More of his former classmates are now coming forward with personal stories — but it’s unclear whether the inquiry will take those stories into account. Guests: Kate Kelly, a New York Times reporter who attended an all-girls private high school in Washington, and Robin Pogrebin, a Times reporter who was Judge Kavanaugh’s classmate at Yale. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VTt7KSfg78AKbfwSv4DWViDZbbqsYL8J5tDJPEk2AAg</guid>
      <pubDate>Tue, 02 Oct 2018 09:52:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6fc1df3b-3e9e-490f-a23f-d2b6b324d28c.mp3" type="audio/mpeg" length="25018200"/>
    </item>
    <item>
      <title>The Anguish of Jeff Flake</title>
      <description>
        <![CDATA[<p>Senator Jeff Flake’s last-minute demand for an F.B.I. investigation into Judge Brett M. Kavanaugh has single-handedly held up the confirmation vote for the Supreme Court nominee. Here’s the story behind that decision. Guest: Michael D. Shear, who covers the White House for The New York Times, and Ana Maria Archila, one of the protesters who spoke to Mr. Flake on his way to the Senate Judiciary Committee meeting on Friday. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Anguish of Jeff Flake</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Senator Jeff Flake’s last-minute demand for an F.B.I. investigation into Judge Brett M. Kavanaugh has single-handedly held up the confirmation vote for the Supreme Court nominee. Here’s the story behind that decision. Guest: Michael D. Shear, who covers the White House for The New York Times, and Ana Maria Archila, one of the protesters who spoke to Mr. Flake on his way to the Senate Judiciary Committee meeting on Friday. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Senator Jeff Flake’s last-minute demand for an F.B.I. investigation into Judge Brett M. Kavanaugh has single-handedly held up the confirmation vote for the Supreme Court nominee. Here’s the story behind that decision. Guest: Michael D. Shear, who covers the White House for The New York Times, and Ana Maria Archila, one of the protesters who spoke to Mr. Flake on his way to the Senate Judiciary Committee meeting on Friday. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/H2odRYJy8coFbqjcTT18hpqHp1lXYYre2FVJjn6IUNo</guid>
      <pubDate>Mon, 01 Oct 2018 09:54:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/94358963-3d47-4e72-8b2f-0cd860da6da8.mp3" type="audio/mpeg" length="30379363"/>
    </item>
    <item>
      <title>The Blasey-Kavanaugh Hearing</title>
      <description>
        <![CDATA[<p>She gave a raw, reluctant account of sexual assault. He gave an angry, outraged denial. And once again, the United States Senate must take a side. Guest: Kate Zernike, who covers politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Blasey-Kavanaugh Hearing</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>She gave a raw, reluctant account of sexual assault. He gave an angry, outraged denial. And once again, the United States Senate must take a side. Guest: Kate Zernike, who covers politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>She gave a raw, reluctant account of sexual assault. He gave an angry, outraged denial. And once again, the United States Senate must take a side. Guest: Kate Zernike, who covers politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XeW251QOMKiqTzfo7Dhf1rRWJ53061k2HSkNyhv32AY</guid>
      <pubDate>Fri, 28 Sep 2018 10:15:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/084e1757-a0b9-4297-8fae-1d52b8d9f3c6.mp3" type="audio/mpeg" length="34522174"/>
    </item>
    <item>
      <title>Today’s Hearing: Trial or Job Interview?</title>
      <description>
        <![CDATA[<p>The Senate Judiciary Committee opens its hearing into allegations against Judge Brett M. Kavanaugh today. At stake for both parties is the swing seat on an ideologically divided Supreme Court in the thick of an election battle for control of Congress. Here’s a preview of each side’s plan for the hearing. Guests: Peter Baker, who covers the White House for The New York Times, and Sheryl Gay Stolberg, who covers Congress. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Today’s Hearing: Trial or Job Interview?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Senate Judiciary Committee opens its hearing into allegations against Judge Brett M. Kavanaugh today. At stake for both parties is the swing seat on an ideologically divided Supreme Court in the thick of an election battle for control of Congress. Here’s a preview of each side’s plan for the hearing. Guests: Peter Baker, who covers the White House for The New York Times, and Sheryl Gay Stolberg, who covers Congress. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Senate Judiciary Committee opens its hearing into allegations against Judge Brett M. Kavanaugh today. At stake for both parties is the swing seat on an ideologically divided Supreme Court in the thick of an election battle for control of Congress. Here’s a preview of each side’s plan for the hearing. Guests: Peter Baker, who covers the White House for The New York Times, and Sheryl Gay Stolberg, who covers Congress. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fHQ9wJ3blA6_dH69EBGJgpsO5KBDcQLVDXCuRIz8th0</guid>
      <pubDate>Thu, 27 Sep 2018 09:54:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/331c62c0-86d8-420f-a9c3-8ddad1909080.mp3" type="audio/mpeg" length="23135294"/>
    </item>
    <item>
      <title>Revisiting What Happened to Anita Hill</title>
      <description>
        <![CDATA[<p>Twenty-seven years ago, the Senate Judiciary Committee questioned Anita F. Hill, a law professor, and Judge Clarence Thomas, the Supreme Court nominee she accused of sexual harassment. We look at how those events are shaping the confirmation hearings for Judge Brett M. Kavanaugh. Guest: Kate Zernike, who covers politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Revisiting What Happened to Anita Hill</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Twenty-seven years ago, the Senate Judiciary Committee questioned Anita F. Hill, a law professor, and Judge Clarence Thomas, the Supreme Court nominee she accused of sexual harassment. We look at how those events are shaping the confirmation hearings for Judge Brett M. Kavanaugh. Guest: Kate Zernike, who covers politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Twenty-seven years ago, the Senate Judiciary Committee questioned Anita F. Hill, a law professor, and Judge Clarence Thomas, the Supreme Court nominee she accused of sexual harassment. We look at how those events are shaping the confirmation hearings for Judge Brett M. Kavanaugh. Guest: Kate Zernike, who covers politics for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wtp2v6qSoVXx8FKUovDd5J44RpKnCfmq9_9vLrP99nc</guid>
      <pubDate>Wed, 26 Sep 2018 09:56:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0bc9f28f-58f4-4d0c-be1c-96dae06a6a16.mp3" type="audio/mpeg" length="28196780"/>
    </item>
    <item>
      <title>The Conservative Divide Over Kavanaugh</title>
      <description>
        <![CDATA[<p>Conservatives have been deeply split about how to respond to allegations of sexual assault against Judge Brett M. Kavanaugh. That’s now starting to change. Guest: Ross Douthat, an Opinion columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Conservative Divide Over Kavanaugh</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Conservatives have been deeply split about how to respond to allegations of sexual assault against Judge Brett M. Kavanaugh. That’s now starting to change. Guest: Ross Douthat, an Opinion columnist for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Conservatives have been deeply split about how to respond to allegations of sexual assault against Judge Brett M. Kavanaugh. That’s now starting to change. Guest: Ross Douthat, an Opinion columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/p_OgT7ZC-oQVFEtkdrTFnouUcYHomOuL7QGmnToWHjw</guid>
      <pubDate>Tue, 25 Sep 2018 09:51:44 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6ac33819-828e-49a2-83e0-f551b6911fd2.mp3" type="audio/mpeg" length="23182524"/>
    </item>
    <item>
      <title>Rod Rosenstein’s Insurrection</title>
      <description>
        <![CDATA[<p>Days after being named deputy attorney general, Rod Rosenstein was so alarmed by what he was seeing inside the White House that he proposed a series of extreme measures. Will those proposals now cost him his job? Guest: Michael S. Schmidt, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Rod Rosenstein’s Insurrection</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Days after being named deputy attorney general, Rod Rosenstein was so alarmed by what he was seeing inside the White House that he proposed a series of extreme measures. Will those proposals now cost him his job? Guest: Michael S. Schmidt, who covers national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Days after being named deputy attorney general, Rod Rosenstein was so alarmed by what he was seeing inside the White House that he proposed a series of extreme measures. Will those proposals now cost him his job? Guest: Michael S. Schmidt, who covers national security for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sBSQNb2W21p-E49fqZ4znEH-rFklt1awGhLfLyAJsYk</guid>
      <pubDate>Mon, 24 Sep 2018 09:52:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/87c0b8d5-d159-4a14-a436-f929c6791770.mp3" type="audio/mpeg" length="23423686"/>
    </item>
    <item>
      <title>10 Years After the Financial Crisis</title>
      <description>
        <![CDATA[<p>A decade ago, U.S. policymakers hatched a plan to rescue a financial system in free fall. Their solution solved that crisis — but deepened another. Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>10 Years After the Financial Crisis</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A decade ago, U.S. policymakers hatched a plan to rescue a financial system in free fall. Their solution solved that crisis — but deepened another. Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A decade ago, U.S. policymakers hatched a plan to rescue a financial system in free fall. Their solution solved that crisis — but deepened another. Guest: Andrew Ross Sorkin, a financial columnist for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5Z711uIy6QgiW7f_JUGXHUMd3PO-mjOhu9gwdErIUes</guid>
      <pubDate>Fri, 21 Sep 2018 09:59:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d72cd055-a057-4318-8187-580d80aefda3.mp3" type="audio/mpeg" length="22077022"/>
    </item>
    <item>
      <title>A High School Assault</title>
      <description>
        <![CDATA[<p>The accusation against Judge Brett M. Kavanaugh has set off a national debate about how to address decades-old allegations of sexual aggression by a teenager. Here is one woman’s perspective. Guest: Caitlin Flanagan, who wrote about her experience of sexual assault in The Atlantic. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode contains descriptions of sexual assault.</p>]]>
      </description>
      <itunes:title>A High School Assault</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The accusation against Judge Brett M. Kavanaugh has set off a national debate about how to address decades-old allegations of sexual aggression by a teenager. Here is one woman’s perspective. Guest: Caitlin Flanagan, who wrote about her experience of sexual assault in The Atlantic. For more information on today’s episode, visit nytimes.com/thedaily.

This episode contains descriptions of sexual assault.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The accusation against Judge Brett M. Kavanaugh has set off a national debate about how to address decades-old allegations of sexual aggression by a teenager. Here is one woman’s perspective. Guest: Caitlin Flanagan, who wrote about her experience of sexual assault in The Atlantic. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>This episode contains descriptions of sexual assault.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5FjPEMZyq2OF8lG0EvytVWWT7TpEYrjniRve87QQjgI</guid>
      <pubDate>Thu, 20 Sep 2018 09:57:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5c1daaaa-b95b-4ca1-91ef-82b5db29e45c.mp3" type="audio/mpeg" length="23536535"/>
    </item>
    <item>
      <title>Will Dr. Blasey Testify?</title>
      <description>
        <![CDATA[<p>Christine Blasey Ford, who has accused Judge Brett M. Kavanaugh of sexual assault, has said she wants the F.B.I. to investigate her claims. We look at what that means for the Supreme Court confirmation process. Guest: Peter Baker, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Will Dr. Blasey Testify?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Christine Blasey Ford, who has accused Judge Brett M. Kavanaugh of sexual assault, has said she wants the F.B.I. to investigate her claims. We look at what that means for the Supreme Court confirmation process. Guest: Peter Baker, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Christine Blasey Ford, who has accused Judge Brett M. Kavanaugh of sexual assault, has said she wants the F.B.I. to investigate her claims. We look at what that means for the Supreme Court confirmation process. Guest: Peter Baker, who covers the White House for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8tRbV6b5wx5cw0eijCS61lOLLOxMnnpRlaQX8BOaP98</guid>
      <pubDate>Wed, 19 Sep 2018 09:52:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5188317d-547c-425e-8b89-7157c26065cd.mp3" type="audio/mpeg" length="18014876"/>
    </item>
    <item>
      <title>The Accusation Against Brett Kavanaugh</title>
      <description>
        <![CDATA[<p>Days before Judge Brett M. Kavanaugh was expected to receive a lifetime appointment to the country’s highest court, a woman has come forward with allegations that could derail his confirmation. He denies the claims, and both are now scheduled to testify. Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Accusation Against Brett Kavanaugh</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Days before Judge Brett M. Kavanaugh was expected to receive a lifetime appointment to the country’s highest court, a woman has come forward with allegations that could derail his confirmation. He denies the claims, and both are now scheduled to testify. Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Days before Judge Brett M. Kavanaugh was expected to receive a lifetime appointment to the country’s highest court, a woman has come forward with allegations that could derail his confirmation. He denies the claims, and both are now scheduled to testify. Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/IbEFkV3hhytJThnxNADMnpf11FjQTtDSkFsVkPo4zCA</guid>
      <pubDate>Tue, 18 Sep 2018 09:54:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3fffbe85-a78c-4607-9ab1-65d397bef117.mp3" type="audio/mpeg" length="24362422"/>
    </item>
    <item>
      <title>A Dispatch From the Center of the Storm</title>
      <description>
        <![CDATA[<p>North Carolina is facing a statewide crisis as the storm known as Florence slowly ravages the South, flooding cities, sending thousands into shelters and endangering communities from the coast to the mountains. Here’s what’s happening in one of those communities. Guest: Richard Fausset, a correspondent for The New York Times who has been covering the storm from North Carolina. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Dispatch From the Center of the Storm</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>North Carolina is facing a statewide crisis as the storm known as Florence slowly ravages the South, flooding cities, sending thousands into shelters and endangering communities from the coast to the mountains. Here’s what’s happening in one of those communities. Guest: Richard Fausset, a correspondent for The New York Times who has been covering the storm from North Carolina. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>North Carolina is facing a statewide crisis as the storm known as Florence slowly ravages the South, flooding cities, sending thousands into shelters and endangering communities from the coast to the mountains. Here’s what’s happening in one of those communities. Guest: Richard Fausset, a correspondent for The New York Times who has been covering the storm from North Carolina. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_3RR-xWMZiwue2ZW7-XUvQJVmv_4s9hvEcnJBE1EKuk</guid>
      <pubDate>Mon, 17 Sep 2018 09:54:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5f18e858-ec85-4624-bb59-a5de702ce5a6.mp3" type="audio/mpeg" length="22797165"/>
    </item>
    <item>
      <title>Lost in the Storm, Part 2</title>
      <description>
        <![CDATA[<p>Even as floodwaters caused by Hurricane Harvey began to recede, Wayne Dailey was pleading with emergency services to send someone to rescue his wife. Guests: Annie Brown, a producer for The Daily, speaks with Wayne Dailey, who sought urgent medical care for his wife during Hurricane Harvey, and Sheri Fink, who reported this story for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Lost in the Storm, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Even as floodwaters caused by Hurricane Harvey began to recede, Wayne Dailey was pleading with emergency services to send someone to rescue his wife. Guests: Annie Brown, a producer for The Daily, speaks with Wayne Dailey, who sought urgent medical care for his wife during Hurricane Harvey, and Sheri Fink, who reported this story for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Even as floodwaters caused by Hurricane Harvey began to recede, Wayne Dailey was pleading with emergency services to send someone to rescue his wife. Guests: Annie Brown, a producer for The Daily, speaks with Wayne Dailey, who sought urgent medical care for his wife during Hurricane Harvey, and Sheri Fink, who reported this story for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/icln-w5rL8WEw8Ckvrb1bpY0TkNq89NRGQyamb4A0wU</guid>
      <pubDate>Fri, 14 Sep 2018 09:59:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1eb4ecbe-b49d-448b-9175-887fd3fa3ed5.mp3" type="audio/mpeg" length="29335301"/>
    </item>
    <item>
      <title>Lost in the Storm, Part 1</title>
      <description>
        <![CDATA[<p>One year ago, Houston thought it was prepared for Hurricane Harvey. As another major hurricane approaches the U.S., we look at how flooding overwhelmed Houston’s emergency systems, and how one family found out that they were on their own. Guests: Annie Brown, a producer for The Daily, speaks with Wayne Dailey, who sought urgent medical care for his wife during Hurricane Harvey, and Sheri Fink, who reported this story for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Lost in the Storm, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>One year ago, Houston thought it was prepared for Hurricane Harvey. As another major hurricane approaches the U.S., we look at how flooding overwhelmed Houston’s emergency systems, and how one family found out that they were on their own. Guests: Annie Brown, a producer for The Daily, speaks with Wayne Dailey, who sought urgent medical care for his wife during Hurricane Harvey, and Sheri Fink, who reported this story for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>One year ago, Houston thought it was prepared for Hurricane Harvey. As another major hurricane approaches the U.S., we look at how flooding overwhelmed Houston’s emergency systems, and how one family found out that they were on their own. Guests: Annie Brown, a producer for The Daily, speaks with Wayne Dailey, who sought urgent medical care for his wife during Hurricane Harvey, and Sheri Fink, who reported this story for The New York Times Magazine. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qOYROe4iZoIkjTHX3ZHyoFzEY_d6wVVZY8KgT650IbA</guid>
      <pubDate>Thu, 13 Sep 2018 09:50:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d87826ec-7758-4e8c-bf5b-df6defb8fbbf.mp3" type="audio/mpeg" length="20458266"/>
    </item>
    <item>
      <title>The Spy Who Provoked Putin</title>
      <description>
        <![CDATA[<p>The attack was brazen and exotic, but the target was a low-level former spy. Why did Russia risk so much in the Sergei Skripal case? Guest: Michael Schwirtz, an investigative reporter for The New York Times who recently returned from covering this story in Moscow. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Spy Who Provoked Putin</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The attack was brazen and exotic, but the target was a low-level former spy. Why did Russia risk so much in the Sergei Skripal case? Guest: Michael Schwirtz, an investigative reporter for The New York Times who recently returned from covering this story in Moscow. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The attack was brazen and exotic, but the target was a low-level former spy. Why did Russia risk so much in the Sergei Skripal case? Guest: Michael Schwirtz, an investigative reporter for The New York Times who recently returned from covering this story in Moscow. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lX0mLGWExrWbUzDUpHFohZwkiy6o5OaH6rLftWr-UFI</guid>
      <pubDate>Wed, 12 Sep 2018 09:50:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c92cf210-5eb5-443a-8d5f-dda495954f23.mp3" type="audio/mpeg" length="22594037"/>
    </item>
    <item>
      <title>Bob Woodward on Trump, Nixon and Anonymity</title>
      <description>
        <![CDATA[<p>Bob Woodward’s reporting on the Nixon administration pioneered an approach to journalism that drew from anonymous sources and has been widely used since. He has deployed that form of reporting in his new book to tell the story of the Trump administration. Guests: Mr. Woodward, author of “Fear: Trump in the White House,” speaks with Michael S. Schmidt, a Washington correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Bob Woodward on Trump, Nixon and Anonymity</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Bob Woodward’s reporting on the Nixon administration pioneered an approach to journalism that drew from anonymous sources and has been widely used since. He has deployed that form of reporting in his new book to tell the story of the Trump administration. Guests: Mr. Woodward, author of “Fear: Trump in the White House,” speaks with Michael S. Schmidt, a Washington correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Bob Woodward’s reporting on the Nixon administration pioneered an approach to journalism that drew from anonymous sources and has been widely used since. He has deployed that form of reporting in his new book to tell the story of the Trump administration. Guests: Mr. Woodward, author of “Fear: Trump in the White House,” speaks with Michael S. Schmidt, a Washington correspondent for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kNA-AKS4xicvZK5byTJdELDurNXq9QZ0Db86CGkCRBg</guid>
      <pubDate>Tue, 11 Sep 2018 09:53:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bddbbbc0-58bc-40cd-bf7f-125f6491fc21.mp3" type="audio/mpeg" length="27039451"/>
    </item>
    <item>
      <title>An Interview With George Papadopoulos</title>
      <description>
        <![CDATA[<p>George Papadopoulos, a former campaign aide to President Trump, was sentenced on Friday for deceiving the F.B.I. about his relationship with a person thought to be a Russian operative who had offered to arrange a meeting between Mr. Trump and the Russian president, Vladimir V. Putin. Guest: Mark Mazzetti, a Washington correspondent for The Times, who spoke with Mr. Papadopoulos before his sentencing. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>An Interview With George Papadopoulos</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>George Papadopoulos, a former campaign aide to President Trump, was sentenced on Friday for deceiving the F.B.I. about his relationship with a person thought to be a Russian operative who had offered to arrange a meeting between Mr. Trump and the Russian president, Vladimir V. Putin. Guest: Mark Mazzetti, a Washington correspondent for The Times, who spoke with Mr. Papadopoulos before his sentencing. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>George Papadopoulos, a former campaign aide to President Trump, was sentenced on Friday for deceiving the F.B.I. about his relationship with a person thought to be a Russian operative who had offered to arrange a meeting between Mr. Trump and the Russian president, Vladimir V. Putin. Guest: Mark Mazzetti, a Washington correspondent for The Times, who spoke with Mr. Papadopoulos before his sentencing. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3LFk-ErEVweeASGpcdW1J4T4CgEUjM2LGIGnBxmuZZ8</guid>
      <pubDate>Mon, 10 Sep 2018 09:54:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0eef9b92-3f64-436f-a101-4847b6fffe1d.mp3" type="audio/mpeg" length="23711242"/>
    </item>
    <item>
      <title>The Kavanaugh Documents</title>
      <description>
        <![CDATA[<p>All week, Senate Democrats have furiously protested the decision by Republicans to protect thousands of documents related to Judge Brett M. Kavanaugh, President Trump’s nominee to the Supreme Court. On the third day of his confirmation hearings, that fury came to a head. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Kavanaugh Documents</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>All week, Senate Democrats have furiously protested the decision by Republicans to protect thousands of documents related to Judge Brett M. Kavanaugh, President Trump’s nominee to the Supreme Court. On the third day of his confirmation hearings, that fury came to a head. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>All week, Senate Democrats have furiously protested the decision by Republicans to protect thousands of documents related to Judge Brett M. Kavanaugh, President Trump’s nominee to the Supreme Court. On the third day of his confirmation hearings, that fury came to a head. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/G3Nu14HKAIRc1owCMrF3lpAZcX3JAIO6Q330_0lxHdU</guid>
      <pubDate>Fri, 07 Sep 2018 09:51:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9875e820-df93-496e-9dcd-cc5f50452f6a.mp3" type="audio/mpeg" length="20372584"/>
    </item>
    <item>
      <title>The Anonymous Senior Administration Official</title>
      <description>
        <![CDATA[<p>The New York Times published an account by an unnamed member of the Trump administration about resistance figures operating inside the government. “I would know,” the official wrote. “I am one of them.” Guest: James Dao, Op-Ed editor for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Anonymous Senior Administration Official</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times published an account by an unnamed member of the Trump administration about resistance figures operating inside the government. “I would know,” the official wrote. “I am one of them.” Guest: James Dao, Op-Ed editor for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times published an account by an unnamed member of the Trump administration about resistance figures operating inside the government. “I would know,” the official wrote. “I am one of them.” Guest: James Dao, Op-Ed editor for The Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wCSwry6WnYN2w3VF9SyPQT1TF4DIiydkAB1DCHC__UY</guid>
      <pubDate>Thu, 06 Sep 2018 09:51:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ac32bc97-977a-46fc-85a9-67da39d74c9c.mp3" type="audio/mpeg" length="22166465"/>
    </item>
    <item>
      <title>A Chaotic Opening Day for Brett Kavanaugh</title>
      <description>
        <![CDATA[<p>On the first day of Judge Brett Kavanaugh’s Supreme Court confirmation hearings, battle lines were drawn around the issues of abortion, the withholding of documents and executive power. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A Chaotic Opening Day for Brett Kavanaugh</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On the first day of Judge Brett Kavanaugh’s Supreme Court confirmation hearings, battle lines were drawn around the issues of abortion, the withholding of documents and executive power. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>On the first day of Judge Brett Kavanaugh’s Supreme Court confirmation hearings, battle lines were drawn around the issues of abortion, the withholding of documents and executive power. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zkgznMY8Hs0avOFVwvuvIi_KwojrkuZTmC-_CXdlHdU</guid>
      <pubDate>Wed, 05 Sep 2018 09:50:44 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/355bb914-912d-439d-9868-aac3a8023b54.mp3" type="audio/mpeg" length="22838543"/>
    </item>
    <item>
      <title>A 30-Year Plan to Transform the Courts</title>
      <description>
        <![CDATA[<p>Republicans have created a pipeline of conservative lawyers to help carry out a sweeping reconfiguration of the federal judiciary. Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>A 30-Year Plan to Transform the Courts</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans have created a pipeline of conservative lawyers to help carry out a sweeping reconfiguration of the federal judiciary. Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republicans have created a pipeline of conservative lawyers to help carry out a sweeping reconfiguration of the federal judiciary. Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VRS2CFQODISWXh4m-TVkoBt0ozb5ppvHyeyx9mEmGTg</guid>
      <pubDate>Tue, 04 Sep 2018 09:52:39 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3721c9ad-d345-4e9e-88ca-f3c10d18193f.mp3" type="audio/mpeg" length="26656182"/>
    </item>
    <item>
      <title>When We Almost Stopped Climate Change</title>
      <description>
        <![CDATA[<p>Thirty years ago, the United States had a chance to stop global warming in its tracks. Almost nothing stood in the way — except human resistance. Guests: Rafe Pomerance, an environmentalist who became involved with the climate movement in its earliest days; Nathaniel Rich, who reported on the history of climate politics for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>When We Almost Stopped Climate Change</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Thirty years ago, the United States had a chance to stop global warming in its tracks. Almost nothing stood in the way — except human resistance. Guests: Rafe Pomerance, an environmentalist who became involved with the climate movement in its earliest days; Nathaniel Rich, who reported on the history of climate politics for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Thirty years ago, the United States had a chance to stop global warming in its tracks. Almost nothing stood in the way — except human resistance. Guests: Rafe Pomerance, an environmentalist who became involved with the climate movement in its earliest days; Nathaniel Rich, who reported on the history of climate politics for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/pGoah3o4APNQQvmA1KcuauRZ5XjWZJ7AdyqOTDr9DDI</guid>
      <pubDate>Fri, 31 Aug 2018 09:55:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0352b887-7dc3-4d17-aa4f-18b3aa4aa91f.mp3" type="audio/mpeg" length="26901942"/>
    </item>
    <item>
      <title>An Unexpected Upset in Florida</title>
      <description>
        <![CDATA[<p>The Florida governor’s race was supposed to come down to a predictable face-off between the establishment Republican and the establishment Democrat. That’s not what happened. Guest: Patricia Mazzei, Miami bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>An Unexpected Upset in Florida</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Florida governor’s race was supposed to come down to a predictable face-off between the establishment Republican and the establishment Democrat. That’s not what happened. Guest: Patricia Mazzei, Miami bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Florida governor’s race was supposed to come down to a predictable face-off between the establishment Republican and the establishment Democrat. That’s not what happened. Guest: Patricia Mazzei, Miami bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jaENgwQBIIQGZ2HGF3qtALzlb5qWkuFyKEcaOjB7tqU</guid>
      <pubDate>Thu, 30 Aug 2018 09:50:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2b36f6cf-995d-4b1b-afb0-09277e21c358.mp3" type="audio/mpeg" length="20380525"/>
    </item>
    <item>
      <title>An Execution in Nebraska</title>
      <description>
        <![CDATA[<p>After a 40-year crusade, a state lawmaker succeeded in getting Nebraska to ban the death penalty in 2015. Why, then, did the state execute a prisoner this month? Guests: Nebraska State Senator Ernie Chambers, a longtime opponent of the death penalty, and Mitch Smith, a national reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>An Execution in Nebraska</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After a 40-year crusade, a state lawmaker succeeded in getting Nebraska to ban the death penalty in 2015. Why, then, did the state execute a prisoner this month? Guests: Nebraska State Senator Ernie Chambers, a longtime opponent of the death penalty, and Mitch Smith, a national reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After a 40-year crusade, a state lawmaker succeeded in getting Nebraska to ban the death penalty in 2015. Why, then, did the state execute a prisoner this month? Guests: Nebraska State Senator Ernie Chambers, a longtime opponent of the death penalty, and Mitch Smith, a national reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MZfGI0q-AsnRXOsZOR0n6GH4U0OvT0akkUtVpNURG1Y</guid>
      <pubDate>Wed, 29 Aug 2018 09:50:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d4a47198-1d5e-4463-8cf5-9d50f900b307.mp3" type="audio/mpeg" length="21873893"/>
    </item>
    <item>
      <title>The War Inside the Catholic Church</title>
      <description>
        <![CDATA[<p>An archbishop has accused Pope Francis of being part of the effort to cover up a sex abuse scandal. What does it mean that the accusation is coming from inside the Roman Catholic Church? Guest: Jason Horowitz, the Rome bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The War Inside the Catholic Church</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>An archbishop has accused Pope Francis of being part of the effort to cover up a sex abuse scandal. What does it mean that the accusation is coming from inside the Roman Catholic Church? Guest: Jason Horowitz, the Rome bureau chief of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>An archbishop has accused Pope Francis of being part of the effort to cover up a sex abuse scandal. What does it mean that the accusation is coming from inside the Roman Catholic Church? Guest: Jason Horowitz, the Rome bureau chief of The New York Times. For more information on today’s episode, visit <a href="https://www.nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kDXs3f-3qGIiwJ3XZmEkGPI6g_geC2XChb9LsOr7Uzs</guid>
      <pubDate>Tue, 28 Aug 2018 09:54:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/79144ced-e483-44fa-8bf3-a471dd33a76b.mp3" type="audio/mpeg" length="26342713"/>
    </item>
    <item>
      <title>The Paradoxes of John McCain</title>
      <description>
        <![CDATA[<p>Senator John McCain was proud of his reputation as a maverick in American politics. Through pivotal moments in his life — as a prisoner of war, a young congressman, a presidential candidate, and, ultimately, an elder statesman — that reputation was both validated and challenged. Guests: Elisabeth Bumiller, the Washington bureau chief for The New York Times; Carl Hulse, The Times’s chief Washington correspondent; Mark Landler, who covers the White House for The Times; and Scott Shane, who writes about national security for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Paradoxes of John McCain</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Senator John McCain was proud of his reputation as a maverick in American politics. Through pivotal moments in his life — as a prisoner of war, a young congressman, a presidential candidate, and, ultimately, an elder statesman — that reputation was both validated and challenged. Guests: Elisabeth Bumiller, the Washington bureau chief for The New York Times; Carl Hulse, The Times’s chief Washington correspondent; Mark Landler, who covers the White House for The Times; and Scott Shane, who writes about national security for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Senator John McCain was proud of his reputation as a maverick in American politics. Through pivotal moments in his life — as a prisoner of war, a young congressman, a presidential candidate, and, ultimately, an elder statesman — that reputation was both validated and challenged. Guests: Elisabeth Bumiller, the Washington bureau chief for The New York Times; Carl Hulse, The Times’s chief Washington correspondent; Mark Landler, who covers the White House for The Times; and Scott Shane, who writes about national security for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aC5pAS3AY29ujGqe_kIfYEFcLsRT4FVzDAeX3axIk5c</guid>
      <pubDate>Mon, 27 Aug 2018 09:50:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d5b055ba-5a4b-47e3-9d00-48c49978d09a.mp3" type="audio/mpeg" length="33833795"/>
    </item>
    <item>
      <title>Special Episode: The Last “Year of the Woman”</title>
      <description>
        <![CDATA[<p>More women are running for office in the 2018 midterm elections than in any other election in American history. “The Daily” speaks to Senator Dianne Feinstein about what this moment shares with 1992, another record-breaking “Year of the Woman.” Guests: Senator Dianne Feinstein, Democrat of California, and Kate Zernike, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Special Episode: The Last “Year of the Woman”</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>More women are running for office in the 2018 midterm elections than in any other election in American history. “The Daily” speaks to Senator Dianne Feinstein about what this moment shares with 1992, another record-breaking “Year of the Woman.” Guests: Senator Dianne Feinstein, Democrat of California, and Kate Zernike, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>More women are running for office in the 2018 midterm elections than in any other election in American history. “The Daily” speaks to Senator Dianne Feinstein about what this moment shares with 1992, another record-breaking “Year of the Woman.” Guests: Senator Dianne Feinstein, Democrat of California, and Kate Zernike, a political reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/R3XjyjJ88iiNgmk87HSc9DX1TUrkhJVV2_isJXj86J8</guid>
      <pubDate>Sat, 25 Aug 2018 10:00:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/60827f76-bff9-400a-b8e5-1c8bd10c62c2.mp3" type="audio/mpeg" length="25563219"/>
    </item>
    <item>
      <title>“Divided,” Part 2: The Chaos of Reunification</title>
      <description>
        <![CDATA[<p>More than 2,000 children were separated from their parents at the border. After a judge ordered the U.S. government to promptly reunite the families, the government claimed it would be nearly impossible to do so. In Part 2 of our series, we look at why the government could separate families, but not bring them back together. Guest hosts: Annie Correal, who covers New York City for The New York Times, and Caitlin Dickerson, an immigration reporter at The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>“Divided,” Part 2: The Chaos of Reunification</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>More than 2,000 children were separated from their parents at the border. After a judge ordered the U.S. government to promptly reunite the families, the government claimed it would be nearly impossible to do so. In Part 2 of our series, we look at why the government could separate families, but not bring them back together. Guest hosts: Annie Correal, who covers New York City for The New York Times, and Caitlin Dickerson, an immigration reporter at The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>More than 2,000 children were separated from their parents at the border. After a judge ordered the U.S. government to promptly reunite the families, the government claimed it would be nearly impossible to do so. In Part 2 of our series, we look at why the government could separate families, but not bring them back together. Guest hosts: Annie Correal, who covers New York City for The New York Times, and Caitlin Dickerson, an immigration reporter at The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/p5JKk0OvMMfVjsa5ELLOA_d4t3TJO5pHfAxWKk12tSQ</guid>
      <pubDate>Fri, 24 Aug 2018 09:54:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d3776662-7bbb-40c5-b7cb-b35334ec534d.mp3" type="audio/mpeg" length="28881815"/>
    </item>
    <item>
      <title>The Man Who Wrote Mueller’s Rules</title>
      <description>
        <![CDATA[<p>The special counsel, Robert Mueller, has followed a set of rules devised to allow for the investigation of a sitting president. Those rules will now be tested. Guests: Neal Katyal, who drafted the regulations that govern Mr. Mueller’s investigation, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Man Who Wrote Mueller’s Rules</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The special counsel, Robert Mueller, has followed a set of rules devised to allow for the investigation of a sitting president. Those rules will now be tested. Guests: Neal Katyal, who drafted the regulations that govern Mr. Mueller’s investigation, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The special counsel, Robert Mueller, has followed a set of rules devised to allow for the investigation of a sitting president. Those rules will now be tested. Guests: Neal Katyal, who drafted the regulations that govern Mr. Mueller’s investigation, and Michael S. Schmidt, who has been covering the special counsel investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HQ2sonwpbA94PvLNskXpHBivenPP0AILK5Nc1EEDnik</guid>
      <pubDate>Thu, 23 Aug 2018 09:56:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e64d6c3e-1291-43de-abe7-869ded495141.mp3" type="audio/mpeg" length="22576483"/>
    </item>
    <item>
      <title>Implicating the President</title>
      <description>
        <![CDATA[<p>Michael Cohen, President Trump’s former personal lawyer, pleaded guilty on Tuesday to campaign finance violations — and said Mr. Trump himself had ordered the crimes. Minutes later, Paul Manafort, the former Trump campaign chairman, was convicted of financial fraud in the first trial resulting from the special counsel’s investigation. Guest: Joseph Kahn, the managing editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Implicating the President</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Michael Cohen, President Trump’s former personal lawyer, pleaded guilty on Tuesday to campaign finance violations — and said Mr. Trump himself had ordered the crimes. Minutes later, Paul Manafort, the former Trump campaign chairman, was convicted of financial fraud in the first trial resulting from the special counsel’s investigation. Guest: Joseph Kahn, the managing editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Michael Cohen, President Trump’s former personal lawyer, pleaded guilty on Tuesday to campaign finance violations — and said Mr. Trump himself had ordered the crimes. Minutes later, Paul Manafort, the former Trump campaign chairman, was convicted of financial fraud in the first trial resulting from the special counsel’s investigation. Guest: Joseph Kahn, the managing editor of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/400zp1Ijbhur0Yj9T-tFkl1X-cdBgFvYNu5c2-hMGY4</guid>
      <pubDate>Wed, 22 Aug 2018 09:51:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f057fc74-ed94-4b77-8dda-155a182be2d9.mp3" type="audio/mpeg" length="20808933"/>
    </item>
    <item>
      <title>“Divided,” Part 1: How Family Separations Started</title>
      <description>
        <![CDATA[<p>The policy began in secret. The Trump administration denied such a policy existed. And when it finally acknowledged that migrant children were being separated from their parents at the border, chaos ensued. Only now is the full picture of what happened and why becoming clear. Guest hosts: Annie Correal, who covers New York City for The New York Times, and Caitlin Dickerson, an immigration reporter at The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>“Divided,” Part 1: How Family Separations Started</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The policy began in secret. The Trump administration denied such a policy existed. And when it finally acknowledged that migrant children were being separated from their parents at the border, chaos ensued. Only now is the full picture of what happened and why becoming clear. Guest hosts: Annie Correal, who covers New York City for The New York Times, and Caitlin Dickerson, an immigration reporter at The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The policy began in secret. The Trump administration denied such a policy existed. And when it finally acknowledged that migrant children were being separated from their parents at the border, chaos ensued. Only now is the full picture of what happened and why becoming clear. Guest hosts: Annie Correal, who covers New York City for The New York Times, and Caitlin Dickerson, an immigration reporter at The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Qvr7mJ64KGVH-aDwVwZgNUq_-Q6NEqDFFcJZmqE2LpE</guid>
      <pubDate>Tue, 21 Aug 2018 09:54:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/05ce8817-5003-4133-b4de-dd84f509c3e8.mp3" type="audio/mpeg" length="31889867"/>
    </item>
    <item>
      <title>Robert Mueller’s Unlikely Witness</title>
      <description>
        <![CDATA[<p>The New York Times has found that one of the White House’s own lawyers, Don McGahn, has cooperated extensively in the investigation led by the special counsel, Robert Mueller. And he has shared far more information than the president thought. Guest: Michael S. Schmidt, one of the reporters who broke the story. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Robert Mueller’s Unlikely Witness</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has found that one of the White House’s own lawyers, Don McGahn, has cooperated extensively in the investigation led by the special counsel, Robert Mueller. And he has shared far more information than the president thought. Guest: Michael S. Schmidt, one of the reporters who broke the story. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has found that one of the White House’s own lawyers, Don McGahn, has cooperated extensively in the investigation led by the special counsel, Robert Mueller. And he has shared far more information than the president thought. Guest: Michael S. Schmidt, one of the reporters who broke the story. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/pr1ARZp05sdGSoBaj76qdw_-sxh2eMCDWul0AhxOqAg</guid>
      <pubDate>Mon, 20 Aug 2018 09:50:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6aa2735d-e13c-4000-b4bd-1eed14467417.mp3" type="audio/mpeg" length="18944000"/>
    </item>
    <item>
      <title>Nancy Pelosi’s Dilemma</title>
      <description>
        <![CDATA[<p>Republicans in this year’s elections are casting one person as the symbol of everything that is wrong with the Democratic Party. Many Democrats are also turning on the same figure. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Nancy Pelosi’s Dilemma</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans in this year’s elections are casting one person as the symbol of everything that is wrong with the Democratic Party. Many Democrats are also turning on the same figure. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republicans in this year’s elections are casting one person as the symbol of everything that is wrong with the Democratic Party. Many Democrats are also turning on the same figure. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_5-jO4u9GfRRgUPQ5BMvIOAOp9Ohstg7DpVNEsBgH4c</guid>
      <pubDate>Fri, 17 Aug 2018 09:52:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3d476e97-840a-4132-922c-fadfb9fe539c.mp3" type="audio/mpeg" length="22107533"/>
    </item>
    <item>
      <title>A Culture of Secrecy That Perpetuated Abuse</title>
      <description>
        <![CDATA[<p>A grand jury report found that Roman Catholic priests had abused more than 1,000 children in Pennsylvania over a period of 70 years. Some church officials say the report reiterates issues that have already been addressed, but details suggest otherwise. Guest: Laurie Goodstein, a national religion correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode contains descriptions of abuse.</p>]]>
      </description>
      <itunes:title>A Culture of Secrecy That Perpetuated Abuse</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A grand jury report found that Roman Catholic priests had abused more than 1,000 children in Pennsylvania over a period of 70 years. Some church officials say the report reiterates issues that have already been addressed, but details suggest otherwise. Guest: Laurie Goodstein, a national religion correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.

This episode contains descriptions of abuse.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A grand jury report found that Roman Catholic priests had abused more than 1,000 children in Pennsylvania over a period of 70 years. Some church officials say the report reiterates issues that have already been addressed, but details suggest otherwise. Guest: Laurie Goodstein, a national religion correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode contains descriptions of abuse.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RE6VEEv6_taVVq05XxKQwzQ3GI4py2VvPh318ij4SK0</guid>
      <pubDate>Thu, 16 Aug 2018 09:55:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ff2f0e3b-7c20-4826-9555-85b6f78f0c12.mp3" type="audio/mpeg" length="20845714"/>
    </item>
    <item>
      <title>The Economic Cost of Authoritarian Rule</title>
      <description>
        <![CDATA[<p>Turkey is on the verge of an economic meltdown that could infect the global financial system. We examine how the country’s slide toward authoritarianism helped trigger the crisis. Guest: Jim Tankersley, who covers economic policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Economic Cost of Authoritarian Rule</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Turkey is on the verge of an economic meltdown that could infect the global financial system. We examine how the country’s slide toward authoritarianism helped trigger the crisis. Guest: Jim Tankersley, who covers economic policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Turkey is on the verge of an economic meltdown that could infect the global financial system. We examine how the country’s slide toward authoritarianism helped trigger the crisis. Guest: Jim Tankersley, who covers economic policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/onqLytrQzlWJSbpCE9omlXOhQnM44ewUPMyiX54KKW4</guid>
      <pubDate>Wed, 15 Aug 2018 09:53:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a779e330-97dd-451a-80e3-9a79799d2f48.mp3" type="audio/mpeg" length="19888169"/>
    </item>
    <item>
      <title>Unearthing the Truth in Myanmar</title>
      <description>
        <![CDATA[<p>The country is accused of waging a state-sponsored campaign of massacre, rape and arson against Rohingya Muslims. Why, then, did the government allow a New York Times journalist to tour the epicenter of the reported atrocities? Guest: Hannah Beech, the Southeast Asia bureau chief of The New York Times, who recently visited Rakhine State, where many Rohingya Muslims once lived. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Unearthing the Truth in Myanmar</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The country is accused of waging a state-sponsored campaign of massacre, rape and arson against Rohingya Muslims. Why, then, did the government allow a New York Times journalist to tour the epicenter of the reported atrocities? Guest: Hannah Beech, the Southeast Asia bureau chief of The New York Times, who recently visited Rakhine State, where many Rohingya Muslims once lived. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The country is accused of waging a state-sponsored campaign of massacre, rape and arson against Rohingya Muslims. Why, then, did the government allow a New York Times journalist to tour the epicenter of the reported atrocities? Guest: Hannah Beech, the Southeast Asia bureau chief of The New York Times, who recently visited Rakhine State, where many Rohingya Muslims once lived. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CaFFQmgt1nf_P_ucAg1B42ky0dEDaNmxdukJBhUpyMM</guid>
      <pubDate>Tue, 14 Aug 2018 09:52:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/72bd3ddb-00c4-441c-b006-e936955fad32.mp3" type="audio/mpeg" length="23629740"/>
    </item>
    <item>
      <title>A Year of Reckoning in Charlottesville</title>
      <description>
        <![CDATA[<p>One year after white nationalists and counterprotesters clashed in Charlottesville, Va., the violence has long ended and the rest of the country has largely moved on. But the broken city is still struggling to contend with its past. Guest: Farah Stockman, who has been reporting for The New York Times on events in Charlottesville since the clashes. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>A Year of Reckoning in Charlottesville</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>One year after white nationalists and counterprotesters clashed in Charlottesville, Va., the violence has long ended and the rest of the country has largely moved on. But the broken city is still struggling to contend with its past. Guest: Farah Stockman, who has been reporting for The New York Times on events in Charlottesville since the clashes. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>One year after white nationalists and counterprotesters clashed in Charlottesville, Va., the violence has long ended and the rest of the country has largely moved on. But the broken city is still struggling to contend with its past. Guest: Farah Stockman, who has been reporting for The New York Times on events in Charlottesville since the clashes. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/v5bQ9aGJRI4SayI741-uko6cQM48qbW3-le3fTuloFw</guid>
      <pubDate>Mon, 13 Aug 2018 09:52:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e3282c2b-0fbf-433c-b84c-6abcb6d9d84e.mp3" type="audio/mpeg" length="28000339"/>
    </item>
    <item>
      <title>The Trump Voters We Don't Talk About</title>
      <description>
        <![CDATA[<p>New data is challenging the popular portrait of Trump voters, and shedding light on why those who generally aren’t talked about may determine the outcome of the midterm elections. Guest: Nate Cohn, a domestic correspondent for The Upshot at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Trump Voters We Don't Talk About</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>New data is challenging the popular portrait of Trump voters, and shedding light on why those who generally aren’t talked about may determine the outcome of the midterm elections. Guest: Nate Cohn, a domestic correspondent for The Upshot at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>New data is challenging the popular portrait of Trump voters, and shedding light on why those who generally aren’t talked about may determine the outcome of the midterm elections. Guest: Nate Cohn, a domestic correspondent for The Upshot at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/u_DdG0JlHOA0SQ3yz-HyztD0GYvGJrNtP-E2dvaBRTw</guid>
      <pubDate>Fri, 10 Aug 2018 09:48:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/66aa9257-7be7-49cb-8e55-f3750cb04362.mp3" type="audio/mpeg" length="19511588"/>
    </item>
    <item>
      <title>A New Path for Presidential Pardons</title>
      <description>
        <![CDATA[<p>For decades, getting a presidential pardon in the United States required a cumbersome petition process and a long legal review. But those seeking pardons from President Trump are using a very different strategy. Guest: Campbell Robertson, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>A New Path for Presidential Pardons</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For decades, getting a presidential pardon in the United States required a cumbersome petition process and a long legal review. But those seeking pardons from President Trump are using a very different strategy. Guest: Campbell Robertson, a national correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For decades, getting a presidential pardon in the United States required a cumbersome petition process and a long legal review. But those seeking pardons from President Trump are using a very different strategy. Guest: Campbell Robertson, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sr3ecU4y0YZ-EOctLp6etNjgdNedhfaoKOewR_pgC2M</guid>
      <pubDate>Thu, 09 Aug 2018 09:51:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9a0d43c2-6cea-4eab-a4a3-6ed1cd148cab.mp3" type="audio/mpeg" length="21859265"/>
    </item>
    <item>
      <title>Paul Ryan’s Exit Interview</title>
      <description>
        <![CDATA[<p>Why would the House speaker — and the third most powerful Republican in Washington — walk away at the age of 48? Guest: Mark Leibovich, who recently interviewed Paul Ryan for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Paul Ryan’s Exit Interview</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Why would the House speaker — and the third most powerful Republican in Washington — walk away at the age of 48? Guest: Mark Leibovich, who recently interviewed Paul Ryan for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Why would the House speaker — and the third most powerful Republican in Washington — walk away at the age of 48? Guest: Mark Leibovich, who recently interviewed Paul Ryan for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GFZ69o4CAWF9EGbdQum45Bo8lpn3IBH8-p5l7XzWJJE</guid>
      <pubDate>Wed, 08 Aug 2018 09:56:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/798d8d38-8071-4f4a-85a1-a1009f2f3663.mp3" type="audio/mpeg" length="23814896"/>
    </item>
    <item>
      <title>A Scorched-Earth Strategy in Ohio</title>
      <description>
        <![CDATA[<p>Republicans have found themselves unexpectedly scrambling to hold a House seat in a special election in Ohio on Tuesday. The race has become a symbol of what may lie ahead for the party in the midterms. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>A Scorched-Earth Strategy in Ohio</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans have found themselves unexpectedly scrambling to hold a House seat in a special election in Ohio on Tuesday. The race has become a symbol of what may lie ahead for the party in the midterms. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republicans have found themselves unexpectedly scrambling to hold a House seat in a special election in Ohio on Tuesday. The race has become a symbol of what may lie ahead for the party in the midterms. Guest: Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/i2p58JR_JM72IjmAUUBFWQbeSPs0loQzE0o9Ek3qBuA</guid>
      <pubDate>Tue, 07 Aug 2018 09:52:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d29cb0c1-de20-4b64-9768-52667dfb0d3d.mp3" type="audio/mpeg" length="23536117"/>
    </item>
    <item>
      <title>The Rise of Michael Avenatti</title>
      <description>
        <![CDATA[<p>How did the lawyer for Stephanie Clifford, the pornographic film actress known as Stormy Daniels, become a household name and the new face of Democratic opposition to President Trump? Guest: Matthew Shaer, who wrote about Mr. Avenatti for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Rise of Michael Avenatti</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How did the lawyer for Stephanie Clifford, the pornographic film actress known as Stormy Daniels, become a household name and the new face of Democratic opposition to President Trump? Guest: Matthew Shaer, who wrote about Mr. Avenatti for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>How did the lawyer for Stephanie Clifford, the pornographic film actress known as Stormy Daniels, become a household name and the new face of Democratic opposition to President Trump? Guest: Matthew Shaer, who wrote about Mr. Avenatti for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lskLQmZQWTQePdnULXvPDWWG5KxjC6zHPE04CHeRS3s</guid>
      <pubDate>Mon, 06 Aug 2018 09:53:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4bcd274b-d82e-4cb5-bb4d-337c99c06745.mp3" type="audio/mpeg" length="25229688"/>
    </item>
    <item>
      <title>How Paul Manafort’s Plans Backfired</title>
      <description>
        <![CDATA[<p>The trial of Paul Manafort, a former chairman of the Trump campaign, is the first one to result from charges brought by Robert S. Mueller III, the special counsel overseeing the investigation into Russian election interference. Yet the trial itself, at least on the surface, has little to do with Russia or with President Trump. Guest: Nicholas Confessore, an investigative reporter at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>How Paul Manafort’s Plans Backfired</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The trial of Paul Manafort, a former chairman of the Trump campaign, is the first one to result from charges brought by Robert S. Mueller III, the special counsel overseeing the investigation into Russian election interference. Yet the trial itself, at least on the surface, has little to do with Russia or with President Trump. Guest: Nicholas Confessore, an investigative reporter at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The trial of Paul Manafort, a former chairman of the Trump campaign, is the first one to result from charges brought by Robert S. Mueller III, the special counsel overseeing the investigation into Russian election interference. Yet the trial itself, at least on the surface, has little to do with Russia or with President Trump. Guest: Nicholas Confessore, an investigative reporter at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Z-xFCfg7W1Z4E5jwTMyxM7lNXoTd5akiEZPO28e1yRA</guid>
      <pubDate>Fri, 03 Aug 2018 09:52:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4359eb03-1266-4f1f-b13d-fb20ba059e50.mp3" type="audio/mpeg" length="24539637"/>
    </item>
    <item>
      <title>The Strange Case of QAnon</title>
      <description>
        <![CDATA[<p>How did an outlandish conspiracy theory born on the fringes of the internet end up in the spotlight at a rally for President Trump? Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Strange Case of QAnon</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How did an outlandish conspiracy theory born on the fringes of the internet end up in the spotlight at a rally for President Trump? Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>How did an outlandish conspiracy theory born on the fringes of the internet end up in the spotlight at a rally for President Trump? Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dI5nDFik9Tmb5YtG4XSz_VaBNfpus4sl69A7QknYXLE</guid>
      <pubDate>Thu, 02 Aug 2018 09:51:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/13401b67-effa-4e49-bd5a-1377f01b2df7.mp3" type="audio/mpeg" length="18434507"/>
    </item>
    <item>
      <title>The Fight Over 3-D-Printed Guns</title>
      <description>
        <![CDATA[<p>Blueprints for making a variety of plastic guns, including AR-15-style rifles, on 3-D printers were scheduled to be posted online today. Who is the man behind their planned release, and why is the federal government taking his side? Guest: Tiffany Hsu, a business reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Fight Over 3-D-Printed Guns</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Blueprints for making a variety of plastic guns, including AR-15-style rifles, on 3-D printers were scheduled to be posted online today. Who is the man behind their planned release, and why is the federal government taking his side? Guest: Tiffany Hsu, a business reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Blueprints for making a variety of plastic guns, including AR-15-style rifles, on 3-D printers were scheduled to be posted online today. Who is the man behind their planned release, and why is the federal government taking his side? Guest: Tiffany Hsu, a business reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BJG5RIUii9TNF9t_sZqr2nqyn5yrDyN8NRVvaU8i8BQ</guid>
      <pubDate>Wed, 01 Aug 2018 09:53:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/acf48713-ca1c-4838-beaf-970c73aa3214.mp3" type="audio/mpeg" length="19081508"/>
    </item>
    <item>
      <title>The Democrats’ Comeback Plan</title>
      <description>
        <![CDATA[<p>Democrats are working on an election strategy for the 2018 midterms and beyond. It’s one that deliberately sounds less ambitious than it is. Guests: Representative Hakeem Jeffries, Democrat of New York; and Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Democrats’ Comeback Plan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Democrats are working on an election strategy for the 2018 midterms and beyond. It’s one that deliberately sounds less ambitious than it is. Guests: Representative Hakeem Jeffries, Democrat of New York; and Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Democrats are working on an election strategy for the 2018 midterms and beyond. It’s one that deliberately sounds less ambitious than it is. Guests: Representative Hakeem Jeffries, Democrat of New York; and Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lBakuSaNsIQIc87mjof-U449z9ZL7kqcE_5nJmrS5jw</guid>
      <pubDate>Tue, 31 Jul 2018 09:51:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/27404af5-7b67-46e9-897f-271477a945c4.mp3" type="audio/mpeg" length="25386422"/>
    </item>
    <item>
      <title>Why the A.C.L.U. Wants to Be More Like the N.R.A.</title>
      <description>
        <![CDATA[<p>For decades, the American Civil Liberties Union has battled in the courts on behalf of Americans’ constitutional rights, whether that means same-sex marriage or the right of neo-Nazis to hold a rally. But since the 2016 election, the A.C.L.U. has been changing tactics, and one of its models for the future is the National Rifle Association. Guest: Anthony Romero, the executive director of the A.C.L.U. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Why the A.C.L.U. Wants to Be More Like the N.R.A.</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For decades, the American Civil Liberties Union has battled in the courts on behalf of Americans’ constitutional rights, whether that means same-sex marriage or the right of neo-Nazis to hold a rally. But since the 2016 election, the A.C.L.U. has been changing tactics, and one of its models for the future is the National Rifle Association. Guest: Anthony Romero, the executive director of the A.C.L.U. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For decades, the American Civil Liberties Union has battled in the courts on behalf of Americans’ constitutional rights, whether that means same-sex marriage or the right of neo-Nazis to hold a rally. But since the 2016 election, the A.C.L.U. has been changing tactics, and one of its models for the future is the National Rifle Association. Guest: Anthony Romero, the executive director of the A.C.L.U. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-up_hYbZYdHrMAv1mufWohV2404J9OKaOYGZ6Hf0EQ0</guid>
      <pubDate>Mon, 30 Jul 2018 09:53:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/50830434-0549-4cca-94c5-d2fbdfe5c795.mp3" type="audio/mpeg" length="26018795"/>
    </item>
    <item>
      <title>The ‘Ineligible’ Families</title>
      <description>
        <![CDATA[<p>As it raced to meet a deadline for reunifying parents and children separated at the border, the Trump administration deemed hundreds of parents “ineligible.” What does it mean to be ineligible to be reunited with your own child? Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The ‘Ineligible’ Families</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As it raced to meet a deadline for reunifying parents and children separated at the border, the Trump administration deemed hundreds of parents “ineligible.” What does it mean to be ineligible to be reunited with your own child? Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As it raced to meet a deadline for reunifying parents and children separated at the border, the Trump administration deemed hundreds of parents “ineligible.” What does it mean to be ineligible to be reunited with your own child? Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3TR3170BCa7fLxdrWXJHFlveJvd-aHgvSC3_-amYmHw</guid>
      <pubDate>Fri, 27 Jul 2018 09:51:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/33ba289e-cfc9-40c1-aa40-1f5cfd45b381.mp3" type="audio/mpeg" length="21841293"/>
    </item>
    <item>
      <title>Which to Believe: Trump’s Words, or His Acts?</title>
      <description>
        <![CDATA[<p>Mike Pompeo, the secretary of state, testified on Wednesday before the Senate Foreign Relations Committee. The question that came to the fore: Is the United States’ policy toward Russia what the president says, or what the government does? Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Which to Believe: Trump’s Words, or His Acts?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Mike Pompeo, the secretary of state, testified on Wednesday before the Senate Foreign Relations Committee. The question that came to the fore: Is the United States’ policy toward Russia what the president says, or what the government does? Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Mike Pompeo, the secretary of state, testified on Wednesday before the Senate Foreign Relations Committee. The question that came to the fore: Is the United States’ policy toward Russia what the president says, or what the government does? Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ul-RMvi8Zse8QQM2hZwNrPhwdOFLlwSjjEP97HfgAzM</guid>
      <pubDate>Thu, 26 Jul 2018 09:57:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/45aa0a1f-8b3c-4fbc-bf08-f0892c8ecbe9.mp3" type="audio/mpeg" length="22761639"/>
    </item>
    <item>
      <title>The Tariff War</title>
      <description>
        <![CDATA[<p>President Trump announced a $12 billion bailout for American farmers hurt by tariffs. Why does the trade war he started, in part to help those farmers, now require taxpayers to save them? Guest: Ana Swanson, who covers trade for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Tariff War</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump announced a $12 billion bailout for American farmers hurt by tariffs. Why does the trade war he started, in part to help those farmers, now require taxpayers to save them? Guest: Ana Swanson, who covers trade for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump announced a $12 billion bailout for American farmers hurt by tariffs. Why does the trade war he started, in part to help those farmers, now require taxpayers to save them? Guest: Ana Swanson, who covers trade for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/IjqYb--MFp7BrrRR1DTW4KtoE5YZbxeIaUUqU-5VurE</guid>
      <pubDate>Wed, 25 Jul 2018 09:51:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c8e7a60c-a53e-4053-8d7c-374e7e19d42d.mp3" type="audio/mpeg" length="20258481"/>
    </item>
    <item>
      <title>Roe v. Wade, Part 2: The Culture Wars</title>
      <description>
        <![CDATA[<p>The Supreme Court ruled with little controversy in 1973 that women had a constitutional right to abortion. How did the decision give way to the deep and enduring political rifts we face today? Guest: Sabrina Tavernise, a New York Times correspondent who reported on the story of Roe v. Wade for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Roe v. Wade, Part 2: The Culture Wars</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Supreme Court ruled with little controversy in 1973 that women had a constitutional right to abortion. How did the decision give way to the deep and enduring political rifts we face today? Guest: Sabrina Tavernise, a New York Times correspondent who reported on the story of Roe v. Wade for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Supreme Court ruled with little controversy in 1973 that women had a constitutional right to abortion. How did the decision give way to the deep and enduring political rifts we face today? Guest: Sabrina Tavernise, a New York Times correspondent who reported on the story of Roe v. Wade for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VWYBnYj0l8l84EonHHk-WmC-FqBW-mVGN9DVd1voQIw</guid>
      <pubDate>Tue, 24 Jul 2018 09:58:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/554b70bc-483d-4f98-a878-528b48376444.mp3" type="audio/mpeg" length="32480862"/>
    </item>
    <item>
      <title>Roe v. Wade, Part 1: Who Was Jane Roe?</title>
      <description>
        <![CDATA[<p>The confirmation of Judge Brett M. Kavanaugh to the Supreme Court may hinge on a single ruling: Roe v. Wade, the 1973 decision that established a constitutional right to abortion in the United States. In a two-part series, “The Daily” takes a look at the history and legacy of the case. Guest: Sabrina Tavernise, a New York Times correspondent who reported on the story of Roe v. Wade for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Roe v. Wade, Part 1: Who Was Jane Roe?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The confirmation of Judge Brett M. Kavanaugh to the Supreme Court may hinge on a single ruling: Roe v. Wade, the 1973 decision that established a constitutional right to abortion in the United States. In a two-part series, “The Daily” takes a look at the history and legacy of the case. Guest: Sabrina Tavernise, a New York Times correspondent who reported on the story of Roe v. Wade for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The confirmation of Judge Brett M. Kavanaugh to the Supreme Court may hinge on a single ruling: Roe v. Wade, the 1973 decision that established a constitutional right to abortion in the United States. In a two-part series, “The Daily” takes a look at the history and legacy of the case. Guest: Sabrina Tavernise, a New York Times correspondent who reported on the story of Roe v. Wade for “The Daily.” For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lMsoN2A6brODoWeI9ssn3mWZngOgsLCAfnei1pDooTQ</guid>
      <pubDate>Mon, 23 Jul 2018 09:52:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e040a786-7c30-416c-9822-24c7c5a81e38.mp3" type="audio/mpeg" length="24710582"/>
    </item>
    <item>
      <title>Facebook’s Plan to Police the Truth</title>
      <description>
        <![CDATA[<p>The last time Facebook came under such intense scrutiny was when Mark Zuckerberg, the company’s chief executive, defended himself before Congress in April. But his latest policy on false news has turned the spotlight back to the social media giant. Guest: Kevin Roose, who covers technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Facebook’s Plan to Police the Truth</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The last time Facebook came under such intense scrutiny was when Mark Zuckerberg, the company’s chief executive, defended himself before Congress in April. But his latest policy on false news has turned the spotlight back to the social media giant. Guest: Kevin Roose, who covers technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The last time Facebook came under such intense scrutiny was when Mark Zuckerberg, the company’s chief executive, defended himself before Congress in April. But his latest policy on false news has turned the spotlight back to the social media giant. Guest: Kevin Roose, who covers technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sYN9oy6ouy6gQyHSrSENmXj1KcfVat3XaIUPfDMIItU</guid>
      <pubDate>Fri, 20 Jul 2018 09:42:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d82cf2aa-8b70-43cb-a2a1-6f70c0c5b4ab.mp3" type="audio/mpeg" length="24533786"/>
    </item>
    <item>
      <title>The Other Russian Interference</title>
      <description>
        <![CDATA[<p>Amid the chaos after the summit meeting between President Trump and President Vladimir V. Putin of Russia is a very different story of Russian interference, centered on the arrest of Maria Butina, a 29-year-old woman accused of being a Russian agent. Guest: Matthew Rosenberg, who covers intelligence and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Other Russian Interference</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Amid the chaos after the summit meeting between President Trump and President Vladimir V. Putin of Russia is a very different story of Russian interference, centered on the arrest of Maria Butina, a 29-year-old woman accused of being a Russian agent. Guest: Matthew Rosenberg, who covers intelligence and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Amid the chaos after the summit meeting between President Trump and President Vladimir V. Putin of Russia is a very different story of Russian interference, centered on the arrest of Maria Butina, a 29-year-old woman accused of being a Russian agent. Guest: Matthew Rosenberg, who covers intelligence and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6RHY9sGlLRFUsn44h9InpXD8YOWvrrMPEDsd6TsdUnY</guid>
      <pubDate>Thu, 19 Jul 2018 09:52:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/936e3b6b-6599-4f62-92d2-342a475e5758.mp3" type="audio/mpeg" length="19458925"/>
    </item>
    <item>
      <title>How Trump Withstands So Many Controversies</title>
      <description>
        <![CDATA[<p>The word “treason” is being thrown around to describe how President Trump seemed to take Russia’s side during his summit meeting with President Vladimir V. Putin in Helsinki, Finland. But as with every major controversy that Mr. Trump has faced, it’s unclear if anything will happen as a result. Guest: Maggie Haberman, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>How Trump Withstands So Many Controversies</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The word “treason” is being thrown around to describe how President Trump seemed to take Russia’s side during his summit meeting with President Vladimir V. Putin in Helsinki, Finland. But as with every major controversy that Mr. Trump has faced, it’s unclear if anything will happen as a result. Guest: Maggie Haberman, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The word “treason” is being thrown around to describe how President Trump seemed to take Russia’s side during his summit meeting with President Vladimir V. Putin in Helsinki, Finland. But as with every major controversy that Mr. Trump has faced, it’s unclear if anything will happen as a result. Guest: Maggie Haberman, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dt3s4w5PLa6vflWmr8dU1QwAIjwYzwEFcqHp3xQeWRE</guid>
      <pubDate>Wed, 18 Jul 2018 09:53:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b1fa175b-955c-41e9-b115-0a8e0a082406.mp3" type="audio/mpeg" length="20543111"/>
    </item>
    <item>
      <title>Trump Sides With Putin</title>
      <description>
        <![CDATA[<p>Standing next to President Vladimir V. Putin at the close of their summit meeting, President Trump challenged the conclusion of his own intelligence agencies: that Russia interfered in the 2016 presidential election. “They think it’s Russia,” Mr. Trump said. “I don’t see any reason why it would be.” Guest: Julie Hirschfeld Davis, a New York Times correspondent who reported on the meeting from Helsinki, Finland. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Trump Sides With Putin</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Standing next to President Vladimir V. Putin at the close of their summit meeting, President Trump challenged the conclusion of his own intelligence agencies: that Russia interfered in the 2016 presidential election. “They think it’s Russia,” Mr. Trump said. “I don’t see any reason why it would be.” Guest: Julie Hirschfeld Davis, a New York Times correspondent who reported on the meeting from Helsinki, Finland. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Standing next to President Vladimir V. Putin at the close of their summit meeting, President Trump challenged the conclusion of his own intelligence agencies: that Russia interfered in the 2016 presidential election. “They think it’s Russia,” Mr. Trump said. “I don’t see any reason why it would be.” Guest: Julie Hirschfeld Davis, a New York Times correspondent who reported on the meeting from Helsinki, Finland. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vFZgloiqLqTSdQ1ww5Ob5r6mzwF5mktypTpwSztMlXc</guid>
      <pubDate>Tue, 17 Jul 2018 09:52:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2c0137a7-7b4a-494f-9edd-ec63e2f0bd84.mp3" type="audio/mpeg" length="27278106"/>
    </item>
    <item>
      <title>Why Believing Putin Will Be Hard This Time</title>
      <description>
        <![CDATA[<p>President Trump has said in the past that he believes President Vladimir V. Putin of Russia “means it” when he denies Russian meddling in the 2016 election. But the indictment of 12 Russian military intelligence officers, handed down three days before the two leaders were scheduled to meet, tells a different story. Guest: Matt Apuzzo, a reporter for The New York Times in Washington, explains the indictment and how it may figure in the meeting between Mr. Trump and Mr. Putin. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Why Believing Putin Will Be Hard This Time</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has said in the past that he believes President Vladimir V. Putin of Russia “means it” when he denies Russian meddling in the 2016 election. But the indictment of 12 Russian military intelligence officers, handed down three days before the two leaders were scheduled to meet, tells a different story. Guest: Matt Apuzzo, a reporter for The New York Times in Washington, explains the indictment and how it may figure in the meeting between Mr. Trump and Mr. Putin. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has said in the past that he believes President Vladimir V. Putin of Russia “means it” when he denies Russian meddling in the 2016 election. But the indictment of 12 Russian military intelligence officers, handed down three days before the two leaders were scheduled to meet, tells a different story. Guest: Matt Apuzzo, a reporter for The New York Times in Washington, explains the indictment and how it may figure in the meeting between Mr. Trump and Mr. Putin. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HKU10CvBsFS2q6ZLdYacHsqnBJihvE8cFxE1dB9kPcM</guid>
      <pubDate>Mon, 16 Jul 2018 09:50:56 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0e3389e6-cfa6-4389-81ab-ead94ceb37af.mp3" type="audio/mpeg" length="22259670"/>
    </item>
    <item>
      <title>Why Peter Strzok Wanted to Testify</title>
      <description>
        <![CDATA[<p>After his text messages about President Trump were made public, Peter Strzok, a high-ranking F.B.I. agent who played a pivotal role in the Russia investigation, became a punching bag for Republican lawmakers. So why did he offer to testify before them? Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Why Peter Strzok Wanted to Testify</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After his text messages about President Trump were made public, Peter Strzok, a high-ranking F.B.I. agent who played a pivotal role in the Russia investigation, became a punching bag for Republican lawmakers. So why did he offer to testify before them? Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After his text messages about President Trump were made public, Peter Strzok, a high-ranking F.B.I. agent who played a pivotal role in the Russia investigation, became a punching bag for Republican lawmakers. So why did he offer to testify before them? Guest: Michael S. Schmidt, who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3hjWPyhRIe-Yy0ZCoEq-n-3x0oEVC0V9Ail_Cr_wMEA</guid>
      <pubDate>Fri, 13 Jul 2018 09:52:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/77957736-f9da-4de5-8079-c0d4cbd96a55.mp3" type="audio/mpeg" length="21236924"/>
    </item>
    <item>
      <title>The (Misunderstood) Story of NATO</title>
      <description>
        <![CDATA[<p>On a combative opening day of the NATO summit in Brussels, President Trump called other member countries “delinquent” on military spending and attacked Germany as a “captive” of Russia. We examine where his frustration is coming from. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “<a href="https://www.penguinrandomhouse.com/books/547683/the-perfect-weapon-by-david-e-sanger/9780451497895/" target="_blank">The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age</a>.” For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The (Misunderstood) Story of NATO</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On a combative opening day of the NATO summit in Brussels, President Trump called other member countries “delinquent” on military spending and attacked Germany as a “captive” of Russia. We examine where his frustration is coming from. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age.” For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>On a combative opening day of the NATO summit in Brussels, President Trump called other member countries “delinquent” on military spending and attacked Germany as a “captive” of Russia. We examine where his frustration is coming from. Guest: David E. Sanger, a national security correspondent for The New York Times and the author of “<a href="https://www.penguinrandomhouse.com/books/547683/the-perfect-weapon-by-david-e-sanger/9780451497895/" target="_blank">The Perfect Weapon: War, Sabotage, and Fear in the Cyber Age</a>.” For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9F5AB3CIsyWiTgNPrDOqgC2tqQugnFKkTfwnKZ9d0q0</guid>
      <pubDate>Thu, 12 Jul 2018 09:53:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f4012a48-f902-4f31-9492-896ab07ed83d.mp3" type="audio/mpeg" length="25689025"/>
    </item>
    <item>
      <title>Brett Kavanaugh’s Change of Heart</title>
      <description>
        <![CDATA[<p>Judge Brett Kavanaugh, who has been nominated to replace Justice Anthony Kennedy on the Supreme Court, once made the case for impeaching a president. He now says that was a mistake. Guest: Mark Landler, a White House correspondent for The New York Times, who examines why Judge Kavanaugh’s views have shifted. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Brett Kavanaugh’s Change of Heart</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Judge Brett Kavanaugh, who has been nominated to replace Justice Anthony Kennedy on the Supreme Court, once made the case for impeaching a president. He now says that was a mistake. Guest: Mark Landler, a White House correspondent for The New York Times, who examines why Judge Kavanaugh’s views have shifted. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Judge Brett Kavanaugh, who has been nominated to replace Justice Anthony Kennedy on the Supreme Court, once made the case for impeaching a president. He now says that was a mistake. Guest: Mark Landler, a White House correspondent for The New York Times, who examines why Judge Kavanaugh’s views have shifted. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kTczSdgqxg38BSnwLH8n7xhW19lE556TvZgA-jtE66M</guid>
      <pubDate>Wed, 11 Jul 2018 09:52:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1ae356d3-3310-4354-93b7-b34a951c169b.mp3" type="audio/mpeg" length="20824816"/>
    </item>
    <item>
      <title>Trump Picks Brett Kavanaugh</title>
      <description>
        <![CDATA[<p>President Trump has nominated Judge Brett Kavanaugh to replace Justice Anthony Kennedy on the Supreme Court. Given Judge Kavanaugh’s conservative record and the political math in the Senate, what happens now? Guests: Adam Liptak, who covers the Supreme Court for The New York Times, discusses the announcement; Carl Hulse, the chief Washington correspondent for The Times, assesses Judge Kavanaugh’s prospects for confirmation. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Trump Picks Brett Kavanaugh</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has nominated Judge Brett Kavanaugh to replace Justice Anthony Kennedy on the Supreme Court. Given Judge Kavanaugh’s conservative record and the political math in the Senate, what happens now? Guests: Adam Liptak, who covers the Supreme Court for The New York Times, discusses the announcement; Carl Hulse, the chief Washington correspondent for The Times, assesses Judge Kavanaugh’s prospects for confirmation. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has nominated Judge Brett Kavanaugh to replace Justice Anthony Kennedy on the Supreme Court. Given Judge Kavanaugh’s conservative record and the political math in the Senate, what happens now? Guests: Adam Liptak, who covers the Supreme Court for The New York Times, discusses the announcement; Carl Hulse, the chief Washington correspondent for The Times, assesses Judge Kavanaugh’s prospects for confirmation. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PIFQZrAa4CZRxwPQKdk1Kh7V1CeaLoIW1lcrdmyh3tU</guid>
      <pubDate>Tue, 10 Jul 2018 09:51:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2a07bdae-c96f-4662-a200-592dad86f163.mp3" type="audio/mpeg" length="22427271"/>
    </item>
    <item>
      <title>Trump’s Supreme Court Finalists</title>
      <description>
        <![CDATA[<p>President Trump is scheduled to announce his pick for a new Supreme Court justice at 9 p.m. Eastern. Here’s a look at the top candidates to replace Justice Anthony M. Kennedy. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Trump’s Supreme Court Finalists</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump is scheduled to announce his pick for a new Supreme Court justice at 9 p.m. Eastern. Here’s a look at the top candidates to replace Justice Anthony M. Kennedy. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump is scheduled to announce his pick for a new Supreme Court justice at 9 p.m. Eastern. Here’s a look at the top candidates to replace Justice Anthony M. Kennedy. Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PIsRNDnxuYBvSA2fJTg3zcZ7_TqB8e4bfNLSQooLAhE</guid>
      <pubDate>Mon, 09 Jul 2018 09:52:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3a40b7cb-8aad-4150-b8b2-2d4de206f4cc.mp3" type="audio/mpeg" length="21001195"/>
    </item>
    <item>
      <title>One Family’s Reunification Story</title>
      <description>
        <![CDATA[<p>Since President Trump ended the practice of separating migrant children from their parents, very few families have been reunited. Those that have are becoming national symbols. Guest: Annie Correal, a New York Times reporter who accompanied Yeni González, a migrant from Guatemala, on part of her journey to join her three children after more than five weeks apart. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>One Family’s Reunification Story</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Since President Trump ended the practice of separating migrant children from their parents, very few families have been reunited. Those that have are becoming national symbols. Guest: Annie Correal, a New York Times reporter who accompanied Yeni González, a migrant from Guatemala, on part of her journey to join her three children after more than five weeks apart. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Since President Trump ended the practice of separating migrant children from their parents, very few families have been reunited. Those that have are becoming national symbols. Guest: Annie Correal, a New York Times reporter who accompanied Yeni González, a migrant from Guatemala, on part of her journey to join her three children after more than five weeks apart. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/M1EqCei3Jn7bm-RhT_7l-0I2t7XayKqaNzOxsEYrmSY</guid>
      <pubDate>Fri, 06 Jul 2018 09:54:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/07183429-f013-4abf-96ee-3681510cc387.mp3" type="audio/mpeg" length="33460140"/>
    </item>
    <item>
      <title>How the Opioid Crisis Started</title>
      <description>
        <![CDATA[<p>Prosecutors, seeking to hold someone accountable for the opioid epidemic, have been targeting doctors, dealers and users themselves. But those who made billions of dollars from sales of OxyContin, a painkiller at the center of the crisis, have gone largely unpunished. Guest: Barry Meier, the author of “<a href="https://www.penguinrandomhouse.com/books/575714/pain-killer-by-barry-meier/9780525511106/" target="_blank">Pain Killer: An Empire of Deceit and the Origin of America’s Opioid Epidemic</a>,” who has reported on Purdue Pharma and the opioid crisis for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>How the Opioid Crisis Started</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Prosecutors, seeking to hold someone accountable for the opioid epidemic, have been targeting doctors, dealers and users themselves. But those who made billions of dollars from sales of OxyContin, a painkiller at the center of the crisis, have gone largely unpunished. Guest: Barry Meier, the author of “Pain Killer: An Empire of Deceit and the Origin of America’s Opioid Epidemic,” who has reported on Purdue Pharma and the opioid crisis for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Prosecutors, seeking to hold someone accountable for the opioid epidemic, have been targeting doctors, dealers and users themselves. But those who made billions of dollars from sales of OxyContin, a painkiller at the center of the crisis, have gone largely unpunished. Guest: Barry Meier, the author of “<a href="https://www.penguinrandomhouse.com/books/575714/pain-killer-by-barry-meier/9780525511106/" target="_blank">Pain Killer: An Empire of Deceit and the Origin of America’s Opioid Epidemic</a>,” who has reported on Purdue Pharma and the opioid crisis for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HLOE2ZiJZ1_1TchkYEeIstxjp3M-MObHs8PWYaj-Ad8</guid>
      <pubDate>Thu, 05 Jul 2018 09:51:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1458e155-7581-40d6-a962-3ebefea08e55.mp3" type="audio/mpeg" length="24775366"/>
    </item>
    <item>
      <title>Assigning Blame in the Opioid Epidemic</title>
      <description>
        <![CDATA[<p>United States prosecutors are looking to hold people criminally accountable for overdose deaths. They’re settling on unexpected targets: other users. Guests: Annie Brown, a producer for “The Daily,”&nbsp;speaks to Kimberly Elkins, whose fiancé, Aaron Rost, died of a fentanyl overdose; Krista Powell, Mr. Rost’s sister; and Rosa Goldensohn, who has reported on the opioid crisis for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Assigning Blame in the Opioid Epidemic</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>United States prosecutors are looking to hold people criminally accountable for overdose deaths. They’re settling on unexpected targets: other users. Guests: Annie Brown, a producer for “The Daily,” speaks to Kimberly Elkins, whose fiancé, Aaron Rost, died of a fentanyl overdose; Krista Powell, Mr. Rost’s sister; and Rosa Goldensohn, who has reported on the opioid crisis for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>United States prosecutors are looking to hold people criminally accountable for overdose deaths. They’re settling on unexpected targets: other users. Guests: Annie Brown, a producer for “The Daily,”&nbsp;speaks to Kimberly Elkins, whose fiancé, Aaron Rost, died of a fentanyl overdose; Krista Powell, Mr. Rost’s sister; and Rosa Goldensohn, who has reported on the opioid crisis for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ul5ubuocT6dl_0SUDc6t6Hr2YoOo8tzs72CZKHtQ7N4</guid>
      <pubDate>Tue, 03 Jul 2018 09:56:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0a80734d-7a5f-40a7-aa86-b501f023490a.mp3" type="audio/mpeg" length="28934478"/>
    </item>
    <item>
      <title>Susan Collins on Roe v. Wade and the Next Justice</title>
      <description>
        <![CDATA[<p>When Justice Anthony M. Kennedy announced last week that he would retire this summer, attention immediately turned to the few senators who are willing to break from their parties on major issues — and who may hold the fate of the next Supreme Court nominee in their hands. We speak to one of them. Guest: Senator Susan Collins, Republican of Maine. For more information on today’s episode, visit nytimes.com/thedaily.</p><p><em>Correction: An earlier version of this episode included a comment from Senator Susan Collins that misstated Americans’ views on the Supreme Court’s ruling in Roe v. Wade. While Americans are deeply divided on abortion rights, about 69 percent of adults oppose overturning the Supreme Court precedent; it is not “something like a 51-49” issue, as Ms. Collins said.</em></p>]]>
      </description>
      <itunes:title>Susan Collins on Roe v. Wade and the Next Justice</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When Justice Anthony M. Kennedy announced last week that he would retire this summer, attention immediately turned to the few senators who are willing to break from their parties on major issues — and who may hold the fate of the next Supreme Court nominee in their hands. We speak to one of them. Guest: Senator Susan Collins, Republican of Maine. For more information on today’s episode, visit nytimes.com/thedaily.

Correction: An earlier version of this episode included a comment from Senator Susan Collins that misstated Americans’ views on the Supreme Court’s ruling in Roe v. Wade. While Americans are deeply divided on abortion rights, about 69 percent of adults oppose overturning the Supreme Court precedent; it is not “something like a 51-49” issue, as Ms. Collins said.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When Justice Anthony M. Kennedy announced last week that he would retire this summer, attention immediately turned to the few senators who are willing to break from their parties on major issues — and who may hold the fate of the next Supreme Court nominee in their hands. We speak to one of them. Guest: Senator Susan Collins, Republican of Maine. For more information on today’s episode, visit nytimes.com/thedaily.</p><p><em>Correction: An earlier version of this episode included a comment from Senator Susan Collins that misstated Americans’ views on the Supreme Court’s ruling in Roe v. Wade. While Americans are deeply divided on abortion rights, about 69 percent of adults oppose overturning the Supreme Court precedent; it is not “something like a 51-49” issue, as Ms. Collins said.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/d3eaczImLQmLCpDfR_tSxhsWMjjVNMY4Kg_BYtqMvbA</guid>
      <pubDate>Mon, 02 Jul 2018 09:54:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bdaa2e08-e6ef-4987-b618-68a6085d890a.mp3" type="audio/mpeg" length="29718569"/>
    </item>
    <item>
      <title>Justice Kennedy’s Last Decision</title>
      <description>
        <![CDATA[<p>With Justice Anthony Kennedy announcing his retirement from the Supreme Court, little attention was paid to his final ruling. It’s one that could forever alter the role of labor unions. Guest: Noam Scheiber, who covers labor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Justice Kennedy’s Last Decision</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With Justice Anthony Kennedy announcing his retirement from the Supreme Court, little attention was paid to his final ruling. It’s one that could forever alter the role of labor unions. Guest: Noam Scheiber, who covers labor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>With Justice Anthony Kennedy announcing his retirement from the Supreme Court, little attention was paid to his final ruling. It’s one that could forever alter the role of labor unions. Guest: Noam Scheiber, who covers labor for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZwldVgeB6StgxtMckGc2uY5T9DVxjzozm30lyl6jOz0</guid>
      <pubDate>Fri, 29 Jun 2018 09:53:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ccbff058-66c4-4316-8eba-66c46dc75b77.mp3" type="audio/mpeg" length="21593025"/>
    </item>
    <item>
      <title>The Supreme Court Loses Its Swing Vote</title>
      <description>
        <![CDATA[<p>Justice Anthony Kennedy, often considered the Supreme Court’s ideological center, announced that he would retire this summer. His departure could fundamentally change the direction of the court. Guests: Adam Liptak, who covers the Supreme Court for The New York Times, and Sheryl Gay Stolberg, a congressional correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Supreme Court Loses Its Swing Vote</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Justice Anthony Kennedy, often considered the Supreme Court’s ideological center, announced that he would retire this summer. His departure could fundamentally change the direction of the court. Guests: Adam Liptak, who covers the Supreme Court for The New York Times, and Sheryl Gay Stolberg, a congressional correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Justice Anthony Kennedy, often considered the Supreme Court’s ideological center, announced that he would retire this summer. His departure could fundamentally change the direction of the court. Guests: Adam Liptak, who covers the Supreme Court for The New York Times, and Sheryl Gay Stolberg, a congressional correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zFGAlqAY7UyVwmp5FFZfm3ibDUFZvnoDtD0y6SNaiu4</guid>
      <pubDate>Thu, 28 Jun 2018 09:54:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/07be92e1-a144-451c-9f3e-fe73e5086404.mp3" type="audio/mpeg" length="26668721"/>
    </item>
    <item>
      <title>The Supreme Court Upholds Trump’s Travel Ban</title>
      <description>
        <![CDATA[<p>In a 5-to-4 vote, the Supreme Court upheld President Trump’s ban on travel into the United States by citizens of several predominantly Muslim countries. What does the decision say about the extent of the president’s power to control immigration? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Supreme Court Upholds Trump’s Travel Ban</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a 5-to-4 vote, the Supreme Court upheld President Trump’s ban on travel into the United States by citizens of several predominantly Muslim countries. What does the decision say about the extent of the president’s power to control immigration? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a 5-to-4 vote, the Supreme Court upheld President Trump’s ban on travel into the United States by citizens of several predominantly Muslim countries. What does the decision say about the extent of the president’s power to control immigration? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/E8QFJm_vKHEpVwGt3Mtfh3GuWzQUQeG6HKs-_GYmS20</guid>
      <pubDate>Wed, 27 Jun 2018 09:46:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1024ab60-5f77-44f9-a147-3c89a8b718b3.mp3" type="audio/mpeg" length="20184084"/>
    </item>
    <item>
      <title>The Rampant Problem of Pregnancy Discrimination, Part 2</title>
      <description>
        <![CDATA[<p>Many women are passed over for promotions and raises when they become pregnant. Part 2 of this series examines the subtle sidelining of pregnant women and mothers in corporate America. Guests: Natalie Kitroeff, who covers the economy for The New York Times, and Erin Murphy, who alleges that she was denied opportunities by her employer, Glencore, once she became a mother. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Rampant Problem of Pregnancy Discrimination, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Many women are passed over for promotions and raises when they become pregnant. Part 2 of this series examines the subtle sidelining of pregnant women and mothers in corporate America. Guests: Natalie Kitroeff, who covers the economy for The New York Times, and Erin Murphy, who alleges that she was denied opportunities by her employer, Glencore, once she became a mother. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Many women are passed over for promotions and raises when they become pregnant. Part 2 of this series examines the subtle sidelining of pregnant women and mothers in corporate America. Guests: Natalie Kitroeff, who covers the economy for The New York Times, and Erin Murphy, who alleges that she was denied opportunities by her employer, Glencore, once she became a mother. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VOaNj6vsYv8qIz7pTt_7oXJFQ_3F93H9ej9e4GEuAsM</guid>
      <pubDate>Wed, 27 Jun 2018 09:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f39c13cc-1c89-45bc-b707-5145e88592b2.mp3" type="audio/mpeg" length="20372584"/>
    </item>
    <item>
      <title>The Rampant Problem of Pregnancy Discrimination, Part 1</title>
      <description>
        <![CDATA[<p>A New York Times investigation finds that pregnancy discrimination is systematic and pervasive inside America’s biggest companies. For women with physically demanding jobs, the bias is often overt. Guests: Natalie Kitroeff, who covers the economy for The Times, and Otisha Woolbright, who lost her job at Walmart after asking about maternity leave. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Rampant Problem of Pregnancy Discrimination, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A New York Times investigation finds that pregnancy discrimination is systematic and pervasive inside America’s biggest companies. For women with physically demanding jobs, the bias is often overt. Guests: Natalie Kitroeff, who covers the economy for The Times, and Otisha Woolbright, who lost her job at Walmart after asking about maternity leave. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A New York Times investigation finds that pregnancy discrimination is systematic and pervasive inside America’s biggest companies. For women with physically demanding jobs, the bias is often overt. Guests: Natalie Kitroeff, who covers the economy for The Times, and Otisha Woolbright, who lost her job at Walmart after asking about maternity leave. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3_YFfHeRQiv5QtAtOBeO3nc5j4_7k8ySYTHqKI76UB8</guid>
      <pubDate>Tue, 26 Jun 2018 09:55:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b5095b08-9d93-4278-9ecd-0ed72e6967e9.mp3" type="audio/mpeg" length="21958321"/>
    </item>
    <item>
      <title>What Migrants Are Fleeing</title>
      <description>
        <![CDATA[<p>The Trump administration’s recent border policy is, in part, a response to the large numbers of migrants who have been making the journey to the United States from Central America. For many, staying in their native countries is no longer an option. Guest: Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>What Migrants Are Fleeing</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Trump administration’s recent border policy is, in part, a response to the large numbers of migrants who have been making the journey to the United States from Central America. For many, staying in their native countries is no longer an option. Guest: Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Trump administration’s recent border policy is, in part, a response to the large numbers of migrants who have been making the journey to the United States from Central America. For many, staying in their native countries is no longer an option. Guest: Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/T3OqzBqvf03fPTjoMihACAgswFbNVH2_GDOLd9wpRSI</guid>
      <pubDate>Mon, 25 Jun 2018 09:53:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7db29f8d-b187-49c4-ab92-eb312e939443.mp3" type="audio/mpeg" length="23976228"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 10</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer the last chapter of “Caliphate.” Rukmini asks: What does the future hold for the ISIS returnee who confessed to murder? And what does he believe now?</p><p>For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 10</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer the last chapter of “Caliphate.” Rukmini asks: What does the future hold for the ISIS returnee who confessed to murder? And what does he believe now?

For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer the last chapter of “Caliphate.” Rukmini asks: What does the future hold for the ISIS returnee who confessed to murder? And what does he believe now?</p><p>For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kKg0j_GLCrq8NLmiRLgHumpr0dMVsp8ru40RF_9xCPE</guid>
      <pubDate>Sat, 23 Jun 2018 09:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:32:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba94ac47-c7ad-45df-9cc1-e3a38faffdde.mp3" type="audio/mpeg" length="31593534"/>
    </item>
    <item>
      <title>The World Cup’s Mysterious Path to Russia</title>
      <description>
        <![CDATA[<p>The 2018 World Cup is now underway in Russia. The story of how it ended up there involves some names you might recognize: James Comey, Robert Mueller and Christopher Steele. Guest: Ken Bensinger, author of “<a href="http://www.simonandschuster.com/books/Red-Card/Ken-Bensinger/9781501133909" target="_blank">Red Card: How the U.S. Blew the Whistle on the World’s Biggest Sports Scandal</a>,” who <a href="https://www.nytimes.com/2018/06/07/opinion/sunday/world-cup-fifa-corruption-russia.html" target="_blank">has written about this story</a> for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The World Cup’s Mysterious Path to Russia</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The 2018 World Cup is now underway in Russia. The story of how it ended up there involves some names you might recognize: James Comey, Robert Mueller and Christopher Steele. Guest: Ken Bensinger, author of “Red Card: How the U.S. Blew the Whistle on the World’s Biggest Sports Scandal,” who has written about this story for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The 2018 World Cup is now underway in Russia. The story of how it ended up there involves some names you might recognize: James Comey, Robert Mueller and Christopher Steele. Guest: Ken Bensinger, author of “<a href="http://www.simonandschuster.com/books/Red-Card/Ken-Bensinger/9781501133909" target="_blank">Red Card: How the U.S. Blew the Whistle on the World’s Biggest Sports Scandal</a>,” who <a href="https://www.nytimes.com/2018/06/07/opinion/sunday/world-cup-fifa-corruption-russia.html" target="_blank">has written about this story</a> for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/r6Z79AeUH1xM0UJCyJuqNGUb324w7rGPGd0F5K2RFvw</guid>
      <pubDate>Fri, 22 Jun 2018 09:53:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7e22678f-5016-4fda-9d89-121e60ef9bce.mp3" type="audio/mpeg" length="24364512"/>
    </item>
    <item>
      <title>Trump Ends His Child Separation Practice</title>
      <description>
        <![CDATA[<p>President Trump signed an executive order to keep parents and children together at the border. What does it mean for his immigration policy — and for the families who have already been split apart? Guest: Caitlin Dickerson, a national immigration reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Trump Ends His Child Separation Practice</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump signed an executive order to keep parents and children together at the border. What does it mean for his immigration policy — and for the families who have already been split apart? Guest: Caitlin Dickerson, a national immigration reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump signed an executive order to keep parents and children together at the border. What does it mean for his immigration policy — and for the families who have already been split apart? Guest: Caitlin Dickerson, a national immigration reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/d9Bsb2rOwsZK-0mdQIWfDz-8m91FqUpLmhZqGCLfZ6o</guid>
      <pubDate>Thu, 21 Jun 2018 10:06:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0ccf7d8b-f7a6-4058-a704-2b0e92307232.mp3" type="audio/mpeg" length="20733701"/>
    </item>
    <item>
      <title>Father and Son, Forced Apart at the Border</title>
      <description>
        <![CDATA[<p>A 5-year-old boy named José and his father fled the violence in Honduras and headed to the United States. They were separated at the border. What has happened to them in the weeks since? Guest: Miriam Jordan, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Father and Son, Forced Apart at the Border</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A 5-year-old boy named José and his father fled the violence in Honduras and headed to the United States. They were separated at the border. What has happened to them in the weeks since? Guest: Miriam Jordan, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A 5-year-old boy named José and his father fled the violence in Honduras and headed to the United States. They were separated at the border. What has happened to them in the weeks since? Guest: Miriam Jordan, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MvyCRCTQYnrWKoV9FoJiMe0Y5ZctPhqmGpxQkIit0ZY</guid>
      <pubDate>Wed, 20 Jun 2018 09:54:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/280d892a-6102-4574-9dcf-3860252922ca.mp3" type="audio/mpeg" length="21930736"/>
    </item>
    <item>
      <title>How Separating Migrant Families Became U.S. Policy</title>
      <description>
        <![CDATA[<p>President Trump has blamed Democrats for his administration’s practice of taking children from their parents at the border. Why is one of his top aides, Stephen Miller, claiming credit? Guest: Julie Hirschfeld Davis, who covers the White House and immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>How Separating Migrant Families Became U.S. Policy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has blamed Democrats for his administration’s practice of taking children from their parents at the border. Why is one of his top aides, Stephen Miller, claiming credit? Guest: Julie Hirschfeld Davis, who covers the White House and immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has blamed Democrats for his administration’s practice of taking children from their parents at the border. Why is one of his top aides, Stephen Miller, claiming credit? Guest: Julie Hirschfeld Davis, who covers the White House and immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/F6biicsPRp7MG3otD5i1_pv_YqUjHuqq1HisRiE3oug</guid>
      <pubDate>Tue, 19 Jun 2018 09:57:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba1ab75a-ad42-4ea2-aa0d-31d1f29a083b.mp3" type="audio/mpeg" length="25558622"/>
    </item>
    <item>
      <title>Cracking Down on Leaks</title>
      <description>
        <![CDATA[<p>For a year and a half, President Trump has threatened to crack down on leaks and leakers. The seizure of emails and phone records from a reporter at The New York Times tells a great deal about what that might look like. Guest: Matt Apuzzo, a reporter for The Times in Washington who had his records subpoenaed during the Obama administration. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Cracking Down on Leaks</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For a year and a half, President Trump has threatened to crack down on leaks and leakers. The seizure of emails and phone records from a reporter at The New York Times tells a great deal about what that might look like. Guest: Matt Apuzzo, a reporter for The Times in Washington who had his records subpoenaed during the Obama administration. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For a year and a half, President Trump has threatened to crack down on leaks and leakers. The seizure of emails and phone records from a reporter at The New York Times tells a great deal about what that might look like. Guest: Matt Apuzzo, a reporter for The Times in Washington who had his records subpoenaed during the Obama administration. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CDAlFIWEqt3LHFsLHVVaX82FQN8nHIr8hLCffBH4sUg</guid>
      <pubDate>Mon, 18 Jun 2018 09:53:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/28aceb5e-1abf-45c7-9902-0c5260c54d06.mp3" type="audio/mpeg" length="22994442"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 9, Part 2</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 9, Part 2 of “Caliphate,” in which a young Yazidi girl returns to her family after three years in ISIS captivity, and Rukmini is there to witness it. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 9, Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 9, Part 2 of “Caliphate,” in which a young Yazidi girl returns to her family after three years in ISIS captivity, and Rukmini is there to witness it. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 9, Part 2 of “Caliphate,” in which a young Yazidi girl returns to her family after three years in ISIS captivity, and Rukmini is there to witness it. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/cU6u0AjDzAm90F5GC1TY6vQBnX_DMvT35LVQ4ouHUPc</guid>
      <pubDate>Sat, 16 Jun 2018 09:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3db02d7d-1667-4e04-9cd8-da4c94a6f895.mp3" type="audio/mpeg" length="25794351"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 9, Part 1</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 9, Part 1 of “Caliphate,” in which Rukmini speaks to an ISIS detainee who challenges her to find the girl he enslaved. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 9, Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 9, Part 1 of “Caliphate,” in which Rukmini speaks to an ISIS detainee who challenges her to find the girl he enslaved. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 9, Part 1 of “Caliphate,” in which Rukmini speaks to an ISIS detainee who challenges her to find the girl he enslaved. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/q-z3ixe8CrZ12pzvoFq7Pa4HkE6h5310kx0vduMa6kw</guid>
      <pubDate>Sat, 16 Jun 2018 09:40:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cdecaef2-5e50-4401-bdde-983c8eb626d0.mp3" type="audio/mpeg" length="26196427"/>
    </item>
    <item>
      <title>The Report on the F.B.I.’s Clinton Inquiry</title>
      <description>
        <![CDATA[<p>The Justice Department’s inspector general released a long-awaited document on Thursday on the F.B.I. investigation of Hillary Clinton during the 2016 presidential election. The findings could be both good and bad for President Trump. Guest: Matt Apuzzo, who covers national security for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>The Report on the F.B.I.’s Clinton Inquiry</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Justice Department’s inspector general released a long-awaited document on Thursday on the F.B.I. investigation of Hillary Clinton during the 2016 presidential election. The findings could be both good and bad for President Trump. Guest: Matt Apuzzo, who covers national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Justice Department’s inspector general released a long-awaited document on Thursday on the F.B.I. investigation of Hillary Clinton during the 2016 presidential election. The findings could be both good and bad for President Trump. Guest: Matt Apuzzo, who covers national security for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Sg0i-HR-_4G812sCJTYRr7gYq2StVPuBFNN6DsgT8vs</guid>
      <pubDate>Fri, 15 Jun 2018 09:52:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bf082e6a-fa68-4e99-9b0b-da52c74cda73.mp3" type="audio/mpeg" length="21618520"/>
    </item>
    <item>
      <title>The Narrowing Path to Asylum</title>
      <description>
        <![CDATA[<p>The Trump administration has said that domestic abuse is no longer grounds for receiving permission to stay in the United States. We share one asylum seeker’s story. Guest: Mariam, a survivor of domestic violence who arrived in the United States from Burkina Faso, and who asked not to be identified by her real name. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Narrowing Path to Asylum</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Trump administration has said that domestic abuse is no longer grounds for receiving permission to stay in the United States. We share one asylum seeker’s story. Guest: Mariam, a survivor of domestic violence who arrived in the United States from Burkina Faso, and who asked not to be identified by her real name. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Trump administration has said that domestic abuse is no longer grounds for receiving permission to stay in the United States. We share one asylum seeker’s story. Guest: Mariam, a survivor of domestic violence who arrived in the United States from Burkina Faso, and who asked not to be identified by her real name. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/iBBm3B6V7AAMAlFIwQfa9g1y6rauwZLq2_urNIPcEbA</guid>
      <pubDate>Thu, 14 Jun 2018 09:56:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7985fddf-6c4d-47ed-bd62-e4ccb00ee571.mp3" type="audio/mpeg" length="23294955"/>
    </item>
    <item>
      <title>What Trump Gave Kim</title>
      <description>
        <![CDATA[<p>In a joint statement, President Trump and the North Korean leader, Kim Jong-un, committed to complete denuclearization of the Korean Peninsula. Why is a seemingly significant promise being dismissed by critics as meaningless? Guest: Nicholas Kristof, an Op-Ed columnist for The New York Times who writes about human rights and global affairs, and who has repeatedly traveled to North Korea. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>What Trump Gave Kim</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a joint statement, President Trump and the North Korean leader, Kim Jong-un, committed to complete denuclearization of the Korean Peninsula. Why is a seemingly significant promise being dismissed by critics as meaningless? Guest: Nicholas Kristof, an Op-Ed columnist for The New York Times who writes about human rights and global affairs, and who has repeatedly traveled to North Korea. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a joint statement, President Trump and the North Korean leader, Kim Jong-un, committed to complete denuclearization of the Korean Peninsula. Why is a seemingly significant promise being dismissed by critics as meaningless? Guest: Nicholas Kristof, an Op-Ed columnist for The New York Times who writes about human rights and global affairs, and who has repeatedly traveled to North Korea. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LWuEDMADsWwvBwsie9Ulzg6ZL_OpJDvUQPAACeUvNls</guid>
      <pubDate>Wed, 13 Jun 2018 09:55:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/69f1e1d3-d4bb-4439-998c-9c8f5ecd64d9.mp3" type="audio/mpeg" length="18828225"/>
    </item>
    <item>
      <title>A Historic Handshake</title>
      <description>
        <![CDATA[<p>For the first time ever, a sitting president of the United States has met with a North Korean leader. Was the handshake between President Trump and Kim Jong-un a beginning or an end? Guest: Mark Landler, a White House correspondent for The New York Times, who is reporting on the summit meeting from Singapore. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>A Historic Handshake</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For the first time ever, a sitting president of the United States has met with a North Korean leader. Was the handshake between President Trump and Kim Jong-un a beginning or an end? Guest: Mark Landler, a White House correspondent for The New York Times, who is reporting on the summit meeting from Singapore. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For the first time ever, a sitting president of the United States has met with a North Korean leader. Was the handshake between President Trump and Kim Jong-un a beginning or an end? Guest: Mark Landler, a White House correspondent for The New York Times, who is reporting on the summit meeting from Singapore. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Km8vmbt-R_FG_YLmEo5CDEV6jOOcpOgIfNYoYMJqKIs</guid>
      <pubDate>Tue, 12 Jun 2018 09:57:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/830958ce-00c4-49a9-ab39-167739015970.mp3" type="audio/mpeg" length="24619467"/>
    </item>
    <item>
      <title>Alienating Allies and Wooing Enemies</title>
      <description>
        <![CDATA[<p>While on his way to the historic summit meeting with Kim Jong-un of North Korea, President Trump isolated himself from other world leaders by refusing to endorse a joint statement of the Group of 7 nations, which had just met in Canada. Why is the president picking fights with America’s closest allies and embracing its longtime opponents? Guest: Mark Landler, a White House correspondent for The New York Times, who is reporting from Singapore on the talks between Mr. Trump and Mr. Kim. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Alienating Allies and Wooing Enemies</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>While on his way to the historic summit meeting with Kim Jong-un of North Korea, President Trump isolated himself from other world leaders by refusing to endorse a joint statement of the Group of 7 nations, which had just met in Canada. Why is the president picking fights with America’s closest allies and embracing its longtime opponents? Guest: Mark Landler, a White House correspondent for The New York Times, who is reporting from Singapore on the talks between Mr. Trump and Mr. Kim. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>While on his way to the historic summit meeting with Kim Jong-un of North Korea, President Trump isolated himself from other world leaders by refusing to endorse a joint statement of the Group of 7 nations, which had just met in Canada. Why is the president picking fights with America’s closest allies and embracing its longtime opponents? Guest: Mark Landler, a White House correspondent for The New York Times, who is reporting from Singapore on the talks between Mr. Trump and Mr. Kim. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Q0PYUYa_NFsIPwzPxIwPFaks3lzBtY8QuvQfFL2zxmo</guid>
      <pubDate>Mon, 11 Jun 2018 09:51:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/36def4f9-5a68-434b-a921-b3a56e660de6.mp3" type="audio/mpeg" length="23518563"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 8</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 8 of “Caliphate,” in which Rukmini finds a trove of secret documents that lead her to the mother of an ISIS official. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 8</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 8 of “Caliphate,” in which Rukmini finds a trove of secret documents that lead her to the mother of an ISIS official. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 8 of “Caliphate,” in which Rukmini finds a trove of secret documents that lead her to the mother of an ISIS official. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZCDO2HC3H38dp8pnTnR44-qcqCa3HQ3a9fNQl4IUY70</guid>
      <pubDate>Sat, 09 Jun 2018 09:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ec943252-3ec0-46a5-b39e-69bb6755b67a.mp3" type="audio/mpeg" length="33297972"/>
    </item>
    <item>
      <title>“Charm City,” Part 5: What’s Behind the Black Box?</title>
      <description>
        <![CDATA[<p>The relatives of a Baltimore teenager think they know the name of the police officer who killed him. But when the police show his mother the surveillance video that captured his final moments, a new story emerges. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>“Charm City,” Part 5: What’s Behind the Black Box?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The relatives of a Baltimore teenager think they know the name of the police officer who killed him. But when the police show his mother the surveillance video that captured his final moments, a new story emerges. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The relatives of a Baltimore teenager think they know the name of the police officer who killed him. But when the police show his mother the surveillance video that captured his final moments, a new story emerges. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/K7UrKe3emTeIr8Z-8PXK7-iI4vIWm47sjpTcJw-YOoo</guid>
      <pubDate>Fri, 08 Jun 2018 10:20:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>01:05:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/44de626b-570b-48bf-a726-96f39e06ad6c.mp3" type="audio/mpeg" length="62453133"/>
    </item>
    <item>
      <title>“Charm City,” Part 4: The Police Scandal That Shook Baltimore</title>
      <description>
        <![CDATA[<p>As the Baltimore Police Department tried to repair its public image, a corruption trial exposed the startling depths of misconduct and delivered a fresh blow to the community’s trust. An elite group of officers — part of a task force created during the peak of zero-tolerance policing — had been stealing from residents for years. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>“Charm City,” Part 4: The Police Scandal That Shook Baltimore</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the Baltimore Police Department tried to repair its public image, a corruption trial exposed the startling depths of misconduct and delivered a fresh blow to the community’s trust. An elite group of officers — part of a task force created during the peak of zero-tolerance policing — had been stealing from residents for years. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the Baltimore Police Department tried to repair its public image, a corruption trial exposed the startling depths of misconduct and delivered a fresh blow to the community’s trust. An elite group of officers — part of a task force created during the peak of zero-tolerance policing — had been stealing from residents for years. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HmwpOiWYNf9LeXZyN-Vg3nRR3VPyEaBkwIDDww9JY4E</guid>
      <pubDate>Thu, 07 Jun 2018 09:53:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:41:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/42fb72ed-880d-48be-9acb-8aff98134bcf.mp3" type="audio/mpeg" length="39758367"/>
    </item>
    <item>
      <title>“Charm City,” Part 3: The Lure of the Streets</title>
      <description>
        <![CDATA[<p>Nook spent the first few years of his life in an affluent suburb, a world away from the streets of Baltimore. But the city drew him back, and he and his friends became part of a generation caught between the crack epidemic that consumed their neighborhoods and the aggressive police tactics meant to fix the problem. For more information on today’s episode, visit nytimes.com/thedaily. </p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>“Charm City,” Part 3: The Lure of the Streets</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nook spent the first few years of his life in an affluent suburb, a world away from the streets of Baltimore. But the city drew him back, and he and his friends became part of a generation caught between the crack epidemic that consumed their neighborhoods and the aggressive police tactics meant to fix the problem. For more information on today’s episode, visit nytimes.com/thedaily. 

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nook spent the first few years of his life in an affluent suburb, a world away from the streets of Baltimore. But the city drew him back, and he and his friends became part of a generation caught between the crack epidemic that consumed their neighborhoods and the aggressive police tactics meant to fix the problem. For more information on today’s episode, visit nytimes.com/thedaily. </p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/P6HngtrHvbNuW8HljiwOI90T09OxdyuuHMzDG4dgXf8</guid>
      <pubDate>Wed, 06 Jun 2018 09:55:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:42:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/92c84981-badd-438a-bc60-5ac07dc962b6.mp3" type="audio/mpeg" length="40834194"/>
    </item>
    <item>
      <title>“Charm City,” Part 2: The Legacy of Zero-Tolerance Policing</title>
      <description>
        <![CDATA[<p>Relations between the police and the community in Baltimore weren’t always so troubled. But as job loss and drugs tore through the city, the policing idea of so-called zero tolerance, transplanted from New York City, created a generation of young men with criminal records. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>“Charm City,” Part 2: The Legacy of Zero-Tolerance Policing</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Relations between the police and the community in Baltimore weren’t always so troubled. But as job loss and drugs tore through the city, the policing idea of so-called zero tolerance, transplanted from New York City, created a generation of young men with criminal records. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Relations between the police and the community in Baltimore weren’t always so troubled. But as job loss and drugs tore through the city, the policing idea of so-called zero tolerance, transplanted from New York City, created a generation of young men with criminal records. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GOJqxqDhu3voJDCjwFQO37jTMMLVnbA2CvsfHAGlCb0</guid>
      <pubDate>Tue, 05 Jun 2018 09:50:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:45:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/18fedeba-9b4f-43ed-a19f-e6a8341178fa.mp3" type="audio/mpeg" length="44024894"/>
    </item>
    <item>
      <title>“Charm City,” Part 1: Baltimore After Freddie Gray</title>
      <description>
        <![CDATA[<p>“The Daily” presents a five-part series about the life and death of a Baltimore teenager known as Nook, who was fatally shot by a police officer a year after the killing of Freddie Gray. Nook’s family is searching for truth from the streets where he died, the police who took his life and the city that won’t give them answers. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>“Charm City,” Part 1: Baltimore After Freddie Gray</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“The Daily” presents a five-part series about the life and death of a Baltimore teenager known as Nook, who was fatally shot by a police officer a year after the killing of Freddie Gray. Nook’s family is searching for truth from the streets where he died, the police who took his life and the city that won’t give them answers. For more information on today’s episode, visit nytimes.com/thedaily.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>“The Daily” presents a five-part series about the life and death of a Baltimore teenager known as Nook, who was fatally shot by a police officer a year after the killing of Freddie Gray. Nook’s family is searching for truth from the streets where he died, the police who took his life and the city that won’t give them answers. For more information on today’s episode, visit nytimes.com/thedaily.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/AwhRMaElTiLal5Awzlb_BVtWBH0CY54Hqzo4ZpNetvk</guid>
      <pubDate>Mon, 04 Jun 2018 10:01:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:45:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f73ece67-8c0d-4abf-8a43-52d1184d7b84.mp3" type="audio/mpeg" length="43412166"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 7</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 7 of “Caliphate,” in which Rukmini examines what ISIS left behind as their hold on Mosul crumbled. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 7</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 7 of “Caliphate,” in which Rukmini examines what ISIS left behind as their hold on Mosul crumbled. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 7 of “Caliphate,” in which Rukmini examines what ISIS left behind as their hold on Mosul crumbled. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3TuL6ruefsr6UMAmW6pbm897lMtKcT0FbER2Yr3QgHw</guid>
      <pubDate>Sat, 02 Jun 2018 09:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b5dc6189-89ad-4cf5-bfb2-08c470f103ae.mp3" type="audio/mpeg" length="34390517"/>
    </item>
    <item>
      <title>When Democratic Newcomers Challenge the Party Line</title>
      <description>
        <![CDATA[<p>Alarm over the election of Donald Trump spurred dozens of first-time candidates to run for Congress. Some of those candidates now present a problem for the Democratic Party. Guests: Mai Khanh Tran, a Democratic candidate running for the United States House in California; Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>When Democratic Newcomers Challenge the Party Line</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Alarm over the election of Donald Trump spurred dozens of first-time candidates to run for Congress. Some of those candidates now present a problem for the Democratic Party. Guests: Mai Khanh Tran, a Democratic candidate running for the United States House in California; Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Alarm over the election of Donald Trump spurred dozens of first-time candidates to run for Congress. Some of those candidates now present a problem for the Democratic Party. Guests: Mai Khanh Tran, a Democratic candidate running for the United States House in California; Alexander Burns, who covers national politics for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Ijmcd6l1IaTllFFsQIbtyP-JMx7diewo0A60N17J_Bo</guid>
      <pubDate>Fri, 01 Jun 2018 09:51:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/db018036-0276-4d2b-aea1-4d65fa810578.mp3" type="audio/mpeg" length="24314775"/>
    </item>
    <item>
      <title>The Truth Behind #WhereAreTheChildren</title>
      <description>
        <![CDATA[<p>The United States government lost track of nearly 1,500 undocumented children in the last three months of 2017, giving rise to claims that they had been separated from their families at the border. What does the confusion reveal about President Trump’s approach to immigration? Guest: Caitlin Dickerson, a national immigration reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Truth Behind #WhereAreTheChildren</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States government lost track of nearly 1,500 undocumented children in the last three months of 2017, giving rise to claims that they had been separated from their families at the border. What does the confusion reveal about President Trump’s approach to immigration? Guest: Caitlin Dickerson, a national immigration reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States government lost track of nearly 1,500 undocumented children in the last three months of 2017, giving rise to claims that they had been separated from their families at the border. What does the confusion reveal about President Trump’s approach to immigration? Guest: Caitlin Dickerson, a national immigration reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/hmWFXxvvE27ZH9QGH1srgmswPMdvKWk3bylL539tUH0</guid>
      <pubDate>Thu, 31 May 2018 09:55:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/08989fab-14e8-4a63-9944-acc3271c1926.mp3" type="audio/mpeg" length="19472300"/>
    </item>
    <item>
      <title>Was Kevin Cooper Framed for Murder?</title>
      <description>
        <![CDATA[<p>The sole survivor of an attack in which four people were murdered identified the perpetrators as three white men. The police ignored suspects who fit the description and arrested a young black man instead. He is now awaiting execution. Guests: Kevin Cooper, who has been on death row at San Quentin State Prison in California for three decades; Nicholas Kristof, a New York Times columnist who has written about Mr. Cooper’s case. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Was Kevin Cooper Framed for Murder?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The sole survivor of an attack in which four people were murdered identified the perpetrators as three white men. The police ignored suspects who fit the description and arrested a young black man instead. He is now awaiting execution. Guests: Kevin Cooper, who has been on death row at San Quentin State Prison in California for three decades; Nicholas Kristof, a New York Times columnist who has written about Mr. Cooper’s case. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The sole survivor of an attack in which four people were murdered identified the perpetrators as three white men. The police ignored suspects who fit the description and arrested a young black man instead. He is now awaiting execution. Guests: Kevin Cooper, who has been on death row at San Quentin State Prison in California for three decades; Nicholas Kristof, a New York Times columnist who has written about Mr. Cooper’s case. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rU3vXEtJKXLVmZKTpiH9jsZ1MFQtDLpUbfYKNO9utGA</guid>
      <pubDate>Wed, 30 May 2018 09:55:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a36207e4-776a-4915-bc54-91ca311abbab.mp3" type="audio/mpeg" length="23873828"/>
    </item>
    <item>
      <title>What Trump Learned From Clinton’s Impeachment</title>
      <description>
        <![CDATA[<p>Twenty years ago, President Bill Clinton survived impeachment after casting himself as the target of partisan motives. What lessons has President Trump gleaned from that strategy? Guest: Peter Baker, the chief White House correspondent for The New York Times, who covered the investigation and impeachment of Mr. Clinton. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>What Trump Learned From Clinton’s Impeachment</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Twenty years ago, President Bill Clinton survived impeachment after casting himself as the target of partisan motives. What lessons has President Trump gleaned from that strategy? Guest: Peter Baker, the chief White House correspondent for The New York Times, who covered the investigation and impeachment of Mr. Clinton. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Twenty years ago, President Bill Clinton survived impeachment after casting himself as the target of partisan motives. What lessons has President Trump gleaned from that strategy? Guest: Peter Baker, the chief White House correspondent for The New York Times, who covered the investigation and impeachment of Mr. Clinton. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Fv-jWt_imZ-USjciU2s39g6CoLpQm5wd4YgCeaUCq8U</guid>
      <pubDate>Tue, 29 May 2018 09:54:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a4bcdb17-8d8c-4af0-8c1b-0f1a4cbbfcb2.mp3" type="audio/mpeg" length="23732976"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 6</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 6 of “Caliphate,” in which Rukmini’s doubt fuels a quest to uncover the truth. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 6</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 6 of “Caliphate,” in which Rukmini’s doubt fuels a quest to uncover the truth. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 6 of “Caliphate,” in which Rukmini’s doubt fuels a quest to uncover the truth. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RLivxjTSL5xajLstA90UexT4-YZvH4i6pLMDkvGbdiI</guid>
      <pubDate>Sat, 26 May 2018 09:52:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:44:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ae6afb7e-151d-43b0-b084-0a05787eeb0f.mp3" type="audio/mpeg" length="42729221"/>
    </item>
    <item>
      <title>“Dear Mr. Chairman …”</title>
      <description>
        <![CDATA[<p>President Trump abruptly canceled on Thursday the highly anticipated summit meeting with Kim Jong-un, the leader of North Korea, that was scheduled to take place on June 12. In a letter to Mr. Kim announcing his decision, Mr. Trump wrote, “The world, and North Korea in particular, has lost a great opportunity for lasting peace.” Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>“Dear Mr. Chairman …”</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump abruptly canceled on Thursday the highly anticipated summit meeting with Kim Jong-un, the leader of North Korea, that was scheduled to take place on June 12. In a letter to Mr. Kim announcing his decision, Mr. Trump wrote, “The world, and North Korea in particular, has lost a great opportunity for lasting peace.” Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump abruptly canceled on Thursday the highly anticipated summit meeting with Kim Jong-un, the leader of North Korea, that was scheduled to take place on June 12. In a letter to Mr. Kim announcing his decision, Mr. Trump wrote, “The world, and North Korea in particular, has lost a great opportunity for lasting peace.” Guest: Mark Landler, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2xXPH4mNSgFowYHlacLao0LlbYknrHLJ__3j8BvYSo8</guid>
      <pubDate>Fri, 25 May 2018 09:56:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7812ebc5-32e6-4181-bc48-40465707183b.mp3" type="audio/mpeg" length="21308813"/>
    </item>
    <item>
      <title>Putting “Fake News” on Trial</title>
      <description>
        <![CDATA[<p>The families of children killed at Sandy Hook Elementary School in Newtown, Conn., in 2012 are suing a conspiracy theorist who claims the massacre was a hoax. Their lawsuits are bringing the issue of “fake news” to the courts. Guest: Elizabeth Williamson, a reporter in the Washington bureau of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </p>]]>
      </description>
      <itunes:title>Putting “Fake News” on Trial</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The families of children killed at Sandy Hook Elementary School in Newtown, Conn., in 2012 are suing a conspiracy theorist who claims the massacre was a hoax. Their lawsuits are bringing the issue of “fake news” to the courts. Guest: Elizabeth Williamson, a reporter in the Washington bureau of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The families of children killed at Sandy Hook Elementary School in Newtown, Conn., in 2012 are suing a conspiracy theorist who claims the massacre was a hoax. Their lawsuits are bringing the issue of “fake news” to the courts. Guest: Elizabeth Williamson, a reporter in the Washington bureau of The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dy44EwAEjD1_JOIaFxF455FHTOEu7-JUL2mdzyv1MbQ</guid>
      <pubDate>Thu, 24 May 2018 10:03:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0847720f-6208-4e5a-8027-106252a9d851.mp3" type="audio/mpeg" length="21991758"/>
    </item>
    <item>
      <title>A Crossroads for the Democratic Party</title>
      <description>
        <![CDATA[<p>In Georgia, two women were locked in a close race for the Democratic nomination for governor. What does this primary tell us about the future of the Democratic Party? Guest: Jonathan Martin, a national political correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>A Crossroads for the Democratic Party</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In Georgia, two women were locked in a close race for the Democratic nomination for governor. What does this primary tell us about the future of the Democratic Party? Guest: Jonathan Martin, a national political correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In Georgia, two women were locked in a close race for the Democratic nomination for governor. What does this primary tell us about the future of the Democratic Party? Guest: Jonathan Martin, a national political correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/u6G_uyb5Z3-cmgpwYl4KNcQBvN88JwXuAQb5VrPfoWE</guid>
      <pubDate>Wed, 23 May 2018 09:54:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/29e0c1bf-a877-4747-97d5-92bf11934b32.mp3" type="audio/mpeg" length="19619004"/>
    </item>
    <item>
      <title>Rod Rosenstein’s Impossible Choice</title>
      <description>
        <![CDATA[<p>President Trump has asked the Justice Department to look into whether the F.B.I. infiltrated his campaign in 2016 for political purposes. In response, the department granted the president’s team access to highly classified information from the special counsel’s Russia investigation. What’s behind this decision? Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Rod Rosenstein’s Impossible Choice</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has asked the Justice Department to look into whether the F.B.I. infiltrated his campaign in 2016 for political purposes. In response, the department granted the president’s team access to highly classified information from the special counsel’s Russia investigation. What’s behind this decision? Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has asked the Justice Department to look into whether the F.B.I. infiltrated his campaign in 2016 for political purposes. In response, the department granted the president’s team access to highly classified information from the special counsel’s Russia investigation. What’s behind this decision? Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/01kqPH2PV81jjord8XKErd_RDx1HGMRmS51Lyaq-NBw</guid>
      <pubDate>Tue, 22 May 2018 09:51:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3cb87a77-7286-4a06-8eda-faeb55d44d36.mp3" type="audio/mpeg" length="19235735"/>
    </item>
    <item>
      <title>North Korea’s Fear? Becoming Libya</title>
      <description>
        <![CDATA[<p>John R. Bolton, President Trump’s new national security adviser, has said that negotiations with North Korea should follow “the Libya model.” Now, North Korea is threatening to call off the planned summit meeting with Mr. Trump. What risks does the Libya model hold for Kim Jong-un? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>North Korea’s Fear? Becoming Libya</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>John R. Bolton, President Trump’s new national security adviser, has said that negotiations with North Korea should follow “the Libya model.” Now, North Korea is threatening to call off the planned summit meeting with Mr. Trump. What risks does the Libya model hold for Kim Jong-un? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>John R. Bolton, President Trump’s new national security adviser, has said that negotiations with North Korea should follow “the Libya model.” Now, North Korea is threatening to call off the planned summit meeting with Mr. Trump. What risks does the Libya model hold for Kim Jong-un? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1yLci2u2hmGOGIQ0sHhPtjN1KmcAdTSMHb9yRtcVYyw</guid>
      <pubDate>Mon, 21 May 2018 09:55:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8ba026ae-7e57-4fbc-bf19-31b2e79c1456.mp3" type="audio/mpeg" length="22912522"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 5</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 5 of “Caliphate,” in which an ISIS recruit carries out a killing — then questions everything. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 5</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 5 of “Caliphate,” in which an ISIS recruit carries out a killing — then questions everything. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 5 of “Caliphate,” in which an ISIS recruit carries out a killing — then questions everything. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/D5VasvFYiK11Fw50N-uOzwjm_ilPPkjmnLfJcaIjK-g</guid>
      <pubDate>Sat, 19 May 2018 09:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c867f985-7cce-4d6d-9914-1ed43b1fc8e4.mp3" type="audio/mpeg" length="21214772"/>
    </item>
    <item>
      <title>Does Mueller Have a Plan for Trump?</title>
      <description>
        <![CDATA[<p>White House lawyers have claimed that Robert S. Mueller III, the special counsel overseeing the Russia investigation, will not indict the president, regardless of his findings. If that’s true, then what is the purpose of his inquiry? Guest: Michael S. Schmidt, a Washington correspondent who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Does Mueller Have a Plan for Trump?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>White House lawyers have claimed that Robert S. Mueller III, the special counsel overseeing the Russia investigation, will not indict the president, regardless of his findings. If that’s true, then what is the purpose of his inquiry? Guest: Michael S. Schmidt, a Washington correspondent who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>White House lawyers have claimed that Robert S. Mueller III, the special counsel overseeing the Russia investigation, will not indict the president, regardless of his findings. If that’s true, then what is the purpose of his inquiry? Guest: Michael S. Schmidt, a Washington correspondent who covers national security and federal investigations for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KJ3d6q8y0CqZRtpx7YsnHB8sQ3BV-8qao7cwNCdh5Gs</guid>
      <pubDate>Fri, 18 May 2018 09:55:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/596e9a2f-c5c7-47fe-99f0-b0421061def3.mp3" type="audio/mpeg" length="19295503"/>
    </item>
    <item>
      <title>A Child of Gaza Becomes a Political Symbol</title>
      <description>
        <![CDATA[<p>The death of a Palestinian baby during the protests in Gaza became a rallying cry for critics of Israel. Within hours, the family’s story was being questioned. Guest: Declan Walsh, the Cairo bureau chief for The New York Times, who has been reporting from Gaza. For more information on today’s episode, visit nytimes.com/thedaily. </p>]]>
      </description>
      <itunes:title>A Child of Gaza Becomes a Political Symbol</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The death of a Palestinian baby during the protests in Gaza became a rallying cry for critics of Israel. Within hours, the family’s story was being questioned. Guest: Declan Walsh, the Cairo bureau chief for The New York Times, who has been reporting from Gaza. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The death of a Palestinian baby during the protests in Gaza became a rallying cry for critics of Israel. Within hours, the family’s story was being questioned. Guest: Declan Walsh, the Cairo bureau chief for The New York Times, who has been reporting from Gaza. For more information on today’s episode, visit nytimes.com/thedaily. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/UdCIFzdpjSGuNzQkXxS4HfQKLzucOtZ5L8OaAS94sVw</guid>
      <pubDate>Thu, 17 May 2018 09:53:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:27</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1348cf0c-6bd9-4ea1-9f96-017c7a85eaeb.mp3" type="audio/mpeg" length="20598700"/>
    </item>
    <item>
      <title>When Facebook Rumors Incite Real Violence</title>
      <description>
        <![CDATA[<p>A series of damning posts on Facebook has stoked longstanding ethnic tensions in Sri Lanka, setting off a wave of violence largely directed at Muslims. How are false rumors on social media fueling real-world attacks? Guests: Max Fisher and Amanda Taub, who have reported on Sri Lanka for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>When Facebook Rumors Incite Real Violence</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A series of damning posts on Facebook has stoked longstanding ethnic tensions in Sri Lanka, setting off a wave of violence largely directed at Muslims. How are false rumors on social media fueling real-world attacks? Guests: Max Fisher and Amanda Taub, who have reported on Sri Lanka for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A series of damning posts on Facebook has stoked longstanding ethnic tensions in Sri Lanka, setting off a wave of violence largely directed at Muslims. How are false rumors on social media fueling real-world attacks? Guests: Max Fisher and Amanda Taub, who have reported on Sri Lanka for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sAuptYVuCCGYowbdBKc18Mpy8AW1QswUsQ6ag7MQezo</guid>
      <pubDate>Wed, 16 May 2018 09:54:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/67ed5f2f-04ea-4106-941a-7c9c0ebb120d.mp3" type="audio/mpeg" length="21106938"/>
    </item>
    <item>
      <title>Two Views of the U.S. Embassy in Jerusalem</title>
      <description>
        <![CDATA[<p>Many Israelis see the relocation of the United States Embassy to Jerusalem from Tel Aviv as a historic milestone for the Jewish state. But for Palestinians, who hope to see the eastern part of Jerusalem as the capital of a Palestinian state, it’s a betrayal. Guests: David M. Halbfinger, the Jerusalem bureau chief of The New York Times, and Declan Walsh, The Times’s Cairo bureau chief, who has been reporting from Gaza this week. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Two Views of the U.S. Embassy in Jerusalem</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Many Israelis see the relocation of the United States Embassy to Jerusalem from Tel Aviv as a historic milestone for the Jewish state. But for Palestinians, who hope to see the eastern part of Jerusalem as the capital of a Palestinian state, it’s a betrayal. Guests: David M. Halbfinger, the Jerusalem bureau chief of The New York Times, and Declan Walsh, The Times’s Cairo bureau chief, who has been reporting from Gaza this week. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Many Israelis see the relocation of the United States Embassy to Jerusalem from Tel Aviv as a historic milestone for the Jewish state. But for Palestinians, who hope to see the eastern part of Jerusalem as the capital of a Palestinian state, it’s a betrayal. Guests: David M. Halbfinger, the Jerusalem bureau chief of The New York Times, and Declan Walsh, The Times’s Cairo bureau chief, who has been reporting from Gaza this week. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/A1LQrJlIq2tGNDbFc51mJpsKT1-Ba-NfwUv6lfpmZmc</guid>
      <pubDate>Tue, 15 May 2018 10:06:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9a2007da-ea63-4304-96be-77f42a71b85d.mp3" type="audio/mpeg" length="23225155"/>
    </item>
    <item>
      <title>The Prospect of Peace With North Korea</title>
      <description>
        <![CDATA[<p>The time and place for a historic meeting between the president of the United States and the leader of North Korea have been set. Does President Trump deserve credit for the diplomatic breakthrough on the Korean Peninsula? Guest: Nicholas Kristof, a New York Times columnist who writes about human rights and global affairs, and who has repeatedly traveled to North Korea for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Prospect of Peace With North Korea</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The time and place for a historic meeting between the president of the United States and the leader of North Korea have been set. Does President Trump deserve credit for the diplomatic breakthrough on the Korean Peninsula? Guest: Nicholas Kristof, a New York Times columnist who writes about human rights and global affairs, and who has repeatedly traveled to North Korea for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The time and place for a historic meeting between the president of the United States and the leader of North Korea have been set. Does President Trump deserve credit for the diplomatic breakthrough on the Korean Peninsula? Guest: Nicholas Kristof, a New York Times columnist who writes about human rights and global affairs, and who has repeatedly traveled to North Korea for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/imFl5mti3m93ujd-iS6o-p3o_H2XgTgy7CmGrzTI9MY</guid>
      <pubDate>Mon, 14 May 2018 09:54:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7339526a-fb0d-4e30-a4ab-56c9f50919e1.mp3" type="audio/mpeg" length="18424476"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 4</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 4 of “Caliphate,” in which a new recruit proves his worth and gets invited to a secret meeting. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 4</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 4 of “Caliphate,” in which a new recruit proves his worth and gets invited to a secret meeting. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 4 of “Caliphate,” in which a new recruit proves his worth and gets invited to a secret meeting. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BZQ7aHC0a44gYzHn6cZaKf7cBET6KilAd34WbrprbHw</guid>
      <pubDate>Sat, 12 May 2018 09:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/21ea05f0-2c54-4e06-b974-90427a35210e.mp3" type="audio/mpeg" length="24764081"/>
    </item>
    <item>
      <title>A Life-or-Death Crisis for Black Mothers</title>
      <description>
        <![CDATA[<p>Black mothers and infants in the United States are far more likely to die from pregnancy-related causes than their white counterparts. The disparity is tied intrinsically to the lived experience of being a black woman in America. Guests: Linda Villarosa, a contributing writer for The New York Times Magazine, and Simone Landrum, a young mother in New Orleans. For more information on today’s episode, visit nytimes.com/thedaily. </p>]]>
      </description>
      <itunes:title>A Life-or-Death Crisis for Black Mothers</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Black mothers and infants in the United States are far more likely to die from pregnancy-related causes than their white counterparts. The disparity is tied intrinsically to the lived experience of being a black woman in America. Guests: Linda Villarosa, a contributing writer for The New York Times Magazine, and Simone Landrum, a young mother in New Orleans. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Black mothers and infants in the United States are far more likely to die from pregnancy-related causes than their white counterparts. The disparity is tied intrinsically to the lived experience of being a black woman in America. Guests: Linda Villarosa, a contributing writer for The New York Times Magazine, and Simone Landrum, a young mother in New Orleans. For more information on today’s episode, visit nytimes.com/thedaily. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Tgfei5K2ia5BLqzjOBeapHqfM9gXhPaBrwLz-prKfv8</guid>
      <pubDate>Fri, 11 May 2018 09:56:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1762a2d7-e67f-47e8-a4be-d8a256f211ee.mp3" type="audio/mpeg" length="24270053"/>
    </item>
    <item>
      <title>The C.I.A.’s Moral Reckoning</title>
      <description>
        <![CDATA[<p>Gina Haspel, President Trump’s pick for C.I.A. director, faced the Senate Intelligence Committee for the first time on Wednesday as her confirmation hearings began. Lawmakers addressed her with an unusual line of questioning: What is your moral character? Guest: Matthew Rosenberg, who covers intelligence and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The C.I.A.’s Moral Reckoning</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Gina Haspel, President Trump’s pick for C.I.A. director, faced the Senate Intelligence Committee for the first time on Wednesday as her confirmation hearings began. Lawmakers addressed her with an unusual line of questioning: What is your moral character? Guest: Matthew Rosenberg, who covers intelligence and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Gina Haspel, President Trump’s pick for C.I.A. director, faced the Senate Intelligence Committee for the first time on Wednesday as her confirmation hearings began. Lawmakers addressed her with an unusual line of questioning: What is your moral character? Guest: Matthew Rosenberg, who covers intelligence and national security for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Z_POz1nqG-6zDAC-SXGJDPWP7aXp6s-uc407kTC3GUo</guid>
      <pubDate>Thu, 10 May 2018 09:45:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/efd22701-16cd-4e0c-a0dd-755567798264.mp3" type="audio/mpeg" length="20123480"/>
    </item>
    <item>
      <title>The Breakdown of the Iran Nuclear Deal</title>
      <description>
        <![CDATA[<p>President Trump has withdrawn the United States from the Iran nuclear deal, calling it “decaying and rotten.” Why did President Barack Obama sign it in the first place? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Breakdown of the Iran Nuclear Deal</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has withdrawn the United States from the Iran nuclear deal, calling it “decaying and rotten.” Why did President Barack Obama sign it in the first place? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has withdrawn the United States from the Iran nuclear deal, calling it “decaying and rotten.” Why did President Barack Obama sign it in the first place? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Qlap1_WGlvhx7j6H-D77-Z2tNyhQfnWRIcYLMLLvt-c</guid>
      <pubDate>Wed, 09 May 2018 09:54:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7179e331-2c8c-49ec-baf3-b9aae7e97285.mp3" type="audio/mpeg" length="22984829"/>
    </item>
    <item>
      <title>Gina Haspel and the Shadow of Torture</title>
      <description>
        <![CDATA[<p>The Central Intelligence Agency is waging an unusual campaign to make Gina Haspel its next leader, despite her polarizing past. Why do officers see her most controversial quality as her greatest asset? Guests: Adam Goldman, a reporter who covers the intelligence community for The Times; John Bennett, a former chief of the C.I.A.’s clandestine service who retired in 2013. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Gina Haspel and the Shadow of Torture</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Central Intelligence Agency is waging an unusual campaign to make Gina Haspel its next leader, despite her polarizing past. Why do officers see her most controversial quality as her greatest asset? Guests: Adam Goldman, a reporter who covers the intelligence community for The Times; John Bennett, a former chief of the C.I.A.’s clandestine service who retired in 2013. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Central Intelligence Agency is waging an unusual campaign to make Gina Haspel its next leader, despite her polarizing past. Why do officers see her most controversial quality as her greatest asset? Guests: Adam Goldman, a reporter who covers the intelligence community for The Times; John Bennett, a former chief of the C.I.A.’s clandestine service who retired in 2013. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Quxqmq_uCYF6pjICP_WPqzcDbY4UJc8-DmjB5bZerwE</guid>
      <pubDate>Tue, 08 May 2018 09:53:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c6b4d019-3a32-49ed-acf4-a8eefd181d0f.mp3" type="audio/mpeg" length="21890194"/>
    </item>
    <item>
      <title>The Return of Rudy Giuliani</title>
      <description>
        <![CDATA[<p>Since joining President Trump’s legal team, Rudolph W. Giuliani has repeatedly made attention-grabbing TV appearances in which he has antagonized Robert S. Mueller III, the special counsel overseeing the Russia investigation. The strategy is reminiscent of one that Mr. Giuliani has used before — 30 years ago, as a prosecutor in New York City taking on the Mafia. Guest: Michael Winerip, who covered Mr. Giuliani’s rise as a Manhattan prosecutor in the 1980s for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Return of Rudy Giuliani</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Since joining President Trump’s legal team, Rudolph W. Giuliani has repeatedly made attention-grabbing TV appearances in which he has antagonized Robert S. Mueller III, the special counsel overseeing the Russia investigation. The strategy is reminiscent of one that Mr. Giuliani has used before — 30 years ago, as a prosecutor in New York City taking on the Mafia. Guest: Michael Winerip, who covered Mr. Giuliani’s rise as a Manhattan prosecutor in the 1980s for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Since joining President Trump’s legal team, Rudolph W. Giuliani has repeatedly made attention-grabbing TV appearances in which he has antagonized Robert S. Mueller III, the special counsel overseeing the Russia investigation. The strategy is reminiscent of one that Mr. Giuliani has used before — 30 years ago, as a prosecutor in New York City taking on the Mafia. Guest: Michael Winerip, who covered Mr. Giuliani’s rise as a Manhattan prosecutor in the 1980s for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VNWH6E9dENWcz7Ndof7feJm68IbDcVGJP-EcnQNkksU</guid>
      <pubDate>Mon, 07 May 2018 09:47:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/51a06c54-0fb0-42e8-9191-0f04cb4a9f9d.mp3" type="audio/mpeg" length="20428173"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 3</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 3 of “Caliphate,” in which ISIS turns fantasy into reality for a new recruit. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 3</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 3 of “Caliphate,” in which ISIS turns fantasy into reality for a new recruit. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 3 of “Caliphate,” in which ISIS turns fantasy into reality for a new recruit. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/t6kBeb8Uk91ivHMM4rZhgcu4rjA2yXYZKXI33aNAs4A</guid>
      <pubDate>Sat, 05 May 2018 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c12f8ae3-6bf7-41e4-b87c-b4f5e4eee058.mp3" type="audio/mpeg" length="23167477"/>
    </item>
    <item>
      <title>The Hunt for the Golden State Killer</title>
      <description>
        <![CDATA[<p>An investigator was on the verge of retirement, having never completed his decades-long mission to catch the Golden State Killer. Then he had an idea: Upload DNA evidence to a genealogy website. Guest: Paul Holes, who helped to crack the case. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Hunt for the Golden State Killer</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>An investigator was on the verge of retirement, having never completed his decades-long mission to catch the Golden State Killer. Then he had an idea: Upload DNA evidence to a genealogy website. Guest: Paul Holes, who helped to crack the case. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>An investigator was on the verge of retirement, having never completed his decades-long mission to catch the Golden State Killer. Then he had an idea: Upload DNA evidence to a genealogy website. Guest: Paul Holes, who helped to crack the case. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zDmvHbLMZZz-BsezDG1wtdqGIhnX2hmyxN6A41et1Ys</guid>
      <pubDate>Fri, 04 May 2018 09:52:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7187599b-4e8e-45aa-b148-65cb1bc6655d.mp3" type="audio/mpeg" length="24541727"/>
    </item>
    <item>
      <title>Sexual Harassment's Toll on Careers</title>
      <description>
        <![CDATA[<p>In a case that highlights the economic consequences of sexual harassment and retaliation, Ashley Judd is suing Harvey Weinstein for the damage he did to her career after she rebuffed his advances. And in the second part of the episode, three women who pioneered the language of consent reflect on being far ahead of their time on the politics of sex. Guests: Jodi Kantor, an investigative reporter at The New York Times; Juliet Brown, Christelle Evans and Bethany Saltman, who helped to establish an&nbsp;affirmative consent policy for sex at Antioch College in 1990. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Sexual Harassment's Toll on Careers</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a case that highlights the economic consequences of sexual harassment and retaliation, Ashley Judd is suing Harvey Weinstein for the damage he did to her career after she rebuffed his advances. And in the second part of the episode, three women who pioneered the language of consent reflect on being far ahead of their time on the politics of sex. Guests: Jodi Kantor, an investigative reporter at The New York Times; Juliet Brown, Christelle Evans and Bethany Saltman, who helped to establish an affirmative consent policy for sex at Antioch College in 1990. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a case that highlights the economic consequences of sexual harassment and retaliation, Ashley Judd is suing Harvey Weinstein for the damage he did to her career after she rebuffed his advances. And in the second part of the episode, three women who pioneered the language of consent reflect on being far ahead of their time on the politics of sex. Guests: Jodi Kantor, an investigative reporter at The New York Times; Juliet Brown, Christelle Evans and Bethany Saltman, who helped to establish an&nbsp;affirmative consent policy for sex at Antioch College in 1990. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vxAr67wHC_3PpRQDzbr22EAqgODEcJeAbEq8dvOIyEk</guid>
      <pubDate>Thu, 03 May 2018 09:51:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/399752e2-52f7-4ae8-93fe-961f7085ff53.mp3" type="audio/mpeg" length="19448476"/>
    </item>
    <item>
      <title>The Taxi Driver's Plight</title>
      <description>
        <![CDATA[<p>A New York City taxi driver, Nicanor Ochisor, took his own life in March. His family says he grew increasingly hopeless as ride-hailing services like Uber took over the industry. Mr. Ochisor’s suicide is one of several in recent months that have called attention to the economic straits of professional drivers. Guest: Nicolae Hent, who has been a taxi driver in New York City for three decades and was a friend of Mr. Ochisor. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Taxi Driver's Plight</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A New York City taxi driver, Nicanor Ochisor, took his own life in March. His family says he grew increasingly hopeless as ride-hailing services like Uber took over the industry. Mr. Ochisor’s suicide is one of several in recent months that have called attention to the economic straits of professional drivers. Guest: Nicolae Hent, who has been a taxi driver in New York City for three decades and was a friend of Mr. Ochisor. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A New York City taxi driver, Nicanor Ochisor, took his own life in March. His family says he grew increasingly hopeless as ride-hailing services like Uber took over the industry. Mr. Ochisor’s suicide is one of several in recent months that have called attention to the economic straits of professional drivers. Guest: Nicolae Hent, who has been a taxi driver in New York City for three decades and was a friend of Mr. Ochisor. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XyPEQ_MMQVA3K9c4g0haUJlD6XcDem_KXloinm5vado</guid>
      <pubDate>Wed, 02 May 2018 09:54:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3be14a60-9d89-49c1-bf1d-00184c9eef39.mp3" type="audio/mpeg" length="24000888"/>
    </item>
    <item>
      <title>Mueller’s Questions for Trump</title>
      <description>
        <![CDATA[<p>The New York Times has obtained the list of questions that Robert S. Mueller III, the special counsel looking into Russia’s election interference, wants to ask President Trump. The wide-ranging queries offer a rare view into an investigation that has been shrouded in secrecy. Guest: Michael S. Schmidt, who has been covering the Russia investigation for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Mueller’s Questions for Trump</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has obtained the list of questions that Robert S. Mueller III, the special counsel looking into Russia’s election interference, wants to ask President Trump. The wide-ranging queries offer a rare view into an investigation that has been shrouded in secrecy. Guest: Michael S. Schmidt, who has been covering the Russia investigation for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has obtained the list of questions that Robert S. Mueller III, the special counsel looking into Russia’s election interference, wants to ask President Trump. The wide-ranging queries offer a rare view into an investigation that has been shrouded in secrecy. Guest: Michael S. Schmidt, who has been covering the Russia investigation for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/s7EzTpwrLsI_kcliY3QjBMKXZ8BsCk2hqqMMPTDUI5A</guid>
      <pubDate>Tue, 01 May 2018 09:56:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3109674f-38c2-49bd-bdcb-a18e1321869e.mp3" type="audio/mpeg" length="18915996"/>
    </item>
    <item>
      <title>A Family Divided by the Korean War</title>
      <description>
        <![CDATA[<p>In a historic summit meeting, North and South Korea vowed to pursue a peace treaty to formally end the Korean War after more than 65 years. That could bring reunions for the thousands of families who have been separated since the war broke out. Guest: Sylvia Nam, whose grandfather went to North Korea just after the Korean War started and never returned. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>A Family Divided by the Korean War</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a historic summit meeting, North and South Korea vowed to pursue a peace treaty to formally end the Korean War after more than 65 years. That could bring reunions for the thousands of families who have been separated since the war broke out. Guest: Sylvia Nam, whose grandfather went to North Korea just after the Korean War started and never returned. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a historic summit meeting, North and South Korea vowed to pursue a peace treaty to formally end the Korean War after more than 65 years. That could bring reunions for the thousands of families who have been separated since the war broke out. Guest: Sylvia Nam, whose grandfather went to North Korea just after the Korean War started and never returned. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DT9tHgcs0POWAXf_w4gTxRLMVlovP4Nnr0rUDUmu6SQ</guid>
      <pubDate>Mon, 30 Apr 2018 09:55:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/dce5af29-afe9-4abb-888c-f442cae57053.mp3" type="audio/mpeg" length="27178631"/>
    </item>
    <item>
      <title>The Daily Presents “Caliphate,” Chapter 2</title>
      <description>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 2 of “Caliphate,” in which Rukmini speaks with a former ISIS member about how and why he joined the fold. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>The Daily Presents “Caliphate,” Chapter 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 2 of “Caliphate,” in which Rukmini speaks with a former ISIS member about how and why he joined the fold. For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has introduced a documentary audio series that follows Rukmini Callimachi, who covers terrorism for The Times, on her quest to understand ISIS. Today, as a special episode of “The Daily,” we offer Chapter 2 of “Caliphate,” in which Rukmini speaks with a former ISIS member about how and why he joined the fold. For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MrF9UNIuuv_btAvEfKmUQvD9nQ3PR8sfpWilAoCKCPs</guid>
      <pubDate>Sat, 28 Apr 2018 09:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:32:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5fe6f094-8a76-4ba5-b1d0-23a2e966513d.mp3" type="audio/mpeg" length="31190204"/>
    </item>
    <item>
      <title>The Cosby Verdict and #MeToo</title>
      <description>
        <![CDATA[<p>Bill Cosby has been convicted of sexual assault following years of accusations from dozens of women. What changed between the first trial, which ended in a hung jury, and this one? Guests: Graham Bowley, an investigative reporter at The Times who has been covering the Cosby proceedings; Lili Bernard, a former guest star on “The Cosby Show” and one of more than 50 women who have spoken out against the entertainer. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Cosby Verdict and #MeToo</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Bill Cosby has been convicted of sexual assault following years of accusations from dozens of women. What changed between the first trial, which ended in a hung jury, and this one? Guests: Graham Bowley, an investigative reporter at The Times who has been covering the Cosby proceedings; Lili Bernard, a former guest star on “The Cosby Show” and one of more than 50 women who have spoken out against the entertainer. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Bill Cosby has been convicted of sexual assault following years of accusations from dozens of women. What changed between the first trial, which ended in a hung jury, and this one? Guests: Graham Bowley, an investigative reporter at The Times who has been covering the Cosby proceedings; Lili Bernard, a former guest star on “The Cosby Show” and one of more than 50 women who have spoken out against the entertainer. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PROqoKoEnReISNtFHeFGXPolVg4LJ0lr8d6yn4lIucw</guid>
      <pubDate>Fri, 27 Apr 2018 09:55:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/de183c89-6430-490f-99f5-fda0fc77aaff.mp3" type="audio/mpeg" length="21068068"/>
    </item>
    <item>
      <title>Trump’s Travel Ban Goes to the Supreme Court</title>
      <description>
        <![CDATA[<p>After being blocked for months by lower courts, President Trump’s executive orders that restricted travel from several predominantly Muslim nations have finally reached the Supreme Court. The justices seem focused on one question: Should the president’s authority have anything to do with his personal beliefs? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Trump’s Travel Ban Goes to the Supreme Court</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After being blocked for months by lower courts, President Trump’s executive orders that restricted travel from several predominantly Muslim nations have finally reached the Supreme Court. The justices seem focused on one question: Should the president’s authority have anything to do with his personal beliefs? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After being blocked for months by lower courts, President Trump’s executive orders that restricted travel from several predominantly Muslim nations have finally reached the Supreme Court. The justices seem focused on one question: Should the president’s authority have anything to do with his personal beliefs? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fKrr4qduwkrLsSJqdk2nbMaVVL2uf0e6wvTt9ZJYyZw</guid>
      <pubDate>Thu, 26 Apr 2018 09:53:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/50b8a22d-7a10-4595-8b63-11349ae58fbb.mp3" type="audio/mpeg" length="22982739"/>
    </item>
    <item>
      <title>The Allegations Against Ronny Jackson</title>
      <description>
        <![CDATA[<p>The nomination of Dr. Ronny L. Jackson, President Trump’s personal doctor, as the next head of Veterans Affairs has come to an abrupt stop. Now, Congress is beginning to examine several alarming allegations from unidentified whistle-blowers that derailed the doctor’s Senate confirmation process. Guest: Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>The Allegations Against Ronny Jackson</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The nomination of Dr. Ronny L. Jackson, President Trump’s personal doctor, as the next head of Veterans Affairs has come to an abrupt stop. Now, Congress is beginning to examine several alarming allegations from unidentified whistle-blowers that derailed the doctor’s Senate confirmation process. Guest: Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The nomination of Dr. Ronny L. Jackson, President Trump’s personal doctor, as the next head of Veterans Affairs has come to an abrupt stop. Now, Congress is beginning to examine several alarming allegations from unidentified whistle-blowers that derailed the doctor’s Senate confirmation process. Guest: Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sElwnKYmCnHDM4GY13xzPcrgVJc10yoIFjNKVHFt3wc</guid>
      <pubDate>Wed, 25 Apr 2018 09:50:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bf41ccf7-e353-48f2-b082-015b24918893.mp3" type="audio/mpeg" length="18554880"/>
    </item>
    <item>
      <title>Hong Kong's Missing Bookseller</title>
      <description>
        <![CDATA[<p>When the owner of a thriving bookstore in Hong Kong disappeared in October 2015, questions swirled. What happened? And what did the Chinese government have to do with it? Guest: Alex W. Palmer, a Beijing-based writer who has reported on China for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Hong Kong's Missing Bookseller</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When the owner of a thriving bookstore in Hong Kong disappeared in October 2015, questions swirled. What happened? And what did the Chinese government have to do with it? Guest: Alex W. Palmer, a Beijing-based writer who has reported on China for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When the owner of a thriving bookstore in Hong Kong disappeared in October 2015, questions swirled. What happened? And what did the Chinese government have to do with it? Guest: Alex W. Palmer, a Beijing-based writer who has reported on China for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZAggC3y9Kyba6f5Oe77s1h9CNZ4QrN0-xE6C_MuZpdg</guid>
      <pubDate>Tue, 24 Apr 2018 09:52:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/116bc7d9-8463-4d99-aa65-a83e4d15b743.mp3" type="audio/mpeg" length="23705809"/>
    </item>
    <item>
      <title>After a Suspected Chemical Attack, a Syrian Tells His Story</title>
      <description>
        <![CDATA[<p>The United States says that the suspected chemical weapons attack on the rebel-held town of Douma, Syria, this month was part of a military push by President Bashar al-Assad’s government to break the will of the people still living there. One of them tells his story. Guest: Mahmoud Bwedany, who grew up in Douma and was there when Syrian forces attacked this month. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>After a Suspected Chemical Attack, a Syrian Tells His Story</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States says that the suspected chemical weapons attack on the rebel-held town of Douma, Syria, this month was part of a military push by President Bashar al-Assad’s government to break the will of the people still living there. One of them tells his story. Guest: Mahmoud Bwedany, who grew up in Douma and was there when Syrian forces attacked this month. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States says that the suspected chemical weapons attack on the rebel-held town of Douma, Syria, this month was part of a military push by President Bashar al-Assad’s government to break the will of the people still living there. One of them tells his story. Guest: Mahmoud Bwedany, who grew up in Douma and was there when Syrian forces attacked this month. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xMk-NAZ1Q3AXE8B4xrY8FBZh-bjTsL6BYtcfGnn0viE</guid>
      <pubDate>Mon, 23 Apr 2018 09:54:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/73b2c318-4f73-49ee-b183-d17472ddc8d2.mp3" type="audio/mpeg" length="20506749"/>
    </item>
    <item>
      <title>James Comey Opens Up About Ego, Distrust and More</title>
      <description>
        <![CDATA[<p>James B. Comey, the former F.B.I. director, had an elaborate plan to make public his memos documenting his interactions with President Trump, in the hopes of prompting the appointment of a special counsel. In an interview, he explains his decision to take matters into his own hands. Guest: Mr. Comey. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>James Comey Opens Up About Ego, Distrust and More</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>James B. Comey, the former F.B.I. director, had an elaborate plan to make public his memos documenting his interactions with President Trump, in the hopes of prompting the appointment of a special counsel. In an interview, he explains his decision to take matters into his own hands. Guest: Mr. Comey. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>James B. Comey, the former F.B.I. director, had an elaborate plan to make public his memos documenting his interactions with President Trump, in the hopes of prompting the appointment of a special counsel. In an interview, he explains his decision to take matters into his own hands. Guest: Mr. Comey. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ACXhkRZKIhvC4yOo4cDyr04PIy5rA_tBGsOcS87CpzU</guid>
      <pubDate>Fri, 20 Apr 2018 09:49:59 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:40:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/88f4a55b-8420-4804-a061-defbc7329d38.mp3" type="audio/mpeg" length="38534582"/>
    </item>
    <item>
      <title>Introducing “Caliphate,” a New York Times Audio Series</title>
      <description>
        <![CDATA[<p>The New York Times presents a documentary audio series that follows Rukmini Callimachi, a foreign correspondent for The Times and a frequent voice on “The Daily,” as she reports on the Islamic State and the fall of the Iraqi city of Mosul. With the producer Andy Mills, Rukmini journeys to the heart of the conflict to grapple with the most pressing questions about ISIS and to comprehend the power and global pull of the militant group.</p><p>Today, instead of our usual show, we offer the Prologue and Chapter 1 of “Caliphate.” For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </description>
      <itunes:title>Introducing “Caliphate,” a New York Times Audio Series</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times presents a documentary audio series that follows Rukmini Callimachi, a foreign correspondent for The Times and a frequent voice on “The Daily,” as she reports on the Islamic State and the fall of the Iraqi city of Mosul. With the producer Andy Mills, Rukmini journeys to the heart of the conflict to grapple with the most pressing questions about ISIS and to comprehend the power and global pull of the militant group.

Today, instead of our usual show, we offer the Prologue and Chapter 1 of “Caliphate.” For more information about the series, visit nytimes.com/caliphate.

This episode includes disturbing language and scenes of graphic violence.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times presents a documentary audio series that follows Rukmini Callimachi, a foreign correspondent for The Times and a frequent voice on “The Daily,” as she reports on the Islamic State and the fall of the Iraqi city of Mosul. With the producer Andy Mills, Rukmini journeys to the heart of the conflict to grapple with the most pressing questions about ISIS and to comprehend the power and global pull of the militant group.</p><p>Today, instead of our usual show, we offer the Prologue and Chapter 1 of “Caliphate.” For more information about the series, visit nytimes.com/caliphate.</p><p>This episode includes disturbing language and scenes of graphic violence.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lGIxdlZry8ml4Q_efwabWH1kWBvj6FZS6WjWmAQxWKM</guid>
      <pubDate>Thu, 19 Apr 2018 09:50:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/880b7e03-6047-4361-b2dd-201508e4b1f5.mp3" type="audio/mpeg" length="28652773"/>
    </item>
    <item>
      <title>Wednesday, Apr. 18, 2018</title>
      <description>
        <![CDATA[<p>The firing of a professional cheerleader has drawn attention to an industry that seemed to be operating outside the #MeToo movement. But now, sports teams are being drawn into it. Guest: Annie Brown, a producer on “The Daily,” speaks with Bailey Davis, the New Orleans Saints cheerleader who was fired for violating the team’s social media policy. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Wednesday, Apr. 18, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The firing of a professional cheerleader has drawn attention to an industry that seemed to be operating outside the #MeToo movement. But now, sports teams are being drawn into it. Guest: Annie Brown, a producer on “The Daily,” speaks with Bailey Davis, the New Orleans Saints cheerleader who was fired for violating the team’s social media policy. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The firing of a professional cheerleader has drawn attention to an industry that seemed to be operating outside the #MeToo movement. But now, sports teams are being drawn into it. Guest: Annie Brown, a producer on “The Daily,” speaks with Bailey Davis, the New Orleans Saints cheerleader who was fired for violating the team’s social media policy. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BxfiEVz6R5T1_LRfQgz0cLllSyINa4pUly6rbvjBF9A</guid>
      <pubDate>Wed, 18 Apr 2018 09:54:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ff1b39d4-ab5e-4246-814b-b9cae8b6e277.mp3" type="audio/mpeg" length="26491506"/>
    </item>
    <item>
      <title>Tuesday, Apr. 17, 2018</title>
      <description>
        <![CDATA[<p>For months, the federal investigation into possible links between the Trump campaign and Russia focused on Washington. Now, the inquiry has led back to New York, the president’s hometown, and to one man: Michael D. Cohen. Guest: Jim Rutenberg, who has been reporting on Mr. Cohen, President Trump’s longtime personal lawyer, for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Tuesday, Apr. 17, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For months, the federal investigation into possible links between the Trump campaign and Russia focused on Washington. Now, the inquiry has led back to New York, the president’s hometown, and to one man: Michael D. Cohen. Guest: Jim Rutenberg, who has been reporting on Mr. Cohen, President Trump’s longtime personal lawyer, for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>For months, the federal investigation into possible links between the Trump campaign and Russia focused on Washington. Now, the inquiry has led back to New York, the president’s hometown, and to one man: Michael D. Cohen. Guest: Jim Rutenberg, who has been reporting on Mr. Cohen, President Trump’s longtime personal lawyer, for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kBA3favI5PgYrtXkbOs7zlo_Bd7wvgBIb0eyoBc8Owk</guid>
      <pubDate>Tue, 17 Apr 2018 09:55:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/04c80769-49ab-41e4-b08b-a4d8051f0890.mp3" type="audio/mpeg" length="19882736"/>
    </item>
    <item>
      <title>Monday, Apr. 16, 2018</title>
      <description>
        <![CDATA[<p>A battle is brewing between the Environmental Protection Agency, which wants to weaken auto emissions standards, and the state of California. Separately, James Comey, the F.B.I. director fired by President Trump, went on national television to call the president “morally unfit.” Guest: Coral Davenport, who covers environmental policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Monday, Apr. 16, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A battle is brewing between the Environmental Protection Agency, which wants to weaken auto emissions standards, and the state of California. Separately, James Comey, the F.B.I. director fired by President Trump, went on national television to call the president “morally unfit.” Guest: Coral Davenport, who covers environmental policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A battle is brewing between the Environmental Protection Agency, which wants to weaken auto emissions standards, and the state of California. Separately, James Comey, the F.B.I. director fired by President Trump, went on national television to call the president “morally unfit.” Guest: Coral Davenport, who covers environmental policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/gA8g6W04rYp4hI6XImeRMxVhP2QB865lsozGvaa81GI</guid>
      <pubDate>Mon, 16 Apr 2018 09:53:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4fa3a80f-f699-4d27-a165-5a2185a7c997.mp3" type="audio/mpeg" length="20806426"/>
    </item>
    <item>
      <title>Friday, Apr. 13, 2018</title>
      <description>
        <![CDATA[<p>Days after a suspected chemical attack killed dozens of Syrian civilians, President Trump promised retaliation. Now, Mr. Trump and his national security advisers are trying to decide how the United States should respond. Guest: Helene Cooper, a Pentagon correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Friday, Apr. 13, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Days after a suspected chemical attack killed dozens of Syrian civilians, President Trump promised retaliation. Now, Mr. Trump and his national security advisers are trying to decide how the United States should respond. Guest: Helene Cooper, a Pentagon correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Days after a suspected chemical attack killed dozens of Syrian civilians, President Trump promised retaliation. Now, Mr. Trump and his national security advisers are trying to decide how the United States should respond. Guest: Helene Cooper, a Pentagon correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PBWs5OlYSrOyaZ9mT8XMaFYExr9U8JDlf0-rod76xl4</guid>
      <pubDate>Fri, 13 Apr 2018 09:48:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d300efa9-5ee5-43a2-b788-498e6160267b.mp3" type="audio/mpeg" length="21284988"/>
    </item>
    <item>
      <title>Thursday, Apr. 12, 2018</title>
      <description>
        <![CDATA[<p>Mark Zuckerberg, Facebook’s chief executive, returned to Capitol Hill on Wednesday for a second day of hearings on the company’s mishandling of data. Unlike their Senate colleagues, House members came prepared with tough questions about privacy and the social media company’s practices — as well as a counternarrative to the story Mr. Zuckerberg and his team have carefully crafted. And calls for congressional oversight are growing. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Thursday, Apr. 12, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Mark Zuckerberg, Facebook’s chief executive, returned to Capitol Hill on Wednesday for a second day of hearings on the company’s mishandling of data. Unlike their Senate colleagues, House members came prepared with tough questions about privacy and the social media company’s practices — as well as a counternarrative to the story Mr. Zuckerberg and his team have carefully crafted. And calls for congressional oversight are growing. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Mark Zuckerberg, Facebook’s chief executive, returned to Capitol Hill on Wednesday for a second day of hearings on the company’s mishandling of data. Unlike their Senate colleagues, House members came prepared with tough questions about privacy and the social media company’s practices — as well as a counternarrative to the story Mr. Zuckerberg and his team have carefully crafted. And calls for congressional oversight are growing. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XJs26u6NgGm4pOoH3ZqpoDe2eFlUJzH29grozpJXyz0</guid>
      <pubDate>Thu, 12 Apr 2018 09:52:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/56ccfe9a-82dd-40ae-9f4c-528d87da04cd.mp3" type="audio/mpeg" length="24328150"/>
    </item>
    <item>
      <title>Wednesday, Apr. 11, 2018</title>
      <description>
        <![CDATA[<p>Mark Zuckerberg, the Facebook chief executive, began two days of marathon hearings in Washington, answering tough questions on the company’s mishandling of data. But the hours of testimony about the social media company’s practices seemed to focus on a larger, more difficult question: What is Facebook, exactly? Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Wednesday, Apr. 11, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Mark Zuckerberg, the Facebook chief executive, began two days of marathon hearings in Washington, answering tough questions on the company’s mishandling of data. But the hours of testimony about the social media company’s practices seemed to focus on a larger, more difficult question: What is Facebook, exactly? Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Mark Zuckerberg, the Facebook chief executive, began two days of marathon hearings in Washington, answering tough questions on the company’s mishandling of data. But the hours of testimony about the social media company’s practices seemed to focus on a larger, more difficult question: What is Facebook, exactly? Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/FKTG0QPE0vUJMCwgCB6P-CitQWU02BzzDGScEgkgqAg</guid>
      <pubDate>Wed, 11 Apr 2018 09:53:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f9780aae-4813-4bd1-b13d-2df0a08c5596.mp3" type="audio/mpeg" length="22199066"/>
    </item>
    <item>
      <title>Tuesday, Apr. 10, 2018</title>
      <description>
        <![CDATA[<p>The F.B.I. has raided the home of President Trump’s personal lawyer, Michael D. Cohen — the same man who acknowledged paying $130,000 to a pornographic film actress who said she had a sexual encounter with Mr. Trump. What are investigators looking for? Guest: Matt Apuzzo, who covers law enforcement for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Tuesday, Apr. 10, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The F.B.I. has raided the home of President Trump’s personal lawyer, Michael D. Cohen — the same man who acknowledged paying $130,000 to a pornographic film actress who said she had a sexual encounter with Mr. Trump. What are investigators looking for? Guest: Matt Apuzzo, who covers law enforcement for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The F.B.I. has raided the home of President Trump’s personal lawyer, Michael D. Cohen — the same man who acknowledged paying $130,000 to a pornographic film actress who said she had a sexual encounter with Mr. Trump. What are investigators looking for? Guest: Matt Apuzzo, who covers law enforcement for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OjKSR1tzVmp3K7Jw7OeKIvCid-9uoEWXLe72UHajSWo</guid>
      <pubDate>Tue, 10 Apr 2018 09:52:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bc20bfc4-ae60-4e0f-9bbe-935f4c3340e3.mp3" type="audio/mpeg" length="18910145"/>
    </item>
    <item>
      <title>Monday, Apr. 9, 2018</title>
      <description>
        <![CDATA[<p>President Trump has warned that there will be a “big price to pay” after yet another suspected chemical weapons attack on Syrians. But the suspicion that the Assad regime continues to use those weapons suggests it views the United States as being focused on a different fight. Guest: Ben Hubbard, who covers the Middle East for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Monday, Apr. 9, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has warned that there will be a “big price to pay” after yet another suspected chemical weapons attack on Syrians. But the suspicion that the Assad regime continues to use those weapons suggests it views the United States as being focused on a different fight. Guest: Ben Hubbard, who covers the Middle East for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has warned that there will be a “big price to pay” after yet another suspected chemical weapons attack on Syrians. But the suspicion that the Assad regime continues to use those weapons suggests it views the United States as being focused on a different fight. Guest: Ben Hubbard, who covers the Middle East for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0C8UxrVXlEKnU0DdHz31unev00qK3KAPjD5D3J-3xN0</guid>
      <pubDate>Mon, 09 Apr 2018 09:52:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/53b86e03-9875-48e7-b1fb-8a995d03cbca.mp3" type="audio/mpeg" length="21119895"/>
    </item>
    <item>
      <title>Friday, Apr. 6, 2018</title>
      <description>
        <![CDATA[<p>On local TV stations across the United States, news anchors have been delivering the exact same message to their viewers. “Our greatest responsibility,” they begin by saying, “is to serve our communities.” But what they are being forced to say next has left many questioning whom those stations are really being asked to serve. Guests: Sydney Ember, a New York Times business reporter who covers print and digital media; Aaron Weiss, who worked several years ago as a news director for Sinclair in Sioux City, Iowa. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, Apr. 6, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On local TV stations across the United States, news anchors have been delivering the exact same message to their viewers. “Our greatest responsibility,” they begin by saying, “is to serve our communities.” But what they are being forced to say next has left many questioning whom those stations are really being asked to serve. Guests: Sydney Ember, a New York Times business reporter who covers print and digital media; Aaron Weiss, who worked several years ago as a news director for Sinclair in Sioux City, Iowa. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>On local TV stations across the United States, news anchors have been delivering the exact same message to their viewers. “Our greatest responsibility,” they begin by saying, “is to serve our communities.” But what they are being forced to say next has left many questioning whom those stations are really being asked to serve. Guests: Sydney Ember, a New York Times business reporter who covers print and digital media; Aaron Weiss, who worked several years ago as a news director for Sinclair in Sioux City, Iowa. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fo132whTwC0TNPU6-Ae_Bhtea2skIngBL2BS6G_EkY8</guid>
      <pubDate>Fri, 06 Apr 2018 10:08:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/88698c65-f7d4-42b8-82c2-e48c536b31d2.mp3" type="audio/mpeg" length="23698703"/>
    </item>
    <item>
      <title>Thursday, Apr. 5, 2018</title>
      <description>
        <![CDATA[<p>Many farmers across the Midwest voted for Donald J. Trump in the 2016 election but hoped he would never follow through on his threats to impose tariffs on China. They feared that they would suffer if China imposed its own tariffs as payback. Now, Beijing has done just that, proposing tariffs on 106 types of American goods — including soybeans, corn and pork — in retaliation for President Trump’s plans to penalize Chinese trade practices.&nbsp;Guest: Eldon Gould, a farmer in Illinois who voted for President Trump. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, Apr. 5, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Many farmers across the Midwest voted for Donald J. Trump in the 2016 election but hoped he would never follow through on his threats to impose tariffs on China. They feared that they would suffer if China imposed its own tariffs as payback. Now, Beijing has done just that, proposing tariffs on 106 types of American goods — including soybeans, corn and pork — in retaliation for President Trump’s plans to penalize Chinese trade practices. Guest: Eldon Gould, a farmer in Illinois who voted for President Trump. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Many farmers across the Midwest voted for Donald J. Trump in the 2016 election but hoped he would never follow through on his threats to impose tariffs on China. They feared that they would suffer if China imposed its own tariffs as payback. Now, Beijing has done just that, proposing tariffs on 106 types of American goods — including soybeans, corn and pork — in retaliation for President Trump’s plans to penalize Chinese trade practices.&nbsp;Guest: Eldon Gould, a farmer in Illinois who voted for President Trump. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OH2CTY3U_shJU4RrKXqYxp2_R1eOPIH4DasimTMnB7I</guid>
      <pubDate>Thu, 05 Apr 2018 09:50:08 -0000</pubDate>
      <link>https://www.nytimes.com/2018/04/05/podcasts/the-daily/us-china-tariffs.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba660eee-47fa-4298-a8c6-ed2173667324.mp3" type="audio/mpeg" length="18115604"/>
    </item>
    <item>
      <title>Wednesday, Apr. 4, 2018</title>
      <description>
        <![CDATA[<p>It started with a report on Fox News, and ended with calls for United States troops at the border with Mexico. We look at how President Trump’s approach to immigration transformed over just 72 hours. Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, Apr. 4, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>It started with a report on Fox News, and ended with calls for United States troops at the border with Mexico. We look at how President Trump’s approach to immigration transformed over just 72 hours. Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>It started with a report on Fox News, and ended with calls for United States troops at the border with Mexico. We look at how President Trump’s approach to immigration transformed over just 72 hours. Guest: Julie Hirschfeld Davis, who covers the White House for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/F3-7GLxz1cK9JLJLULHNHHv3tw1YxCGFBs_2Lqsu550</guid>
      <pubDate>Wed, 04 Apr 2018 09:38:32 -0000</pubDate>
      <link>https://www.nytimes.com/2018/04/04/podcasts/the-daily/trump-mexico-us-border.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/83170446-6425-4926-bc0c-0bcaba1f8859.mp3" type="audio/mpeg" length="20586161"/>
    </item>
    <item>
      <title>Tuesday, Apr. 3, 2018</title>
      <description>
        <![CDATA[<p>The Second Amendment is just 27 words long. But those 27 words are among the most cryptic and divisive in the United States Constitution — and they are at the heart of one of the most contentious debates in American politics. Why is the Supreme Court so reluctant to clarify them? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, Apr. 3, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Second Amendment is just 27 words long. But those 27 words are among the most cryptic and divisive in the United States Constitution — and they are at the heart of one of the most contentious debates in American politics. Why is the Supreme Court so reluctant to clarify them? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Second Amendment is just 27 words long. But those 27 words are among the most cryptic and divisive in the United States Constitution — and they are at the heart of one of the most contentious debates in American politics. Why is the Supreme Court so reluctant to clarify them? Guest: Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/EThtiVkGmtit7vzhTBeIgLz9fq0lafUwBvFZKnwD6N0</guid>
      <pubDate>Tue, 03 Apr 2018 09:38:23 -0000</pubDate>
      <link>https://www.nytimes.com/2018/04/03/podcasts/the-daily/second-amendment-supreme-court.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7cd49c3a-a238-4721-a0d4-fedb17e85506.mp3" type="audio/mpeg" length="21931572"/>
    </item>
    <item>
      <title>Monday, Apr. 2, 2018</title>
      <description>
        <![CDATA[<p>President Trump’s son-in-law wants to overhaul the prison system. The president’s attorney general bitterly opposes such a move. That has set the scene for a highly personal battle inside the White House. Guest: Matt Apuzzo, a New York Times reporter based in Washington. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, Apr. 2, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s son-in-law wants to overhaul the prison system. The president’s attorney general bitterly opposes such a move. That has set the scene for a highly personal battle inside the White House. Guest: Matt Apuzzo, a New York Times reporter based in Washington. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump’s son-in-law wants to overhaul the prison system. The president’s attorney general bitterly opposes such a move. That has set the scene for a highly personal battle inside the White House. Guest: Matt Apuzzo, a New York Times reporter based in Washington. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/C0nN3GNf-h7NdnGZCc5uiAQQ4mq8bP7E2ywEm9LstE0</guid>
      <pubDate>Mon, 02 Apr 2018 09:39:27 -0000</pubDate>
      <link>https://www.nytimes.com/2018/04/02/podcasts/the-daily/us-prison-reform.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7a534749-4421-4d2c-a1b5-d61f38527f12.mp3" type="audio/mpeg" length="18509740"/>
    </item>
    <item>
      <title>Friday, March 30, 2018</title>
      <description>
        <![CDATA[<p>Behind the landmark Supreme Court ruling of Brown v. Board of Education was a girl named Linda Brown, whose story led to states being ordered to desegregate schools, mostly against their will. Ms. Brown died on Sunday. Who was she, and what has changed in the 64 years since the case was decided? Guest: Nikole Hannah-Jones, an investigative reporter covering race and civil rights for The New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Friday, March 30, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Behind the landmark Supreme Court ruling of Brown v. Board of Education was a girl named Linda Brown, whose story led to states being ordered to desegregate schools, mostly against their will. Ms. Brown died on Sunday. Who was she, and what has changed in the 64 years since the case was decided? Guest: Nikole Hannah-Jones, an investigative reporter covering race and civil rights for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Behind the landmark Supreme Court ruling of Brown v. Board of Education was a girl named Linda Brown, whose story led to states being ordered to desegregate schools, mostly against their will. Ms. Brown died on Sunday. Who was she, and what has changed in the 64 years since the case was decided? Guest: Nikole Hannah-Jones, an investigative reporter covering race and civil rights for The New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lBR3mp-1As0LwXfRlQ4SdN9khlIYTerrV0V0eCv_Nx4</guid>
      <pubDate>Fri, 30 Mar 2018 09:57:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bf664ff2-7d3c-4511-b1d6-e445ce64d1df.mp3" type="audio/mpeg" length="26827964"/>
    </item>
    <item>
      <title>Thursday, March 29, 2018</title>
      <description>
        <![CDATA[<p>As the special counsel built his case against Michael T. Flynn and Paul Manafort, pressure was mounting for the men to to cooperate with the Russia inquiry. Then a lawyer for President Trump came to them with an idea: What if the president were to pardon his former advisers? Guest: Michael S. Schmidt, who has been covering the Russia investigation for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Thursday, March 29, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the special counsel built his case against Michael T. Flynn and Paul Manafort, pressure was mounting for the men to to cooperate with the Russia inquiry. Then a lawyer for President Trump came to them with an idea: What if the president were to pardon his former advisers? Guest: Michael S. Schmidt, who has been covering the Russia investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the special counsel built his case against Michael T. Flynn and Paul Manafort, pressure was mounting for the men to to cooperate with the Russia inquiry. Then a lawyer for President Trump came to them with an idea: What if the president were to pardon his former advisers? Guest: Michael S. Schmidt, who has been covering the Russia investigation for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g-MnOoe2BFlu65UwecAjKSsPK-iv9e3zY9BkXi74cuk</guid>
      <pubDate>Thu, 29 Mar 2018 09:43:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/23ac4e74-9c2e-4761-91b9-55457c0d2936.mp3" type="audio/mpeg" length="18557805"/>
    </item>
    <item>
      <title>Wednesday, March 28, 2018</title>
      <description>
        <![CDATA[<p>President Trump has chosen John R. Bolton to be his new national security adviser. In 2005, a Republican-controlled Senate committee refused to confirm Mr. Bolton as President George W. Bush’s ambassador to the United Nations. We look back at those confirmation hearings, which portrayed Mr. Bolton as a threat to national security. Guest: Elizabeth Williamson, who writes about Washington in the Trump era for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Wednesday, March 28, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has chosen John R. Bolton to be his new national security adviser. In 2005, a Republican-controlled Senate committee refused to confirm Mr. Bolton as President George W. Bush’s ambassador to the United Nations. We look back at those confirmation hearings, which portrayed Mr. Bolton as a threat to national security. Guest: Elizabeth Williamson, who writes about Washington in the Trump era for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has chosen John R. Bolton to be his new national security adviser. In 2005, a Republican-controlled Senate committee refused to confirm Mr. Bolton as President George W. Bush’s ambassador to the United Nations. We look back at those confirmation hearings, which portrayed Mr. Bolton as a threat to national security. Guest: Elizabeth Williamson, who writes about Washington in the Trump era for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8T6RUTFYoyb4uQsLr3jp8Ws5_EJICcB_6q7VspxRD2M</guid>
      <pubDate>Wed, 28 Mar 2018 09:52:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b44f5c6a-7a43-4ccf-86b3-873c8e3acdc5.mp3" type="audio/mpeg" length="22483696"/>
    </item>
    <item>
      <title>Tuesday, March 27, 2018</title>
      <description>
        <![CDATA[<p>Eight years ago, the United States and Russia agreed to a spy swap that sent a Russian double agent to safety in Britain. That former spy and his daughter were poisoned by a nerve agent this month, and the Kremlin has been &nbsp;accused of orchestrating the attack. Why did it happen now? Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, March 27, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Eight years ago, the United States and Russia agreed to a spy swap that sent a Russian double agent to safety in Britain. That former spy and his daughter were poisoned by a nerve agent this month, and the Kremlin has been  accused of orchestrating the attack. Why did it happen now? Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Eight years ago, the United States and Russia agreed to a spy swap that sent a Russian double agent to safety in Britain. That former spy and his daughter were poisoned by a nerve agent this month, and the Kremlin has been &nbsp;accused of orchestrating the attack. Why did it happen now? Guest: Peter Baker, the chief White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QWsHLrO7VEKcx6yJ1H4edb7MU6V0Z4TzIg5YgSasj0Q</guid>
      <pubDate>Tue, 27 Mar 2018 09:51:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8d824415-f55d-4a61-a0a0-91f84f66c51b.mp3" type="audio/mpeg" length="20749165"/>
    </item>
    <item>
      <title>Monday, March 26, 2018</title>
      <description>
        <![CDATA[<p>As hundreds of thousand of demonstrators prepared to march in Washington in response to the school shooting in Parkland, Fla., students on the South Side of Chicago felt sympathy, but also frustration. Why hadn’t the gun violence in their community earned the nation’s outrage? Guest: Sameen Amin, &nbsp;a senior video producer at The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Monday, March 26, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As hundreds of thousand of demonstrators prepared to march in Washington in response to the school shooting in Parkland, Fla., students on the South Side of Chicago felt sympathy, but also frustration. Why hadn’t the gun violence in their community earned the nation’s outrage? Guest: Sameen Amin,  a senior video producer at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As hundreds of thousand of demonstrators prepared to march in Washington in response to the school shooting in Parkland, Fla., students on the South Side of Chicago felt sympathy, but also frustration. Why hadn’t the gun violence in their community earned the nation’s outrage? Guest: Sameen Amin, &nbsp;a senior video producer at The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ILleRhgf_hXhziW3CiNSAL6h76Za7MXPUNwZFu5ps_I</guid>
      <pubDate>Mon, 26 Mar 2018 09:51:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f923fd68-24ed-4d59-bab1-0e0a925e9788.mp3" type="audio/mpeg" length="22150582"/>
    </item>
    <item>
      <title>Friday, March 23, 2018</title>
      <description>
        <![CDATA[<p>For decades, Americans have believed that the best way to end racial inequality is to end class inequality. But a landmark 30-year study is debunking that logic. Guests: Emily Badger, who writes about cities and urban policy for The Upshot; William O. Jawando, who worked in the Obama administration on My Brother’s Keeper, a mentoring initiative for black boys. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, March 23, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For decades, Americans have believed that the best way to end racial inequality is to end class inequality. But a landmark 30-year study is debunking that logic. Guests: Emily Badger, who writes about cities and urban policy for The Upshot; William O. Jawando, who worked in the Obama administration on My Brother’s Keeper, a mentoring initiative for black boys. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>For decades, Americans have believed that the best way to end racial inequality is to end class inequality. But a landmark 30-year study is debunking that logic. Guests: Emily Badger, who writes about cities and urban policy for The Upshot; William O. Jawando, who worked in the Obama administration on My Brother’s Keeper, a mentoring initiative for black boys. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/faRh0dckQAgQLa4ZHd8UYJKjdN1FYagCvRSlQal939E</guid>
      <pubDate>Fri, 23 Mar 2018 10:07:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8e627b56-b266-4ea7-b204-7477905ebe87.mp3" type="audio/mpeg" length="25646393"/>
    </item>
    <item>
      <title>Thursday, March 22, 2018</title>
      <description>
        <![CDATA[<p>Five days after details about Cambridge Analytica’s mining of data were made public, Mark Zuckerberg, the chief executive of Facebook, broke his silence on his company’s role in the data breach. Minutes after posting a statement on Facebook, he spoke with The New York Times. Guest: Kevin Roose, a business columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, March 22, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Five days after details about Cambridge Analytica’s mining of data were made public, Mark Zuckerberg, the chief executive of Facebook, broke his silence on his company’s role in the data breach. Minutes after posting a statement on Facebook, he spoke with The New York Times. Guest: Kevin Roose, a business columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Five days after details about Cambridge Analytica’s mining of data were made public, Mark Zuckerberg, the chief executive of Facebook, broke his silence on his company’s role in the data breach. Minutes after posting a statement on Facebook, he spoke with The New York Times. Guest: Kevin Roose, a business columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6umew5LEPgStH0BaS0rDbFGZUYToEaB9oZpczZICiNw</guid>
      <pubDate>Thu, 22 Mar 2018 09:47:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1f6bfb01-a5fe-4470-974d-425a27b5affb.mp3" type="audio/mpeg" length="19552130"/>
    </item>
    <item>
      <title>Wednesday, Mar. 21, 2018</title>
      <description>
        <![CDATA[<p>A young Canadian data expert came up with a plan to harvest people’s personal data from Facebook, and to use that information to influence their voting. How did the brains behind Cambridge Analytica become its whistle-blower? Guest: Matthew Rosenberg, a New York Times reporter in Washington. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, Mar. 21, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A young Canadian data expert came up with a plan to harvest people’s personal data from Facebook, and to use that information to influence their voting. How did the brains behind Cambridge Analytica become its whistle-blower? Guest: Matthew Rosenberg, a New York Times reporter in Washington. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A young Canadian data expert came up with a plan to harvest people’s personal data from Facebook, and to use that information to influence their voting. How did the brains behind Cambridge Analytica become its whistle-blower? Guest: Matthew Rosenberg, a New York Times reporter in Washington. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jC13ibDC-YEmscbkrFYg1BJrwMP41CB4Dwnhyti92MM</guid>
      <pubDate>Wed, 21 Mar 2018 09:45:42 -0000</pubDate>
      <link>https://www.nytimes.com/2018/03/21/podcasts/the-daily/cambridge-analytica-facebook-data.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c6ce9da0-fc43-4c7b-835b-745edf4c0f10.mp3" type="audio/mpeg" length="20011467"/>
    </item>
    <item>
      <title>Tuesday, Mar. 20, 2018</title>
      <description>
        <![CDATA[<p>President Vladimir V. Putin of Russia, facing no real challenger, has been elected to a fourth term, drawing support from more than three-quarters of voters. How is the most powerful man in Russia staying that way? Guest: Steven Lee Myers, a former Moscow bureau chief of The New York Times who covered Mr. Putin’s rise to power and who is the author of “The New Tsar: The Rise and Reign of Vladimir Putin.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, Mar. 20, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Vladimir V. Putin of Russia, facing no real challenger, has been elected to a fourth term, drawing support from more than three-quarters of voters. How is the most powerful man in Russia staying that way? Guest: Steven Lee Myers, a former Moscow bureau chief of The New York Times who covered Mr. Putin’s rise to power and who is the author of “The New Tsar: The Rise and Reign of Vladimir Putin.” For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Vladimir V. Putin of Russia, facing no real challenger, has been elected to a fourth term, drawing support from more than three-quarters of voters. How is the most powerful man in Russia staying that way? Guest: Steven Lee Myers, a former Moscow bureau chief of The New York Times who covered Mr. Putin’s rise to power and who is the author of “The New Tsar: The Rise and Reign of Vladimir Putin.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LOmZ6Tc7qulkrTuA1MboFmAIlvtN8VNCMjnXlax6ih0</guid>
      <pubDate>Tue, 20 Mar 2018 09:48:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a86514f8-6023-4d59-8f82-a78e49cd7467.mp3" type="audio/mpeg" length="20939337"/>
    </item>
    <item>
      <title>Monday, Mar. 19, 2018</title>
      <description>
        <![CDATA[<p>President Trump called the firing of Andrew G. McCabe, the deputy F.B.I. director, a “great day for democracy.” Mr. McCabe says it’s further evidence of the president’s efforts to undermine the Russia investigation. What really happened? Guest: Matt Apuzzo, a New York Times reporter in Washington. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, Mar. 19, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump called the firing of Andrew G. McCabe, the deputy F.B.I. director, a “great day for democracy.” Mr. McCabe says it’s further evidence of the president’s efforts to undermine the Russia investigation. What really happened? Guest: Matt Apuzzo, a New York Times reporter in Washington. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump called the firing of Andrew G. McCabe, the deputy F.B.I. director, a “great day for democracy.” Mr. McCabe says it’s further evidence of the president’s efforts to undermine the Russia investigation. What really happened? Guest: Matt Apuzzo, a New York Times reporter in Washington. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/gUMHKU_Z5kkXDYq5mZ05gH9a_8B9iIXepmKNjvsSDxI</guid>
      <pubDate>Mon, 19 Mar 2018 09:47:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4de17fbf-0033-42d3-aa2c-4ead40492977.mp3" type="audio/mpeg" length="20106762"/>
    </item>
    <item>
      <title>Friday, Mar. 16, 2018</title>
      <description>
        <![CDATA[<p>Ida B. Wells was an investigative reporter who exposed the systematic lynching of black men in the South. Her work made her the most famous black woman in the country. But when she died in 1931, at the age of 68, The New York Times failed to write an obituary. Obituaries in The Times have been long dominated by white men. Now, the paper of record is trying to fix the record. Guests: Amisha Padnani, the digital editor on The Times’s obituaries desk and a leader of the Overlooked project; Caitlin Dickerson, a national reporter for The Times; Michelle Duster, a professor at Columbia College Chicago and a great-granddaughter of Ida B. Wells. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Friday, Mar. 16, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Ida B. Wells was an investigative reporter who exposed the systematic lynching of black men in the South. Her work made her the most famous black woman in the country. But when she died in 1931, at the age of 68, The New York Times failed to write an obituary. Obituaries in The Times have been long dominated by white men. Now, the paper of record is trying to fix the record. Guests: Amisha Padnani, the digital editor on The Times’s obituaries desk and a leader of the Overlooked project; Caitlin Dickerson, a national reporter for The Times; Michelle Duster, a professor at Columbia College Chicago and a great-granddaughter of Ida B. Wells. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Ida B. Wells was an investigative reporter who exposed the systematic lynching of black men in the South. Her work made her the most famous black woman in the country. But when she died in 1931, at the age of 68, The New York Times failed to write an obituary. Obituaries in The Times have been long dominated by white men. Now, the paper of record is trying to fix the record. Guests: Amisha Padnani, the digital editor on The Times’s obituaries desk and a leader of the Overlooked project; Caitlin Dickerson, a national reporter for The Times; Michelle Duster, a professor at Columbia College Chicago and a great-granddaughter of Ida B. Wells. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/JWlLDXwskSSKpDnx6Ovk5g0RX-SqSaMkonQaXLCssZY</guid>
      <pubDate>Fri, 16 Mar 2018 09:53:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/07e6ffd4-2010-4e55-9e49-f567be40461e.mp3" type="audio/mpeg" length="21685394"/>
    </item>
    <item>
      <title>Thursday, Mar. 15, 2018</title>
      <description>
        <![CDATA[<p>Florida is a great state to be a gun owner. For years, it has been a laboratory of sorts for the National Rifle Association — it’s the state that invented the concealed-carry permit. Gun control proponents had started to resign themselves to the fact that they might never pass any laws. Then came Parkland.</p><p>Guest: Patricia Mazzei, the Miami bureau chief for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Thursday, Mar. 15, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Florida is a great state to be a gun owner. For years, it has been a laboratory of sorts for the National Rifle Association — it’s the state that invented the concealed-carry permit. Gun control proponents had started to resign themselves to the fact that they might never pass any laws. Then came Parkland.

Guest: Patricia Mazzei, the Miami bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Florida is a great state to be a gun owner. For years, it has been a laboratory of sorts for the National Rifle Association — it’s the state that invented the concealed-carry permit. Gun control proponents had started to resign themselves to the fact that they might never pass any laws. Then came Parkland.</p><p>Guest: Patricia Mazzei, the Miami bureau chief for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qnng9rWusUKi-r7_2iZ7hb84vpd83n6czQzU6odIH0k</guid>
      <pubDate>Thu, 15 Mar 2018 09:51:10 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cc061c56-3fe9-4d7a-a822-93c3089ead70.mp3" type="audio/mpeg" length="23154102"/>
    </item>
    <item>
      <title>Wednesday, Mar. 14, 2018</title>
      <description>
        <![CDATA[<p>Rex Tillerson’s relationship with President Trump was rocky from the start. But no one was more surprised than Mr. Tillerson when he was fired as secretary of state on Tuesday. Mr. Tillerson was the most persistent advocate of opening diplomatic channels with North Korea, a position that put him publicly at odds with his boss. As Mr. Trump prepares to meet Kim Jong-un, the North’s leader, we talk to the man who came closest to a deal with Pyongyang about what the current administration can learn from previous attempts. Guests: Mark Landler, a White House correspondent for The New York Times; William Perry, a former secretary of defense and one of the few senior U.S. officials to have negotiated directly with the North Koreans. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Wednesday, Mar. 14, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Rex Tillerson’s relationship with President Trump was rocky from the start. But no one was more surprised than Mr. Tillerson when he was fired as secretary of state on Tuesday. Mr. Tillerson was the most persistent advocate of opening diplomatic channels with North Korea, a position that put him publicly at odds with his boss. As Mr. Trump prepares to meet Kim Jong-un, the North’s leader, we talk to the man who came closest to a deal with Pyongyang about what the current administration can learn from previous attempts. Guests: Mark Landler, a White House correspondent for The New York Times; William Perry, a former secretary of defense and one of the few senior U.S. officials to have negotiated directly with the North Koreans. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Rex Tillerson’s relationship with President Trump was rocky from the start. But no one was more surprised than Mr. Tillerson when he was fired as secretary of state on Tuesday. Mr. Tillerson was the most persistent advocate of opening diplomatic channels with North Korea, a position that put him publicly at odds with his boss. As Mr. Trump prepares to meet Kim Jong-un, the North’s leader, we talk to the man who came closest to a deal with Pyongyang about what the current administration can learn from previous attempts. Guests: Mark Landler, a White House correspondent for The New York Times; William Perry, a former secretary of defense and one of the few senior U.S. officials to have negotiated directly with the North Koreans. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KRz3lm48Wwxb4BP0mA2semCIclv1oK6X06bQv4UdraU</guid>
      <pubDate>Wed, 14 Mar 2018 09:48:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cf5fff18-7c28-4904-85d0-8e55fdde0208.mp3" type="audio/mpeg" length="21376104"/>
    </item>
    <item>
      <title>Tuesday, Mar. 13, 2018</title>
      <description>
        <![CDATA[<p>With the prominent opposition leader Leopoldo López under house arrest, Venezuela thought its loudest political prisoner had finally been silenced. But he refused to buckle, even facing the prospect of going back to prison. Here’s the second part of Mr. López’s story. Guest: Wil S. Hylton, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, Mar. 13, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With the prominent opposition leader Leopoldo López under house arrest, Venezuela thought its loudest political prisoner had finally been silenced. But he refused to buckle, even facing the prospect of going back to prison. Here’s the second part of Mr. López’s story. Guest: Wil S. Hylton, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>With the prominent opposition leader Leopoldo López under house arrest, Venezuela thought its loudest political prisoner had finally been silenced. But he refused to buckle, even facing the prospect of going back to prison. Here’s the second part of Mr. López’s story. Guest: Wil S. Hylton, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/SK0OQABU2K4-tA88Q8GkXPQDzuaUlfN59JKeWhSTJdw</guid>
      <pubDate>Tue, 13 Mar 2018 09:51:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/68e6f03f-e1e3-4209-9636-c52eaf9ff784.mp3" type="audio/mpeg" length="25782648"/>
    </item>
    <item>
      <title>Monday, Mar. 12, 2018</title>
      <description>
        <![CDATA[<p>With Venezuela in crisis, its most vocal opposition leader, Leopoldo López, is under house arrest, unable to act. What happens if he does? Guest: Wil S. Hylton, a contributing writer for the New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Monday, Mar. 12, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With Venezuela in crisis, its most vocal opposition leader, Leopoldo López, is under house arrest, unable to act. What happens if he does? Guest: Wil S. Hylton, a contributing writer for the New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>With Venezuela in crisis, its most vocal opposition leader, Leopoldo López, is under house arrest, unable to act. What happens if he does? Guest: Wil S. Hylton, a contributing writer for the New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/R4o4naSrqQxPt-eaQx9Jtisro14n4UhWA8nwNK2ZtHQ</guid>
      <pubDate>Mon, 12 Mar 2018 09:50:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e1b006ee-4db2-4194-90cf-d342f73400b0.mp3" type="audio/mpeg" length="27737443"/>
    </item>
    <item>
      <title>Friday, Mar. 9, 2018</title>
      <description>
        <![CDATA[<p>Hush money. Catch-and-kill deals. The threat of blackmail. An elaborate system has developed to silence women who level accusations against powerful men. One of those women is Stephanie Clifford, a pornographic actress who claims to have had an affair with Donald J. Trump. &nbsp;Guest: Jim Rutenberg, The New York Times’s media columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Friday, Mar. 9, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Hush money. Catch-and-kill deals. The threat of blackmail. An elaborate system has developed to silence women who level accusations against powerful men. One of those women is Stephanie Clifford, a pornographic actress who claims to have had an affair with Donald J. Trump.  Guest: Jim Rutenberg, The New York Times’s media columnist. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Hush money. Catch-and-kill deals. The threat of blackmail. An elaborate system has developed to silence women who level accusations against powerful men. One of those women is Stephanie Clifford, a pornographic actress who claims to have had an affair with Donald J. Trump. &nbsp;Guest: Jim Rutenberg, The New York Times’s media columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zcAE-Rznn4Mfm2yBMhBcim0_JAtDgsUfdJH1urvjNOA</guid>
      <pubDate>Fri, 09 Mar 2018 10:46:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/03daa75a-7ac4-4688-ac78-ad578b0e755f.mp3" type="audio/mpeg" length="21932408"/>
    </item>
    <item>
      <title>Thursday, Mar. 8, 2018</title>
      <description>
        <![CDATA[<p>In announcing new protections on steel and aluminum imports, President Trump said he was acting in the interest of national security. But could the real threat be the tariffs themselves? &nbsp;Guest: Peter S. Goodman, an economics correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Mar. 8, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In announcing new protections on steel and aluminum imports, President Trump said he was acting in the interest of national security. But could the real threat be the tariffs themselves?  Guest: Peter S. Goodman, an economics correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In announcing new protections on steel and aluminum imports, President Trump said he was acting in the interest of national security. But could the real threat be the tariffs themselves? &nbsp;Guest: Peter S. Goodman, an economics correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4zsBfr9raRkvN4IJYAcNi3lbAogNf2AhjlYZFiv7Egs</guid>
      <pubDate>Thu, 08 Mar 2018 10:55:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a95fd900-6496-47e7-a1ca-6846787f2f41.mp3" type="audio/mpeg" length="25776378"/>
    </item>
    <item>
      <title>Wednesday, Mar. 7, 2018</title>
      <description>
        <![CDATA[<p>South Korea says that the North is willing to talk about giving up its atomic arsenal. What happened to the threat of nuclear war? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Mar. 7, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>South Korea says that the North is willing to talk about giving up its atomic arsenal. What happened to the threat of nuclear war? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>South Korea says that the North is willing to talk about giving up its atomic arsenal. What happened to the threat of nuclear war? Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/a0YK4VFAXfh_9IeMLK6rBRyfzVUH5CPzmpih6jfBrWY</guid>
      <pubDate>Wed, 07 Mar 2018 10:50:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4c64b588-1126-41a2-b29a-4eaacdb53609.mp3" type="audio/mpeg" length="19693400"/>
    </item>
    <item>
      <title>Tuesday, Mar. 6, 2018</title>
      <description>
        <![CDATA[<p>The New York Times has a new five-part podcast series that tries to solve a real-life problem with a surprising story. So today, instead of or usual show, we offer “Change Agent,” hosted by Charles Duhigg, a Pulitzer Prize-winning journalist and author of “The Power of Habit.” </p>]]>
      </description>
      <itunes:title>Tuesday, Mar. 6, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times has a new five-part podcast series that tries to solve a real-life problem with a surprising story. So today, instead of or usual show, we offer “Change Agent,” hosted by Charles Duhigg, a Pulitzer Prize-winning journalist and author of “The Power of Habit.” </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times has a new five-part podcast series that tries to solve a real-life problem with a surprising story. So today, instead of or usual show, we offer “Change Agent,” hosted by Charles Duhigg, a Pulitzer Prize-winning journalist and author of “The Power of Habit.” </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/o_JcCnWfDTXQV6M1YA9dBY-rZeUEpzTjhAt7oIKmrZQ</guid>
      <pubDate>Tue, 06 Mar 2018 10:45:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/35/bd/90/ec/35bd90ec-17be-408b-a459-b6c6b0e64bd7/ce5f497b62ff143b9b278f963bf1f10bf5d3b7e17b51d4a48d299d352073894953501c79a351b979568be999125b5da46aff44c0a7b21c0f06dc2f429873557b.jpeg"/>
      <itunes:duration>00:28:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4b54a6e7-54dd-49cc-8a32-588bfc80e8fd.mp3" type="audio/mpeg" length="27380924"/>
    </item>
    <item>
      <title>Monday, Mar. 5, 2018</title>
      <description>
        <![CDATA[<p>In the days since the shooting in Parkland, Fla., a group of teenagers has risen to national prominence for their activism and calls for gun control. But more than 3,000 students attend Stoneman Douglas High School. Six of them spoke to a New York Times reporter about the day their childhood ended. Guest: <a href="https://www.nytimes.com/by/jack-healy" target="_blank">Jack Healy</a>, a national correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Monday, Mar. 5, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In the days since the shooting in Parkland, Fla., a group of teenagers has risen to national prominence for their activism and calls for gun control. But more than 3,000 students attend Stoneman Douglas High School. Six of them spoke to a New York Times reporter about the day their childhood ended. Guest: Jack Healy, a national correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In the days since the shooting in Parkland, Fla., a group of teenagers has risen to national prominence for their activism and calls for gun control. But more than 3,000 students attend Stoneman Douglas High School. Six of them spoke to a New York Times reporter about the day their childhood ended. Guest: <a href="https://www.nytimes.com/by/jack-healy" target="_blank">Jack Healy</a>, a national correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3fPf-qmgevT7j7O5mgFVROqHjCBbhcmQ5yTSpoPDE-s</guid>
      <pubDate>Mon, 05 Mar 2018 11:06:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/96c2482b-ff35-4c12-8de5-e926f43b10a2.mp3" type="audio/mpeg" length="18809417"/>
    </item>
    <item>
      <title>Friday, Mar. 2, 2018</title>
      <description>
        <![CDATA[<p>When we spoke with Representative Tom Rooney, a Florida Republican, in July, he said he was starting to feel defeated by the state of politics in Washington. Nine months later, we check back in, and he talks frankly about the Russia investigation, gun control and his decision not to run for re-election. Guest: Representative Tom Rooney, Republican of Florida. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Mar. 2, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When we spoke with Representative Tom Rooney, a Florida Republican, in July, he said he was starting to feel defeated by the state of politics in Washington. Nine months later, we check back in, and he talks frankly about the Russia investigation, gun control and his decision not to run for re-election. Guest: Representative Tom Rooney, Republican of Florida. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>When we spoke with Representative Tom Rooney, a Florida Republican, in July, he said he was starting to feel defeated by the state of politics in Washington. Nine months later, we check back in, and he talks frankly about the Russia investigation, gun control and his decision not to run for re-election. Guest: Representative Tom Rooney, Republican of Florida. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DiCflMYz-_t7yUmmsWg-UtxoyhMKUrRAAUVH610xoQg</guid>
      <pubDate>Fri, 02 Mar 2018 11:03:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:33:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3c9e4825-83c4-4b0f-8581-89e63786d58d.mp3" type="audio/mpeg" length="31797916"/>
    </item>
    <item>
      <title>Thursday, Mar. 1, 2018</title>
      <description>
        <![CDATA[<p>President Trump stunned lawmakers on Wednesday with calls for gun control and jabs at the National Rifle Association. “They have great power over you people,” he said of the N.R.A. “They have less power over me.” Separately, Hope Hicks, the White House communications director who testified this week that her job required telling “white lies,” is to step down. Guests: Maggie Haberman, who covers the White House for The New York Times; Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Mar. 1, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump stunned lawmakers on Wednesday with calls for gun control and jabs at the National Rifle Association. “They have great power over you people,” he said of the N.R.A. “They have less power over me.” Separately, Hope Hicks, the White House communications director who testified this week that her job required telling “white lies,” is to step down. Guests: Maggie Haberman, who covers the White House for The New York Times; Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump stunned lawmakers on Wednesday with calls for gun control and jabs at the National Rifle Association. “They have great power over you people,” he said of the N.R.A. “They have less power over me.” Separately, Hope Hicks, the White House communications director who testified this week that her job required telling “white lies,” is to step down. Guests: Maggie Haberman, who covers the White House for The New York Times; Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DjfegxM2O4GNGQ8TYIi2u_ufuAGXsiWT0o3m_slwUS8</guid>
      <pubDate>Thu, 01 Mar 2018 11:01:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8feee6be-1fcf-4cfa-ba0c-67d8cad82b3c.mp3" type="audio/mpeg" length="23326720"/>
    </item>
    <item>
      <title>Wednesday, Feb. 28, 2018</title>
      <description>
        <![CDATA[<p>Republicans have campaigned on gun rights for years. But Democrats running for office have tended to avoid the issue. In the wake of the Florida school shooting, however, will gun control be a dominant topic in this year’s midterm elections? Guest: <a href="https://www.nytimes.com/by/jonathan-martin" target="_blank">Jonathan Martin</a>, who covers national politics for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Feb. 28, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans have campaigned on gun rights for years. But Democrats running for office have tended to avoid the issue. In the wake of the Florida school shooting, however, will gun control be a dominant topic in this year’s midterm elections? Guest: Jonathan Martin, who covers national politics for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republicans have campaigned on gun rights for years. But Democrats running for office have tended to avoid the issue. In the wake of the Florida school shooting, however, will gun control be a dominant topic in this year’s midterm elections? Guest: <a href="https://www.nytimes.com/by/jonathan-martin" target="_blank">Jonathan Martin</a>, who covers national politics for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ByN1u7m9G4qL4E-opQ0pqmDxYlwICKtpnBqqVKX0yrY</guid>
      <pubDate>Wed, 28 Feb 2018 10:53:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b0d0b9e0-2de7-4acd-a28b-4087539f0760.mp3" type="audio/mpeg" length="19492780"/>
    </item>
    <item>
      <title>Tuesday, Feb. 27, 2018</title>
      <description>
        <![CDATA[<p>“All he cares about is his gun.”</p><p>“He could be a school shooter in the making.” </p><p>Those were among the concerns expressed in calls to law enforcement about Nikolas Cruz, who is suspected of shooting 17 people dead at Marjory Stoneman Douglas High School in Florida. Yet so many red flags triggered no legal action. How is that possible? Guest: <a href="https://www.nytimes.com/by/richard-a-oppel-jr" target="_blank">Richard A. Oppel Jr</a>., a national correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Feb. 27, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“All he cares about is his gun.”

“He could be a school shooter in the making.” 

Those were among the concerns expressed in calls to law enforcement about Nikolas Cruz, who is suspected of shooting 17 people dead at Marjory Stoneman Douglas High School in Florida. Yet so many red flags triggered no legal action. How is that possible? Guest: Richard A. Oppel Jr., a national correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>“All he cares about is his gun.”</p><p>“He could be a school shooter in the making.” </p><p>Those were among the concerns expressed in calls to law enforcement about Nikolas Cruz, who is suspected of shooting 17 people dead at Marjory Stoneman Douglas High School in Florida. Yet so many red flags triggered no legal action. How is that possible? Guest: <a href="https://www.nytimes.com/by/richard-a-oppel-jr" target="_blank">Richard A. Oppel Jr</a>., a national correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xJmBKvj3W6FC-wOJEZx4PR_9f5usRCdq-Q9ii3fPnrU</guid>
      <pubDate>Tue, 27 Feb 2018 10:35:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/25e8a91a-ab87-4159-a4d2-7548bee907ef.mp3" type="audio/mpeg" length="19017560"/>
    </item>
    <item>
      <title>Monday, Feb. 26, 2018</title>
      <description>
        <![CDATA[<p>At the Conservative Political Action Conference this weekend, one thing was clear: President Trump has taken over the conservative movement. His vision dominated,<strong> </strong>and, as one woman learned, there was little room for alternative views. Guest: Mona Charen, a conservative columnist who was booed while speaking on a panel at the conference. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Monday, Feb. 26, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At the Conservative Political Action Conference this weekend, one thing was clear: President Trump has taken over the conservative movement. His vision dominated, and, as one woman learned, there was little room for alternative views. Guest: Mona Charen, a conservative columnist who was booed while speaking on a panel at the conference. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>At the Conservative Political Action Conference this weekend, one thing was clear: President Trump has taken over the conservative movement. His vision dominated,<strong> </strong>and, as one woman learned, there was little room for alternative views. Guest: Mona Charen, a conservative columnist who was booed while speaking on a panel at the conference. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PxeXkbgWcx7qnRAJNWXQxmrAeCgBumme8wd1A4_K8jc</guid>
      <pubDate>Mon, 26 Feb 2018 10:47:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7baa51ea-5025-4ce0-8935-db524e8db0e7.mp3" type="audio/mpeg" length="25123944"/>
    </item>
    <item>
      <title>Friday, Feb. 23, 2018</title>
      <description>
        <![CDATA[<p>President Trump, conservatives and the National Rifle Association have once again tried to steer the national conversation after a mass shooting to the mental health of the people who pull the triggers, rather than the weapons they use. But how can the mental health system stop gun violence when mental illness is so rarely the cause of it? &nbsp;Guest: Dr. Amy Barnhorst, the vice chairwoman of community psychiatry at the University of California, Davis. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Friday, Feb. 23, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump, conservatives and the National Rifle Association have once again tried to steer the national conversation after a mass shooting to the mental health of the people who pull the triggers, rather than the weapons they use. But how can the mental health system stop gun violence when mental illness is so rarely the cause of it?  Guest: Dr. Amy Barnhorst, the vice chairwoman of community psychiatry at the University of California, Davis. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump, conservatives and the National Rifle Association have once again tried to steer the national conversation after a mass shooting to the mental health of the people who pull the triggers, rather than the weapons they use. But how can the mental health system stop gun violence when mental illness is so rarely the cause of it? &nbsp;Guest: Dr. Amy Barnhorst, the vice chairwoman of community psychiatry at the University of California, Davis. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xlPU3ERkF8isBjyFodc5AmjgPjE_RDzJ55hy1Wayw_w</guid>
      <pubDate>Fri, 23 Feb 2018 11:03:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/095a9d62-8e3c-4777-b2c8-61ed23728c93.mp3" type="audio/mpeg" length="20814367"/>
    </item>
    <item>
      <title>Thursday, Feb. 22, 2018</title>
      <description>
        <![CDATA[<p>The aftermath of a mass shooting has become a familiar cycle in the United States: One side demands change, the other works to block it. But this time, it is the students who survived the assault who are pressing lawmakers to impose new restrictions on guns. Guest: Michael D. Shear, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><br></p>]]>
      </description>
      <itunes:title>Thursday, Feb. 22, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The aftermath of a mass shooting has become a familiar cycle in the United States: One side demands change, the other works to block it. But this time, it is the students who survived the assault who are pressing lawmakers to impose new restrictions on guns. Guest: Michael D. Shear, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The aftermath of a mass shooting has become a familiar cycle in the United States: One side demands change, the other works to block it. But this time, it is the students who survived the assault who are pressing lawmakers to impose new restrictions on guns. Guest: Michael D. Shear, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/h9G3kxMwoZ72Z86Xqi5MWB9leRvcHB1JzyORB7PdaAE</guid>
      <pubDate>Thu, 22 Feb 2018 10:59:21 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1d91efca-3a82-4478-aa6f-42e42d4adc42.mp3" type="audio/mpeg" length="21154168"/>
    </item>
    <item>
      <title>Wednesday, Feb. 21, 2018</title>
      <description>
        <![CDATA[<p>The indictment secured by the special counsel, Robert S. Mueller III, makes it clear that the most powerful weapon in Russia’s campaign to disrupt the 2016 election was Facebook. We look at how Russia used social media to sow divisions in the United States. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Wednesday, Feb. 21, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The indictment secured by the special counsel, Robert S. Mueller III, makes it clear that the most powerful weapon in Russia’s campaign to disrupt the 2016 election was Facebook. We look at how Russia used social media to sow divisions in the United States. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The indictment secured by the special counsel, Robert S. Mueller III, makes it clear that the most powerful weapon in Russia’s campaign to disrupt the 2016 election was Facebook. We look at how Russia used social media to sow divisions in the United States. Guest: Kevin Roose, who writes about technology for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/G5Hfa0zXKEf1VMf8gMl527GgSMFWARqr1sPbvRejBk0</guid>
      <pubDate>Wed, 21 Feb 2018 10:37:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bab440f1-4895-48e5-8e31-f094ff909979.mp3" type="audio/mpeg" length="20131840"/>
    </item>
    <item>
      <title>Tuesday, Feb. 20, 2018</title>
      <description>
        <![CDATA[<p>In October, four American soldiers were ambushed by militants in a remote desert in Niger. What were they doing in Africa, and who were they fighting? It was all part of a shadowy war going back to the attacks of Sept. 11, 2001. &nbsp;Guests: Alan Blinder, a national reporter for The New York Times; Rukmini Callimachi, who covers terrorism and the Islamic State for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Tuesday, Feb. 20, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In October, four American soldiers were ambushed by militants in a remote desert in Niger. What were they doing in Africa, and who were they fighting? It was all part of a shadowy war going back to the attacks of Sept. 11, 2001.  Guests: Alan Blinder, a national reporter for The New York Times; Rukmini Callimachi, who covers terrorism and the Islamic State for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In October, four American soldiers were ambushed by militants in a remote desert in Niger. What were they doing in Africa, and who were they fighting? It was all part of a shadowy war going back to the attacks of Sept. 11, 2001. &nbsp;Guests: Alan Blinder, a national reporter for The New York Times; Rukmini Callimachi, who covers terrorism and the Islamic State for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WiLzDMhjBDA6o6TuI3kkvgmtOmXfmGu86QMLtDGnFao</guid>
      <pubDate>Tue, 20 Feb 2018 11:05:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9e94f170-a200-4932-8893-539528775372.mp3" type="audio/mpeg" length="27003089"/>
    </item>
    <item>
      <title>Monday, Feb. 19, 2018</title>
      <description>
        <![CDATA[<p>The Justice Department charged 13 Russians with illegally trying to disrupt the American political process, in a sophisticated plot to deepen the country’s divisions and turn Americans against one another. President Trump’s reaction to those charges suggests that plot is still working. Guest: <a href="https://www.nytimes.com/by/matt-apuzzo" target="_blank">Matt Apuzzo</a>, a New York Times reporter based in Washington. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Monday, Feb. 19, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Justice Department charged 13 Russians with illegally trying to disrupt the American political process, in a sophisticated plot to deepen the country’s divisions and turn Americans against one another. President Trump’s reaction to those charges suggests that plot is still working. Guest: Matt Apuzzo, a New York Times reporter based in Washington. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Justice Department charged 13 Russians with illegally trying to disrupt the American political process, in a sophisticated plot to deepen the country’s divisions and turn Americans against one another. President Trump’s reaction to those charges suggests that plot is still working. Guest: <a href="https://www.nytimes.com/by/matt-apuzzo" target="_blank">Matt Apuzzo</a>, a New York Times reporter based in Washington. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QOS-2ztYlT7eJR9WS81jqBYE0gosrxrkqqwEU94q06M</guid>
      <pubDate>Mon, 19 Feb 2018 11:00:39 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4ec2b8c0-859d-40ba-8e7d-7ce1f2c15dc0.mp3" type="audio/mpeg" length="19120378"/>
    </item>
    <item>
      <title>Friday, Feb. 16, 2018</title>
      <description>
        <![CDATA[<p>The AR-15 rifle used in the shooting that left at least 17 people dead at a high school in Parkland, Fla., was purchased legally, according to a federal law enforcement official. How did a semiautomatic weapon originally designed for warfare become easier to buy than a handgun? Guests: C. J. Chivers, a New York Times investigative reporter and Marine Corps veteran; Richard A. Oppel Jr., a Times reporter specializing in coverage of domestic terrorism and the military. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Friday, Feb. 16, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The AR-15 rifle used in the shooting that left at least 17 people dead at a high school in Parkland, Fla., was purchased legally, according to a federal law enforcement official. How did a semiautomatic weapon originally designed for warfare become easier to buy than a handgun? Guests: C. J. Chivers, a New York Times investigative reporter and Marine Corps veteran; Richard A. Oppel Jr., a Times reporter specializing in coverage of domestic terrorism and the military. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The AR-15 rifle used in the shooting that left at least 17 people dead at a high school in Parkland, Fla., was purchased legally, according to a federal law enforcement official. How did a semiautomatic weapon originally designed for warfare become easier to buy than a handgun? Guests: C. J. Chivers, a New York Times investigative reporter and Marine Corps veteran; Richard A. Oppel Jr., a Times reporter specializing in coverage of domestic terrorism and the military. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6qgk-lAg0UljiV5VmCC5SYzK_M4C_ydYxnVOJkpMV80</guid>
      <pubDate>Fri, 16 Feb 2018 11:06:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e586ec81-596f-4a12-b942-fbff78abf4db.mp3" type="audio/mpeg" length="22119235"/>
    </item>
    <item>
      <title>Thursday, Feb. 15, 2018</title>
      <description>
        <![CDATA[<p>President Trump has called for an overhaul of immigration that replaces a family-based system with a merit-based one. But what counts as merit? We also report on the shooting at a high school in Parkland, Fla., in which at least 17 people died. It was the 18th school shooting in the United States this year. Guests: Caitlin Dickerson, a national immigration reporter for The New York Times; Catherine Porter, Canada bureau chief for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Thursday, Feb. 15, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has called for an overhaul of immigration that replaces a family-based system with a merit-based one. But what counts as merit? We also report on the shooting at a high school in Parkland, Fla., in which at least 17 people died. It was the 18th school shooting in the United States this year. Guests: Caitlin Dickerson, a national immigration reporter for The New York Times; Catherine Porter, Canada bureau chief for The Times. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has called for an overhaul of immigration that replaces a family-based system with a merit-based one. But what counts as merit? We also report on the shooting at a high school in Parkland, Fla., in which at least 17 people died. It was the 18th school shooting in the United States this year. Guests: Caitlin Dickerson, a national immigration reporter for The New York Times; Catherine Porter, Canada bureau chief for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CPiP638RWqzgbv63WrsPcrqyzRTeBfQIb6Q07YzxwMk</guid>
      <pubDate>Thu, 15 Feb 2018 10:59:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2d421451-79ae-48f5-a69b-3d6b137d7238.mp3" type="audio/mpeg" length="20885838"/>
    </item>
    <item>
      <title>Wednesday, Feb. 14, 2018</title>
      <description>
        <![CDATA[<p>As a candidate, Donald J. Trump was very critical of the size of the national debt. As president, he has proposed a budget that would add $7 trillion to the federal deficit over the next decade. Republicans are saying nothing. Guest: Jim Tankersley, who covers taxes and the economy for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Wednesday, Feb. 14, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As a candidate, Donald J. Trump was very critical of the size of the national debt. As president, he has proposed a budget that would add $7 trillion to the federal deficit over the next decade. Republicans are saying nothing. Guest: Jim Tankersley, who covers taxes and the economy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As a candidate, Donald J. Trump was very critical of the size of the national debt. As president, he has proposed a budget that would add $7 trillion to the federal deficit over the next decade. Republicans are saying nothing. Guest: Jim Tankersley, who covers taxes and the economy for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RNu1Bsnn-SmnTiSoHHf1THIbmMmmFtkc4iUPaqKyRhg</guid>
      <pubDate>Wed, 14 Feb 2018 10:40:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c22a4767-36c0-4a97-bf58-016a4c69b670.mp3" type="audio/mpeg" length="19817952"/>
    </item>
    <item>
      <title>Tuesday, Feb. 13, 2018</title>
      <description>
        <![CDATA[<p>The House minority leader, Nancy Pelosi, took to the floor for eight hours last week to protest a spending bill that did not include protections for the young immigrants known as Dreamers. Now, she says she wanted the bill to pass. What’s the risk for the Democratic Party?  Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Feb. 13, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House minority leader, Nancy Pelosi, took to the floor for eight hours last week to protest a spending bill that did not include protections for the young immigrants known as Dreamers. Now, she says she wanted the bill to pass. What’s the risk for the Democratic Party?  Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House minority leader, Nancy Pelosi, took to the floor for eight hours last week to protest a spending bill that did not include protections for the young immigrants known as Dreamers. Now, she says she wanted the bill to pass. What’s the risk for the Democratic Party?  Guest: Sheryl Gay Stolberg, who covers Congress for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GtcZUoPJCwzt7JDOGnNLrX00XzYWsAP1XlUihQpcPyg</guid>
      <pubDate>Tue, 13 Feb 2018 10:46:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/be793bf8-1936-43dc-b1e1-a0c7187b154e.mp3" type="audio/mpeg" length="16516911"/>
    </item>
    <item>
      <title>Monday, Feb. 12, 2018</title>
      <description>
        <![CDATA[<p>At the opening ceremony of the Winter Olympics, 169 plainly dressed athletes marched out in drab gray coats and bluejeans, competing not for a country but as “Olympic athletes from Russia.” What did Russia do at the last Winter Games to earn them that punishment? Guest: Rebecca R. Ruiz, an investigative reporter at The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Feb. 12, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At the opening ceremony of the Winter Olympics, 169 plainly dressed athletes marched out in drab gray coats and bluejeans, competing not for a country but as “Olympic athletes from Russia.” What did Russia do at the last Winter Games to earn them that punishment? Guest: Rebecca R. Ruiz, an investigative reporter at The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>At the opening ceremony of the Winter Olympics, 169 plainly dressed athletes marched out in drab gray coats and bluejeans, competing not for a country but as “Olympic athletes from Russia.” What did Russia do at the last Winter Games to earn them that punishment? Guest: Rebecca R. Ruiz, an investigative reporter at The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Gn3An0zM3ikH6zG8C-7pt2pPzc4xj90GE8gPdViNQ2g</guid>
      <pubDate>Mon, 12 Feb 2018 11:01:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0e679de2-247b-4716-99fa-6220219028d9.mp3" type="audio/mpeg" length="24708493"/>
    </item>
    <item>
      <title>Friday, Feb. 9, 2018</title>
      <description>
        <![CDATA[<p>Hurricane Maria pummeled Puerto Rico with great fury, but the government there said that just 64 people had been killed by the storm. The hundreds of bodies showing up at morgues across the island told a different story. &nbsp;Guests: Frances Robles, a New York Times correspondent based in Miami; Mili Bonilla, whose father died in Puerto Rico in October. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p><p><br></p>]]>
      </description>
      <itunes:title>Friday, Feb. 9, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Hurricane Maria pummeled Puerto Rico with great fury, but the government there said that just 64 people had been killed by the storm. The hundreds of bodies showing up at morgues across the island told a different story.  Guests: Frances Robles, a New York Times correspondent based in Miami; Mili Bonilla, whose father died in Puerto Rico in October. For more information on today’s episode, visit nytimes.com/thedaily. 





</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Hurricane Maria pummeled Puerto Rico with great fury, but the government there said that just 64 people had been killed by the storm. The hundreds of bodies showing up at morgues across the island told a different story. &nbsp;Guests: Frances Robles, a New York Times correspondent based in Miami; Mili Bonilla, whose father died in Puerto Rico in October. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/nnoST7iS5xQzTyoowyGpEBQBEUUlO_YFKWKEvqstfZQ</guid>
      <pubDate>Fri, 09 Feb 2018 11:06:57 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/69a01865-0b3d-4ff2-844f-ab83b7325b8b.mp3" type="audio/mpeg" length="28647758"/>
    </item>
    <item>
      <title>Thursday, Feb. 8, 2018</title>
      <description>
        <![CDATA[<p>Hurricane Maria slammed into Puerto Rico as a Category 4 storm on Sept. 20, flooding neighborhoods and villages and cutting power to 3.4 million people. More than four months later, much of the island is still in shock. A recent visit to a suicide prevention center shows the long-term toll on mental health in a place struck by the overwhelming impression that the rest of the world has moved on. Guest: Caitlin Dickerson, a national reporter for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Feb. 8, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Hurricane Maria slammed into Puerto Rico as a Category 4 storm on Sept. 20, flooding neighborhoods and villages and cutting power to 3.4 million people. More than four months later, much of the island is still in shock. A recent visit to a suicide prevention center shows the long-term toll on mental health in a place struck by the overwhelming impression that the rest of the world has moved on. Guest: Caitlin Dickerson, a national reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Hurricane Maria slammed into Puerto Rico as a Category 4 storm on Sept. 20, flooding neighborhoods and villages and cutting power to 3.4 million people. More than four months later, much of the island is still in shock. A recent visit to a suicide prevention center shows the long-term toll on mental health in a place struck by the overwhelming impression that the rest of the world has moved on. Guest: Caitlin Dickerson, a national reporter for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6g5p6VeO-1Rg60CfvQ8ms8Gs-KBizyAzLlMCSlGaJlQ</guid>
      <pubDate>Thu, 08 Feb 2018 10:53:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f3ed0639-1313-443c-85ba-cd9b154ab13b.mp3" type="audio/mpeg" length="18462929"/>
    </item>
    <item>
      <title>Wednesday, Feb. 7, 2018</title>
      <description>
        <![CDATA[<p>When Republicans handed out large tax cuts to corporations, most economists rejected lawmakers’ claims that the benefits would trickle down to working Americans. So why do many companies seem to be giving their employees more money? &nbsp;Guests: Jim Tankersley, who covers taxes and the economy for The New York Times; Wes Carter, the president of Atlantic Packaging in Wilmington, N.C., who spoke to Sabrina Tavernise, a Times reporter. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Feb. 7, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When Republicans handed out large tax cuts to corporations, most economists rejected lawmakers’ claims that the benefits would trickle down to working Americans. So why do many companies seem to be giving their employees more money?  Guests: Jim Tankersley, who covers taxes and the economy for The New York Times; Wes Carter, the president of Atlantic Packaging in Wilmington, N.C., who spoke to Sabrina Tavernise, a Times reporter. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>When Republicans handed out large tax cuts to corporations, most economists rejected lawmakers’ claims that the benefits would trickle down to working Americans. So why do many companies seem to be giving their employees more money? &nbsp;Guests: Jim Tankersley, who covers taxes and the economy for The New York Times; Wes Carter, the president of Atlantic Packaging in Wilmington, N.C., who spoke to Sabrina Tavernise, a Times reporter. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/L5GoHogAbrxA1MFt5rq56eHxLUJ8U3X7Eze1zZbXJSg</guid>
      <pubDate>Wed, 07 Feb 2018 10:59:57 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c0230d87-5944-4155-b820-09ef7df89532.mp3" type="audio/mpeg" length="20418977"/>
    </item>
    <item>
      <title>Tuesday, Feb. 6, 2018</title>
      <description>
        <![CDATA[<p>The Republican push to release a classified memo has brought attention to the Foreign Intelligence Surveillance Act, and to the long battle to determine when national security concerns outweigh civil liberties. What has surprised many is the side Republicans chose this time. Guest: Charlie Savage, who covers national security and the law for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Feb. 6, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Republican push to release a classified memo has brought attention to the Foreign Intelligence Surveillance Act, and to the long battle to determine when national security concerns outweigh civil liberties. What has surprised many is the side Republicans chose this time. Guest: Charlie Savage, who covers national security and the law for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Republican push to release a classified memo has brought attention to the Foreign Intelligence Surveillance Act, and to the long battle to determine when national security concerns outweigh civil liberties. What has surprised many is the side Republicans chose this time. Guest: Charlie Savage, who covers national security and the law for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8NWOBsGZ2-pQTVo2M_uknDGVftvRo7dAwytipn9G2MU</guid>
      <pubDate>Tue, 06 Feb 2018 10:59:09 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5ad62dbb-695d-4fae-b2c2-858524df875e.mp3" type="audio/mpeg" length="22374191"/>
    </item>
    <item>
      <title>Monday, Feb. 5, 2018</title>
      <description>
        <![CDATA[<p>President Trump has claimed credit for a booming U.S. economy. But is it actually booming, and to what extent is he responsible? Guest: Peter S. Goodman, who writes about the economy for The New York Times.</p><p>For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Feb. 5, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has claimed credit for a booming U.S. economy. But is it actually booming, and to what extent is he responsible? Guest: Peter S. Goodman, who writes about the economy for The New York Times.

For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has claimed credit for a booming U.S. economy. But is it actually booming, and to what extent is he responsible? Guest: Peter S. Goodman, who writes about the economy for The New York Times.</p><p>For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/54kG2bzybQt3wNiLMWeTRWw71uxvIP2HwoiqcUdqMA0</guid>
      <pubDate>Mon, 05 Feb 2018 10:41:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8a55e435-7f72-4f87-b867-725919e7190f.mp3" type="audio/mpeg" length="20696084"/>
    </item>
    <item>
      <title>Friday, Feb. 2, 2018</title>
      <description>
        <![CDATA[<p>Almost from the moment that he was appointed to head the Environmental Protection Agency, Scott Pruitt has been cast by environmentalists as an ideologue on a mission to destroy the very agency he runs. But Mr. Pruitt, who built a career suing to block environmental rules, sees it differently. Guests: Scott Pruitt, administrator of the Environmental Protection Agency; Coral Davenport, who covers energy and environmental policy for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Feb. 2, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Almost from the moment that he was appointed to head the Environmental Protection Agency, Scott Pruitt has been cast by environmentalists as an ideologue on a mission to destroy the very agency he runs. But Mr. Pruitt, who built a career suing to block environmental rules, sees it differently. Guests: Scott Pruitt, administrator of the Environmental Protection Agency; Coral Davenport, who covers energy and environmental policy for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Almost from the moment that he was appointed to head the Environmental Protection Agency, Scott Pruitt has been cast by environmentalists as an ideologue on a mission to destroy the very agency he runs. But Mr. Pruitt, who built a career suing to block environmental rules, sees it differently. Guests: Scott Pruitt, administrator of the Environmental Protection Agency; Coral Davenport, who covers energy and environmental policy for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NJISwYDJO0WfwBHdMCG0pdUGHZVlzDXIvBrloRoT0Q8</guid>
      <pubDate>Fri, 02 Feb 2018 10:49:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/67366258-36f0-49be-983f-b28fc1c99d69.mp3" type="audio/mpeg" length="30477165"/>
    </item>
    <item>
      <title>Thursday, Feb. 1, 2018</title>
      <description>
        <![CDATA[<p>Republicans insist that their push to release a secret memo that is said to question the conduct of the F.B.I. and the Justice Department in the early stages of the Russia investigation is not an attempt to undermine the special counsel, Robert S. Mueller. But whatever their intentions, the possible fallout from the memo’s release has everything to do with Mr. Mueller. &nbsp;Guest: Michael S. Schmidt, who has been covering the Russia investigation for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Thursday, Feb. 1, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans insist that their push to release a secret memo that is said to question the conduct of the F.B.I. and the Justice Department in the early stages of the Russia investigation is not an attempt to undermine the special counsel, Robert S. Mueller. But whatever their intentions, the possible fallout from the memo’s release has everything to do with Mr. Mueller.  Guest: Michael S. Schmidt, who has been covering the Russia investigation for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republicans insist that their push to release a secret memo that is said to question the conduct of the F.B.I. and the Justice Department in the early stages of the Russia investigation is not an attempt to undermine the special counsel, Robert S. Mueller. But whatever their intentions, the possible fallout from the memo’s release has everything to do with Mr. Mueller. &nbsp;Guest: Michael S. Schmidt, who has been covering the Russia investigation for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4B55yRPNV9fXeK74udOCFNHBfRUYxglMn6z0syi--X8</guid>
      <pubDate>Thu, 01 Feb 2018 10:57:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7cc30c84-d11a-45ec-b919-6d7350b4e8c1.mp3" type="audio/mpeg" length="21267853"/>
    </item>
    <item>
      <title>Wednesday, Jan. 31, 2018</title>
      <description>
        <![CDATA[<p>In his first State of the Union address, President Trump left behind divisive rhetoric and called for one American family. But hidden in his many stories of everyday American heroes was a deeply nationalist message. Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Jan. 31, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In his first State of the Union address, President Trump left behind divisive rhetoric and called for one American family. But hidden in his many stories of everyday American heroes was a deeply nationalist message. Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In his first State of the Union address, President Trump left behind divisive rhetoric and called for one American family. But hidden in his many stories of everyday American heroes was a deeply nationalist message. Guest: Mark Landler, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_yrNOPH_86HylEImiHKMt4SjYQJriSRKhXagmYQh_x4</guid>
      <pubDate>Wed, 31 Jan 2018 11:01:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e1ae7b5d-bc46-40df-8213-8be25b7f91db.mp3" type="audio/mpeg" length="22049436"/>
    </item>
    <item>
      <title>Tuesday, Jan. 30, 2018</title>
      <description>
        <![CDATA[<p>The U.S. government announced this month that it would withhold hundreds of millions of dollars in aid to Pakistan. In the weeks since, Afghanistan has experienced one of the most violent and deadly periods in its 16-year war. How are the two connected? Guest: <a href="https://www.nytimes.com/by/mujib-mashal" target="_blank">Mujib Mashal</a>, a New York Times correspondent in Afghanistan, who describes the sense of terror in Kabul. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, Jan. 30, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The U.S. government announced this month that it would withhold hundreds of millions of dollars in aid to Pakistan. In the weeks since, Afghanistan has experienced one of the most violent and deadly periods in its 16-year war. How are the two connected? Guest: Mujib Mashal, a New York Times correspondent in Afghanistan, who describes the sense of terror in Kabul. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The U.S. government announced this month that it would withhold hundreds of millions of dollars in aid to Pakistan. In the weeks since, Afghanistan has experienced one of the most violent and deadly periods in its 16-year war. How are the two connected? Guest: <a href="https://www.nytimes.com/by/mujib-mashal" target="_blank">Mujib Mashal</a>, a New York Times correspondent in Afghanistan, who describes the sense of terror in Kabul. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/UEZi_Bl3nUSrHlora9qyr7QKuoFkZURH22Aho_sgkNc</guid>
      <pubDate>Tue, 30 Jan 2018 10:47:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/63da99d8-661f-4df1-8767-1b9d027d6f13.mp3" type="audio/mpeg" length="20695666"/>
    </item>
    <item>
      <title>Monday, Jan. 29, 2018</title>
      <description>
        <![CDATA[<p>As the Trump administration clamps down on immigration, some asylum seekers are fleeing to Canada. But is it the promised land they had hoped for? Guest: <a href="https://www.nytimes.com/by/dan-bilefsky" target="_blank">Dan Bilefsky</a>, a New York Times reporter in Canada. Thank you to the Canadian Broadcasting Corporation for their interviews with migrants crossing the border. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Monday, Jan. 29, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the Trump administration clamps down on immigration, some asylum seekers are fleeing to Canada. But is it the promised land they had hoped for? Guest: Dan Bilefsky, a New York Times reporter in Canada. Thank you to the Canadian Broadcasting Corporation for their interviews with migrants crossing the border. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As the Trump administration clamps down on immigration, some asylum seekers are fleeing to Canada. But is it the promised land they had hoped for? Guest: <a href="https://www.nytimes.com/by/dan-bilefsky" target="_blank">Dan Bilefsky</a>, a New York Times reporter in Canada. Thank you to the Canadian Broadcasting Corporation for their interviews with migrants crossing the border. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OI3CCw6RqPUAPkAKmhmGyYZ8dLl61qMwO_hQpOykfcg</guid>
      <pubDate>Mon, 29 Jan 2018 10:39:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/db399d22-5aa3-4a14-b5f5-78ec8270d157.mp3" type="audio/mpeg" length="18107663"/>
    </item>
    <item>
      <title>Friday, Jan. 26, 2018</title>
      <description>
        <![CDATA[<p>The New York Times is reporting that President Trump tried to order the firing of Robert S. Mueller III, the special counsel overseeing the Russia investigation, but ultimately backed down when his own lawyer threatened to quit. And Senator Chuck Schumer, the minority leader, talks about trying to hammer out a compromise on immigration policy. He has described dealing with the White House as “like negotiating with Jell-O.” &nbsp;Guests: Michael S. Schmidt, who covers national security for The Times; Senator Chuck Schumer of New York. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Jan. 26, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The New York Times is reporting that President Trump tried to order the firing of Robert S. Mueller III, the special counsel overseeing the Russia investigation, but ultimately backed down when his own lawyer threatened to quit. And Senator Chuck Schumer, the minority leader, talks about trying to hammer out a compromise on immigration policy. He has described dealing with the White House as “like negotiating with Jell-O.”  Guests: Michael S. Schmidt, who covers national security for The Times; Senator Chuck Schumer of New York. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The New York Times is reporting that President Trump tried to order the firing of Robert S. Mueller III, the special counsel overseeing the Russia investigation, but ultimately backed down when his own lawyer threatened to quit. And Senator Chuck Schumer, the minority leader, talks about trying to hammer out a compromise on immigration policy. He has described dealing with the White House as “like negotiating with Jell-O.” &nbsp;Guests: Michael S. Schmidt, who covers national security for The Times; Senator Chuck Schumer of New York. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XDAJMgSuZ6_3djpjJNAFVUPurTJNqp501bAG4r3WAgc</guid>
      <pubDate>Fri, 26 Jan 2018 11:01:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/03050a25-84a3-493d-bdd8-e45ff5cf419a.mp3" type="audio/mpeg" length="21111118"/>
    </item>
    <item>
      <title>Thursday, Jan. 25, 2018</title>
      <description>
        <![CDATA[<p>Dr. Lawrence G. Nassar was lauded as the go-to doctor for the United States’ best gymnasts. After he pleaded guilty to multiple sex crimes, Judge Rosemarie Aquilina cleared her docket to give each of his accusers a chance to speak at the sentencing hearing. More than 150 women, including several Olympians, confronted Dr. Nassar in the courtroom and spoke of their abuse over seven days. It was an extraordinary use of the courtroom — and a new way of thinking about justice.&nbsp; Guests: Emily Bazelon, who covers legal issues for The New York Times Magazine; Makayla Thrush, a former gymnast, spoke to Sabrina Tavernise, a Times reporter. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Jan. 25, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Dr. Lawrence G. Nassar was lauded as the go-to doctor for the United States’ best gymnasts. After he pleaded guilty to multiple sex crimes, Judge Rosemarie Aquilina cleared her docket to give each of his accusers a chance to speak at the sentencing hearing. More than 150 women, including several Olympians, confronted Dr. Nassar in the courtroom and spoke of their abuse over seven days. It was an extraordinary use of the courtroom — and a new way of thinking about justice.  Guests: Emily Bazelon, who covers legal issues for The New York Times Magazine; Makayla Thrush, a former gymnast, spoke to Sabrina Tavernise, a Times reporter. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Dr. Lawrence G. Nassar was lauded as the go-to doctor for the United States’ best gymnasts. After he pleaded guilty to multiple sex crimes, Judge Rosemarie Aquilina cleared her docket to give each of his accusers a chance to speak at the sentencing hearing. More than 150 women, including several Olympians, confronted Dr. Nassar in the courtroom and spoke of their abuse over seven days. It was an extraordinary use of the courtroom — and a new way of thinking about justice.&nbsp; Guests: Emily Bazelon, who covers legal issues for The New York Times Magazine; Makayla Thrush, a former gymnast, spoke to Sabrina Tavernise, a Times reporter. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wpkmB-FehbtgQWbGlxJhyqxJmML2ewBxBbfVNWmlu9M</guid>
      <pubDate>Thu, 25 Jan 2018 11:01:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0251c12e-569e-4925-a101-3272314dd8b2.mp3" type="audio/mpeg" length="25384751"/>
    </item>
    <item>
      <title>Wednesday, Jan. 24, 2018</title>
      <description>
        <![CDATA[<p>Tonya Harding had talent, but the world of figure skating wanted nothing to do with her. She was called “white trash.” And when Nancy Kerrigan was bashed in the knee just before the 1994 Winter Olympics, Ms. Harding became a villain. Now, 24 years later, her narrative is being revisited — and she is back in the spotlight. Guest: Taffy Brodesser-Akner, who interviewed Tonya Harding (now Tonya Price) for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Jan. 24, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Tonya Harding had talent, but the world of figure skating wanted nothing to do with her. She was called “white trash.” And when Nancy Kerrigan was bashed in the knee just before the 1994 Winter Olympics, Ms. Harding became a villain. Now, 24 years later, her narrative is being revisited — and she is back in the spotlight. Guest: Taffy Brodesser-Akner, who interviewed Tonya Harding (now Tonya Price) for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Tonya Harding had talent, but the world of figure skating wanted nothing to do with her. She was called “white trash.” And when Nancy Kerrigan was bashed in the knee just before the 1994 Winter Olympics, Ms. Harding became a villain. Now, 24 years later, her narrative is being revisited — and she is back in the spotlight. Guest: Taffy Brodesser-Akner, who interviewed Tonya Harding (now Tonya Price) for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/d_GpDyC9S1FlV0cuDntBLgLSNt-nfMAaLXCT89atyC0</guid>
      <pubDate>Wed, 24 Jan 2018 11:03:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e32648ad-875d-4d3c-9dec-d05b33c7eb4c.mp3" type="audio/mpeg" length="33859291"/>
    </item>
    <item>
      <title>Tuesday,  Jan. 23, 2018</title>
      <description>
        <![CDATA[<p>President Trump’s plan to build a “big, beautiful wall” between the United States and Mexico has become the ultimate symbol of a hard-line immigration policy. So why, as Congress voted to end a government shutdown and take up the issue of immigration, have Democrats suggested that they would agree to fund the wall if Republicans protect the Dreamers?</p><p>Guest: Julie Hirschfeld Davis, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday,  Jan. 23, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s plan to build a “big, beautiful wall” between the United States and Mexico has become the ultimate symbol of a hard-line immigration policy. So why, as Congress voted to end a government shutdown and take up the issue of immigration, have Democrats suggested that they would agree to fund the wall if Republicans protect the Dreamers?

Guest: Julie Hirschfeld Davis, a White House correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump’s plan to build a “big, beautiful wall” between the United States and Mexico has become the ultimate symbol of a hard-line immigration policy. So why, as Congress voted to end a government shutdown and take up the issue of immigration, have Democrats suggested that they would agree to fund the wall if Republicans protect the Dreamers?</p><p>Guest: Julie Hirschfeld Davis, a White House correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0L5huIacN6yjpq4Acy6ZudWqNWmknMRcWQRIvBYbHk8</guid>
      <pubDate>Tue, 23 Jan 2018 10:47:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5aea44ca-9917-41e8-91f0-1448cfa266fc.mp3" type="audio/mpeg" length="21418736"/>
    </item>
    <item>
      <title>Monday, Jan. 22, 2018</title>
      <description>
        <![CDATA[<p>Democrats forced the federal government to shut down by saying there could be no budget deal without a deal on the Deferred Action on Childhood Arrivals program, or DACA. Republicans have refused to end the shutdown by saying there can be no DACA deal without a budget deal. There’s been a lot of finger-pointing between the two parties, and the future of young undocumented immigrants hangs in the balance. Guest: Thomas Kaplan, a New York Times reporter who covers Congress. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Jan. 22, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Democrats forced the federal government to shut down by saying there could be no budget deal without a deal on the Deferred Action on Childhood Arrivals program, or DACA. Republicans have refused to end the shutdown by saying there can be no DACA deal without a budget deal. There’s been a lot of finger-pointing between the two parties, and the future of young undocumented immigrants hangs in the balance. Guest: Thomas Kaplan, a New York Times reporter who covers Congress. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Democrats forced the federal government to shut down by saying there could be no budget deal without a deal on the Deferred Action on Childhood Arrivals program, or DACA. Republicans have refused to end the shutdown by saying there can be no DACA deal without a budget deal. There’s been a lot of finger-pointing between the two parties, and the future of young undocumented immigrants hangs in the balance. Guest: Thomas Kaplan, a New York Times reporter who covers Congress. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/c3ymafx7osuyM5glK1NXaGrlhy71kise6ZPSmlOJbpA</guid>
      <pubDate>Mon, 22 Jan 2018 10:48:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e7c95951-558e-4ff5-aa68-f151d37ac73a.mp3" type="audio/mpeg" length="18205466"/>
    </item>
    <item>
      <title>Friday, Jan. 19, 2018</title>
      <description>
        <![CDATA[<p>The only Democrat in the room when President Trump railed against African immigrants as coming from “shithole countries” tells his side of the story. The ensuing fight over immigration has put the government on the verge of a shutdown. If that happens, whose fault would it be? Guests: Senator Richard Durbin of Illinois, who spoke to Carl Hulse, a Washington correspondent for The New York Times, about the meetings with President Trump; Jonathan Weisman, the deputy Washington editor for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Jan. 19, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The only Democrat in the room when President Trump railed against African immigrants as coming from “shithole countries” tells his side of the story. The ensuing fight over immigration has put the government on the verge of a shutdown. If that happens, whose fault would it be? Guests: Senator Richard Durbin of Illinois, who spoke to Carl Hulse, a Washington correspondent for The New York Times, about the meetings with President Trump; Jonathan Weisman, the deputy Washington editor for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The only Democrat in the room when President Trump railed against African immigrants as coming from “shithole countries” tells his side of the story. The ensuing fight over immigration has put the government on the verge of a shutdown. If that happens, whose fault would it be? Guests: Senator Richard Durbin of Illinois, who spoke to Carl Hulse, a Washington correspondent for The New York Times, about the meetings with President Trump; Jonathan Weisman, the deputy Washington editor for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MQfbjw6pqpkTUd413_mHDDkQK8dnqz4jv7N6R2_r9cg</guid>
      <pubDate>Fri, 19 Jan 2018 10:54:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1d160e7b-6d9a-41ef-9626-7cc94a629aab.mp3" type="audio/mpeg" length="21518628"/>
    </item>
    <item>
      <title>Thursday, Jan. 18, 2018</title>
      <description>
        <![CDATA[<p>America’s addiction crisis has become a lucrative business, and fortunes have been made in the growing rehab industry. But the death of a patient in California has raised questions about how to treat people who want to get clean, and what it means to profit from the health crisis. Guest: Michael Corkery, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Jan. 18, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>America’s addiction crisis has become a lucrative business, and fortunes have been made in the growing rehab industry. But the death of a patient in California has raised questions about how to treat people who want to get clean, and what it means to profit from the health crisis. Guest: Michael Corkery, an investigative reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>America’s addiction crisis has become a lucrative business, and fortunes have been made in the growing rehab industry. But the death of a patient in California has raised questions about how to treat people who want to get clean, and what it means to profit from the health crisis. Guest: Michael Corkery, an investigative reporter for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/I6wDwKi1x398sonFpEnCfYV9t2O1lMkhnB9fG629PO8</guid>
      <pubDate>Thu, 18 Jan 2018 10:59:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/08db9cfe-4b18-4ae0-a9d6-34b105aa5970.mp3" type="audio/mpeg" length="21875983"/>
    </item>
    <item>
      <title>Wednesday, Jan. 17, 2018</title>
      <description>
        <![CDATA[<p>A Senate Judiciary Committee hearing on border walls turned into a fight over the language President Trump used to describe Haiti and some African countries. Why does it matter so much to members of Congress? Also, Stephen Bannon is the first member of Mr. Trump’s inner circle to receive a grand jury subpoena in the Russia investigation. Guests: Julie Hirschfeld Davis, a White House correspondent for The New York Times; Michael S. Schmidt, an investigative reporter for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Jan. 17, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A Senate Judiciary Committee hearing on border walls turned into a fight over the language President Trump used to describe Haiti and some African countries. Why does it matter so much to members of Congress? Also, Stephen Bannon is the first member of Mr. Trump’s inner circle to receive a grand jury subpoena in the Russia investigation. Guests: Julie Hirschfeld Davis, a White House correspondent for The New York Times; Michael S. Schmidt, an investigative reporter for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A Senate Judiciary Committee hearing on border walls turned into a fight over the language President Trump used to describe Haiti and some African countries. Why does it matter so much to members of Congress? Also, Stephen Bannon is the first member of Mr. Trump’s inner circle to receive a grand jury subpoena in the Russia investigation. Guests: Julie Hirschfeld Davis, a White House correspondent for The New York Times; Michael S. Schmidt, an investigative reporter for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NX6m63Q7Zw_-aCagxCdrLO7pHM0zWqvwm2NlG2wyV-Q</guid>
      <pubDate>Wed, 17 Jan 2018 11:00:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6059f52a-e364-4460-ae59-bbf60dadf422.mp3" type="audio/mpeg" length="19359869"/>
    </item>
    <item>
      <title>Tuesday, Jan. 16, 2018</title>
      <description>
        <![CDATA[<p>As South Korea prepares to host the Winter Olympics, it has been eager to get the North to participate. What is Seoul afraid will happen if it won’t? And, for 38 minutes on Saturday morning, people in Hawaii believed that a missile was headed for the state. Guest: Susan Chira, a Times journalist who covered Asia in the 1980s, when South Korea hosted the Olympic Games for the first time; voice mail messages from people who received a false alert about an incoming missile attack in Hawaii. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Jan. 16, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As South Korea prepares to host the Winter Olympics, it has been eager to get the North to participate. What is Seoul afraid will happen if it won’t? And, for 38 minutes on Saturday morning, people in Hawaii believed that a missile was headed for the state. Guest: Susan Chira, a Times journalist who covered Asia in the 1980s, when South Korea hosted the Olympic Games for the first time; voice mail messages from people who received a false alert about an incoming missile attack in Hawaii. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>As South Korea prepares to host the Winter Olympics, it has been eager to get the North to participate. What is Seoul afraid will happen if it won’t? And, for 38 minutes on Saturday morning, people in Hawaii believed that a missile was headed for the state. Guest: Susan Chira, a Times journalist who covered Asia in the 1980s, when South Korea hosted the Olympic Games for the first time; voice mail messages from people who received a false alert about an incoming missile attack in Hawaii. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fKlhBuP_S7gDlVJVZ744V_HWzY1YY2B4N3TsESksEJg</guid>
      <pubDate>Tue, 16 Jan 2018 10:56:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/11bc1195-da68-47f6-84f7-655c432eeaa4.mp3" type="audio/mpeg" length="22683480"/>
    </item>
    <item>
      <title>Friday, Jan. 12, 2018</title>
      <description>
        <![CDATA[<p>President Trump has demanded to know why the United States should welcome immigrants from “shithole countries.” His words have alarmed lawmakers and threatened an immigration deal. But they have also raised a question about a certain American ideal: Who should be let in? Guest: Julie Hirschfeld Davis, who covers the White House for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Jan. 12, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has demanded to know why the United States should welcome immigrants from “shithole countries.” His words have alarmed lawmakers and threatened an immigration deal. But they have also raised a question about a certain American ideal: Who should be let in? Guest: Julie Hirschfeld Davis, who covers the White House for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has demanded to know why the United States should welcome immigrants from “shithole countries.” His words have alarmed lawmakers and threatened an immigration deal. But they have also raised a question about a certain American ideal: Who should be let in? Guest: Julie Hirschfeld Davis, who covers the White House for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BLxgbh5E2cJpjh3d98jxn3yFvBVSD5PA5oz14mnnIYw</guid>
      <pubDate>Fri, 12 Jan 2018 10:38:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b9f9badc-7c3e-4079-8796-6286fd82f16f.mp3" type="audio/mpeg" length="19098644"/>
    </item>
    <item>
      <title>Thursday, Jan. 11, 2018</title>
      <description>
        <![CDATA[<p>When President Trump announced that he would end the Obama-era program called Deferred Action for Childhood Arrivals, or DACA, he gave Congress six months to make it law. Otherwise, many undocumented immigrants brought to the United States as children could be deported. As the clock counts down, why is the president making the program his problem once again?</p><p>Guest: Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Jan. 11, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When President Trump announced that he would end the Obama-era program called Deferred Action for Childhood Arrivals, or DACA, he gave Congress six months to make it law. Otherwise, many undocumented immigrants brought to the United States as children could be deported. As the clock counts down, why is the president making the program his problem once again?

Guest: Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>When President Trump announced that he would end the Obama-era program called Deferred Action for Childhood Arrivals, or DACA, he gave Congress six months to make it law. Otherwise, many undocumented immigrants brought to the United States as children could be deported. As the clock counts down, why is the president making the program his problem once again?</p><p>Guest: Michael D. Shear, a White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/loOYx6Y7Yzx6722rWcpUKPJnIQinB7go2KOrIJaPlc4</guid>
      <pubDate>Thu, 11 Jan 2018 10:53:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e29cbc5b-31de-4458-8589-a82961ff7b56.mp3" type="audio/mpeg" length="20483343"/>
    </item>
    <item>
      <title>Wednesday, Jan. 10, 2018</title>
      <description>
        <![CDATA[<p>George Papadopoulos drew worldwide attention when he was identified as the low-ranking foreign policy adviser to the Trump campaign who got in over his head with Russia and inadvertently set off the Mueller investigation. But another foreign policy adviser, Carter Page, also drew the attention of the F.B.I.: Why did his story end so differently? Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>To take our audience survey, visit <a href="https://www.nytimes.com/podcasts/" target="_blank">nytimes.com/podcasts</a> and look for the "take our listener survey" button.</p>]]>
      </description>
      <itunes:title>Wednesday, Jan. 10, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>George Papadopoulos drew worldwide attention when he was identified as the low-ranking foreign policy adviser to the Trump campaign who got in over his head with Russia and inadvertently set off the Mueller investigation. But another foreign policy adviser, Carter Page, also drew the attention of the F.B.I.: Why did his story end so differently? Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.

To take our audience survey, visit nytimes.com/podcasts and look for the "take our listener survey" button.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>George Papadopoulos drew worldwide attention when he was identified as the low-ranking foreign policy adviser to the Trump campaign who got in over his head with Russia and inadvertently set off the Mueller investigation. But another foreign policy adviser, Carter Page, also drew the attention of the F.B.I.: Why did his story end so differently? Guest: Jason Zengerle, a contributing writer for The New York Times Magazine. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>To take our audience survey, visit <a href="https://www.nytimes.com/podcasts/" target="_blank">nytimes.com/podcasts</a> and look for the "take our listener survey" button.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1hpt1_44KifJcZHuXGAisi9RTHIem3n9lTG1eZyp3Aw</guid>
      <pubDate>Wed, 10 Jan 2018 11:03:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5eb9d69d-8e3a-477b-ae30-f160ef0b5b74.mp3" type="audio/mpeg" length="24678400"/>
    </item>
    <item>
      <title>Tuesday, Jan. 9, 2018</title>
      <description>
        <![CDATA[<p>In 2001, the United States granted Temporary Protected Status to people from El Salvador, after two deadly earthquakes ravaged their country. Nearly 20 years later, that protection seemed to be permanent. And then he Trump administration announced that the rights would end. Guest: Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Jan. 9, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 2001, the United States granted Temporary Protected Status to people from El Salvador, after two deadly earthquakes ravaged their country. Nearly 20 years later, that protection seemed to be permanent. And then he Trump administration announced that the rights would end. Guest: Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In 2001, the United States granted Temporary Protected Status to people from El Salvador, after two deadly earthquakes ravaged their country. Nearly 20 years later, that protection seemed to be permanent. And then he Trump administration announced that the rights would end. Guest: Azam Ahmed, the New York Times bureau chief for Mexico, Central America and the Caribbean. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vHGhTCCcAHkX6OegRrKLmE1x4I9bHfioQAmzWu3ftro</guid>
      <pubDate>Tue, 09 Jan 2018 10:55:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/936251b8-e72f-4564-9844-1e1361be7ddd.mp3" type="audio/mpeg" length="20093805"/>
    </item>
    <item>
      <title>Monday, Jan. 8, 2018</title>
      <description>
        <![CDATA[<p>Five days after the release of the tell-all book “Fire and Fury: Inside the Trump White House,” President Trump defended his mental health, calling himself a “very stable genius.” And Stephen K. Bannon, the president’s former chief strategist, backed away from calling Donald Trump Jr. “treasonous.” Why did a publication with little new reporting in it cause such a big stir? Guests: <a href="https://www.nytimes.com/by/peter-baker" target="_blank">Peter Baker</a>, chief White House correspondent for The New York Times; <a href="https://www.nytimes.com/by/jeremy-w-peters" target="_blank">Jeremy W. Peters</a>, a Times journalist who has reported on Mr. Bannon for years. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Jan. 8, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Five days after the release of the tell-all book “Fire and Fury: Inside the Trump White House,” President Trump defended his mental health, calling himself a “very stable genius.” And Stephen K. Bannon, the president’s former chief strategist, backed away from calling Donald Trump Jr. “treasonous.” Why did a publication with little new reporting in it cause such a big stir? Guests: Peter Baker, chief White House correspondent for The New York Times; Jeremy W. Peters, a Times journalist who has reported on Mr. Bannon for years. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Five days after the release of the tell-all book “Fire and Fury: Inside the Trump White House,” President Trump defended his mental health, calling himself a “very stable genius.” And Stephen K. Bannon, the president’s former chief strategist, backed away from calling Donald Trump Jr. “treasonous.” Why did a publication with little new reporting in it cause such a big stir? Guests: <a href="https://www.nytimes.com/by/peter-baker" target="_blank">Peter Baker</a>, chief White House correspondent for The New York Times; <a href="https://www.nytimes.com/by/jeremy-w-peters" target="_blank">Jeremy W. Peters</a>, a Times journalist who has reported on Mr. Bannon for years. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lJ2eOKIY5cksRG5w2SzbNMl3JoA-Ls_sgqR5i98pN88</guid>
      <pubDate>Mon, 08 Jan 2018 10:58:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5be29f37-4364-414d-a5b0-31e2b3f8c3eb.mp3" type="audio/mpeg" length="22304809"/>
    </item>
    <item>
      <title>Friday, Jan. 5, 2018</title>
      <description>
        <![CDATA[<p>After eight days, the largest protests in Iran in years appear to be winding down, calmed, at least in part, by the government. But a closer look at what ignited the outrage in the first place suggests that the country’s president may have lit the match. Guest: Thomas Erdbrink, the Tehran bureau chief for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Jan. 5, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After eight days, the largest protests in Iran in years appear to be winding down, calmed, at least in part, by the government. But a closer look at what ignited the outrage in the first place suggests that the country’s president may have lit the match. Guest: Thomas Erdbrink, the Tehran bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>After eight days, the largest protests in Iran in years appear to be winding down, calmed, at least in part, by the government. But a closer look at what ignited the outrage in the first place suggests that the country’s president may have lit the match. Guest: Thomas Erdbrink, the Tehran bureau chief for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1yuDSwEbEb0YpooGVBcs3Tr5B1Wv7iBGXyLFtvBe_sY</guid>
      <pubDate>Fri, 05 Jan 2018 11:00:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d49653d3-8f6d-4404-a5be-dfd67c99466d.mp3" type="audio/mpeg" length="22163957"/>
    </item>
    <item>
      <title>Thursday, Jan. 4, 2018</title>
      <description>
        <![CDATA[<p>A new tell-all book about the first year of the Trump administration has the White House in a fury. Its key source is Stephen K. Bannon, President Trump’s former chief strategist, who disparages the president and his children. Mr. Trump responded: “Steve Bannon has nothing to do with me or my presidency. When he was fired, he not only lost his job, he lost his mind.”</p><p>Guests: Peter Baker, chief White House correspondent; Maggie Haberman, White House correspondent. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Jan. 4, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A new tell-all book about the first year of the Trump administration has the White House in a fury. Its key source is Stephen K. Bannon, President Trump’s former chief strategist, who disparages the president and his children. Mr. Trump responded: “Steve Bannon has nothing to do with me or my presidency. When he was fired, he not only lost his job, he lost his mind.”

Guests: Peter Baker, chief White House correspondent; Maggie Haberman, White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A new tell-all book about the first year of the Trump administration has the White House in a fury. Its key source is Stephen K. Bannon, President Trump’s former chief strategist, who disparages the president and his children. Mr. Trump responded: “Steve Bannon has nothing to do with me or my presidency. When he was fired, he not only lost his job, he lost his mind.”</p><p>Guests: Peter Baker, chief White House correspondent; Maggie Haberman, White House correspondent. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9pieOg3ifm9FitToqYdSBxQWi5nqqzmJS-oN6FCm6mc</guid>
      <pubDate>Thu, 04 Jan 2018 10:42:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/26bbe568-e3cc-4ccd-b788-67ba6a90cfa0.mp3" type="audio/mpeg" length="18634292"/>
    </item>
    <item>
      <title>Wednesday, Jan. 3, 2018</title>
      <description>
        <![CDATA[<p>On New Year’s Day, the North Korean leader, Kim Jong-un, surprisingly called for direct talks with South Korea. How could that dialogue shift the dynamics among the North, the South and the United States? And Senator Orrin Hatch of Utah, the longest-serving Republican in the Senate, is retiring. Is the way open for Mitt Romney’s return? Guests: David E. Sanger, a Times correspondent who has covered North Korea’s missile program for decades; Jonathan Martin, a national correspondent.</p><p>For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Jan. 3, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On New Year’s Day, the North Korean leader, Kim Jong-un, surprisingly called for direct talks with South Korea. How could that dialogue shift the dynamics among the North, the South and the United States? And Senator Orrin Hatch of Utah, the longest-serving Republican in the Senate, is retiring. Is the way open for Mitt Romney’s return? Guests: David E. Sanger, a Times correspondent who has covered North Korea’s missile program for decades; Jonathan Martin, a national correspondent.

For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>On New Year’s Day, the North Korean leader, Kim Jong-un, surprisingly called for direct talks with South Korea. How could that dialogue shift the dynamics among the North, the South and the United States? And Senator Orrin Hatch of Utah, the longest-serving Republican in the Senate, is retiring. Is the way open for Mitt Romney’s return? Guests: David E. Sanger, a Times correspondent who has covered North Korea’s missile program for decades; Jonathan Martin, a national correspondent.</p><p>For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/S1L69st9rVPTVKFkMldNbayc07abwmDpXMclZPgdNck</guid>
      <pubDate>Wed, 03 Jan 2018 10:35:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d76e4950-da4f-4721-99ce-fe5cf84059ad.mp3" type="audio/mpeg" length="21747670"/>
    </item>
    <item>
      <title>Tuesday, Jan. 2, 2018</title>
      <description>
        <![CDATA[<p> It’s 2018, and the investigation into Russian meddling in the 2016 presidential election is nowhere near complete — as the Trump administration had predicted it would be. Instead, new reporting on what prompted a federal inquiry in the first place has shed light on what Robert Mueller, the special counsel in charge of the investigation, was up to over the past year. Guest: Matt Apuzzo, who covers national security for The New York Times</p>]]>
      </description>
      <itunes:title>Tuesday, Jan. 2, 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary> It’s 2018, and the investigation into Russian meddling in the 2016 presidential election is nowhere near complete — as the Trump administration had predicted it would be. Instead, new reporting on what prompted a federal inquiry in the first place has shed light on what Robert Mueller, the special counsel in charge of the investigation, was up to over the past year. Guest: Matt Apuzzo, who covers national security for The New York Times</itunes:summary>
      <content:encoded>
        <![CDATA[<p> It’s 2018, and the investigation into Russian meddling in the 2016 presidential election is nowhere near complete — as the Trump administration had predicted it would be. Instead, new reporting on what prompted a federal inquiry in the first place has shed light on what Robert Mueller, the special counsel in charge of the investigation, was up to over the past year. Guest: Matt Apuzzo, who covers national security for The New York Times</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PJ3FfVyZGsGa3_V9u6rW_ZieV-rO0jml3YA67cl5qPA</guid>
      <pubDate>Tue, 02 Jan 2018 10:31:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f73efe65-7bf4-4259-99b1-07c5604a9918.mp3" type="audio/mpeg" length="17253773"/>
    </item>
    <item>
      <title>Friday, Dec. 29, 2017</title>
      <description>
        <![CDATA[<p>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we return to the story of Shannon Mulcahy and other steelworkers in Indiana who lost their jobs when their factory moved to Mexico. Guest: Farah Stockman, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Dec. 29, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we return to the story of Shannon Mulcahy and other steelworkers in Indiana who lost their jobs when their factory moved to Mexico. Guest: Farah Stockman, a national correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we return to the story of Shannon Mulcahy and other steelworkers in Indiana who lost their jobs when their factory moved to Mexico. Guest: Farah Stockman, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8fmJJaUt3SEZyExj42TK0EKpGec-Gd4p24iQKHLc2t4</guid>
      <pubDate>Fri, 29 Dec 2017 10:34:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:40:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/98169736-d6cf-4642-97d4-8e7859ea2d02.mp3" type="audio/mpeg" length="39007294"/>
    </item>
    <item>
      <title>Thursday, Dec. 28, 2017</title>
      <description>
        <![CDATA[<p>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we return to the story of two Americans, Abraham Davis and Hisham Yasin. Theirs is a story of vandalism and forgiveness. Guest: Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Dec. 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we return to the story of two Americans, Abraham Davis and Hisham Yasin. Theirs is a story of vandalism and forgiveness. Guest: Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we return to the story of two Americans, Abraham Davis and Hisham Yasin. Theirs is a story of vandalism and forgiveness. Guest: Sabrina Tavernise, a national correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/uWGpJg-E884r5zTgU6bcNF0WpVXjiA_o2fW5viWianA</guid>
      <pubDate>Thu, 28 Dec 2017 11:04:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:35:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5cc77555-3f79-4ec4-84f8-e2987b8a62b5.mp3" type="audio/mpeg" length="34553103"/>
    </item>
    <item>
      <title>Wednesday, Dec. 27, 2017</title>
      <description>
        <![CDATA[<p>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we’re going back to a conversation that first ran this summer, two weeks after a white supremacist rally in Charlottesville, Va. turned violent and right after President Trump drew intense criticism by saying there were “some very fine people on both sides.” Guest: Derek Black, who had been poised to lead the white nationalist movement but then left, betraying his father, a former grand master of the Ku Klux Klan. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, Dec. 27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we’re going back to a conversation that first ran this summer, two weeks after a white supremacist rally in Charlottesville, Va. turned violent and right after President Trump drew intense criticism by saying there were “some very fine people on both sides.” Guest: Derek Black, who had been poised to lead the white nationalist movement but then left, betraying his father, a former grand master of the Ku Klux Klan. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Daily is revisiting our favorite episodes of the year — listening back, and then hearing what’s happened since the stories first ran. Today, we’re going back to a conversation that first ran this summer, two weeks after a white supremacist rally in Charlottesville, Va. turned violent and right after President Trump drew intense criticism by saying there were “some very fine people on both sides.” Guest: Derek Black, who had been poised to lead the white nationalist movement but then left, betraying his father, a former grand master of the Ku Klux Klan. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wdy79Jw6uNjzakRpvMKVOdSC-YFdblXRgEAJayvt118</guid>
      <pubDate>Wed, 27 Dec 2017 10:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:36:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5ef0df25-339d-4875-a48d-d98922fe8f58.mp3" type="audio/mpeg" length="34719451"/>
    </item>
    <item>
      <title>Tuesday, Dec. 26, 2017</title>
      <description>
        <![CDATA[<p>The Daily is revisiting favorite episodes of the year — listening back, and then hearing what’s happened in the time since the stories first ran. Today we’re going back to an episode from the early weeks of the Trump administration, when we met a man named Carlos who got caught up in the president’s crackdown on immigrants already living in the U.S. illegally. Guests: Monica Davey, the Chicago bureau chief for The New York Times; Tim Grigsby, a print shop owner in West Frankfort, Ill. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Tuesday, Dec. 26, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Daily is revisiting favorite episodes of the year — listening back, and then hearing what’s happened in the time since the stories first ran. Today we’re going back to an episode from the early weeks of the Trump administration, when we met a man named Carlos who got caught up in the president’s crackdown on immigrants already living in the U.S. illegally. Guests: Monica Davey, the Chicago bureau chief for The New York Times; Tim Grigsby, a print shop owner in West Frankfort, Ill. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Daily is revisiting favorite episodes of the year — listening back, and then hearing what’s happened in the time since the stories first ran. Today we’re going back to an episode from the early weeks of the Trump administration, when we met a man named Carlos who got caught up in the president’s crackdown on immigrants already living in the U.S. illegally. Guests: Monica Davey, the Chicago bureau chief for The New York Times; Tim Grigsby, a print shop owner in West Frankfort, Ill. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/w_gOid7KAatCVEDX6r5zlSreG8BO1_91o5jWFGKM_Io</guid>
      <pubDate>Tue, 26 Dec 2017 10:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0ce2c6a5-9740-4ca1-8162-0414a3da8085.mp3" type="audio/mpeg" length="21087712"/>
    </item>
    <item>
      <title>Special Episode: The Year in Sound</title>
      <description>
        <![CDATA[<p>A riot in Charlottesville, Va.; hurricanes in Houston and the Caribbean; shootings outside a music festival, in a church and on a baseball field. Big new jobs for Donald Trump and Neil Gorsuch; big jobs lost for Michael Flynn, James Comey, Bill O’Reilly and Harvey Weinstein. A health care bill stymied; a tax bill fast-tracked. Here’s what a breathtaking year sounded like, from start to finish. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>We're taking Monday off for Christmas. For the rest of next week, we’ll revisit our favorite episodes, adding what has happened since the stories first ran. We’ll be back with a new episode on Tuesday, Jan. 2.</p>]]>
      </description>
      <itunes:title>Special Episode: The Year in Sound</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A riot in Charlottesville, Va.; hurricanes in Houston and the Caribbean; shootings outside a music festival, in a church and on a baseball field. Big new jobs for Donald Trump and Neil Gorsuch; big jobs lost for Michael Flynn, James Comey, Bill O’Reilly and Harvey Weinstein. A health care bill stymied; a tax bill fast-tracked. Here’s what a breathtaking year sounded like, from start to finish. For more information on today’s episode, visit nytimes.com/thedaily. 

We're taking Monday off for Christmas. For the rest of next week, we’ll revisit our favorite episodes, adding what has happened since the stories first ran. We’ll be back with a new episode on Tuesday, Jan. 2.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A riot in Charlottesville, Va.; hurricanes in Houston and the Caribbean; shootings outside a music festival, in a church and on a baseball field. Big new jobs for Donald Trump and Neil Gorsuch; big jobs lost for Michael Flynn, James Comey, Bill O’Reilly and Harvey Weinstein. A health care bill stymied; a tax bill fast-tracked. Here’s what a breathtaking year sounded like, from start to finish. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>We're taking Monday off for Christmas. For the rest of next week, we’ll revisit our favorite episodes, adding what has happened since the stories first ran. We’ll be back with a new episode on Tuesday, Jan. 2.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HpYeU4EoUar5cmVTeCgESlaS1J-NPkIZjFo20nE3kAo</guid>
      <pubDate>Fri, 22 Dec 2017 10:45:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/dbbe2a06-c518-48f7-998e-9c4653171506.mp3" type="audio/mpeg" length="19176385"/>
    </item>
    <item>
      <title>Thursday, Dec. 21, 2017</title>
      <description>
        <![CDATA[<p>A quarter-century ago, the Ford Motor Company paid out millions of dollars in settlements after a group of women at two Chicago plants accused the company of allowing a culture of harassment and menace. Now, new allegations at the very same Ford plants raise questions about the possibility of change. Guest: Catrin Einhorn, a reporter for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, Dec. 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A quarter-century ago, the Ford Motor Company paid out millions of dollars in settlements after a group of women at two Chicago plants accused the company of allowing a culture of harassment and menace. Now, new allegations at the very same Ford plants raise questions about the possibility of change. Guest: Catrin Einhorn, a reporter for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A quarter-century ago, the Ford Motor Company paid out millions of dollars in settlements after a group of women at two Chicago plants accused the company of allowing a culture of harassment and menace. Now, new allegations at the very same Ford plants raise questions about the possibility of change. Guest: Catrin Einhorn, a reporter for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/be01IQyjOdJiTzxznKjNkBm3nCS8McLj6DbXDeVd1pQ</guid>
      <pubDate>Thu, 21 Dec 2017 11:05:58 -0000</pubDate>
      <itunes:explicit>yes</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ce243027-afdc-4442-954f-04e9b06904df.mp3" type="audio/mpeg" length="28242755"/>
    </item>
    <item>
      <title>Wednesday, Dec. 20, 2017</title>
      <description>
        <![CDATA[<p>The individual mandate started as a Republican idea to fix health care, but it was at the heart of a Democratic president’s signature measure. Now Congress is using the tax bill to kill the mandate. Why did Republicans turn on their own big idea, and what does it mean for the future of the Affordable Care Act?</p><p>Guests: Margot Sanger-Katz, a health care reporter for The Times; Jonathan Gruber, a professor of economics at M.I.T. who advised Mitt Romney’s team on overhauling health care in Massachusetts, and the Obama administration in drafting the Affordable Care Act. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Wednesday, Dec. 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The individual mandate started as a Republican idea to fix health care, but it was at the heart of a Democratic president’s signature measure. Now Congress is using the tax bill to kill the mandate. Why did Republicans turn on their own big idea, and what does it mean for the future of the Affordable Care Act?

Guests: Margot Sanger-Katz, a health care reporter for The Times; Jonathan Gruber, a professor of economics at M.I.T. who advised Mitt Romney’s team on overhauling health care in Massachusetts, and the Obama administration in drafting the Affordable Care Act. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The individual mandate started as a Republican idea to fix health care, but it was at the heart of a Democratic president’s signature measure. Now Congress is using the tax bill to kill the mandate. Why did Republicans turn on their own big idea, and what does it mean for the future of the Affordable Care Act?</p><p>Guests: Margot Sanger-Katz, a health care reporter for The Times; Jonathan Gruber, a professor of economics at M.I.T. who advised Mitt Romney’s team on overhauling health care in Massachusetts, and the Obama administration in drafting the Affordable Care Act. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Bone2y7xRCBlTm3EF8CxAD5o7-d9iC43MR1ZT406-aE</guid>
      <pubDate>Wed, 20 Dec 2017 10:54:48 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/78570e77-708d-4bb8-a78b-e4ce4e60c740.mp3" type="audio/mpeg" length="20495464"/>
    </item>
    <item>
      <title>Tuesday, Dec. 19, 2017</title>
      <description>
        <![CDATA[<p>Nearly eight years ago, an earthquake devastated Haiti, the poorest country in the Western Hemisphere. The capital’s morgues were so overwhelmed that thousands of bodies were dumped into mass graves. But one group of men stepped in, collecting abandoned bodies to bury them. A New York Times reporter talked to the heroes of Burial Road.</p><p>Guests: Catherine Porter, a New York Times reporter, talked to the men who tend to the unclaimed bodies of Port-au-Prince, Haiti. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Tuesday, Dec. 19, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nearly eight years ago, an earthquake devastated Haiti, the poorest country in the Western Hemisphere. The capital’s morgues were so overwhelmed that thousands of bodies were dumped into mass graves. But one group of men stepped in, collecting abandoned bodies to bury them. A New York Times reporter talked to the heroes of Burial Road.

Guests: Catherine Porter, a New York Times reporter, talked to the men who tend to the unclaimed bodies of Port-au-Prince, Haiti. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nearly eight years ago, an earthquake devastated Haiti, the poorest country in the Western Hemisphere. The capital’s morgues were so overwhelmed that thousands of bodies were dumped into mass graves. But one group of men stepped in, collecting abandoned bodies to bury them. A New York Times reporter talked to the heroes of Burial Road.</p><p>Guests: Catherine Porter, a New York Times reporter, talked to the men who tend to the unclaimed bodies of Port-au-Prince, Haiti. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QDFp5Kce0LrBEb6QSm6r1JFPBzq_f9m7sTzMf1o5lWs</guid>
      <pubDate>Tue, 19 Dec 2017 11:00:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/79096bf8-497d-46d0-b70c-58755d9214a0.mp3" type="audio/mpeg" length="28096052"/>
    </item>
    <item>
      <title>Monday, Dec 18, 2017</title>
      <description>
        <![CDATA[<p>There was military footage of unidentified flying objects that couldn’t be explained, and a decade of hidden funding in the defense budget. A Times investigation discovered a shadowy secret program at the Pentagon that looks at the potential threat of U.F.O.s.</p><p>Guests: Helene Cooper, who covers the Pentagon for The New York Times; Luis Elizondo, an intelligence officer who led the program inside the Pentagon. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Dec 18, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>There was military footage of unidentified flying objects that couldn’t be explained, and a decade of hidden funding in the defense budget. A Times investigation discovered a shadowy secret program at the Pentagon that looks at the potential threat of U.F.O.s.

Guests: Helene Cooper, who covers the Pentagon for The New York Times; Luis Elizondo, an intelligence officer who led the program inside the Pentagon. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>There was military footage of unidentified flying objects that couldn’t be explained, and a decade of hidden funding in the defense budget. A Times investigation discovered a shadowy secret program at the Pentagon that looks at the potential threat of U.F.O.s.</p><p>Guests: Helene Cooper, who covers the Pentagon for The New York Times; Luis Elizondo, an intelligence officer who led the program inside the Pentagon. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/R9bUEGcdU3l41lfdXsuxGhxkJXF24iJAFmJWLx4IEG4</guid>
      <pubDate>Mon, 18 Dec 2017 10:53:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4a16e103-4a4b-4ca1-acf1-293c76913f6c.mp3" type="audio/mpeg" length="17280940"/>
    </item>
    <item>
      <title>Friday, Dec. 15, 2017</title>
      <description>
        <![CDATA[<p>Student debt levels are soaring — and so are defaults on educational loans. A New York Times investigation found that some creditors are taking extreme measures to get paid. In many cases, those measures are costing people the jobs they need to pay back the loans they took out to get those jobs in the first place.</p><p>Guests: Jessica Silver-Greenberg, a business reporter for The Times; Shannon Otto, who had her nursing license suspended after she fell behind on loan payments. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Dec. 15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Student debt levels are soaring — and so are defaults on educational loans. A New York Times investigation found that some creditors are taking extreme measures to get paid. In many cases, those measures are costing people the jobs they need to pay back the loans they took out to get those jobs in the first place.

Guests: Jessica Silver-Greenberg, a business reporter for The Times; Shannon Otto, who had her nursing license suspended after she fell behind on loan payments. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Student debt levels are soaring — and so are defaults on educational loans. A New York Times investigation found that some creditors are taking extreme measures to get paid. In many cases, those measures are costing people the jobs they need to pay back the loans they took out to get those jobs in the first place.</p><p>Guests: Jessica Silver-Greenberg, a business reporter for The Times; Shannon Otto, who had her nursing license suspended after she fell behind on loan payments. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7-43WoBHQAMeMhP0D9ZD7xxp6ajxwZ3RhIOYmMNDYxw</guid>
      <pubDate>Fri, 15 Dec 2017 11:02:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c4e64a3d-f499-4988-9a71-ed0ff1ef8bfb.mp3" type="audio/mpeg" length="19340225"/>
    </item>
    <item>
      <title>Thursday, Dec. 14, 2017</title>
      <description>
        <![CDATA[<p>Republican lawmakers have reached a deal on their sweeping tax bill, and they are on track to send it to President Trump by Christmas. Why has such an unpopular plan moved so swiftly through Congress? And the Federal Communications Commission is expected to repeal Obama-era net neutrality rules today. What would the modern internet look like without such regulation? Guests: Jim Tankersley, who has been covering the tax bill for The New York Times; Kevin Roose, who writes about the internet. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </description>
      <itunes:title>Thursday, Dec. 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republican lawmakers have reached a deal on their sweeping tax bill, and they are on track to send it to President Trump by Christmas. Why has such an unpopular plan moved so swiftly through Congress? And the Federal Communications Commission is expected to repeal Obama-era net neutrality rules today. What would the modern internet look like without such regulation? Guests: Jim Tankersley, who has been covering the tax bill for The New York Times; Kevin Roose, who writes about the internet. For more information on today’s episode, visit nytimes.com/thedaily. 


</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republican lawmakers have reached a deal on their sweeping tax bill, and they are on track to send it to President Trump by Christmas. Why has such an unpopular plan moved so swiftly through Congress? And the Federal Communications Commission is expected to repeal Obama-era net neutrality rules today. What would the modern internet look like without such regulation? Guests: Jim Tankersley, who has been covering the tax bill for The New York Times; Kevin Roose, who writes about the internet. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p><br></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZSoV7HafBgS14k0B2vGxA4YUsBNjYCZNbs8TvQ5_eEU</guid>
      <pubDate>Thu, 14 Dec 2017 11:00:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/84b0d6e0-1ced-4797-920c-49fa93e16dca.mp3" type="audio/mpeg" length="23454615"/>
    </item>
    <item>
      <title>Wednesday, Dec. 13, 2017</title>
      <description>
        <![CDATA[<p>Voters in Alabama have elected Doug Jones, a former prosecutor, to the Senate, rejecting the scandal-plagued Roy Moore and giving Democrats a rare victory in a staunchly conservative state. That cuts the Republican majority in the Senate to just one seat. Guest: Jonathan Martin, a national political correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Dec. 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Voters in Alabama have elected Doug Jones, a former prosecutor, to the Senate, rejecting the scandal-plagued Roy Moore and giving Democrats a rare victory in a staunchly conservative state. That cuts the Republican majority in the Senate to just one seat. Guest: Jonathan Martin, a national political correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Voters in Alabama have elected Doug Jones, a former prosecutor, to the Senate, rejecting the scandal-plagued Roy Moore and giving Democrats a rare victory in a staunchly conservative state. That cuts the Republican majority in the Senate to just one seat. Guest: Jonathan Martin, a national political correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BAVbci8JJKgHjvffAkfEzWRbtJM09p8PiSV1dqjLAd0</guid>
      <pubDate>Wed, 13 Dec 2017 10:59:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/097ec7da-1923-4714-8879-6e4eab368325.mp3" type="audio/mpeg" length="21466383"/>
    </item>
    <item>
      <title>Tuesday, Dec. 12, 2017</title>
      <description>
        <![CDATA[<p>Roy Moore, the Republican Senate candidate in Alabama, has built a legal and political career as a conservative crusader and a man of faith. As voters head to the polls on Tuesday, those early battles may shield him from the sexual misconduct allegations that have made the race a close one. Guests: Alan Blinder, a New York Times correspondent based in Atlanta; Bill Willard, a lawyer in Gadsden, Ala. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Dec. 12, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Roy Moore, the Republican Senate candidate in Alabama, has built a legal and political career as a conservative crusader and a man of faith. As voters head to the polls on Tuesday, those early battles may shield him from the sexual misconduct allegations that have made the race a close one. Guests: Alan Blinder, a New York Times correspondent based in Atlanta; Bill Willard, a lawyer in Gadsden, Ala. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Roy Moore, the Republican Senate candidate in Alabama, has built a legal and political career as a conservative crusader and a man of faith. As voters head to the polls on Tuesday, those early battles may shield him from the sexual misconduct allegations that have made the race a close one. Guests: Alan Blinder, a New York Times correspondent based in Atlanta; Bill Willard, a lawyer in Gadsden, Ala. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NR73VAZ29w2gRT4CgLxfEDjhV5BH7Yf2A8-3Bpptkvc</guid>
      <pubDate>Tue, 12 Dec 2017 10:46:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c3232494-9e0c-4b37-a4b3-e7de49e763c7.mp3" type="audio/mpeg" length="18924773"/>
    </item>
    <item>
      <title>Monday, Dec. 11, 2017</title>
      <description>
        <![CDATA[<p>One day before the polls open in the Alabama special election, many are asking whether voters will find it harder to support Roy Moore or a Democrat. And we take a look at James O’Keefe, the newly emboldened conservative provocateur famous for trying to use secret recordings to embarrass liberals and journalists. Guests: Jonathan Martin, who is covering the Alabama Senate race; Kenneth P. Vogel, who writes about the confluence of money, politics and influence. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Dec. 11, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>One day before the polls open in the Alabama special election, many are asking whether voters will find it harder to support Roy Moore or a Democrat. And we take a look at James O’Keefe, the newly emboldened conservative provocateur famous for trying to use secret recordings to embarrass liberals and journalists. Guests: Jonathan Martin, who is covering the Alabama Senate race; Kenneth P. Vogel, who writes about the confluence of money, politics and influence. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>One day before the polls open in the Alabama special election, many are asking whether voters will find it harder to support Roy Moore or a Democrat. And we take a look at James O’Keefe, the newly emboldened conservative provocateur famous for trying to use secret recordings to embarrass liberals and journalists. Guests: Jonathan Martin, who is covering the Alabama Senate race; Kenneth P. Vogel, who writes about the confluence of money, politics and influence. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ek2CSmYRSBYLLLovjRbFb8O_B2yo2khr5MeklN7Tj78</guid>
      <pubDate>Mon, 11 Dec 2017 10:55:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/97db11f4-3a4d-4521-8302-403f882e77b7.mp3" type="audio/mpeg" length="23441658"/>
    </item>
    <item>
      <title>Friday, Dec. 8, 2017</title>
      <description>
        <![CDATA[<p>Senator Al Franken, a Democrat, reluctantly announced on Thursday that he would resign, even as he denied accusations of sexual misconduct. What does it tell us that his own party pushed for him to step down? Guest: Yamiche Alcindor, a national reporter for The New York Times who has been covering accusations of sexual harassment in Congress. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a></p>]]>
      </description>
      <itunes:title>Friday, Dec. 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Senator Al Franken, a Democrat, reluctantly announced on Thursday that he would resign, even as he denied accusations of sexual misconduct. What does it tell us that his own party pushed for him to step down? Guest: Yamiche Alcindor, a national reporter for The New York Times who has been covering accusations of sexual harassment in Congress. For more information on today’s episode, visit nytimes.com/thedaily</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Senator Al Franken, a Democrat, reluctantly announced on Thursday that he would resign, even as he denied accusations of sexual misconduct. What does it tell us that his own party pushed for him to step down? Guest: Yamiche Alcindor, a national reporter for The New York Times who has been covering accusations of sexual harassment in Congress. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qnFESQaG8oNlbMawiDKL7rhrDgpx5vqqbGpdyAeOVQU</guid>
      <pubDate>Fri, 08 Dec 2017 11:01:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/67d1983d-b7a2-4c97-b9cc-54ab64abf0f3.mp3" type="audio/mpeg" length="18640143"/>
    </item>
    <item>
      <title>Thursday, Dec. 7, 2017</title>
      <description>
        <![CDATA[<p> The Arab world was agreed that by officially recognizing Jerusalem as the capital of Israel, President Trump has sabotaged the chance of peace between Israel and the Palestinians. But had Arab leaders given up on the Palestinians long ago? And we hear what it’s like to visit the most powerful figure in the Arab world: Saudi Arabia’s crown prince. Guests: <a href="https://www.nytimes.com/by/anne-barnard" target="_blank">Anne Barnard</a>, the Beirut bureau chief of The New York Times; <a href="https://www.nytimes.com/column/thomas-l-friedman" target="_blank">Thomas L. Friedman</a>, a Times opinion columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Dec. 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary> The Arab world was agreed that by officially recognizing Jerusalem as the capital of Israel, President Trump has sabotaged the chance of peace between Israel and the Palestinians. But had Arab leaders given up on the Palestinians long ago? And we hear what it’s like to visit the most powerful figure in the Arab world: Saudi Arabia’s crown prince. Guests: Anne Barnard, the Beirut bureau chief of The New York Times; Thomas L. Friedman, a Times opinion columnist. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p> The Arab world was agreed that by officially recognizing Jerusalem as the capital of Israel, President Trump has sabotaged the chance of peace between Israel and the Palestinians. But had Arab leaders given up on the Palestinians long ago? And we hear what it’s like to visit the most powerful figure in the Arab world: Saudi Arabia’s crown prince. Guests: <a href="https://www.nytimes.com/by/anne-barnard" target="_blank">Anne Barnard</a>, the Beirut bureau chief of The New York Times; <a href="https://www.nytimes.com/column/thomas-l-friedman" target="_blank">Thomas L. Friedman</a>, a Times opinion columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VgIP-QIEK4EnWct_Oq8ao-aeCy2Jrzq46EnOkSgh9T0</guid>
      <pubDate>Thu, 07 Dec 2017 10:59:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/12f99565-08d0-4b08-b341-ca798bb965c1.mp3" type="audio/mpeg" length="23537371"/>
    </item>
    <item>
      <title>Wednesday, Dec. 6, 2017</title>
      <description>
        <![CDATA[<p>President Trump has said that a peace plan for Israelis and Palestinians would be the “ultimate deal.” But he is now putting that prospect at risk for the sake of a campaign promise. We also look at the carefully constructed apparatus that provided Harvey Weinstein with cover as accusations of sexual misconduct piled up. Guests: <a href="https://www.nytimes.com/by/mark-landler" target="_blank">Mark Landler</a>, a White House correspondent for The New York Times; <a href="https://www.nytimes.com/by/jodi-kantor" target="_blank">Jodi Kantor</a> and <a href="https://www.nytimes.com/by/megan-twohey" target="_blank">Megan Twohey</a>, the Times reporters who broke the story about the sexual misconduct accusations against Harvey Weinstein; Lauren O’Connor, a former employee of Mr. Weinstein. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Dec. 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has said that a peace plan for Israelis and Palestinians would be the “ultimate deal.” But he is now putting that prospect at risk for the sake of a campaign promise. We also look at the carefully constructed apparatus that provided Harvey Weinstein with cover as accusations of sexual misconduct piled up. Guests: Mark Landler, a White House correspondent for The New York Times; Jodi Kantor and Megan Twohey, the Times reporters who broke the story about the sexual misconduct accusations against Harvey Weinstein; Lauren O’Connor, a former employee of Mr. Weinstein. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has said that a peace plan for Israelis and Palestinians would be the “ultimate deal.” But he is now putting that prospect at risk for the sake of a campaign promise. We also look at the carefully constructed apparatus that provided Harvey Weinstein with cover as accusations of sexual misconduct piled up. Guests: <a href="https://www.nytimes.com/by/mark-landler" target="_blank">Mark Landler</a>, a White House correspondent for The New York Times; <a href="https://www.nytimes.com/by/jodi-kantor" target="_blank">Jodi Kantor</a> and <a href="https://www.nytimes.com/by/megan-twohey" target="_blank">Megan Twohey</a>, the Times reporters who broke the story about the sexual misconduct accusations against Harvey Weinstein; Lauren O’Connor, a former employee of Mr. Weinstein. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/q3Em-yWQxfcykJHD5FBTVcA7KukVhLdKkzwimNJ2dYE</guid>
      <pubDate>Wed, 06 Dec 2017 11:04:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c10c2083-d40d-4b83-9090-9cdc40662e74.mp3" type="audio/mpeg" length="30004871"/>
    </item>
    <item>
      <title>Tuesday, Dec. 5, 2017</title>
      <description>
        <![CDATA[<p>A baker in Colorado refused to create a wedding cake for a same-sex couple. After he was charged with discrimination, he argued that his First Amendment right to free speech was being violated. The case is now going to the Supreme Court. Guests: Jack Phillips, the baker; <a href="https://www.nytimes.com/by/adam-liptak" target="_blank">Adam Liptak</a>, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Dec. 5, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A baker in Colorado refused to create a wedding cake for a same-sex couple. After he was charged with discrimination, he argued that his First Amendment right to free speech was being violated. The case is now going to the Supreme Court. Guests: Jack Phillips, the baker; Adam Liptak, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A baker in Colorado refused to create a wedding cake for a same-sex couple. After he was charged with discrimination, he argued that his First Amendment right to free speech was being violated. The case is now going to the Supreme Court. Guests: Jack Phillips, the baker; <a href="https://www.nytimes.com/by/adam-liptak" target="_blank">Adam Liptak</a>, who covers the Supreme Court for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1Lss4VU3JE5Tl3TGj1eEviSZ41NQ7gqy_tjXYZxK9qk</guid>
      <pubDate>Tue, 05 Dec 2017 10:34:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2f83cc0f-994d-4575-adae-ffff8b2a6277.mp3" type="audio/mpeg" length="17375399"/>
    </item>
    <item>
      <title>Monday, Dec. 4, 2017</title>
      <description>
        <![CDATA[<p>With less than a month from proposal to passage, the Republicans rushed their tax plan through the Senate with a flurry of last-minute side deals and a 2 a.m. vote. What else made it into the bill, besides tax cuts, and how could the measure reshape American society? Guests: Jim Tankersley, who has been covering the tax bill for The New York Times; Peter S. Goodman, an economics correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Dec. 4, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With less than a month from proposal to passage, the Republicans rushed their tax plan through the Senate with a flurry of last-minute side deals and a 2 a.m. vote. What else made it into the bill, besides tax cuts, and how could the measure reshape American society? Guests: Jim Tankersley, who has been covering the tax bill for The New York Times; Peter S. Goodman, an economics correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>With less than a month from proposal to passage, the Republicans rushed their tax plan through the Senate with a flurry of last-minute side deals and a 2 a.m. vote. What else made it into the bill, besides tax cuts, and how could the measure reshape American society? Guests: Jim Tankersley, who has been covering the tax bill for The New York Times; Peter S. Goodman, an economics correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qdOH8w__g0-IU7uYMHYEIMW2jZze4dqcaLLY7AfIQ3M</guid>
      <pubDate>Mon, 04 Dec 2017 10:21:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/75efc1e1-9714-4144-919d-73a6fe08679b.mp3" type="audio/mpeg" length="20786364"/>
    </item>
    <item>
      <title>Special Edition: Flynn Pleads Guilty</title>
      <description>
        <![CDATA[<p>Michael Flynn pleaded guilty this morning to lying to the F.B.I., and said he’s cooperating with the Mueller investigation. What does it tell us that prosecutors have a former senior member of the Trump White House on their side? Plus: Republicans race toward a tax vote. Guest: Michael S. Schmidt, an investigative reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Special Edition: Flynn Pleads Guilty</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Michael Flynn pleaded guilty this morning to lying to the F.B.I., and said he’s cooperating with the Mueller investigation. What does it tell us that prosecutors have a former senior member of the Trump White House on their side? Plus: Republicans race toward a tax vote. Guest: Michael S. Schmidt, an investigative reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Michael Flynn pleaded guilty this morning to lying to the F.B.I., and said he’s cooperating with the Mueller investigation. What does it tell us that prosecutors have a former senior member of the Trump White House on their side? Plus: Republicans race toward a tax vote. Guest: Michael S. Schmidt, an investigative reporter for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jiKNyK7fjJYLJ-XV3m9J-zoxt0jlLsFHF_IE2yY3-eI</guid>
      <pubDate>Fri, 01 Dec 2017 22:50:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:14:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6358af41-4480-43d1-97fd-6fca8a11cd5a.mp3" type="audio/mpeg" length="14127438"/>
    </item>
    <item>
      <title>Friday, Dec. 1, 2017</title>
      <description>
        <![CDATA[<p>On Thursday, the Republican tax bill seemed to have all the momentum it needed. But a vote was delayed after a report found the calculations were off by a trillion dollars. Also, the White House has a plan to replace the secretary of state with the head of the C.I.A., and the head of the C.I.A. with a sitting senator. Guests: <a href="https://twitter.com/jimtankersley" target="_blank">Jim Tankersley</a>, who covers taxes and the economy for The New York Times; <a href="https://www.nytimes.com/by/peter-baker" target="_blank">Peter Baker</a>, The Times’s chief White House correspondent. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Dec. 1, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On Thursday, the Republican tax bill seemed to have all the momentum it needed. But a vote was delayed after a report found the calculations were off by a trillion dollars. Also, the White House has a plan to replace the secretary of state with the head of the C.I.A., and the head of the C.I.A. with a sitting senator. Guests: Jim Tankersley, who covers taxes and the economy for The New York Times; Peter Baker, The Times’s chief White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>On Thursday, the Republican tax bill seemed to have all the momentum it needed. But a vote was delayed after a report found the calculations were off by a trillion dollars. Also, the White House has a plan to replace the secretary of state with the head of the C.I.A., and the head of the C.I.A. with a sitting senator. Guests: <a href="https://twitter.com/jimtankersley" target="_blank">Jim Tankersley</a>, who covers taxes and the economy for The New York Times; <a href="https://www.nytimes.com/by/peter-baker" target="_blank">Peter Baker</a>, The Times’s chief White House correspondent. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LBVWmYjiZT-hra9pwiao6CFQORhnxDyETKK0PlMtgno</guid>
      <pubDate>Fri, 01 Dec 2017 10:54:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6a0648c5-880a-4a86-855e-7713a3aa06a6.mp3" type="audio/mpeg" length="19916173"/>
    </item>
    <item>
      <title>Thursday, Nov. 30, 2017</title>
      <description>
        <![CDATA[<p>President Trump is playing a major role in shaping the Republican tax plan. So what is a businessman who ran as a populist fighting for? Also, the president shared videos on Twitter from a fringe ultranationalist group, and the move was condemned by the British prime minister. Guests: Jim Tankersley, who covers taxes and the economy for The Times; Dan Bilefsky, a Times reporter based in London. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Nov. 30, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump is playing a major role in shaping the Republican tax plan. So what is a businessman who ran as a populist fighting for? Also, the president shared videos on Twitter from a fringe ultranationalist group, and the move was condemned by the British prime minister. Guests: Jim Tankersley, who covers taxes and the economy for The Times; Dan Bilefsky, a Times reporter based in London. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump is playing a major role in shaping the Republican tax plan. So what is a businessman who ran as a populist fighting for? Also, the president shared videos on Twitter from a fringe ultranationalist group, and the move was condemned by the British prime minister. Guests: Jim Tankersley, who covers taxes and the economy for The Times; Dan Bilefsky, a Times reporter based in London. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6gQ06NB6pOeWQrlwujaJLCV6ReIdRe3sZzTkEEJc0aU</guid>
      <pubDate>Thu, 30 Nov 2017 10:58:57 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/07777158-6922-45e2-b6fd-d4be2ba20090.mp3" type="audio/mpeg" length="21353952"/>
    </item>
    <item>
      <title>Wednesday, Nov. 29, 2017</title>
      <description>
        <![CDATA[<p>The United States government set aside $5 million for the families of civilian casualties from the war on the Islamic State. There have been thousands of civilian casualties. So why has the money gone untouched?</p><p>Guest: Azmat Khan, an investigative reporter who spent the past year looking into civilian casualties in the war on the Islamic State. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Nov. 29, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States government set aside $5 million for the families of civilian casualties from the war on the Islamic State. There have been thousands of civilian casualties. So why has the money gone untouched?

Guest: Azmat Khan, an investigative reporter who spent the past year looking into civilian casualties in the war on the Islamic State. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States government set aside $5 million for the families of civilian casualties from the war on the Islamic State. There have been thousands of civilian casualties. So why has the money gone untouched?</p><p>Guest: Azmat Khan, an investigative reporter who spent the past year looking into civilian casualties in the war on the Islamic State. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1Q2Pqm33wG6V96UGkDpw_fcW9s638yjUk7yFIN_808A</guid>
      <pubDate>Wed, 29 Nov 2017 10:59:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1fcd62f6-d040-41f7-bda4-da4e1743ed8e.mp3" type="audio/mpeg" length="19016724"/>
    </item>
    <item>
      <title>Tuesday, Nov. 28, 2017</title>
      <description>
        <![CDATA[<p>On Monday morning, two rival bosses showed up for work at the government’s top consumer financial watchdog — one a holdover from the Obama administration, the other a rushed temporary appointee of President Trump’s. We look at the messy public fight for control of the Consumer Financial Protection Bureau.</p><p>Guest: Gary Rivlin, a former New York Times reporter who is an Investigative Fund fellow at the Nation Institute. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Nov. 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On Monday morning, two rival bosses showed up for work at the government’s top consumer financial watchdog — one a holdover from the Obama administration, the other a rushed temporary appointee of President Trump’s. We look at the messy public fight for control of the Consumer Financial Protection Bureau.

Guest: Gary Rivlin, a former New York Times reporter who is an Investigative Fund fellow at the Nation Institute. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>On Monday morning, two rival bosses showed up for work at the government’s top consumer financial watchdog — one a holdover from the Obama administration, the other a rushed temporary appointee of President Trump’s. We look at the messy public fight for control of the Consumer Financial Protection Bureau.</p><p>Guest: Gary Rivlin, a former New York Times reporter who is an Investigative Fund fellow at the Nation Institute. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rOKeia4HsYnyqENxknJ_2gt0_6X0wJispRj1Pdki7BE</guid>
      <pubDate>Tue, 28 Nov 2017 10:47:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/73d3b947-7dbb-4508-a98c-938a971dc757.mp3" type="audio/mpeg" length="19877302"/>
    </item>
    <item>
      <title>Monday, Nov.27, 2017</title>
      <description>
        <![CDATA[<p>With President Trump nearing the end of his first year in office, the next few weeks could be crucial for his presidency. We also look at how a string of armed robberies in Michigan and Ohio has led to what could be the most important case on electronic privacy to go before the Supreme Court. Guests: Maggie Haberman, White House correspondent; Adam Liptak, who covers the Supreme Court. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Nov.27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>With President Trump nearing the end of his first year in office, the next few weeks could be crucial for his presidency. We also look at how a string of armed robberies in Michigan and Ohio has led to what could be the most important case on electronic privacy to go before the Supreme Court. Guests: Maggie Haberman, White House correspondent; Adam Liptak, who covers the Supreme Court. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>With President Trump nearing the end of his first year in office, the next few weeks could be crucial for his presidency. We also look at how a string of armed robberies in Michigan and Ohio has led to what could be the most important case on electronic privacy to go before the Supreme Court. Guests: Maggie Haberman, White House correspondent; Adam Liptak, who covers the Supreme Court. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/AC2Jbs1_v81LkeJ7jQgeYV2JG73mfapr8iSKbW4aGqs</guid>
      <pubDate>Mon, 27 Nov 2017 10:35:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1cbd492a-c9ee-4b83-b9bb-463d32afd328.mp3" type="audio/mpeg" length="16240222"/>
    </item>
    <item>
      <title>Wednesday, Nov. 22, 2017</title>
      <description>
        <![CDATA[<p>Robert Mugabe has been the leader of Zimbabwe as long as there has been a Zimbabwe. Having once proclaimed that “only God will remove me,” he resigned as president on Tuesday after nearly four decades in power. Will he be remembered as a tyrant, or as a hero? Guest: Jeffrey Gettleman, who was East Africa bureau chief of The New York Times for more than a decade. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>We will be taking the rest of the week off for Thanksgiving. See you Monday. </p>]]>
      </description>
      <itunes:title>Wednesday, Nov. 22, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Robert Mugabe has been the leader of Zimbabwe as long as there has been a Zimbabwe. Having once proclaimed that “only God will remove me,” he resigned as president on Tuesday after nearly four decades in power. Will he be remembered as a tyrant, or as a hero? Guest: Jeffrey Gettleman, who was East Africa bureau chief of The New York Times for more than a decade. For more information on today’s episode, visit nytimes.com/thedaily.

We will be taking the rest of the week off for Thanksgiving. See you Monday. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Robert Mugabe has been the leader of Zimbabwe as long as there has been a Zimbabwe. Having once proclaimed that “only God will remove me,” he resigned as president on Tuesday after nearly four decades in power. Will he be remembered as a tyrant, or as a hero? Guest: Jeffrey Gettleman, who was East Africa bureau chief of The New York Times for more than a decade. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p>We will be taking the rest of the week off for Thanksgiving. See you Monday. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Orr3wY3S4PWtRFVguIhjl7BLXXs-jswhFGND_c8KJlU</guid>
      <pubDate>Wed, 22 Nov 2017 11:03:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/557f2996-1025-4791-a66e-7b1e6395da44.mp3" type="audio/mpeg" length="19699670"/>
    </item>
    <item>
      <title>Tuesday, Nov. 21, 2017</title>
      <description>
        <![CDATA[<p>Capitol Hill, following its own set of rules and shrouded in secrecy, has joined Hollywood, Silicon Valley and other industries under scrutiny for sexual harassment. Senator Kirsten Gillibrand, Democrat of New York, talks about being a woman in Congress at this moment. Guests: Katie Rogers, a New York Times reporter based in Washington; Senator Kirsten Gillibrand, Democrat of New York. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, Nov. 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Capitol Hill, following its own set of rules and shrouded in secrecy, has joined Hollywood, Silicon Valley and other industries under scrutiny for sexual harassment. Senator Kirsten Gillibrand, Democrat of New York, talks about being a woman in Congress at this moment. Guests: Katie Rogers, a New York Times reporter based in Washington; Senator Kirsten Gillibrand, Democrat of New York. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Capitol Hill, following its own set of rules and shrouded in secrecy, has joined Hollywood, Silicon Valley and other industries under scrutiny for sexual harassment. Senator Kirsten Gillibrand, Democrat of New York, talks about being a woman in Congress at this moment. Guests: Katie Rogers, a New York Times reporter based in Washington; Senator Kirsten Gillibrand, Democrat of New York. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/nnuJ4-uKJhOuv70AMMCWRXd_Ro7DuWds-XQRFKB6Zx0</guid>
      <pubDate>Tue, 21 Nov 2017 10:35:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ba28dd0b-4893-46d1-af56-f93f1a6cf090.mp3" type="audio/mpeg" length="19160920"/>
    </item>
    <item>
      <title>Monday, Nov. 20, 2017</title>
      <description>
        <![CDATA[<p>Republican lawyers and lawmakers are working together to install conservative judges at a rate not seen in decades. The result could be a federal judiciary that is as partisan and polarized as Congress itself. &nbsp;Guest: Charlie Savage, a New York Times reporter based in Washington. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Nov. 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republican lawyers and lawmakers are working together to install conservative judges at a rate not seen in decades. The result could be a federal judiciary that is as partisan and polarized as Congress itself.  Guest: Charlie Savage, a New York Times reporter based in Washington. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republican lawyers and lawmakers are working together to install conservative judges at a rate not seen in decades. The result could be a federal judiciary that is as partisan and polarized as Congress itself. &nbsp;Guest: Charlie Savage, a New York Times reporter based in Washington. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/fzpekxCcStqE9mZKypkl9JyqZSfchnZM1VOGtVuN-m8</guid>
      <pubDate>Mon, 20 Nov 2017 10:05:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7bfd3710-bc00-45ce-a676-b20d9dde74ec.mp3" type="audio/mpeg" length="15632509"/>
    </item>
    <item>
      <title>Special Episode: The Daily for Kids</title>
      <description>
        <![CDATA[<p>Starting next year, girls can decide whether to become a Girl Scout or a Boy Scout. But a handful of girls — kind of secretly — have already made that decision. How one 10-year-old girl got a head start on joining a boys-only club. And why her twin sister decided to stay with the girls. Guests: Elsa Moock, who joined the Boy Scouts last year; her twin sister Clio; their father Alastair; and Dylan Bates and Harry Krygowski, two boys in Elsa's troop. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Special Episode: The Daily for Kids</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Starting next year, girls can decide whether to become a Girl Scout or a Boy Scout. But a handful of girls — kind of secretly — have already made that decision. How one 10-year-old girl got a head start on joining a boys-only club. And why her twin sister decided to stay with the girls. Guests: Elsa Moock, who joined the Boy Scouts last year; her twin sister Clio; their father Alastair; and Dylan Bates and Harry Krygowski, two boys in Elsa's troop. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Starting next year, girls can decide whether to become a Girl Scout or a Boy Scout. But a handful of girls — kind of secretly — have already made that decision. How one 10-year-old girl got a head start on joining a boys-only club. And why her twin sister decided to stay with the girls. Guests: Elsa Moock, who joined the Boy Scouts last year; her twin sister Clio; their father Alastair; and Dylan Bates and Harry Krygowski, two boys in Elsa's troop. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PH3w299-1UeK3taoyNaggIrXzcWEYi_l4kuCmnf1KU0</guid>
      <pubDate>Sun, 19 Nov 2017 10:49:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5e57cae3-6af2-41d9-b5c6-38b0b8fddcf0.mp3" type="audio/mpeg" length="22902491"/>
    </item>
    <item>
      <title>Friday, Nov. 17, 2017</title>
      <description>
        <![CDATA[<p>Basim Razzo lost his family and his home in an airstrike by the American-led coalition fighting the Islamic State. Video of the strike shows a target hit with military precision. In Part 2 of our look at civilian casualties in Iraq, Mr. Razzo sets out to learn why his home was targeted. Guests: Basim Razzo; Azmat Khan, an investigative reporter who has been looking into civilian deaths in the fight against ISIS. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Nov. 17, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Basim Razzo lost his family and his home in an airstrike by the American-led coalition fighting the Islamic State. Video of the strike shows a target hit with military precision. In Part 2 of our look at civilian casualties in Iraq, Mr. Razzo sets out to learn why his home was targeted. Guests: Basim Razzo; Azmat Khan, an investigative reporter who has been looking into civilian deaths in the fight against ISIS. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Basim Razzo lost his family and his home in an airstrike by the American-led coalition fighting the Islamic State. Video of the strike shows a target hit with military precision. In Part 2 of our look at civilian casualties in Iraq, Mr. Razzo sets out to learn why his home was targeted. Guests: Basim Razzo; Azmat Khan, an investigative reporter who has been looking into civilian deaths in the fight against ISIS. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/JH7uoZqcyOcYu0AxapQB_dE0cTLDFgt7L4Fp4caKE1M</guid>
      <pubDate>Fri, 17 Nov 2017 11:06:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a187643f-4209-452b-960d-6cd9ad374103.mp3" type="audio/mpeg" length="27428153"/>
    </item>
    <item>
      <title>Thursday, Nov. 16, 2017</title>
      <description>
        <![CDATA[<p>The American-led battle against the Islamic State has been hailed as the most precise air campaign in history. But its airstrikes have killed far more Iraqi civilians than anyone has acknowledged. The survivors of those strikes have been left wondering why their families were targeted. Guests: Basim Razzo, who survived an airstrike on his home in Mosul, Iraq; Azmat Khan, an investigative reporter who has been looking into civilian deaths in the fight against ISIS. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Nov. 16, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The American-led battle against the Islamic State has been hailed as the most precise air campaign in history. But its airstrikes have killed far more Iraqi civilians than anyone has acknowledged. The survivors of those strikes have been left wondering why their families were targeted. Guests: Basim Razzo, who survived an airstrike on his home in Mosul, Iraq; Azmat Khan, an investigative reporter who has been looking into civilian deaths in the fight against ISIS. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The American-led battle against the Islamic State has been hailed as the most precise air campaign in history. But its airstrikes have killed far more Iraqi civilians than anyone has acknowledged. The survivors of those strikes have been left wondering why their families were targeted. Guests: Basim Razzo, who survived an airstrike on his home in Mosul, Iraq; Azmat Khan, an investigative reporter who has been looking into civilian deaths in the fight against ISIS. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ALWkzEC7F95YGQIPNi0BXJt3y4QJBbsxJ2E_ZbigH-A</guid>
      <pubDate>Thu, 16 Nov 2017 10:37:35 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/582144d0-9af8-484b-a905-b6972e843081.mp3" type="audio/mpeg" length="20413126"/>
    </item>
    <item>
      <title>Wednesday, Nov. 15, 2017</title>
      <description>
        <![CDATA[<p>In a marathon session before Congress, Attorney General Jeff Sessions denied lying about Russian contacts in earlier testimony and sidestepped questions about feeling pressure from President Trump to investigate Hillary Clinton and Uranium One. Guests: Matt Apuzzo, who covers the Justice Department for The New York Times; Michael S. Schmidt, who covers national security. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>[AUDIO PLAYER DESCRIPTION] Attorney General Jeff Sessions denied lying to Congress about Russian contacts and sidestepped questions about feeling pressure to investigate Hillary Clinton.</p>]]>
      </description>
      <itunes:title>Wednesday, Nov. 15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a marathon session before Congress, Attorney General Jeff Sessions denied lying about Russian contacts in earlier testimony and sidestepped questions about feeling pressure from President Trump to investigate Hillary Clinton and Uranium One. Guests: Matt Apuzzo, who covers the Justice Department for The New York Times; Michael S. Schmidt, who covers national security. For more information on today’s episode, visit nytimes.com/thedaily. 

[AUDIO PLAYER DESCRIPTION] Attorney General Jeff Sessions denied lying to Congress about Russian contacts and sidestepped questions about feeling pressure to investigate Hillary Clinton.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In a marathon session before Congress, Attorney General Jeff Sessions denied lying about Russian contacts in earlier testimony and sidestepped questions about feeling pressure from President Trump to investigate Hillary Clinton and Uranium One. Guests: Matt Apuzzo, who covers the Justice Department for The New York Times; Michael S. Schmidt, who covers national security. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p><p>[AUDIO PLAYER DESCRIPTION] Attorney General Jeff Sessions denied lying to Congress about Russian contacts and sidestepped questions about feeling pressure to investigate Hillary Clinton.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/S_2k9BUKDRAcIrGVx7L8Iqapv-gSIxWoXmo7EmYmW9I</guid>
      <pubDate>Wed, 15 Nov 2017 10:32:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ccdf7a33-5778-42c0-9e67-8788093296ce.mp3" type="audio/mpeg" length="20162769"/>
    </item>
    <item>
      <title>Tuesday, Nov. 14, 2017</title>
      <description>
        <![CDATA[<p>A fifth woman has come forward to accuse Roy S. Moore, the Republican Senate candidate in Alabama, of sexually assaulting her when she was a teenager. Mr. Moore has doubled down on claims of a Democratic conspiracy, while Mitch McConnell, the Senate majority leader, has said, “I believe the women.” And we look at how YouTube is being used to game the news. Guests: Sheryl Gay Stolberg, congressional correspondent for The New York Times; Kevin Roose, who writes about technology. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, Nov. 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A fifth woman has come forward to accuse Roy S. Moore, the Republican Senate candidate in Alabama, of sexually assaulting her when she was a teenager. Mr. Moore has doubled down on claims of a Democratic conspiracy, while Mitch McConnell, the Senate majority leader, has said, “I believe the women.” And we look at how YouTube is being used to game the news. Guests: Sheryl Gay Stolberg, congressional correspondent for The New York Times; Kevin Roose, who writes about technology. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A fifth woman has come forward to accuse Roy S. Moore, the Republican Senate candidate in Alabama, of sexually assaulting her when she was a teenager. Mr. Moore has doubled down on claims of a Democratic conspiracy, while Mitch McConnell, the Senate majority leader, has said, “I believe the women.” And we look at how YouTube is being used to game the news. Guests: Sheryl Gay Stolberg, congressional correspondent for The New York Times; Kevin Roose, who writes about technology. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/hpW_AVzhEy3K3H6TrLYboLCcLj6_KACbliqrVBqUYfQ</guid>
      <pubDate>Tue, 14 Nov 2017 10:45:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3dd56b94-0bc1-4985-8f9f-8e987af4880a.mp3" type="audio/mpeg" length="23045851"/>
    </item>
    <item>
      <title>Monday, Nov. 13, 2017</title>
      <description>
        <![CDATA[<p>The House speaker, Paul D. Ryan, says the Republican tax plan would help the middle class. But that assumes that savings for the wealthy would trickle down the economic pyramid. Guest: Peter S. Goodman, an economics correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Nov. 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The House speaker, Paul D. Ryan, says the Republican tax plan would help the middle class. But that assumes that savings for the wealthy would trickle down the economic pyramid. Guest: Peter S. Goodman, an economics correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The House speaker, Paul D. Ryan, says the Republican tax plan would help the middle class. But that assumes that savings for the wealthy would trickle down the economic pyramid. Guest: Peter S. Goodman, an economics correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4ZppmtLZCBBOjM_E6_ehRyNEV6bxlZBzjpO9pzJ0S7U</guid>
      <pubDate>Mon, 13 Nov 2017 10:42:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/277408dd-546e-4edd-8923-8e3ede9e9612.mp3" type="audio/mpeg" length="18877544"/>
    </item>
    <item>
      <title>Friday, Nov. 10, 2017</title>
      <description>
        <![CDATA[<p>Stephen K. Bannon has declared war on the Republican Party. He may no longer be in the White House as President Trump’s chief strategist, but he says that only makes him stronger. In an exclusive interview with The New York Times, he shares his battle plan for the soul of America. Guest: Jeremy W. Peters, who interviewed Mr. Bannon. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Nov. 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Stephen K. Bannon has declared war on the Republican Party. He may no longer be in the White House as President Trump’s chief strategist, but he says that only makes him stronger. In an exclusive interview with The New York Times, he shares his battle plan for the soul of America. Guest: Jeremy W. Peters, who interviewed Mr. Bannon. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Stephen K. Bannon has declared war on the Republican Party. He may no longer be in the White House as President Trump’s chief strategist, but he says that only makes him stronger. In an exclusive interview with The New York Times, he shares his battle plan for the soul of America. Guest: Jeremy W. Peters, who interviewed Mr. Bannon. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/oUbtgRjdBBYH-ExN9Ri0eAt1RO-gPJOyquswkManyKw</guid>
      <pubDate>Fri, 10 Nov 2017 11:01:01 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/16649143-e9e4-4bb4-9320-d17977e12cf2.mp3" type="audio/mpeg" length="25861642"/>
    </item>
    <item>
      <title>Thursday, Nov. 9, 2017</title>
      <description>
        <![CDATA[<p>The results of Tuesday’s elections are being called a rejection of President Trump. But Stephen K. Bannon, the president’s former chief strategist, says that’s all wrong. Also, the man who helped Texas to become one of the most gun-friendly states in America says the shooting at a church in Sutherland Springs will, if anything, strengthen the state’s relationship to firearms. &nbsp;Guests: Jeremy W. Peters, a New York Times reporter based in Washington, who interviewed Mr. Bannon; Jerry Patterson, who wrote the 1995 law that gave Texans the right to carry concealed weapons. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Nov. 9, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The results of Tuesday’s elections are being called a rejection of President Trump. But Stephen K. Bannon, the president’s former chief strategist, says that’s all wrong. Also, the man who helped Texas to become one of the most gun-friendly states in America says the shooting at a church in Sutherland Springs will, if anything, strengthen the state’s relationship to firearms.  Guests: Jeremy W. Peters, a New York Times reporter based in Washington, who interviewed Mr. Bannon; Jerry Patterson, who wrote the 1995 law that gave Texans the right to carry concealed weapons. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The results of Tuesday’s elections are being called a rejection of President Trump. But Stephen K. Bannon, the president’s former chief strategist, says that’s all wrong. Also, the man who helped Texas to become one of the most gun-friendly states in America says the shooting at a church in Sutherland Springs will, if anything, strengthen the state’s relationship to firearms. &nbsp;Guests: Jeremy W. Peters, a New York Times reporter based in Washington, who interviewed Mr. Bannon; Jerry Patterson, who wrote the 1995 law that gave Texans the right to carry concealed weapons. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZD2n5LQhim1vtiofPMNG-czhqG2sLJWCrMOhtzWYbq0</guid>
      <pubDate>Thu, 09 Nov 2017 10:54:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/83c031a6-5fe8-4356-883e-d4b2a6d428f5.mp3" type="audio/mpeg" length="21412884"/>
    </item>
    <item>
      <title>Wednesday, Nov. 8, 2017</title>
      <description>
        <![CDATA[<p>A 16-year-old boy who sometimes wore skirts and makeup to school was killed in Iowa. Then the Justice Department sent a federal hate-crimes lawyer to aid in the prosecution. The trial has become part of the national debate over gender identity. Guests: Monica Davey, The New York Times’s Chicago bureau chief; Matt Apuzzo, who covers law enforcement; Shaunda Campbell, a former counselor at Burlington High School; Tremell Jones, a friend who was with Kedarie Johnson the night he was killed. Sabrina Tavernise is our host; Michael Barbaro will return tomorrow. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Nov. 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A 16-year-old boy who sometimes wore skirts and makeup to school was killed in Iowa. Then the Justice Department sent a federal hate-crimes lawyer to aid in the prosecution. The trial has become part of the national debate over gender identity. Guests: Monica Davey, The New York Times’s Chicago bureau chief; Matt Apuzzo, who covers law enforcement; Shaunda Campbell, a former counselor at Burlington High School; Tremell Jones, a friend who was with Kedarie Johnson the night he was killed. Sabrina Tavernise is our host; Michael Barbaro will return tomorrow. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A 16-year-old boy who sometimes wore skirts and makeup to school was killed in Iowa. Then the Justice Department sent a federal hate-crimes lawyer to aid in the prosecution. The trial has become part of the national debate over gender identity. Guests: Monica Davey, The New York Times’s Chicago bureau chief; Matt Apuzzo, who covers law enforcement; Shaunda Campbell, a former counselor at Burlington High School; Tremell Jones, a friend who was with Kedarie Johnson the night he was killed. Sabrina Tavernise is our host; Michael Barbaro will return tomorrow. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/htzpeBBxLrtDLe9MERjO6ZqN5fQApDWETvCKCm8CtRs</guid>
      <pubDate>Wed, 08 Nov 2017 11:02:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/67533272-9817-497f-be9b-9aa66ca545f5.mp3" type="audio/mpeg" length="25848267"/>
    </item>
    <item>
      <title>Tuesday, Nov. 7, 2017</title>
      <description>
        <![CDATA[<p>A domestic violence conviction should have stopped Devin P. Kelley from purchasing guns, including the rifle used in a shooting that left at least 26 people dead at a church in Sutherland Springs, Tex. We look at why it didn’t. Also, a pattern is emerging between President Trump and the court system. Guests: Dave Philipps, who covers veterans and the military for The New York Times; Adam Liptak, who covers the Supreme Court, in conversation with Sabrina Tavernise. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Nov. 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A domestic violence conviction should have stopped Devin P. Kelley from purchasing guns, including the rifle used in a shooting that left at least 26 people dead at a church in Sutherland Springs, Tex. We look at why it didn’t. Also, a pattern is emerging between President Trump and the court system. Guests: Dave Philipps, who covers veterans and the military for The New York Times; Adam Liptak, who covers the Supreme Court, in conversation with Sabrina Tavernise. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A domestic violence conviction should have stopped Devin P. Kelley from purchasing guns, including the rifle used in a shooting that left at least 26 people dead at a church in Sutherland Springs, Tex. We look at why it didn’t. Also, a pattern is emerging between President Trump and the court system. Guests: Dave Philipps, who covers veterans and the military for The New York Times; Adam Liptak, who covers the Supreme Court, in conversation with Sabrina Tavernise. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zPHOP1h3ONoWh2WjzW2J3S-L_-RGYfF3J1ThS0iojx0</guid>
      <pubDate>Tue, 07 Nov 2017 10:40:46 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e5e2b427-5b25-4448-b60e-c68a0928fea1.mp3" type="audio/mpeg" length="22173570"/>
    </item>
    <item>
      <title>Monday, Nov. 6, 2017</title>
      <description>
        <![CDATA[<p>A gunman walked into a Baptist church in Sutherland Springs, Tex., on Sunday and opened fire. At least 26 people were killed — 7 percent of the town’s population. Guests: Manny Fernandez, The New York Times’s Houston bureau chief; Devin Butts, associate pastor at First Baptist Church in La Vernia, Tex. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Monday, Nov. 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A gunman walked into a Baptist church in Sutherland Springs, Tex., on Sunday and opened fire. At least 26 people were killed — 7 percent of the town’s population. Guests: Manny Fernandez, The New York Times’s Houston bureau chief; Devin Butts, associate pastor at First Baptist Church in La Vernia, Tex. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A gunman walked into a Baptist church in Sutherland Springs, Tex., on Sunday and opened fire. At least 26 people were killed — 7 percent of the town’s population. Guests: Manny Fernandez, The New York Times’s Houston bureau chief; Devin Butts, associate pastor at First Baptist Church in La Vernia, Tex. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xlV2FJwK0Nslu9qB480lYgLQS0J8qD8hrM1GwXefLUk</guid>
      <pubDate>Mon, 06 Nov 2017 10:53:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4ca19bc1-16de-4d27-8438-4adaaca19ef2.mp3" type="audio/mpeg" length="19799144"/>
    </item>
    <item>
      <title>Friday, Nov. 3, 2017</title>
      <description>
        <![CDATA[<p>When a waiter at an Iraqi restaurant in Portland, Ore., was attacked, the eatery’s owner saw it as an act of hate. But as details emerged about the man who did it, the story became far more complicated. Guests: Dave Philipps, who covers veterans and the military for The New York Times; Ghaith Sahib, the owner of &nbsp;the restaurant; Roberta Bello, the mother of the assailant, Damien Rodriguez; Jimmy Gentile, who served under Mr. Rodriguez in the Marine Corps. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Nov. 3, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When a waiter at an Iraqi restaurant in Portland, Ore., was attacked, the eatery’s owner saw it as an act of hate. But as details emerged about the man who did it, the story became far more complicated. Guests: Dave Philipps, who covers veterans and the military for The New York Times; Ghaith Sahib, the owner of  the restaurant; Roberta Bello, the mother of the assailant, Damien Rodriguez; Jimmy Gentile, who served under Mr. Rodriguez in the Marine Corps. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>When a waiter at an Iraqi restaurant in Portland, Ore., was attacked, the eatery’s owner saw it as an act of hate. But as details emerged about the man who did it, the story became far more complicated. Guests: Dave Philipps, who covers veterans and the military for The New York Times; Ghaith Sahib, the owner of &nbsp;the restaurant; Roberta Bello, the mother of the assailant, Damien Rodriguez; Jimmy Gentile, who served under Mr. Rodriguez in the Marine Corps. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qAgJVacN6UcPMLhQ5rswX81i6mMI1U2QUJE57A55x3w</guid>
      <pubDate>Fri, 03 Nov 2017 09:56:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4c29bbd2-c30c-482a-99dc-8281a2e0a325.mp3" type="audio/mpeg" length="33585528"/>
    </item>
    <item>
      <title>Thursday, Nov. 2, 2017</title>
      <description>
        <![CDATA[<p>The man charged in the deadly truck attack in Manhattan on Tuesday entered the United States seven years ago through a lottery program intended to diversify the country. President Trump has pressed Congress to cancel the program. “Sounds nice,” he said. “It is not nice. It is not good.” &nbsp;Guests: Michael Schwirtz, an investigative reporter for The New York Times; Peter Baker, chief White House correspondent. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Nov. 2, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The man charged in the deadly truck attack in Manhattan on Tuesday entered the United States seven years ago through a lottery program intended to diversify the country. President Trump has pressed Congress to cancel the program. “Sounds nice,” he said. “It is not nice. It is not good.”  Guests: Michael Schwirtz, an investigative reporter for The New York Times; Peter Baker, chief White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The man charged in the deadly truck attack in Manhattan on Tuesday entered the United States seven years ago through a lottery program intended to diversify the country. President Trump has pressed Congress to cancel the program. “Sounds nice,” he said. “It is not nice. It is not good.” &nbsp;Guests: Michael Schwirtz, an investigative reporter for The New York Times; Peter Baker, chief White House correspondent. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/x7p0tlQ60eMm9WuOXJt9aZO9NvtZRMz7RinbTKpHoyQ</guid>
      <pubDate>Thu, 02 Nov 2017 09:49:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/294246f6-8b3b-481a-a4b4-359d6b2434f6.mp3" type="audio/mpeg" length="17230785"/>
    </item>
    <item>
      <title>Wednesday, Nov. 1, 2017</title>
      <description>
        <![CDATA[<p>The question of collusion seemed to be at the heart of the special counsel’s investigation into Russian meddling in the 2016 election. Does it matter that there may now be evidence of it? Plus, Facebook, Google and Twitter address Russia’s use of their platforms to sway American voters. And we look at the terrorist attack in Lower Manhattan. Guests: Michael S. Schmidt, who covers national security for The New York Times; Jim Rutenberg, The Times’s media columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Nov. 1, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The question of collusion seemed to be at the heart of the special counsel’s investigation into Russian meddling in the 2016 election. Does it matter that there may now be evidence of it? Plus, Facebook, Google and Twitter address Russia’s use of their platforms to sway American voters. And we look at the terrorist attack in Lower Manhattan. Guests: Michael S. Schmidt, who covers national security for The New York Times; Jim Rutenberg, The Times’s media columnist. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The question of collusion seemed to be at the heart of the special counsel’s investigation into Russian meddling in the 2016 election. Does it matter that there may now be evidence of it? Plus, Facebook, Google and Twitter address Russia’s use of their platforms to sway American voters. And we look at the terrorist attack in Lower Manhattan. Guests: Michael S. Schmidt, who covers national security for The New York Times; Jim Rutenberg, The Times’s media columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mUXr7VcL1KApq6SQ5D2xu0oJWx7ycS3LIK1TmMwEtao</guid>
      <pubDate>Wed, 01 Nov 2017 09:56:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1cd6931d-73d7-4ef3-acf1-3ddba1b1727f.mp3" type="audio/mpeg" length="17962213"/>
    </item>
    <item>
      <title>Tuesday, Oct. 31, 2017</title>
      <description>
        <![CDATA[<p>As expected, the former Trump campaign chairman Paul Manafort and a business associate have been indicted on charges stemming from the special counsel investigation. But a surprise guilty plea from another campaign adviser may tell a more meaningful story about what the Trump campaign knew about Russian interference in the 2016 election — and when it knew it. Guests: Matt Apuzzo, a New York Times reporter who has been covering the Russia investigation. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Oct. 31, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As expected, the former Trump campaign chairman Paul Manafort and a business associate have been indicted on charges stemming from the special counsel investigation. But a surprise guilty plea from another campaign adviser may tell a more meaningful story about what the Trump campaign knew about Russian interference in the 2016 election — and when it knew it. Guests: Matt Apuzzo, a New York Times reporter who has been covering the Russia investigation. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>As expected, the former Trump campaign chairman Paul Manafort and a business associate have been indicted on charges stemming from the special counsel investigation. But a surprise guilty plea from another campaign adviser may tell a more meaningful story about what the Trump campaign knew about Russian interference in the 2016 election — and when it knew it. Guests: Matt Apuzzo, a New York Times reporter who has been covering the Russia investigation. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CxAIpR5jF5Nd49P4Al-gZPzpzMLzVwm8DwnYKc3n4Q8</guid>
      <pubDate>Tue, 31 Oct 2017 09:56:57 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7e3ad8cf-16ca-4b80-b0be-0f833b885635.mp3" type="audio/mpeg" length="17971409"/>
    </item>
    <item>
      <title>Monday, Oct. 30, 2017</title>
      <description>
        <![CDATA[<p>The salacious “dossier” that describes ties between Donald J. Trump and the Russian government is back in the news. The Trump administration says new reporting that the Clinton campaign helped to pay for the report is evidence that the entire Russia inquiry is just politics. Also, we have a rare on-the-record conversation with President Trump’s top lawyer, Ty Cobb, about the investigation. Guests: Kenneth P. Vogel, a New York Times reporter based in Washington; Matt Apuzzo, who interviewed Mr. Cobb. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Oct. 30, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The salacious “dossier” that describes ties between Donald J. Trump and the Russian government is back in the news. The Trump administration says new reporting that the Clinton campaign helped to pay for the report is evidence that the entire Russia inquiry is just politics. Also, we have a rare on-the-record conversation with President Trump’s top lawyer, Ty Cobb, about the investigation. Guests: Kenneth P. Vogel, a New York Times reporter based in Washington; Matt Apuzzo, who interviewed Mr. Cobb. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The salacious “dossier” that describes ties between Donald J. Trump and the Russian government is back in the news. The Trump administration says new reporting that the Clinton campaign helped to pay for the report is evidence that the entire Russia inquiry is just politics. Also, we have a rare on-the-record conversation with President Trump’s top lawyer, Ty Cobb, about the investigation. Guests: Kenneth P. Vogel, a New York Times reporter based in Washington; Matt Apuzzo, who interviewed Mr. Cobb. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/j0-aMHBqjyoSoyuGqCdsBok_llx-5OhKE5PrfiaALs4</guid>
      <pubDate>Mon, 30 Oct 2017 09:51:15 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e6978901-7cc2-412d-8705-68525d7fab66.mp3" type="audio/mpeg" length="19566759"/>
    </item>
    <item>
      <title>Friday, Oct. 27, 2017</title>
      <description>
        <![CDATA[<p>The opioid crisis in the United States now rivals the Vietnam War in terms of how many Americans have been killed. After calling the opioid crisis a national emergency, President Trump has officially declared it a public health emergency — a distinction with a difference. We speak with a recovering addict who was 14 when he tried oxycodone for the first time. &nbsp;“By everyone’s standards, I should be dead,” he said about his former drug dependency. Guests: Aaron Pope, who lives outside Lexington, Ky.; <a href="https://www.nytimes.com/by/julie-hirschfeld-davis" target="_blank">Julie Hirschfeld Davis</a>, a White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Oct. 27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The opioid crisis in the United States now rivals the Vietnam War in terms of how many Americans have been killed. After calling the opioid crisis a national emergency, President Trump has officially declared it a public health emergency — a distinction with a difference. We speak with a recovering addict who was 14 when he tried oxycodone for the first time.  “By everyone’s standards, I should be dead,” he said about his former drug dependency. Guests: Aaron Pope, who lives outside Lexington, Ky.; Julie Hirschfeld Davis, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The opioid crisis in the United States now rivals the Vietnam War in terms of how many Americans have been killed. After calling the opioid crisis a national emergency, President Trump has officially declared it a public health emergency — a distinction with a difference. We speak with a recovering addict who was 14 when he tried oxycodone for the first time. &nbsp;“By everyone’s standards, I should be dead,” he said about his former drug dependency. Guests: Aaron Pope, who lives outside Lexington, Ky.; <a href="https://www.nytimes.com/by/julie-hirschfeld-davis" target="_blank">Julie Hirschfeld Davis</a>, a White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/y7vRGI1tS0qVI-iFNtM6H8Ui5S7xT9FL0CKEF6815vU</guid>
      <pubDate>Fri, 27 Oct 2017 09:43:32 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b5b4a4bc-2ea5-4f8e-b9fb-8eb238bf6132.mp3" type="audio/mpeg" length="24517485"/>
    </item>
    <item>
      <title>Thursday, Oct. 26, 2017</title>
      <description>
        <![CDATA[<p>Senator Bob Corker, the Republican head of the Foreign Relations Committee, was asked on Tuesday if President Trump was a role model for American children. "Absolutely not," he replied. A few hours later, another Republican senator, Jeff Flake of Arizona, denounced the president. Congressional Republicans seem to be revolting against Mr. Trump. But is that what is really happening? Also, Xi Jinping, the leader of China, is consolidating his power. Guests: Glenn Thrush, a White House correspondent; Chris Buckley, a reporter for The Times in China. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Oct. 26, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Senator Bob Corker, the Republican head of the Foreign Relations Committee, was asked on Tuesday if President Trump was a role model for American children. "Absolutely not," he replied. A few hours later, another Republican senator, Jeff Flake of Arizona, denounced the president. Congressional Republicans seem to be revolting against Mr. Trump. But is that what is really happening? Also, Xi Jinping, the leader of China, is consolidating his power. Guests: Glenn Thrush, a White House correspondent; Chris Buckley, a reporter for The Times in China. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Senator Bob Corker, the Republican head of the Foreign Relations Committee, was asked on Tuesday if President Trump was a role model for American children. "Absolutely not," he replied. A few hours later, another Republican senator, Jeff Flake of Arizona, denounced the president. Congressional Republicans seem to be revolting against Mr. Trump. But is that what is really happening? Also, Xi Jinping, the leader of China, is consolidating his power. Guests: Glenn Thrush, a White House correspondent; Chris Buckley, a reporter for The Times in China. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_dPNHJCmq37OdF17QU2M7pm_zBoqFP7Pq2ICwSXTic4</guid>
      <pubDate>Thu, 26 Oct 2017 09:54:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8cb4a175-5739-417d-a7f0-1f00227584a0.mp3" type="audio/mpeg" length="18123546"/>
    </item>
    <item>
      <title>Wednesday, Oct. 25, 2017</title>
      <description>
        <![CDATA[<p>A back-and-forth between President Trump and Myeshia Johnson, the widow of a U.S. soldier killed in Niger this month, has consumed the news cycle for the past week. But what actually happened in Niger? And Senator Jeff Flake, a Republican from Arizona, delivered an impassioned rebuke to President Trump as he announced he would not seek re-election. Guests: Helene Cooper, a Pentagon correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Oct. 25, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A back-and-forth between President Trump and Myeshia Johnson, the widow of a U.S. soldier killed in Niger this month, has consumed the news cycle for the past week. But what actually happened in Niger? And Senator Jeff Flake, a Republican from Arizona, delivered an impassioned rebuke to President Trump as he announced he would not seek re-election. Guests: Helene Cooper, a Pentagon correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A back-and-forth between President Trump and Myeshia Johnson, the widow of a U.S. soldier killed in Niger this month, has consumed the news cycle for the past week. But what actually happened in Niger? And Senator Jeff Flake, a Republican from Arizona, delivered an impassioned rebuke to President Trump as he announced he would not seek re-election. Guests: Helene Cooper, a Pentagon correspondent for The New York Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/E5zUHLoviDLQNFQveIN_LmMgKt58Ai9REgqIcv6At2A</guid>
      <pubDate>Wed, 25 Oct 2017 09:54:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/14a13be2-9550-4156-8d06-e18fcfe39d0e.mp3" type="audio/mpeg" length="20039053"/>
    </item>
    <item>
      <title>Tuesday, Oct. 24, 2017</title>
      <description>
        <![CDATA[<p>Wendy Cleland-Hamnett, a former Environmental Protection Agency official, fought for years to protect American consumers from toxic chemicals found in everyday products. Nancy B. Beck, a scientist who worked for the chemical industry, saw these efforts as overregulation by the federal government. This is the story of the E.P.A. under President Trump, as told by the shifting powers of two women. Guests: Eric Lipton, a Washington-based correspondent for The Times; Ms. Hamnett, who was the top E.P.A. official overseeing pesticides and toxic chemicals until last month. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, Oct. 24, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Wendy Cleland-Hamnett, a former Environmental Protection Agency official, fought for years to protect American consumers from toxic chemicals found in everyday products. Nancy B. Beck, a scientist who worked for the chemical industry, saw these efforts as overregulation by the federal government. This is the story of the E.P.A. under President Trump, as told by the shifting powers of two women. Guests: Eric Lipton, a Washington-based correspondent for The Times; Ms. Hamnett, who was the top E.P.A. official overseeing pesticides and toxic chemicals until last month. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Wendy Cleland-Hamnett, a former Environmental Protection Agency official, fought for years to protect American consumers from toxic chemicals found in everyday products. Nancy B. Beck, a scientist who worked for the chemical industry, saw these efforts as overregulation by the federal government. This is the story of the E.P.A. under President Trump, as told by the shifting powers of two women. Guests: Eric Lipton, a Washington-based correspondent for The Times; Ms. Hamnett, who was the top E.P.A. official overseeing pesticides and toxic chemicals until last month. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/t2dD62nF0YIn6T60vwHbA_O7SLnklI2xJaqENncyZVU</guid>
      <pubDate>Tue, 24 Oct 2017 09:52:20 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/dd63a9eb-866b-4ff5-b8ea-edde2c1d5b77.mp3" type="audio/mpeg" length="22451095"/>
    </item>
    <item>
      <title>Monday, Oct. 23, 2017</title>
      <description>
        <![CDATA[<p>“It’s horrible what I went through, horrible what my family went through,” Bill O’Reilly said of the sexual harassment allegations that cost him his job at Fox News. Mr. O’Reilly spoke on the record to two of our reporters, Emily Steel and Michael S. Schmidt, addressing the latest reporting on a $32 million settlement he reached with a longtime network analyst. Guests: Emily Steel, a business reporter for The New York Times; Michael S. Schmidt, a Washington correspondent for The Times. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Monday, Oct. 23, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“It’s horrible what I went through, horrible what my family went through,” Bill O’Reilly said of the sexual harassment allegations that cost him his job at Fox News. Mr. O’Reilly spoke on the record to two of our reporters, Emily Steel and Michael S. Schmidt, addressing the latest reporting on a $32 million settlement he reached with a longtime network analyst. Guests: Emily Steel, a business reporter for The New York Times; Michael S. Schmidt, a Washington correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>“It’s horrible what I went through, horrible what my family went through,” Bill O’Reilly said of the sexual harassment allegations that cost him his job at Fox News. Mr. O’Reilly spoke on the record to two of our reporters, Emily Steel and Michael S. Schmidt, addressing the latest reporting on a $32 million settlement he reached with a longtime network analyst. Guests: Emily Steel, a business reporter for The New York Times; Michael S. Schmidt, a Washington correspondent for The Times. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/TFJ_fL9FlSuAPt5I6QFwdBay-vpkMR3SvKKS5pGkXpE</guid>
      <pubDate>Mon, 23 Oct 2017 09:36:44 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/882fb807-5d3f-40fd-89f2-5098ec15ec5b.mp3" type="audio/mpeg" length="21778599"/>
    </item>
    <item>
      <title>Friday, Oct. 20, 2017</title>
      <description>
        <![CDATA[<p>Foreign Service officers often serve for decades, carrying their knowledge and relationships from one administration to the next. But in just a few months, a new boss has fired or driven out many of the country’s most experienced diplomats. We look at the state of the State Department under Rex Tillerson.</p><p> Guests: Jason Zengerle, a contributing writer for The New York Times Magazine, who interviewed Mr. Tillerson for one of our other podcasts, “The New Washington”; Nancy McEldowney, a former Foreign Service officer. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Oct. 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Foreign Service officers often serve for decades, carrying their knowledge and relationships from one administration to the next. But in just a few months, a new boss has fired or driven out many of the country’s most experienced diplomats. We look at the state of the State Department under Rex Tillerson.

 Guests: Jason Zengerle, a contributing writer for The New York Times Magazine, who interviewed Mr. Tillerson for one of our other podcasts, “The New Washington”; Nancy McEldowney, a former Foreign Service officer. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Foreign Service officers often serve for decades, carrying their knowledge and relationships from one administration to the next. But in just a few months, a new boss has fired or driven out many of the country’s most experienced diplomats. We look at the state of the State Department under Rex Tillerson.</p><p> Guests: Jason Zengerle, a contributing writer for The New York Times Magazine, who interviewed Mr. Tillerson for one of our other podcasts, “The New Washington”; Nancy McEldowney, a former Foreign Service officer. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NG8oe60GRHyQVKCMECq9uyclnb9BcgRAVCBWim-97tY</guid>
      <pubDate>Fri, 20 Oct 2017 09:23:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/edf3d8c2-873b-456a-be8b-77f9260a159a.mp3" type="audio/mpeg" length="24509126"/>
    </item>
    <item>
      <title>Thursday, Oct. 19, 2017</title>
      <description>
        <![CDATA[<p>Its de facto capital is falling. Its territory has shriveled to a handful of outposts. Its surviving leaders are on the run, and its fighters are surrendering. Is the Islamic State losing its war, or starting a new one? Guests: Rod Nordland, The Times’s bureau chief in Kabul, Afghanistan; Rukmini Callimachi, who covers terrorism and the Islamic State. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Oct. 19, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Its de facto capital is falling. Its territory has shriveled to a handful of outposts. Its surviving leaders are on the run, and its fighters are surrendering. Is the Islamic State losing its war, or starting a new one? Guests: Rod Nordland, The Times’s bureau chief in Kabul, Afghanistan; Rukmini Callimachi, who covers terrorism and the Islamic State. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Its de facto capital is falling. Its territory has shriveled to a handful of outposts. Its surviving leaders are on the run, and its fighters are surrendering. Is the Islamic State losing its war, or starting a new one? Guests: Rod Nordland, The Times’s bureau chief in Kabul, Afghanistan; Rukmini Callimachi, who covers terrorism and the Islamic State. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZLyjealBqTaEMyyFB2A6GJ6GFghbUrsSN04-fQFltO4</guid>
      <pubDate>Thu, 19 Oct 2017 10:00:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/92270cef-d0aa-4695-8a53-67d6895a40b3.mp3" type="audio/mpeg" length="20983640"/>
    </item>
    <item>
      <title>Wednesday, Oct. 18, 2017</title>
      <description>
        <![CDATA[<p>Shannon Mulcahy’s job at an Indiana steel plant moved to Mexico. Donald Trump vowed to keep factory jobs inside the United States. We discuss how the president’s promise of “America First” has met the realities of American manufacturing. Guests: Farah Stockman, a national correspondent for The New York Times; Shannon Mulcahy, a former factory worker. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Oct. 18, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Shannon Mulcahy’s job at an Indiana steel plant moved to Mexico. Donald Trump vowed to keep factory jobs inside the United States. We discuss how the president’s promise of “America First” has met the realities of American manufacturing. Guests: Farah Stockman, a national correspondent for The New York Times; Shannon Mulcahy, a former factory worker. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Shannon Mulcahy’s job at an Indiana steel plant moved to Mexico. Donald Trump vowed to keep factory jobs inside the United States. We discuss how the president’s promise of “America First” has met the realities of American manufacturing. Guests: Farah Stockman, a national correspondent for The New York Times; Shannon Mulcahy, a former factory worker. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-a3VBTLWg7HSWzvLNnxHqLidvrpzBRhhELN2TGTdA_w</guid>
      <pubDate>Wed, 18 Oct 2017 10:00:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:36:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a043cb5c-82ad-4d97-a118-e238518bcb10.mp3" type="audio/mpeg" length="35391111"/>
    </item>
    <item>
      <title>Tuesday, Oct. 17, 2017</title>
      <description>
        <![CDATA[<p>As a candidate for president, Donald J. Trump called Sgt. Bowe Bergdahl a “dirty rotten traitor” for walking off his base in Afghanistan in 2009, and said,”I don’t want him. Maybe we can send him back.” On Monday, with President Trump now commander in chief, Sergeant Bergdahl pleaded guilty to desertion and to endangering the American troops sent to search for him. An Army judge will determine his punishment. &nbsp;Guests: Matthew Rosenberg, who covers intelligence and national security for The Times; Richard A. Oppel Jr., the Times reporter covering the trial. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Oct. 17, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As a candidate for president, Donald J. Trump called Sgt. Bowe Bergdahl a “dirty rotten traitor” for walking off his base in Afghanistan in 2009, and said,”I don’t want him. Maybe we can send him back.” On Monday, with President Trump now commander in chief, Sergeant Bergdahl pleaded guilty to desertion and to endangering the American troops sent to search for him. An Army judge will determine his punishment.  Guests: Matthew Rosenberg, who covers intelligence and national security for The Times; Richard A. Oppel Jr., the Times reporter covering the trial. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>As a candidate for president, Donald J. Trump called Sgt. Bowe Bergdahl a “dirty rotten traitor” for walking off his base in Afghanistan in 2009, and said,”I don’t want him. Maybe we can send him back.” On Monday, with President Trump now commander in chief, Sergeant Bergdahl pleaded guilty to desertion and to endangering the American troops sent to search for him. An Army judge will determine his punishment. &nbsp;Guests: Matthew Rosenberg, who covers intelligence and national security for The Times; Richard A. Oppel Jr., the Times reporter covering the trial. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/A2jCQVdDFmjuENTSHXvSiFRW-edK5gW8ohgYGuKmbPM</guid>
      <pubDate>Tue, 17 Oct 2017 09:43:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/00da4a8a-b6ce-469f-8cf1-399d6de5c36b.mp3" type="audio/mpeg" length="22754951"/>
    </item>
    <item>
      <title>Monday, Oct. 16, 2017</title>
      <description>
        <![CDATA[<p>President Trump has disavowed the Iran nuclear deal, and he has threatened to leave it altogether if Congress does not amend it to permanently block Tehran from building nuclear weapons. Today, a top negotiator in the Obama administration talks about how the deal was reached and what it feels like to watch Mr. Trump threaten to undo it. Guests: Jake Sullivan, a negotiator for the Iran deal; Peter Baker, chief White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Monday, Oct. 16, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has disavowed the Iran nuclear deal, and he has threatened to leave it altogether if Congress does not amend it to permanently block Tehran from building nuclear weapons. Today, a top negotiator in the Obama administration talks about how the deal was reached and what it feels like to watch Mr. Trump threaten to undo it. Guests: Jake Sullivan, a negotiator for the Iran deal; Peter Baker, chief White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has disavowed the Iran nuclear deal, and he has threatened to leave it altogether if Congress does not amend it to permanently block Tehran from building nuclear weapons. Today, a top negotiator in the Obama administration talks about how the deal was reached and what it feels like to watch Mr. Trump threaten to undo it. Guests: Jake Sullivan, a negotiator for the Iran deal; Peter Baker, chief White House correspondent for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0qKrv2EYkPgL2dtyjOiZ3swRj2g5BOmqO5CYDFhUu4Y</guid>
      <pubDate>Mon, 16 Oct 2017 09:19:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/58451c4a-6f1e-4f11-af6a-10f26f2cb654.mp3" type="audio/mpeg" length="17703497"/>
    </item>
    <item>
      <title>Friday, Oct. 13, 2017</title>
      <description>
        <![CDATA[<p>“I’m not quitting today. I don’t believe — and I just talked to the president — I don’t think I’m being fired today,” John F. Kelly, President Trump’s chief of staff, said at a surprise news conference. Hours later, President Trump unexpectedly released a statement aiming at destabilizing Obamacare. And a survivor from the Rohingya, one of the most persecuted ethnic groups in the world, told one of our correspondents her story. Guests: <a href="https://www.nytimes.com/by/glenn-thrush" target="_blank">Glenn Thrush</a>, a White House correspondent for The Times; <a href="https://www.nytimes.com/by/jeffrey-gettleman" target="_blank">Jeffrey Gettleman</a>, The Times’s South Asia bureau chief. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Oct. 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“I’m not quitting today. I don’t believe — and I just talked to the president — I don’t think I’m being fired today,” John F. Kelly, President Trump’s chief of staff, said at a surprise news conference. Hours later, President Trump unexpectedly released a statement aiming at destabilizing Obamacare. And a survivor from the Rohingya, one of the most persecuted ethnic groups in the world, told one of our correspondents her story. Guests: Glenn Thrush, a White House correspondent for The Times; Jeffrey Gettleman, The Times’s South Asia bureau chief. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>“I’m not quitting today. I don’t believe — and I just talked to the president — I don’t think I’m being fired today,” John F. Kelly, President Trump’s chief of staff, said at a surprise news conference. Hours later, President Trump unexpectedly released a statement aiming at destabilizing Obamacare. And a survivor from the Rohingya, one of the most persecuted ethnic groups in the world, told one of our correspondents her story. Guests: <a href="https://www.nytimes.com/by/glenn-thrush" target="_blank">Glenn Thrush</a>, a White House correspondent for The Times; <a href="https://www.nytimes.com/by/jeffrey-gettleman" target="_blank">Jeffrey Gettleman</a>, The Times’s South Asia bureau chief. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/EcoJ4E4WUAjOAA-9-u3sijghAT7oqp0vIYcOTMP5nMw</guid>
      <pubDate>Fri, 13 Oct 2017 09:59:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0c68a41c-6c97-47c5-8da1-b6b2d0201b37.mp3" type="audio/mpeg" length="23259428"/>
    </item>
    <item>
      <title>Thursday, Oct. 12, 2017</title>
      <description>
        <![CDATA[<p>The United States sees North Korea as an existential threat: a hostile nation that is dangerously deluded and ready for war. But how does North Korea see the United States? We took a rare look inside the country. Guest: Nicholas Kristof, a New York Times columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Oct. 12, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States sees North Korea as an existential threat: a hostile nation that is dangerously deluded and ready for war. But how does North Korea see the United States? We took a rare look inside the country. Guest: Nicholas Kristof, a New York Times columnist. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States sees North Korea as an existential threat: a hostile nation that is dangerously deluded and ready for war. But how does North Korea see the United States? We took a rare look inside the country. Guest: Nicholas Kristof, a New York Times columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1u6homQDakiQm679xOcmwvFC6m916vBMyXb_rFkyEws</guid>
      <pubDate>Thu, 12 Oct 2017 09:48:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c735ebb4-98d9-45e6-8ca0-c4db7bcf3ba8.mp3" type="audio/mpeg" length="19984300"/>
    </item>
    <item>
      <title>Wednesday, Oct. 11, 2017</title>
      <description>
        <![CDATA[<p>More women are coming forward with their accounts of sexual harassment and assault in Hollywood, accusing the film producer Harvey Weinstein. Today, we hear one of those stories. Guests: Jodi Kantor, a New York Times reporter; Katherine Kendall, an actress who told The Times that Mr. Weinstein harassed her in his apartment in 1993. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Wednesday, Oct. 11, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>More women are coming forward with their accounts of sexual harassment and assault in Hollywood, accusing the film producer Harvey Weinstein. Today, we hear one of those stories. Guests: Jodi Kantor, a New York Times reporter; Katherine Kendall, an actress who told The Times that Mr. Weinstein harassed her in his apartment in 1993. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>More women are coming forward with their accounts of sexual harassment and assault in Hollywood, accusing the film producer Harvey Weinstein. Today, we hear one of those stories. Guests: Jodi Kantor, a New York Times reporter; Katherine Kendall, an actress who told The Times that Mr. Weinstein harassed her in his apartment in 1993. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LyF2yXavw9bPevvGmwwAclxsoCzweCAc84IF3J0sTKc</guid>
      <pubDate>Wed, 11 Oct 2017 09:33:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/92756e50-b2f3-490d-876b-5cf8638090c8.mp3" type="audio/mpeg" length="26663706"/>
    </item>
    <item>
      <title>Tuesday, Oct. 10, 2017</title>
      <description>
        <![CDATA[<p>The Trump administration has rolled back two of President Barack Obama’s signature achievements. The repeal of the Clean Power Plan was billed as the end of a “war on coal.” And the end of a federal requirement that employers include birth control coverage in their health plans followed up on President Trump’s promise that “we will not allow people of faith to be targeted, bullied or silenced anymore.” Guests: Lisa Friedman, who covers climate and environmental policy for The Times; Gail Collins, a Times Op-Ed columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, Oct. 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Trump administration has rolled back two of President Barack Obama’s signature achievements. The repeal of the Clean Power Plan was billed as the end of a “war on coal.” And the end of a federal requirement that employers include birth control coverage in their health plans followed up on President Trump’s promise that “we will not allow people of faith to be targeted, bullied or silenced anymore.” Guests: Lisa Friedman, who covers climate and environmental policy for The Times; Gail Collins, a Times Op-Ed columnist. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Trump administration has rolled back two of President Barack Obama’s signature achievements. The repeal of the Clean Power Plan was billed as the end of a “war on coal.” And the end of a federal requirement that employers include birth control coverage in their health plans followed up on President Trump’s promise that “we will not allow people of faith to be targeted, bullied or silenced anymore.” Guests: Lisa Friedman, who covers climate and environmental policy for The Times; Gail Collins, a Times Op-Ed columnist. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CxDr3gKG7zuRM_lcm779jL4BAT9ime31mpur4CxJIy4</guid>
      <pubDate>Tue, 10 Oct 2017 09:19:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8e918e9e-7231-4e75-85ba-9c5324a8687c.mp3" type="audio/mpeg" length="22479934"/>
    </item>
    <item>
      <title>Monday, Oct. 9, 2017</title>
      <description>
        <![CDATA[<p>Two months after a white supremacist rally in Charlottesville, Va., turned violent, 200 employees of the American Civil Liberties Union have signed a letter saying that the organization’s “rigid stance” on the First Amendment undermines a broader mission that includes commitment to racial justice. Will the A.C.L.U. rethink its approach to free speech? Guests: Joseph Goldstein, a New York Times reporter; Abre’ Conner, an A.C.L.U. lawyer; David A. Goldberger, a former A.C.L.U. lawyer. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Monday, Oct. 9, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two months after a white supremacist rally in Charlottesville, Va., turned violent, 200 employees of the American Civil Liberties Union have signed a letter saying that the organization’s “rigid stance” on the First Amendment undermines a broader mission that includes commitment to racial justice. Will the A.C.L.U. rethink its approach to free speech? Guests: Joseph Goldstein, a New York Times reporter; Abre’ Conner, an A.C.L.U. lawyer; David A. Goldberger, a former A.C.L.U. lawyer. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Two months after a white supremacist rally in Charlottesville, Va., turned violent, 200 employees of the American Civil Liberties Union have signed a letter saying that the organization’s “rigid stance” on the First Amendment undermines a broader mission that includes commitment to racial justice. Will the A.C.L.U. rethink its approach to free speech? Guests: Joseph Goldstein, a New York Times reporter; Abre’ Conner, an A.C.L.U. lawyer; David A. Goldberger, a former A.C.L.U. lawyer. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1BGyGkxwnLSs8cupK0-nga1cWJ05opNKt7qz24-r50Q</guid>
      <pubDate>Mon, 09 Oct 2017 09:30:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7771046c-91ec-475d-91d1-e8451566ae43.mp3" type="audio/mpeg" length="22829348"/>
    </item>
    <item>
      <title>Friday, Oct. 6, 2017</title>
      <description>
        <![CDATA[<p>A New York Times investigation has found three decades of sexual harassment allegations against the Hollywood producer Harvey Weinstein. In response to that reporting, Mr. Weinstein released the following statement: “I realized some time ago that I needed to be a better person. Though I’m trying to do better, I know I have a long way to go.” A lawyer advising him said that the producer “denies many of the accusations as patently false.” Guests: Jodi Kantor and Megan Twohey, Times reporters. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Oct. 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A New York Times investigation has found three decades of sexual harassment allegations against the Hollywood producer Harvey Weinstein. In response to that reporting, Mr. Weinstein released the following statement: “I realized some time ago that I needed to be a better person. Though I’m trying to do better, I know I have a long way to go.” A lawyer advising him said that the producer “denies many of the accusations as patently false.” Guests: Jodi Kantor and Megan Twohey, Times reporters. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A New York Times investigation has found three decades of sexual harassment allegations against the Hollywood producer Harvey Weinstein. In response to that reporting, Mr. Weinstein released the following statement: “I realized some time ago that I needed to be a better person. Though I’m trying to do better, I know I have a long way to go.” A lawyer advising him said that the producer “denies many of the accusations as patently false.” Guests: Jodi Kantor and Megan Twohey, Times reporters. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dLoxJMhVclInQBimW7OPEdtbD5M5nAKEvgCnNDgM1fw</guid>
      <pubDate>Fri, 06 Oct 2017 10:01:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/11368f8f-5077-41b9-ae30-f7b81c61da81.mp3" type="audio/mpeg" length="22086217"/>
    </item>
    <item>
      <title>Thursday, Oct. 5, 2017</title>
      <description>
        <![CDATA[<p>At least 12 of the weapons found in the hotel suite used by the gunman who killed 58 people in Las Vegas on Sunday had been modified. He used a device called a bump stock, which enables a semiautomatic rifle to fire faster, and can be purchased online. Guest: C. J. Chivers, a New York Times investigative reporter and Marine veteran. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Oct. 5, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At least 12 of the weapons found in the hotel suite used by the gunman who killed 58 people in Las Vegas on Sunday had been modified. He used a device called a bump stock, which enables a semiautomatic rifle to fire faster, and can be purchased online. Guest: C. J. Chivers, a New York Times investigative reporter and Marine veteran. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>At least 12 of the weapons found in the hotel suite used by the gunman who killed 58 people in Las Vegas on Sunday had been modified. He used a device called a bump stock, which enables a semiautomatic rifle to fire faster, and can be purchased online. Guest: C. J. Chivers, a New York Times investigative reporter and Marine veteran. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6jKi3dt1-6Ghu6T4X-j1bR8XoBUbgGqQ0Vue9eJ5ytM</guid>
      <pubDate>Thu, 05 Oct 2017 09:46:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bb76f02f-ca8b-4956-be2d-f5c04330dc71.mp3" type="audio/mpeg" length="20254720"/>
    </item>
    <item>
      <title>Wednesday, Oct. 4, 2017</title>
      <description>
        <![CDATA[<p>Every mass shooting in the United States is inevitably followed by a call for gun control, but major legislation never passes. We look at how the National Rifle Association became a powerful lobbying group. Also, a gun store owner talks about putting military-style weapons into the hands of civilians. Guests: Robert Draper, a writer at large for The New York Times Magazine; John Markell, the owner of a gun store in Roanoke, Va. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Oct. 4, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Every mass shooting in the United States is inevitably followed by a call for gun control, but major legislation never passes. We look at how the National Rifle Association became a powerful lobbying group. Also, a gun store owner talks about putting military-style weapons into the hands of civilians. Guests: Robert Draper, a writer at large for The New York Times Magazine; John Markell, the owner of a gun store in Roanoke, Va. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Every mass shooting in the United States is inevitably followed by a call for gun control, but major legislation never passes. We look at how the National Rifle Association became a powerful lobbying group. Also, a gun store owner talks about putting military-style weapons into the hands of civilians. Guests: Robert Draper, a writer at large for The New York Times Magazine; John Markell, the owner of a gun store in Roanoke, Va. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/U1vrTJFAwd7fCOVZgZgilHOl-F9_qTVaqA9cOwAQwP0</guid>
      <pubDate>Wed, 04 Oct 2017 10:01:58 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:30:17</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/bfd39bc1-4d7a-4ea0-a8ca-77a825dd694e.mp3" type="audio/mpeg" length="29081600"/>
    </item>
    <item>
      <title>Tuesday, Oct. 3, 2017</title>
      <description>
        <![CDATA[<p>A lone gunman booked a suite at a Las Vegas hotel, took aim at a crowd below and committed one of the deadliest mass shootings in American history. At least 59 people are dead, and more than 500 wounded. President Trump is scheduled to visit the city on Wednesday. Today, Mr. Trump is heading to Puerto Rico to survey the damage from Hurricane Maria. A reporter for The Times discusses what she has seen on the island. Guests: Richard Pérez-Peña, a national reporter for The Times; Frances Robles, a Times correspondent based in Miami. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </description>
      <itunes:title>Tuesday, Oct. 3, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A lone gunman booked a suite at a Las Vegas hotel, took aim at a crowd below and committed one of the deadliest mass shootings in American history. At least 59 people are dead, and more than 500 wounded. President Trump is scheduled to visit the city on Wednesday. Today, Mr. Trump is heading to Puerto Rico to survey the damage from Hurricane Maria. A reporter for The Times discusses what she has seen on the island. Guests: Richard Pérez-Peña, a national reporter for The Times; Frances Robles, a Times correspondent based in Miami. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>A lone gunman booked a suite at a Las Vegas hotel, took aim at a crowd below and committed one of the deadliest mass shootings in American history. At least 59 people are dead, and more than 500 wounded. President Trump is scheduled to visit the city on Wednesday. Today, Mr. Trump is heading to Puerto Rico to survey the damage from Hurricane Maria. A reporter for The Times discusses what she has seen on the island. Guests: Richard Pérez-Peña, a national reporter for The Times; Frances Robles, a Times correspondent based in Miami. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6iOjy_Jz8I8abJfduzlOt7XABu8XWWwLqvbb0p8jGgE</guid>
      <pubDate>Tue, 03 Oct 2017 09:54:49 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5156e84b-ce89-4f65-8742-51bb852db7ae.mp3" type="audio/mpeg" length="22687242"/>
    </item>
    <item>
      <title>Monday, Oct. 2, 2017</title>
      <description>
        <![CDATA[<p>Across the United States, the case could be made that American voters are not choosing their representatives so much as representatives are choosing their voters. As the Supreme Court opens a new session, it turns to a question that, until now, it had been unwilling to resolve: Does drawing the perfect election district violate the Constitution? Guest: Emily Bazelon, a staff writer for The New York Times Magazine, and Dale Schultz, a former state senator in Wisconsin. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><em>This episode was updated at 11 a.m. EST.</em></p>]]>
      </description>
      <itunes:title>Monday, Oct. 2, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Across the United States, the case could be made that American voters are not choosing their representatives so much as representatives are choosing their voters. As the Supreme Court opens a new session, it turns to a question that, until now, it had been unwilling to resolve: Does drawing the perfect election district violate the Constitution? Guest: Emily Bazelon, a staff writer for The New York Times Magazine, and Dale Schultz, a former state senator in Wisconsin. For more information on today’s episode, visit nytimes.com/thedaily.

This episode was updated at 11 a.m. EST.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Across the United States, the case could be made that American voters are not choosing their representatives so much as representatives are choosing their voters. As the Supreme Court opens a new session, it turns to a question that, until now, it had been unwilling to resolve: Does drawing the perfect election district violate the Constitution? Guest: Emily Bazelon, a staff writer for The New York Times Magazine, and Dale Schultz, a former state senator in Wisconsin. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>.</p><p><em>This episode was updated at 11 a.m. EST.</em></p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/nv_6yDNjzkC-YMQlLMfo3WBZ0C6Irj0Zp5gWVZ6TZco</guid>
      <pubDate>Mon, 02 Oct 2017 09:48:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b8ed35c0-0dab-49de-97f3-894b84413881.mp3" type="audio/mpeg" length="21599712"/>
    </item>
    <item>
      <title>Friday, Sept. 29, 2017</title>
      <description>
        <![CDATA[<p>If you are found to be guilty of murder and sane, you could spend 25 years in prison. But if you are found not guilty by reason of insanity, you could be confined to an institution for 587 years. Involuntary confinement in a state psychiatric hospital sometimes becomes a life sentence. Guests: Mac McClelland, a reporter who has written about Houston Herczog, her third cousin who was found not guilty of murdering his father by reason of insanity; Savannah Herczog, Mr. Herczog’s sister, who was at home the night their father was killed; Houston Herczog, who is confined at Napa State Hospital in California. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Friday, Sept. 29, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>If you are found to be guilty of murder and sane, you could spend 25 years in prison. But if you are found not guilty by reason of insanity, you could be confined to an institution for 587 years. Involuntary confinement in a state psychiatric hospital sometimes becomes a life sentence. Guests: Mac McClelland, a reporter who has written about Houston Herczog, her third cousin who was found not guilty of murdering his father by reason of insanity; Savannah Herczog, Mr. Herczog’s sister, who was at home the night their father was killed; Houston Herczog, who is confined at Napa State Hospital in California. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>If you are found to be guilty of murder and sane, you could spend 25 years in prison. But if you are found not guilty by reason of insanity, you could be confined to an institution for 587 years. Involuntary confinement in a state psychiatric hospital sometimes becomes a life sentence. Guests: Mac McClelland, a reporter who has written about Houston Herczog, her third cousin who was found not guilty of murdering his father by reason of insanity; Savannah Herczog, Mr. Herczog’s sister, who was at home the night their father was killed; Houston Herczog, who is confined at Napa State Hospital in California. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vdrFpeO-8d6GFQG9oXZ7Fh56IZW_BiYN0M1d2fZJ4jU</guid>
      <pubDate>Fri, 29 Sep 2017 10:09:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:28:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/19205845-570d-4ca2-b00e-806e4445f502.mp3" type="audio/mpeg" length="27653433"/>
    </item>
    <item>
      <title>Thursday, Sept. 28, 2017</title>
      <description>
        <![CDATA[<p>The presidency of Donald J. Trump has changed the rules of influence in the nation’s capital, replacing top lobbyists with a group of newcomers and former nobodies. Those newcomers are getting rich. Guest: Nicholas Confessore, a political investigative reporter for The New York Times. He interviewed the lobbyist Robert Stryk for an episode of one of our other podcasts, “The New Washington.” For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Thursday, Sept. 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The presidency of Donald J. Trump has changed the rules of influence in the nation’s capital, replacing top lobbyists with a group of newcomers and former nobodies. Those newcomers are getting rich. Guest: Nicholas Confessore, a political investigative reporter for The New York Times. He interviewed the lobbyist Robert Stryk for an episode of one of our other podcasts, “The New Washington.” For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The presidency of Donald J. Trump has changed the rules of influence in the nation’s capital, replacing top lobbyists with a group of newcomers and former nobodies. Those newcomers are getting rich. Guest: Nicholas Confessore, a political investigative reporter for The New York Times. He interviewed the lobbyist Robert Stryk for an episode of one of our other podcasts, “The New Washington.” For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wz-eOGVk-ZPhBhXp_ZW_TySoeUuPn0T9__Qd985Kk_M</guid>
      <pubDate>Thu, 28 Sep 2017 09:42:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/16e11ccd-d230-4613-9b5a-65ecd552b83b.mp3" type="audio/mpeg" length="20693159"/>
    </item>
    <item>
      <title>Wednesday, Sept.27, 2017</title>
      <description>
        <![CDATA[<p>At the height of the 2016 election, exaggerated reports of a brutal crime turned the town of Twin Falls, Idaho, upside down. The fake news has had real consequences. Guest: Caitlin Dickerson, who covers immigration for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Wednesday, Sept.27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>At the height of the 2016 election, exaggerated reports of a brutal crime turned the town of Twin Falls, Idaho, upside down. The fake news has had real consequences. Guest: Caitlin Dickerson, who covers immigration for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>At the height of the 2016 election, exaggerated reports of a brutal crime turned the town of Twin Falls, Idaho, upside down. The fake news has had real consequences. Guest: Caitlin Dickerson, who covers immigration for The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ViiGdPG9lbTK3MzbwOZyUIh-wjBjuHO0xTe0szee4dQ</guid>
      <pubDate>Wed, 27 Sep 2017 09:41:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/24cf1976-c5e7-47f8-925c-1988d86807e6.mp3" type="audio/mpeg" length="23736737"/>
    </item>
    <item>
      <title>Tuesday, Sept. 26, 2017</title>
      <description>
        <![CDATA[<p>President Trump has issued a new order indefinitely banning almost all travel to the United States from several countries, including North Korea. But why is Chad now on the list? Also, how the Supreme Court’s cancellation of &nbsp;arguments on the previous policy could affect a politically charged legal case. Guests: Eric Schmitt, who covers terrorism and national security for The Times; Adam Liptak, who covers the Supreme Court. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </description>
      <itunes:title>Tuesday, Sept. 26, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has issued a new order indefinitely banning almost all travel to the United States from several countries, including North Korea. But why is Chad now on the list? Also, how the Supreme Court’s cancellation of  arguments on the previous policy could affect a politically charged legal case. Guests: Eric Schmitt, who covers terrorism and national security for The Times; Adam Liptak, who covers the Supreme Court. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has issued a new order indefinitely banning almost all travel to the United States from several countries, including North Korea. But why is Chad now on the list? Also, how the Supreme Court’s cancellation of &nbsp;arguments on the previous policy could affect a politically charged legal case. Guests: Eric Schmitt, who covers terrorism and national security for The Times; Adam Liptak, who covers the Supreme Court. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/I58o6HbyIG04zgd13YEDkpZ5rFwXWgnoQEGVy7ok6Q8</guid>
      <pubDate>Tue, 26 Sep 2017 09:36:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/439bd7ab-177b-4552-a102-eca19b7e50fd.mp3" type="audio/mpeg" length="22375862"/>
    </item>
    <item>
      <title>Monday, Sept. 25, 2017</title>
      <description>
        <![CDATA[<p>For years, the N.F.L. has avoided bringing politics onto the field. But in stadiums across the country on Sunday, players locked arms in protest as the national anthem played. We discuss how President Trump has forced professional athletes to become more political than ever before. Guest: Michael Powell, a sports columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, Sept. 25, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>For years, the N.F.L. has avoided bringing politics onto the field. But in stadiums across the country on Sunday, players locked arms in protest as the national anthem played. We discuss how President Trump has forced professional athletes to become more political than ever before. Guest: Michael Powell, a sports columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>For years, the N.F.L. has avoided bringing politics onto the field. But in stadiums across the country on Sunday, players locked arms in protest as the national anthem played. We discuss how President Trump has forced professional athletes to become more political than ever before. Guest: Michael Powell, a sports columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_Fu0t8jSnvqdf5D1wUrH26iciSgFq6SV3V8j-YNUkSY</guid>
      <pubDate>Mon, 25 Sep 2017 09:48:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/82d7819a-279c-4a0a-8787-7b1e6bbf976e.mp3" type="audio/mpeg" length="21088966"/>
    </item>
    <item>
      <title>Friday, Sept. 22, 2017</title>
      <description>
        <![CDATA[<p>As Maria tears apart the Caribbean, leaders in the region say that recent storms have created a humanitarian crisis — and that humans are to blame. Guest: Lisa Friedman, a climate reporter at The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to <a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a> for more information.</p>]]>
      </description>
      <itunes:title>Friday, Sept. 22, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As Maria tears apart the Caribbean, leaders in the region say that recent storms have created a humanitarian crisis — and that humans are to blame. Guest: Lisa Friedman, a climate reporter at The Times. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As Maria tears apart the Caribbean, leaders in the region say that recent storms have created a humanitarian crisis — and that humans are to blame. Guest: Lisa Friedman, a climate reporter at The Times. For more information on today’s episode, visit <a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to <a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a> for more information.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LPdl5Nq4plTK0DjA2jiqKapsrQqH52BYv9umVNRAjt4</guid>
      <pubDate>Fri, 22 Sep 2017 09:52:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7a39f768-f603-42cc-b208-b76aa7f1f080.mp3" type="audio/mpeg" length="22074514"/>
    </item>
    <item>
      <title>Thursday, Sept. 21, 2017</title>
      <description>
        <![CDATA[<p>Republicans are pushing for a vote to repeal the Affordable Care Act, and they’re running out of time. The effort could test a long friendship in the Senate. Guests: Thomas Kaplan, who covers Congress for The Times; Sheryl Gay Stolberg, domestic affairs correspondent. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to&nbsp;<a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a>&nbsp;for more information.</p>]]>
      </description>
      <itunes:title>Thursday, Sept. 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans are pushing for a vote to repeal the Affordable Care Act, and they’re running out of time. The effort could test a long friendship in the Senate. Guests: Thomas Kaplan, who covers Congress for The Times; Sheryl Gay Stolberg, domestic affairs correspondent. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Republicans are pushing for a vote to repeal the Affordable Care Act, and they’re running out of time. The effort could test a long friendship in the Senate. Guests: Thomas Kaplan, who covers Congress for The Times; Sheryl Gay Stolberg, domestic affairs correspondent. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to&nbsp;<a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a>&nbsp;for more information.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QZP7FiBbhqWq3O2BbLzSvlA2XJQmtzpcum3ZxZt2tFQ</guid>
      <pubDate>Thu, 21 Sep 2017 09:57:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/76737fd7-e323-4b82-adb6-21ac2d4266d8.mp3" type="audio/mpeg" length="21295020"/>
    </item>
    <item>
      <title>Wednesday, Sept. 20, 2017</title>
      <description>
        <![CDATA[<p>President Trump addresses the United Nations General Assembly for the first time, and says it’s every nation for itself. We look at the speech, and the people who crafted its message. Guests: Mark Landler, who covered the president’s speech; Maggie Haberman, a White House correspondent. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to&nbsp;<a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a>&nbsp;for more information.</p>]]>
      </description>
      <itunes:title>Wednesday, Sept. 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump addresses the United Nations General Assembly for the first time, and says it’s every nation for itself. We look at the speech, and the people who crafted its message. Guests: Mark Landler, who covered the president’s speech; Maggie Haberman, a White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump addresses the United Nations General Assembly for the first time, and says it’s every nation for itself. We look at the speech, and the people who crafted its message. Guests: Mark Landler, who covered the president’s speech; Maggie Haberman, a White House correspondent. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to&nbsp;<a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a>&nbsp;for more information.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/GzbGEC2e8jEwuNgkVw5pjxRB6L2bjp0yg0baif3qkmQ</guid>
      <pubDate>Wed, 20 Sep 2017 09:24:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fcb50a7c-4352-432a-944e-2358191bd681.mp3" type="audio/mpeg" length="18788937"/>
    </item>
    <item>
      <title>Tuesday, Sept. 19, 2017</title>
      <description>
        <![CDATA[<p>The investigation into Russia’s attempts to disrupt the election is unnerving Washington. At a Washington steakhouse, a New York Times reporter overheard just how much the tactics used by the special counsel are rattling the White House legal team. Guests: Matt Apuzzo, who has been covering the Russia investigation for The Times; Kenneth P. Vogel, the reporter who overheard that conversation in Washington. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to&nbsp;<a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a>&nbsp;for more information.</p>]]>
      </description>
      <itunes:title>Tuesday, Sept. 19, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The investigation into Russia’s attempts to disrupt the election is unnerving Washington. At a Washington steakhouse, a New York Times reporter overheard just how much the tactics used by the special counsel are rattling the White House legal team. Guests: Matt Apuzzo, who has been covering the Russia investigation for The Times; Kenneth P. Vogel, the reporter who overheard that conversation in Washington. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The investigation into Russia’s attempts to disrupt the election is unnerving Washington. At a Washington steakhouse, a New York Times reporter overheard just how much the tactics used by the special counsel are rattling the White House legal team. Guests: Matt Apuzzo, who has been covering the Russia investigation for The Times; Kenneth P. Vogel, the reporter who overheard that conversation in Washington. For more information on today’s episode, visit&nbsp;<a href="http://nytimes.com/thedaily" target="_blank">nytimes.com/thedaily</a>. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to&nbsp;<a href="http://nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a>&nbsp;for more information.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/AVzhZYaXou8QnOF-9WfKLSTQulubqHt2EC_WVPv5HDw</guid>
      <pubDate>Tue, 19 Sep 2017 09:34:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6e345c27-4388-4924-b3cc-1fcde3c7cb03.mp3" type="audio/mpeg" length="19924114"/>
    </item>
    <item>
      <title>Monday, Sept.18, 2017</title>
      <description>
        <![CDATA[<p>If they hold an undocumented criminal too long, they’re violating the Constitution. If they don’t, they’re crossing the White House. The impossible bind of sheriffs navigating Trump’s immigration crackdown. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</p>]]>
      </description>
      <itunes:title>Monday, Sept.18, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>If they hold an undocumented criminal too long, they’re violating the Constitution. If they don’t, they’re crossing the White House. The impossible bind of sheriffs navigating Trump’s immigration crackdown. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>If they hold an undocumented criminal too long, they’re violating the Constitution. If they don’t, they’re crossing the White House. The impossible bind of sheriffs navigating Trump’s immigration crackdown. Guest: Caitlin Dickerson, who covers immigration for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Z8LZWtbi_lOkz-CVMQeFrJ1bQ3BV-dPAG5H4SUXLAEQ</guid>
      <pubDate>Mon, 18 Sep 2017 09:29:55 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/18/podcasts/the-daily/listen-to-the-daily-the-sheriff-bind.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0dfc015a-3100-4501-9774-faa337e91769.mp3" type="audio/mpeg" length="20645093"/>
    </item>
    <item>
      <title>Friday, Sept.15, 2017</title>
      <description>
        <![CDATA[<p>The Democrats are having a moment. In President Trump’s latest dealmaking with Democratic leadership, he says he’ll give up his most central campaign promise — at least for now: “The wall will come later.” Guests: Glenn Thrush, a White House correspondent for The New York Times; Senator Bernie Sanders, who talks with us about how he’s using this moment. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. </p><p>We're offering listeners one month free, then 50% off for a year. Go to <a href="https://www.nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a> for more information.</p>]]>
      </description>
      <itunes:title>Friday, Sept.15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Democrats are having a moment. In President Trump’s latest dealmaking with Democratic leadership, he says he’ll give up his most central campaign promise — at least for now: “The wall will come later.” Guests: Glenn Thrush, a White House correspondent for The New York Times; Senator Bernie Sanders, who talks with us about how he’s using this moment. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. 

We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Democrats are having a moment. In President Trump’s latest dealmaking with Democratic leadership, he says he’ll give up his most central campaign promise — at least for now: “The wall will come later.” Guests: Glenn Thrush, a White House correspondent for The New York Times; Senator Bernie Sanders, who talks with us about how he’s using this moment. For more information on today’s episode, visit nytimes.com/thedaily. You can support "The Daily" by subscribing to The Times. </p><p>We're offering listeners one month free, then 50% off for a year. Go to <a href="https://www.nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a> for more information.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/iJ-wOsFteDybCWJPG6PCU3yv818LmJHABzUIskH6LYI</guid>
      <pubDate>Fri, 15 Sep 2017 09:45:47 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/15/podcasts/the-daily/trump-schumer-bernie-sanders.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b344d348-c765-4142-9019-8b495aca3f33.mp3" type="audio/mpeg" length="23549074"/>
    </item>
    <item>
      <title>Thursday, Sept. 14, 2017</title>
      <description>
        <![CDATA[<p>Nearly 400,000 Muslims have fled Myanmar in recent weeks. How could a small nation celebrated by the United States as a “good news” story of transition to democracy now be condemned by the United Nations as a “textbook example of ethnic cleansing”? Guest: Hannah Beech, the Southeast Asia bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to <a href="https://www.nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a> for more information. </p>]]>
      </description>
      <itunes:title>Thursday, Sept. 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Nearly 400,000 Muslims have fled Myanmar in recent weeks. How could a small nation celebrated by the United States as a “good news” story of transition to democracy now be condemned by the United Nations as a “textbook example of ethnic cleansing”? Guest: Hannah Beech, the Southeast Asia bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. 

You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to nytimes.com/thedailyoffer for more information. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Nearly 400,000 Muslims have fled Myanmar in recent weeks. How could a small nation celebrated by the United States as a “good news” story of transition to democracy now be condemned by the United Nations as a “textbook example of ethnic cleansing”? Guest: Hannah Beech, the Southeast Asia bureau chief for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p><p>You can support "The Daily" by subscribing to The Times. We're offering listeners one month free, then 50% off for a year. Go to <a href="https://www.nytimes.com/thedailyoffer" target="_blank">nytimes.com/thedailyoffer</a> for more information. </p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mM5LFRxUA-NX2rpXYhGTU7_Rd7viL7G90wAnJKsP2sA</guid>
      <pubDate>Thu, 14 Sep 2017 09:34:37 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/14/podcasts/the-daily/rohingya-muslims-myanmar.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1e06b252-3073-418d-a295-0d9975096a8c.mp3" type="audio/mpeg" length="19883990"/>
    </item>
    <item>
      <title>Wednesday, Sept. 13, 2017</title>
      <description>
        <![CDATA[<p>Russia’s interference in the 2016 election is now undisputed. What’s less clear is the role of the country’s media. A Times reporter went to Moscow to see how the Kremlin is waging an information war against the West. Guest: Jim Rutenberg, media columnist for The Times who recently returned from Russia. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Wednesday, Sept. 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Russia’s interference in the 2016 election is now undisputed. What’s less clear is the role of the country’s media. A Times reporter went to Moscow to see how the Kremlin is waging an information war against the West. Guest: Jim Rutenberg, media columnist for The Times who recently returned from Russia. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Russia’s interference in the 2016 election is now undisputed. What’s less clear is the role of the country’s media. A Times reporter went to Moscow to see how the Kremlin is waging an information war against the West. Guest: Jim Rutenberg, media columnist for The Times who recently returned from Russia. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/30S3a6ZbWMHPaoAf-DHHooVQTWWKy_Ofx5zvkaP7EGM</guid>
      <pubDate>Wed, 13 Sep 2017 09:59:21 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/13/podcasts/the-daily/russia-2016-election.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b8afb15f-d057-4d16-aa76-a8dfb4c755fb.mp3" type="audio/mpeg" length="20463699"/>
    </item>
    <item>
      <title>Tuesday, Sept.12,  2017</title>
      <description>
        <![CDATA[<p>He loves Whitney Houston, the Chicago Bulls and intercontinental ballistic missiles: what we know about the 33-year-old dictator of North Korea. And the latest on the United Nations plan for sanctions against North Korea, which fall significantly short of the penalties the Trump administration proposed last week. Guests: David E. Sanger, our chief Washington correspondent; Choe Sang-Hun, the Korea correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, Sept.12,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>He loves Whitney Houston, the Chicago Bulls and intercontinental ballistic missiles: what we know about the 33-year-old dictator of North Korea. And the latest on the United Nations plan for sanctions against North Korea, which fall significantly short of the penalties the Trump administration proposed last week. Guests: David E. Sanger, our chief Washington correspondent; Choe Sang-Hun, the Korea correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>He loves Whitney Houston, the Chicago Bulls and intercontinental ballistic missiles: what we know about the 33-year-old dictator of North Korea. And the latest on the United Nations plan for sanctions against North Korea, which fall significantly short of the penalties the Trump administration proposed last week. Guests: David E. Sanger, our chief Washington correspondent; Choe Sang-Hun, the Korea correspondent for The New York Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/snhSu7ihwiUsKC-RprwqHahuj8ZGWiotSh_9aMH6XL0</guid>
      <pubDate>Tue, 12 Sep 2017 09:58:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/88e12e21-8604-445c-bb8a-2d71f9f00dc8.mp3" type="audio/mpeg" length="20727849"/>
    </item>
    <item>
      <title>Monday, Sept. 11, 2017</title>
      <description>
        <![CDATA[<p>Hurricane Irma roared into Florida, where, in the wake of Hurricane Harvey, an apocalyptic forecast forced one of the largest evacuations in American history. Guests: Jean Eisen, a 93-year-old in Miami who refused to evacuate;&nbsp;Antonella Giannantonio, a 51-year-old Miami resident who drove north on Wednesday and stopped in Tampa, where she is now in the path of the storm; Jess Bidgood, a Times reporter in Tampa. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, Sept. 11, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Hurricane Irma roared into Florida, where, in the wake of Hurricane Harvey, an apocalyptic forecast forced one of the largest evacuations in American history. Guests: Jean Eisen, a 93-year-old in Miami who refused to evacuate; Antonella Giannantonio, a 51-year-old Miami resident who drove north on Wednesday and stopped in Tampa, where she is now in the path of the storm; Jess Bidgood, a Times reporter in Tampa. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Hurricane Irma roared into Florida, where, in the wake of Hurricane Harvey, an apocalyptic forecast forced one of the largest evacuations in American history. Guests: Jean Eisen, a 93-year-old in Miami who refused to evacuate;&nbsp;Antonella Giannantonio, a 51-year-old Miami resident who drove north on Wednesday and stopped in Tampa, where she is now in the path of the storm; Jess Bidgood, a Times reporter in Tampa. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9m4oS2DljXI_PjXxz1l75pHPtv5GX79XGxp9OYCbamw</guid>
      <pubDate>Mon, 11 Sep 2017 09:58:12 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/11/podcasts/the-daily/voices-from-florida-irma.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2e9fca80-d1dc-41fb-9a0b-7eacde0f6e05.mp3" type="audio/mpeg" length="18605453"/>
    </item>
    <item>
      <title>Friday, Sept. 8, 2017</title>
      <description>
        <![CDATA[<p>President Trump has called Representative Nancy Pelosi “incompetent” and called Senator Chuck Schumer a “loser.” Now he’s striking deals with Ms. Pelosi and Mr. Schumer, the two most powerful Democrats in Washington, and sending out tweets at their request. Guests: Glenn Thrush, a White House correspondent for The New York Times; Mr. Schumer, who gives Carl Hulse, The Times’s chief Washington correspondent, his version of the story. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Friday, Sept. 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump has called Representative Nancy Pelosi “incompetent” and called Senator Chuck Schumer a “loser.” Now he’s striking deals with Ms. Pelosi and Mr. Schumer, the two most powerful Democrats in Washington, and sending out tweets at their request. Guests: Glenn Thrush, a White House correspondent for The New York Times; Mr. Schumer, who gives Carl Hulse, The Times’s chief Washington correspondent, his version of the story. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump has called Representative Nancy Pelosi “incompetent” and called Senator Chuck Schumer a “loser.” Now he’s striking deals with Ms. Pelosi and Mr. Schumer, the two most powerful Democrats in Washington, and sending out tweets at their request. Guests: Glenn Thrush, a White House correspondent for The New York Times; Mr. Schumer, who gives Carl Hulse, The Times’s chief Washington correspondent, his version of the story. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Eupz3dxdF6sEWUo-B4Gh5Qi2buK4AjcvJTWgfaA3LHw</guid>
      <pubDate>Fri, 08 Sep 2017 09:50:02 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/08/podcasts/the-daily/chuck-schumer-trump-democrats.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0c330a42-2ad1-4bd7-8886-229bf951872a.mp3" type="audio/mpeg" length="19254543"/>
    </item>
    <item>
      <title>Thursday, Sept. 7, 2017</title>
      <description>
        <![CDATA[<p>Senator Richard J. Durbin spent 16 years trying to pass immigration legislation in Congress. It failed under President George W. Bush. It failed under President Obama. Could the decision to end the Deferred Action for Childhood Arrivals program bring legislation under President Trump? We hear from Mr. Durbin, whom our colleague Yamiche Alcindor interviewed the day DACA was rescinded. Guest: Sheryl Gay Stolberg, who covers Congress for The Times and has a long history of writing about the Dream Act. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, Sept. 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Senator Richard J. Durbin spent 16 years trying to pass immigration legislation in Congress. It failed under President George W. Bush. It failed under President Obama. Could the decision to end the Deferred Action for Childhood Arrivals program bring legislation under President Trump? We hear from Mr. Durbin, whom our colleague Yamiche Alcindor interviewed the day DACA was rescinded. Guest: Sheryl Gay Stolberg, who covers Congress for The Times and has a long history of writing about the Dream Act. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Senator Richard J. Durbin spent 16 years trying to pass immigration legislation in Congress. It failed under President George W. Bush. It failed under President Obama. Could the decision to end the Deferred Action for Childhood Arrivals program bring legislation under President Trump? We hear from Mr. Durbin, whom our colleague Yamiche Alcindor interviewed the day DACA was rescinded. Guest: Sheryl Gay Stolberg, who covers Congress for The Times and has a long history of writing about the Dream Act. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qNKHze2doXTFkwXoo9KsLEDr2sVM6CzhjtY_z2cEDY0</guid>
      <pubDate>Thu, 07 Sep 2017 09:51:35 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/07/podcasts/the-daily/listen-to-the-daily-dick-durbin-discusses-the-dream-act.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f208657f-ba2a-4f43-ba24-6f7e7ab3d854.mp3" type="audio/mpeg" length="17771624"/>
    </item>
    <item>
      <title>Wednesday, Sept. 6, 2017</title>
      <description>
        <![CDATA[<p>How the end of the Deferred Action for Childhood Arrivals program, known as DACA, is being framed as a legal matter — and how the Obama administration allowed that to happen. Guests: Peter Baker, who covers the White House; Cecilia Muñoz, who was President Barack Obama’s chief domestic policy adviser when he signed DACA. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Wednesday, Sept. 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How the end of the Deferred Action for Childhood Arrivals program, known as DACA, is being framed as a legal matter — and how the Obama administration allowed that to happen. Guests: Peter Baker, who covers the White House; Cecilia Muñoz, who was President Barack Obama’s chief domestic policy adviser when he signed DACA. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>How the end of the Deferred Action for Childhood Arrivals program, known as DACA, is being framed as a legal matter — and how the Obama administration allowed that to happen. Guests: Peter Baker, who covers the White House; Cecilia Muñoz, who was President Barack Obama’s chief domestic policy adviser when he signed DACA. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OfaLNwcJ23V8le0tTAwdzxib04FIu7SBDN7ddYctinY</guid>
      <pubDate>Wed, 06 Sep 2017 09:40:04 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/06/podcasts/the-daily/the-daily-where-did-daca-come-from.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:13</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d7c6cbd2-98c5-4b53-a6b8-d209a0d483cf.mp3" type="audio/mpeg" length="19415875"/>
    </item>
    <item>
      <title>Tuesday, Sept. 5, 2017</title>
      <description>
        <![CDATA[<p>Kris Ford-Amofa and her husband had spent six years saving for their $180,000 home in Houston. During Harvey, they gathered with Kris’s youngest sister and their combined six children, watching as waters seeped in. The story of one family’s return home a week after Harvey. Guests: David E. Sanger, chief Washington correspondent for The New York Times; Jack Healy, who has been reporting from Houston; Ms. Ford-Amofa and her sister, Miesha Jolly. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Tuesday, Sept. 5, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Kris Ford-Amofa and her husband had spent six years saving for their $180,000 home in Houston. During Harvey, they gathered with Kris’s youngest sister and their combined six children, watching as waters seeped in. The story of one family’s return home a week after Harvey. Guests: David E. Sanger, chief Washington correspondent for The New York Times; Jack Healy, who has been reporting from Houston; Ms. Ford-Amofa and her sister, Miesha Jolly. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Kris Ford-Amofa and her husband had spent six years saving for their $180,000 home in Houston. During Harvey, they gathered with Kris’s youngest sister and their combined six children, watching as waters seeped in. The story of one family’s return home a week after Harvey. Guests: David E. Sanger, chief Washington correspondent for The New York Times; Jack Healy, who has been reporting from Houston; Ms. Ford-Amofa and her sister, Miesha Jolly. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_h1d-eWbLS8ktbAj_1W__R4e3_UnO_oAT3r9CT2s-CA</guid>
      <pubDate>Tue, 05 Sep 2017 09:58:38 -0000</pubDate>
      <link>https://www.nytimes.com/2017/09/05/podcasts/the-daily/the-daily-a-week-after-harvey-one-familys-return-home.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ef2fb5e6-0936-4821-a54a-5e7afdb8f984.mp3" type="audio/mpeg" length="25862060"/>
    </item>
    <item>
      <title>Bonus: Senator Jeff Flake Interview</title>
      <description>
        <![CDATA[<p>“The Daily” is taking a long Labor Day weekend and will be back on Tuesday. For today, here’s an episode of a new series we’re working on called “The New Washington,” where Times political reporters interview key figures in the capital. Last week, Carl Hulse spoke to Senator Jeff Flake, Republican of Arizona. You can subscribe to “The New Washington” wherever you get your podcasts.</p>]]>
      </description>
      <itunes:title>Bonus: Senator Jeff Flake Interview</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“The Daily” is taking a long Labor Day weekend and will be back on Tuesday. For today, here’s an episode of a new series we’re working on called “The New Washington,” where Times political reporters interview key figures in the capital. Last week, Carl Hulse spoke to Senator Jeff Flake, Republican of Arizona. You can subscribe to “The New Washington” wherever you get your podcasts.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>“The Daily” is taking a long Labor Day weekend and will be back on Tuesday. For today, here’s an episode of a new series we’re working on called “The New Washington,” where Times political reporters interview key figures in the capital. Last week, Carl Hulse spoke to Senator Jeff Flake, Republican of Arizona. You can subscribe to “The New Washington” wherever you get your podcasts.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/JylwI4vrU0r6lv-RU93UnVxmHkbEyk-c6srY8repytA</guid>
      <pubDate>Fri, 01 Sep 2017 09:18:11 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/26/podcasts/the-new-washington-a-conversation-with-jeff-flake.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:02</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1a402c8b-66eb-4ff6-b282-29e18d9708a4.mp3" type="audio/mpeg" length="25964460"/>
    </item>
    <item>
      <title>Thursday, Aug 31, 2017</title>
      <description>
        <![CDATA[<p>“The problem starts for Houston almost the moment that it’s founded.” That’s how Richard Fausset, who covers the South for The New York Times, describes the founding of Houston, which was built on the edge of a swampy bayou. On today’s show, he describes the uniquely American success story of Houston as a boomtown, and how Harvey’s destruction recasts the narrative. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, Aug 31, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“The problem starts for Houston almost the moment that it’s founded.” That’s how Richard Fausset, who covers the South for The New York Times, describes the founding of Houston, which was built on the edge of a swampy bayou. On today’s show, he describes the uniquely American success story of Houston as a boomtown, and how Harvey’s destruction recasts the narrative. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>“The problem starts for Houston almost the moment that it’s founded.” That’s how Richard Fausset, who covers the South for The New York Times, describes the founding of Houston, which was built on the edge of a swampy bayou. On today’s show, he describes the uniquely American success story of Houston as a boomtown, and how Harvey’s destruction recasts the narrative. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/I9eZwqNU0NX8YA58yFX871iDcukFeTrTkMI_SYHB36I</guid>
      <pubDate>Thu, 31 Aug 2017 09:38:09 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/31/podcasts/the-daily/the-daily-how-houston-was-dealt-a-bad-hand.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1ed84d54-17bf-4d6b-be2f-405f51402cc6.mp3" type="audio/mpeg" length="18852884"/>
    </item>
    <item>
      <title>Wednesday, Aug 30, 2017</title>
      <description>
        <![CDATA[<p>As a poor, white teenager in Fort Smith, Ark., Abraham Davis never fit in. As a hidden minority there, the town’s Muslims were trying to make a home. Then their lives collided. Plus: the latest from Houston, where the rain keeps falling. Guests: Sabrina Tavernise, a national correspondent for The New York Times; Jacqueline Herrera, a Houston resident who we check back in with. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, Aug 30, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As a poor, white teenager in Fort Smith, Ark., Abraham Davis never fit in. As a hidden minority there, the town’s Muslims were trying to make a home. Then their lives collided. Plus: the latest from Houston, where the rain keeps falling. Guests: Sabrina Tavernise, a national correspondent for The New York Times; Jacqueline Herrera, a Houston resident who we check back in with. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>As a poor, white teenager in Fort Smith, Ark., Abraham Davis never fit in. As a hidden minority there, the town’s Muslims were trying to make a home. Then their lives collided. Plus: the latest from Houston, where the rain keeps falling. Guests: Sabrina Tavernise, a national correspondent for The New York Times; Jacqueline Herrera, a Houston resident who we check back in with. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/vRUbppnYwV25WSQSm-USTKEcY7UbJHjKTqB5mfk1p-Q</guid>
      <pubDate>Wed, 30 Aug 2017 09:49:50 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:31:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/30c1dcc0-e245-4291-8e0c-c044e04889ef.mp3" type="audio/mpeg" length="30368496"/>
    </item>
    <item>
      <title>Tuesday, Aug 29, 2017</title>
      <description>
        <![CDATA[<p>By Monday, the third straight day of flooding, Hurricane Harvey had left much of the region underwater, and the city of Houston looked like a sea dotted by islands. We hear from some people in the city about the view from the ground as the waters keep rising. Guests: Alan Blinder, a Times correspondent who has been reporting from Houston; Jacqueline Herrera, who talks to us us from her home in Houston where she is, for now, staying put. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, Aug 29, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>By Monday, the third straight day of flooding, Hurricane Harvey had left much of the region underwater, and the city of Houston looked like a sea dotted by islands. We hear from some people in the city about the view from the ground as the waters keep rising. Guests: Alan Blinder, a Times correspondent who has been reporting from Houston; Jacqueline Herrera, who talks to us us from her home in Houston where she is, for now, staying put. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>By Monday, the third straight day of flooding, Hurricane Harvey had left much of the region underwater, and the city of Houston looked like a sea dotted by islands. We hear from some people in the city about the view from the ground as the waters keep rising. Guests: Alan Blinder, a Times correspondent who has been reporting from Houston; Jacqueline Herrera, who talks to us us from her home in Houston where she is, for now, staying put. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZU8aOQByFMnwKBDY_OBdh3T-Bp-xyW5KBf4EjCgvYN4</guid>
      <pubDate>Tue, 29 Aug 2017 09:43:52 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/69f75045-0c33-4737-b0c0-503e959dfaed.mp3" type="audio/mpeg" length="19682115"/>
    </item>
    <item>
      <title>Monday, Aug 28, 2017</title>
      <description>
        <![CDATA[<p>President Trump’s first pardon went to a wildly divisive sheriff from Arizona. So who is Joe Arpaio? And how do presidential pardons work? Guests: Fernanda Santos, the former Phoenix bureau chief of The New York Times; Adam Liptak, our Supreme Court reporter. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, Aug 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s first pardon went to a wildly divisive sheriff from Arizona. So who is Joe Arpaio? And how do presidential pardons work? Guests: Fernanda Santos, the former Phoenix bureau chief of The New York Times; Adam Liptak, our Supreme Court reporter. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump’s first pardon went to a wildly divisive sheriff from Arizona. So who is Joe Arpaio? And how do presidential pardons work? Guests: Fernanda Santos, the former Phoenix bureau chief of The New York Times; Adam Liptak, our Supreme Court reporter. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/VMd7GdkJvQ1a5C7fIf_mM9aYq82E3EjqarcJrf1vuLI</guid>
      <pubDate>Mon, 28 Aug 2017 09:48:25 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/28/podcasts/the-daily/the-daily-who-is-sheriff-joe-arpaio.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:32:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/746f483c-e11e-4dd3-b5f2-846441f33187.mp3" type="audio/mpeg" length="30869211"/>
    </item>
    <item>
      <title>Friday, Aug. 25,  2017</title>
      <description>
        <![CDATA[<p>The feud between President Trump and Jeff Flake, a Republican senator from Arizona, reveals a great deal about tensions in Washington. Guests: Jonathan Martin, a national political correspondent for The Times; Mr. Flake, who you can hear more from in tomorrow’s episode of “The New Washington.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, Aug. 25,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The feud between President Trump and Jeff Flake, a Republican senator from Arizona, reveals a great deal about tensions in Washington. Guests: Jonathan Martin, a national political correspondent for The Times; Mr. Flake, who you can hear more from in tomorrow’s episode of “The New Washington.” For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The feud between President Trump and Jeff Flake, a Republican senator from Arizona, reveals a great deal about tensions in Washington. Guests: Jonathan Martin, a national political correspondent for The Times; Mr. Flake, who you can hear more from in tomorrow’s episode of “The New Washington.” For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/n0wQ2Z3ycUYCBeyhY5VW3tRlAf0X6cE8SrKg9YYGraA</guid>
      <pubDate>Fri, 25 Aug 2017 09:34:51 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/25/podcasts/the-daily/the-daily-donald-trump-vs-jeff-flake.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fa2c2745-5e3c-4c5d-88df-f0d9a3d2925d.mp3" type="audio/mpeg" length="20070400"/>
    </item>
    <item>
      <title>Thursday, Aug. 24,  2017</title>
      <description>
        <![CDATA[<p>The United States recently noticed something unusual in North Korea’s weapons program: Its missiles started to work. Why? We discuss a surprising discovery. Guest: William J. Broad, who has reported on missile defense for decades. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Thursday, Aug. 24,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States recently noticed something unusual in North Korea’s weapons program: Its missiles started to work. Why? We discuss a surprising discovery. Guest: William J. Broad, who has reported on missile defense for decades. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States recently noticed something unusual in North Korea’s weapons program: Its missiles started to work. Why? We discuss a surprising discovery. Guest: William J. Broad, who has reported on missile defense for decades. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kExvsHB0uE-MH1vEVK41UmJkyCO0Sr3nKVBUoK0CvV0</guid>
      <pubDate>Thu, 24 Aug 2017 08:52:14 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/24/podcasts/the-daily/north-korea-nuclear-missiles-ukraine.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cf1750b4-e669-49d1-934e-cbde84ee4498.mp3" type="audio/mpeg" length="16902269"/>
    </item>
    <item>
      <title>Wednesday, Aug. 23,  2017</title>
      <description>
        <![CDATA[<p>The president says “things are going to be different” in Afghanistan: no more “nation-building,” just killing terrorists. But a closer examination suggests this new strategy looks a lot like the strategy of the last 16 years. Guest: Matt Rosenberg, who covered Afghanistan from 2008 to 2014. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, Aug. 23,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The president says “things are going to be different” in Afghanistan: no more “nation-building,” just killing terrorists. But a closer examination suggests this new strategy looks a lot like the strategy of the last 16 years. Guest: Matt Rosenberg, who covered Afghanistan from 2008 to 2014. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The president says “things are going to be different” in Afghanistan: no more “nation-building,” just killing terrorists. But a closer examination suggests this new strategy looks a lot like the strategy of the last 16 years. Guest: Matt Rosenberg, who covered Afghanistan from 2008 to 2014. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/L40FNfAnTtd89YA3wkITC0z3v6GhSxz-0I3rgdKAWTY</guid>
      <pubDate>Wed, 23 Aug 2017 09:02:27 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/23/podcasts/the-daily/the-daily-the-history-of-nation-building-in-afghanistan.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/56f1eea5-baa8-420c-9d3d-846093f45e48.mp3" type="audio/mpeg" length="20132675"/>
    </item>
    <item>
      <title>Tuesday, Aug. 22,  2017</title>
      <description>
        <![CDATA[<p>Derek Black left the white nationalist movement that he had been poised to help lead, betraying his father, a former grand master of the Ku Klux Klan. Today, we talk with him about the events of the past year. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, Aug. 22,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Derek Black left the white nationalist movement that he had been poised to help lead, betraying his father, a former grand master of the Ku Klux Klan. Today, we talk with him about the events of the past year. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Derek Black left the white nationalist movement that he had been poised to help lead, betraying his father, a former grand master of the Ku Klux Klan. Today, we talk with him about the events of the past year. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/u1gbZYuVRapD-Mtc8eRPqxw_qLoHOifkFUpeDkiWS7A</guid>
      <pubDate>Tue, 22 Aug 2017 10:07:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:34:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d7b8650b-3ef3-42c5-a1ce-c548463b04db.mp3" type="audio/mpeg" length="32893805"/>
    </item>
    <item>
      <title>Monday, Aug. 21,  2017</title>
      <description>
        <![CDATA[<p>Will Stephen K. Bannon use his return to Breitbart News, a right-wing megaphone, to help the president who dismissed him — or to hurt him? And where can he exert more political power: at Breitbart or in the White House? Guest: Jeremy W. Peters, a reporter in the Washington bureau who has covered the so-called alt-right. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, Aug. 21,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Will Stephen K. Bannon use his return to Breitbart News, a right-wing megaphone, to help the president who dismissed him — or to hurt him? And where can he exert more political power: at Breitbart or in the White House? Guest: Jeremy W. Peters, a reporter in the Washington bureau who has covered the so-called alt-right. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Will Stephen K. Bannon use his return to Breitbart News, a right-wing megaphone, to help the president who dismissed him — or to hurt him? And where can he exert more political power: at Breitbart or in the White House? Guest: Jeremy W. Peters, a reporter in the Washington bureau who has covered the so-called alt-right. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/OZbeLM773vNXaSssnuz5JnIbVYhsZTrHq2iZaPVwvnw</guid>
      <pubDate>Mon, 21 Aug 2017 09:58:02 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/21/podcasts/the-daily/steve-bannon-breitbart-news.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/63617a42-4454-4a3b-9318-0c9805b5b99b.mp3" type="audio/mpeg" length="18602109"/>
    </item>
    <item>
      <title>Special Edition: The Fall of Steve Bannon</title>
      <description>
        <![CDATA[<p>After a week in which the president bolstered white nationalists, why did he end it by getting rid of Stephen K. Bannon, the crusader in the White House for the so-called alt-right? Guest: Maggie Haberman, who covers the White House. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Special Edition: The Fall of Steve Bannon</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After a week in which the president bolstered white nationalists, why did he end it by getting rid of Stephen K. Bannon, the crusader in the White House for the so-called alt-right? Guest: Maggie Haberman, who covers the White House. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>After a week in which the president bolstered white nationalists, why did he end it by getting rid of Stephen K. Bannon, the crusader in the White House for the so-called alt-right? Guest: Maggie Haberman, who covers the White House. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WiWoPf7nKwY1PzKMk8lM-2taxryXg2VMeLUyxdHrOgY</guid>
      <pubDate>Fri, 18 Aug 2017 23:12:12 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/18/podcasts/the-daily/steve-bannon.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/54cdb6c5-5916-45b4-b3c6-bda647d2cd2e.mp3" type="audio/mpeg" length="15996133"/>
    </item>
    <item>
      <title>Friday, Aug. 18,  2017</title>
      <description>
        <![CDATA[<p>They posted hate speech and Hitler emojis. They also organized a rally in Charlottesville, Va., connecting several major white supremacy groups for an intimidating display of force. How white supremacists and neo-Nazis used their favorite social networks to craft and propagate their messages — at least until they were barred from the platform.&nbsp;Guest: Kevin Roose, who writes about technology for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Friday, Aug. 18,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>They posted hate speech and Hitler emojis. They also organized a rally in Charlottesville, Va., connecting several major white supremacy groups for an intimidating display of force. How white supremacists and neo-Nazis used their favorite social networks to craft and propagate their messages — at least until they were barred from the platform. Guest: Kevin Roose, who writes about technology for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>They posted hate speech and Hitler emojis. They also organized a rally in Charlottesville, Va., connecting several major white supremacy groups for an intimidating display of force. How white supremacists and neo-Nazis used their favorite social networks to craft and propagate their messages — at least until they were barred from the platform.&nbsp;Guest: Kevin Roose, who writes about technology for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6CoLxJc0hmIEVXww5r4bPn3ZG65dm541ZYVbWLoq6xc</guid>
      <pubDate>Fri, 18 Aug 2017 09:54:26 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/18/podcasts/the-daily/alt-right-social-media.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/08c679b3-98ac-43ff-83a1-fc46a0468b0d.mp3" type="audio/mpeg" length="18421969"/>
    </item>
    <item>
      <title>Thursday, Aug. 17,  2017</title>
      <description>
        <![CDATA[<p>Upset by policies on immigration and climate change and by President Trump’s initial response to the violence in Charlottesville, Va., the leaders of major American companies began to drop one by one from presidential advisory councils. After Mr. Trump again equated far-right hate groups with the groups protesting them, the chief executives moved to cut ties with the president who rose to fame as a businessman. Guest: Andrew Ross Sorkin, a financial columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Thursday, Aug. 17,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Upset by policies on immigration and climate change and by President Trump’s initial response to the violence in Charlottesville, Va., the leaders of major American companies began to drop one by one from presidential advisory councils. After Mr. Trump again equated far-right hate groups with the groups protesting them, the chief executives moved to cut ties with the president who rose to fame as a businessman. Guest: Andrew Ross Sorkin, a financial columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Upset by policies on immigration and climate change and by President Trump’s initial response to the violence in Charlottesville, Va., the leaders of major American companies began to drop one by one from presidential advisory councils. After Mr. Trump again equated far-right hate groups with the groups protesting them, the chief executives moved to cut ties with the president who rose to fame as a businessman. Guest: Andrew Ross Sorkin, a financial columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/TeHhx_TOWk31Ol2I7LwQZlAcL47XyywKyPrOsxR-YjM</guid>
      <pubDate>Thu, 17 Aug 2017 09:21:34 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/17/podcasts/the-daily/donald-trump-business-council-charlottesville.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:15:54</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2b26fcb4-6277-4c20-8659-968b970730c4.mp3" type="audio/mpeg" length="15280169"/>
    </item>
    <item>
      <title>Wednesday, Aug. 16,  2017</title>
      <description>
        <![CDATA[<p>President Trump defended his initial remarks about the recent violence in Charlottesville, Va., on Tuesday, saying that “both sides” were to blame. Asked if he equated neo-Nazis and white supremacists with activists protesting racism, Mr. Trump said, “I’m not putting anybody on a moral plane.”&nbsp;Guests: Mark Landler, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Wednesday, Aug. 16,  2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump defended his initial remarks about the recent violence in Charlottesville, Va., on Tuesday, saying that “both sides” were to blame. Asked if he equated neo-Nazis and white supremacists with activists protesting racism, Mr. Trump said, “I’m not putting anybody on a moral plane.” Guests: Mark Landler, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump defended his initial remarks about the recent violence in Charlottesville, Va., on Tuesday, saying that “both sides” were to blame. Asked if he equated neo-Nazis and white supremacists with activists protesting racism, Mr. Trump said, “I’m not putting anybody on a moral plane.”&nbsp;Guests: Mark Landler, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ckDQARUmE9_Hk7q1LTPlzI1gsSklpRtvvhFMm-znxO4</guid>
      <pubDate>Wed, 16 Aug 2017 09:44:09 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/16/podcasts/the-daily/donald-trump-charlottesville.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/54357822-2624-41cf-a0a3-648f6ba9db5d.mp3" type="audio/mpeg" length="17428480"/>
    </item>
    <item>
      <title>Tuesday, Aug. 15, 2017</title>
      <description>
        <![CDATA[<p>In 2012, a woman asked if the city of Charlottesville, Va., should consider removing a statue of a Confederate general from a local park. That question set off a chain of events that led to the deadly violence on Saturday. Also, President Trump, after two days of equivocal remarks about the violence in Charlottesville, made a new statement on Monday: “Racism is evil.” Guests: Kristin Szakos, a city councillor in Charlottesville, Va.; Glenn Thrush, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, Aug. 15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 2012, a woman asked if the city of Charlottesville, Va., should consider removing a statue of a Confederate general from a local park. That question set off a chain of events that led to the deadly violence on Saturday. Also, President Trump, after two days of equivocal remarks about the violence in Charlottesville, made a new statement on Monday: “Racism is evil.” Guests: Kristin Szakos, a city councillor in Charlottesville, Va.; Glenn Thrush, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In 2012, a woman asked if the city of Charlottesville, Va., should consider removing a statue of a Confederate general from a local park. That question set off a chain of events that led to the deadly violence on Saturday. Also, President Trump, after two days of equivocal remarks about the violence in Charlottesville, made a new statement on Monday: “Racism is evil.” Guests: Kristin Szakos, a city councillor in Charlottesville, Va.; Glenn Thrush, a White House correspondent for The Times. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/0wFIo1YVJg8yCsWQ8YLBNQK3qLKCWelHv3Prb8z17WY</guid>
      <pubDate>Tue, 15 Aug 2017 09:23:24 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/15/podcasts/the-daily/charlottesville-trump.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/39743a3f-8c66-497f-af60-a48cc5b73cc7.mp3" type="audio/mpeg" length="19612734"/>
    </item>
    <item>
      <title>Monday, Aug. 14, 2017</title>
      <description>
        <![CDATA[<p>Protests over a plan to remove a Confederate monument in Charlottesville, Va., spun out of control, leading to clashes that left at least one person dead. President Trump condemned “hatred, bigotry and violence on many sides,” but he did not call out white nationalists or neo-Nazis. Guests: Sheryl Gay Stolberg, domestic affairs correspondent for The New York Times; Glenn Thrush, a White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, Aug. 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Protests over a plan to remove a Confederate monument in Charlottesville, Va., spun out of control, leading to clashes that left at least one person dead. President Trump condemned “hatred, bigotry and violence on many sides,” but he did not call out white nationalists or neo-Nazis. Guests: Sheryl Gay Stolberg, domestic affairs correspondent for The New York Times; Glenn Thrush, a White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Protests over a plan to remove a Confederate monument in Charlottesville, Va., spun out of control, leading to clashes that left at least one person dead. President Trump condemned “hatred, bigotry and violence on many sides,” but he did not call out white nationalists or neo-Nazis. Guests: Sheryl Gay Stolberg, domestic affairs correspondent for The New York Times; Glenn Thrush, a White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/mcvgKiztMbJIPEDAg5EL2hyl87TNBIAh1gPE9CTxVqg</guid>
      <pubDate>Mon, 14 Aug 2017 09:54:20 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/14/podcasts/the-daily/charlottesville-white-nationalist-trump.html</link>
      <itunes:explicit>yes</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/717b9759-c505-4158-ae71-ae1ff495bee1.mp3" type="audio/mpeg" length="21282481"/>
    </item>
    <item>
      <title>Friday, Aug 11, 2017</title>
      <description>
        <![CDATA[<p>What happened when the country’s best known weight-loss company realized that people no longer wanted to talk about losing weight. Guest: Taffy Brodesser-Akner, who wrote an article for The New York Times Magazine about evolving American culture through the saga of Weight Watchers. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, Aug 11, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What happened when the country’s best known weight-loss company realized that people no longer wanted to talk about losing weight. Guest: Taffy Brodesser-Akner, who wrote an article for The New York Times Magazine about evolving American culture through the saga of Weight Watchers. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>What happened when the country’s best known weight-loss company realized that people no longer wanted to talk about losing weight. Guest: Taffy Brodesser-Akner, who wrote an article for The New York Times Magazine about evolving American culture through the saga of Weight Watchers. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_3EmaA-GYwnUMXo3bEnEMMVhjxtEoEqZL4k8atN8_Ps</guid>
      <pubDate>Fri, 11 Aug 2017 09:40:46 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/11/podcasts/the-daily/weight-watchers.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:43</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ef182320-cae0-4e69-adf2-f214bc9bfaf7.mp3" type="audio/mpeg" length="19895693"/>
    </item>
    <item>
      <title>Thursday, Aug 10, 2017</title>
      <description>
        <![CDATA[<p>In 1999, President Bill Clinton sent an envoy to North Korea for a rare negotiation aimed at stopping the country’s nuclear development. That was the moment, the envoy says, when everything could have gone differently. Guest: William Perry, the secretary of defense from 1994 to 1997, who went on that diplomatic mission. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Thursday, Aug 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 1999, President Bill Clinton sent an envoy to North Korea for a rare negotiation aimed at stopping the country’s nuclear development. That was the moment, the envoy says, when everything could have gone differently. Guest: William Perry, the secretary of defense from 1994 to 1997, who went on that diplomatic mission. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>In 1999, President Bill Clinton sent an envoy to North Korea for a rare negotiation aimed at stopping the country’s nuclear development. That was the moment, the envoy says, when everything could have gone differently. Guest: William Perry, the secretary of defense from 1994 to 1997, who went on that diplomatic mission. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/P6AcLWBSMmtiI8rfyecJ_2mN8DODhaHXz5h7fI0uXmA</guid>
      <pubDate>Thu, 10 Aug 2017 09:56:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c5433ef8-fe4f-41b9-86f2-d8e1a87ae009.mp3" type="audio/mpeg" length="21140375"/>
    </item>
    <item>
      <title>Wednesday, Aug 9, 2017</title>
      <description>
        <![CDATA[<p>From his golf course in New Jersey on Tuesday, President Trump threatened North Korea “fire and fury” and warned that the country “best not make any more threats to the United States.” How should we interpret the latest escalation in tensions with Pyongyang? Plus: Why American law may block the biggest medical breakthrough in decades. Guests: Peter Baker, chief White House correspondent for The Times; Carl Zimmer, who writes about biology and genetics. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, Aug 9, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From his golf course in New Jersey on Tuesday, President Trump threatened North Korea “fire and fury” and warned that the country “best not make any more threats to the United States.” How should we interpret the latest escalation in tensions with Pyongyang? Plus: Why American law may block the biggest medical breakthrough in decades. Guests: Peter Baker, chief White House correspondent for The Times; Carl Zimmer, who writes about biology and genetics. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>From his golf course in New Jersey on Tuesday, President Trump threatened North Korea “fire and fury” and warned that the country “best not make any more threats to the United States.” How should we interpret the latest escalation in tensions with Pyongyang? Plus: Why American law may block the biggest medical breakthrough in decades. Guests: Peter Baker, chief White House correspondent for The Times; Carl Zimmer, who writes about biology and genetics. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/4Bvtu56usXZEP6SlkzqIK6PC9g1uEGLlEh_jI7TQs-w</guid>
      <pubDate>Wed, 09 Aug 2017 09:40:30 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/09/podcasts/the-daily/donald-trump-north-korea.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a3206459-1a5f-40a1-9721-cfa8c3057729.mp3" type="audio/mpeg" length="18131069"/>
    </item>
    <item>
      <title>Tuesday, Aug. 8, 2017</title>
      <description>
        <![CDATA[<p>Why Vice President Mike Pence is denouncing New York Times reporting about his political future and publicly stating his allegiance to the president. And the stolen childhoods of young Syrians who endured the traumas of civil war and Islamic State rule. Guests: Glenn Thrush, a White House correspondent; Somini Sengupta, a foreign correspondent; Dr. Rajia Sharhan, who treats the displaced children of Syria. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, Aug. 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Why Vice President Mike Pence is denouncing New York Times reporting about his political future and publicly stating his allegiance to the president. And the stolen childhoods of young Syrians who endured the traumas of civil war and Islamic State rule. Guests: Glenn Thrush, a White House correspondent; Somini Sengupta, a foreign correspondent; Dr. Rajia Sharhan, who treats the displaced children of Syria. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Why Vice President Mike Pence is denouncing New York Times reporting about his political future and publicly stating his allegiance to the president. And the stolen childhoods of young Syrians who endured the traumas of civil war and Islamic State rule. Guests: Glenn Thrush, a White House correspondent; Somini Sengupta, a foreign correspondent; Dr. Rajia Sharhan, who treats the displaced children of Syria. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aEopZxozxUMVq8z-8jyvu3yR66G4HbYa2iJGV8nVO1A</guid>
      <pubDate>Tue, 08 Aug 2017 09:37:32 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/08/podcasts/the-daily/mike-pences-loyalty-syrian-children.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/889cfb3a-64aa-401e-94e7-a65c1688aabc.mp3" type="audio/mpeg" length="20642586"/>
    </item>
    <item>
      <title>Monday, Aug. 7, 2017</title>
      <description>
        <![CDATA[<p>As a teenager, Noura Jackson was convicted of killing her mother, and then spent nine years in prison. But from the start, prosecutors possessed a document that could have set her free. Why the omission of evidence, despite its life-altering consequences, is hard to detect — and rarely punished. Guest: Emily Bazelon, a writer for The New York Times Magazine who has been following Ms. Jackson’s case. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Monday, Aug. 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As a teenager, Noura Jackson was convicted of killing her mother, and then spent nine years in prison. But from the start, prosecutors possessed a document that could have set her free. Why the omission of evidence, despite its life-altering consequences, is hard to detect — and rarely punished. Guest: Emily Bazelon, a writer for The New York Times Magazine who has been following Ms. Jackson’s case. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As a teenager, Noura Jackson was convicted of killing her mother, and then spent nine years in prison. But from the start, prosecutors possessed a document that could have set her free. Why the omission of evidence, despite its life-altering consequences, is hard to detect — and rarely punished. Guest: Emily Bazelon, a writer for The New York Times Magazine who has been following Ms. Jackson’s case. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dc0lt1LS4qsuuvkpf5WtgjhEigeaKIssZSNqCobpESQ</guid>
      <pubDate>Mon, 07 Aug 2017 09:47:40 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/07/podcasts/the-daily/the-daily-the-story-of-noura-jackson.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/52a6f7ce-b0ad-4db9-8a02-f6b8e090f272.mp3" type="audio/mpeg" length="23419089"/>
    </item>
    <item>
      <title>Friday, Aug. 4, 2017</title>
      <description>
        <![CDATA[<p>In 2013, Abigail Fisher sued the University of Texas, saying she had been discriminated against for being white. Now, some students are suing Harvard, saying they were discriminated against for being Asian-American. Both lawsuits can be traced to the same man. But this time, the White House is taking up his cause. Guests: Michael Wang, one of dozens of Asian-American students who have filed a complaint against Harvard; Anemona Hartocollis, who is reporting on the lawsuit; Edward Blum, the man behind the action; Nikole Hannah-Jones, who writes about race and education for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, Aug. 4, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 2013, Abigail Fisher sued the University of Texas, saying she had been discriminated against for being white. Now, some students are suing Harvard, saying they were discriminated against for being Asian-American. Both lawsuits can be traced to the same man. But this time, the White House is taking up his cause. Guests: Michael Wang, one of dozens of Asian-American students who have filed a complaint against Harvard; Anemona Hartocollis, who is reporting on the lawsuit; Edward Blum, the man behind the action; Nikole Hannah-Jones, who writes about race and education for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>In 2013, Abigail Fisher sued the University of Texas, saying she had been discriminated against for being white. Now, some students are suing Harvard, saying they were discriminated against for being Asian-American. Both lawsuits can be traced to the same man. But this time, the White House is taking up his cause. Guests: Michael Wang, one of dozens of Asian-American students who have filed a complaint against Harvard; Anemona Hartocollis, who is reporting on the lawsuit; Edward Blum, the man behind the action; Nikole Hannah-Jones, who writes about race and education for The New York Times Magazine. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Su-KQp-3q_I81DMD1oqGR--VW3FG0E8g5bThvDZB7ec</guid>
      <pubDate>Fri, 04 Aug 2017 09:33:09 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/04/podcasts/the-daily/asian-americans-suing-harvard-affirmative-action.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/dc291a76-0e1e-4aa0-95ba-9715649785b0.mp3" type="audio/mpeg" length="21517374"/>
    </item>
    <item>
      <title>Thursday, Aug. 3, 2017</title>
      <description>
        <![CDATA[<p>President Trump is threatening to undermine the Affordable Care Act, President Barack Obama’s signature legislation. But what if the real threat to Obamacare was put there by Mr. Obama himself — and could bring the whole thing down? Guests: Carl Hulse, chief Washington correspondent; Ken Janda, the chief executive of an insurance provider in Houston. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, Aug. 3, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump is threatening to undermine the Affordable Care Act, President Barack Obama’s signature legislation. But what if the real threat to Obamacare was put there by Mr. Obama himself — and could bring the whole thing down? Guests: Carl Hulse, chief Washington correspondent; Ken Janda, the chief executive of an insurance provider in Houston. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump is threatening to undermine the Affordable Care Act, President Barack Obama’s signature legislation. But what if the real threat to Obamacare was put there by Mr. Obama himself — and could bring the whole thing down? Guests: Carl Hulse, chief Washington correspondent; Ken Janda, the chief executive of an insurance provider in Houston. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/k1mkLUMM_PXq26XCq5149vg0mkAERqkC6AtsulsoAMY</guid>
      <pubDate>Thu, 03 Aug 2017 09:46:11 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/03/podcasts/the-daily/other-obamacare-threat.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/261f402b-4b6e-4ab3-beed-79a34a4a2c24.mp3" type="audio/mpeg" length="18624679"/>
    </item>
    <item>
      <title>Wednesday, Aug. 2, 2017</title>
      <description>
        <![CDATA[<p>An expansion of power. A rewriting of the Constitution. Is democracy coming to an end in Venezuela? Plus: What does it mean for a retired four-star general to enter a chaotic White House? Guests: Nicholas Casey, our Andes bureau chief; Michael D. Shear, White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, Aug. 2, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>An expansion of power. A rewriting of the Constitution. Is democracy coming to an end in Venezuela? Plus: What does it mean for a retired four-star general to enter a chaotic White House? Guests: Nicholas Casey, our Andes bureau chief; Michael D. Shear, White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>An expansion of power. A rewriting of the Constitution. Is democracy coming to an end in Venezuela? Plus: What does it mean for a retired four-star general to enter a chaotic White House? Guests: Nicholas Casey, our Andes bureau chief; Michael D. Shear, White House correspondent. For more information on today’s episode, visit nytimes.com/thedaily.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/cG7FrFJ5pYrY6KbLWoqUjBIsxoeHSAxm9LAJy7hiXqA</guid>
      <pubDate>Wed, 02 Aug 2017 09:40:42 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/02/podcasts/the-daily/john-kelly-venezuela.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0cbe8bc7-d694-4fc7-bf23-3ea92aa6f638.mp3" type="audio/mpeg" length="22930912"/>
    </item>
    <item>
      <title>Tuesday, Aug. 1, 2017</title>
      <description>
        <![CDATA[<p>He burned fast and bright. A play-by-play of the brief and tumultuous tenure of Anthony Scaramucci. And how President Putin’s bet on a Trump presidency backfired spectacularly. Guests: Glenn Thrush, a White House correspondent for The New York Times; David E. Sanger, chief Washington correspondent. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </description>
      <itunes:title>Tuesday, Aug. 1, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>He burned fast and bright. A play-by-play of the brief and tumultuous tenure of Anthony Scaramucci. And how President Putin’s bet on a Trump presidency backfired spectacularly. Guests: Glenn Thrush, a White House correspondent for The New York Times; David E. Sanger, chief Washington correspondent. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>He burned fast and bright. A play-by-play of the brief and tumultuous tenure of Anthony Scaramucci. And how President Putin’s bet on a Trump presidency backfired spectacularly. Guests: Glenn Thrush, a White House correspondent for The New York Times; David E. Sanger, chief Washington correspondent. For more information on today’s episode, visit nytimes.com/thedaily.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sKOGjQ28xYlIkd0GfQyt_EtQ0UjI1LMrmcGFxZJRh5U</guid>
      <pubDate>Tue, 01 Aug 2017 09:39:14 -0000</pubDate>
      <link>https://www.nytimes.com/2017/08/01/podcasts/the-daily/anthony-scaramucci-fired.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d633a57e-e8b4-46c3-9c3b-5c92d24b98c1.mp3" type="audio/mpeg" length="20028604"/>
    </item>
    <item>
      <title>Bonus: Introducing 'The New Washington'</title>
      <description>
        <![CDATA[<p>“The Daily” is launching a new series of interviews that take you inside Trump’s Washington. Every week for the next few months, you’ll hear an interview with the political figure you want to hear from most, with analysis and commentary from Michael Barbaro, Carl Hulse and their colleagues in the D.C. bureau of The New York Times. In this introductory episode, Michael and Carl discuss the characters remaking Washington. Subscribe on Apple Podcasts or wherever you listen to "The Daily."</p>]]>
      </description>
      <itunes:title>Bonus: Introducing 'The New Washington'</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“The Daily” is launching a new series of interviews that take you inside Trump’s Washington. Every week for the next few months, you’ll hear an interview with the political figure you want to hear from most, with analysis and commentary from Michael Barbaro, Carl Hulse and their colleagues in the D.C. bureau of The New York Times. In this introductory episode, Michael and Carl discuss the characters remaking Washington. Subscribe on Apple Podcasts or wherever you listen to "The Daily."</itunes:summary>
      <content:encoded>
        <![CDATA[<p>“The Daily” is launching a new series of interviews that take you inside Trump’s Washington. Every week for the next few months, you’ll hear an interview with the political figure you want to hear from most, with analysis and commentary from Michael Barbaro, Carl Hulse and their colleagues in the D.C. bureau of The New York Times. In this introductory episode, Michael and Carl discuss the characters remaking Washington. Subscribe on Apple Podcasts or wherever you listen to "The Daily."</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/eAaB5WlB3ktdQdmUX35JfLaLgdwAI1J9MK5GNJXcxf8</guid>
      <pubDate>Mon, 31 Jul 2017 17:29:51 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:15:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/87d38a94-a630-460b-ac2c-bdd6caf9f54f.mp3" type="audio/mpeg" length="14477688"/>
    </item>
    <item>
      <title>Monday, July 31, 2017</title>
      <description>
        <![CDATA[<p>Every day from before sunrise until late into the night, undocumented immigrants across the United States are being picked up by Immigration and Customs Enforcement officers, the front-line soldiers in President Trump’s crackdown on illegal immigration. Increasingly, the arrests are collateral: Officers detain people they come across while looking for somebody else. Guest: Jennifer Medina, who recently spent a day in the field with immigration officers. For more information on today’s episode, visit http://nyti.ms/2vdRpkR.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, July 31, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Every day from before sunrise until late into the night, undocumented immigrants across the United States are being picked up by Immigration and Customs Enforcement officers, the front-line soldiers in President Trump’s crackdown on illegal immigration. Increasingly, the arrests are collateral: Officers detain people they come across while looking for somebody else. Guest: Jennifer Medina, who recently spent a day in the field with immigration officers. For more information on today’s episode, visit http://nyti.ms/2vdRpkR. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Every day from before sunrise until late into the night, undocumented immigrants across the United States are being picked up by Immigration and Customs Enforcement officers, the front-line soldiers in President Trump’s crackdown on illegal immigration. Increasingly, the arrests are collateral: Officers detain people they come across while looking for somebody else. Guest: Jennifer Medina, who recently spent a day in the field with immigration officers. For more information on today’s episode, visit http://nyti.ms/2vdRpkR.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zCB0ZaYf_hvEZANxg0KFZ2tZruDgrIwciFTmlS9KCu0</guid>
      <pubDate>Mon, 31 Jul 2017 09:44:28 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/31/podcasts/the-daily/the-daily-a-day-with-ice.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6e0189f3-baf0-49c0-ad2b-a4aae930b243.mp3" type="audio/mpeg" length="19522037"/>
    </item>
    <item>
      <title>Friday, July 28, 2017</title>
      <description>
        <![CDATA[<p>49 to 51. Three Republican senators break ranks, ending what could be their party’s last plan to repeal the Affordable Care Act. Plus: What’s so bad about Obamacare anyway? Guests: Thomas Kaplan, a congressional correspondent for The Times, joins us from the Senate press gallery at 2 a.m.; Abby Goodnough, who covers health care. For more information on today’s episode, visit http://nyti.ms/2tZRHMp.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, July 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>49 to 51. Three Republican senators break ranks, ending what could be their party’s last plan to repeal the Affordable Care Act. Plus: What’s so bad about Obamacare anyway? Guests: Thomas Kaplan, a congressional correspondent for The Times, joins us from the Senate press gallery at 2 a.m.; Abby Goodnough, who covers health care. For more information on today’s episode, visit http://nyti.ms/2tZRHMp. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>49 to 51. Three Republican senators break ranks, ending what could be their party’s last plan to repeal the Affordable Care Act. Plus: What’s so bad about Obamacare anyway? Guests: Thomas Kaplan, a congressional correspondent for The Times, joins us from the Senate press gallery at 2 a.m.; Abby Goodnough, who covers health care. For more information on today’s episode, visit http://nyti.ms/2tZRHMp.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xyarCRZi29G0IGa0CY4w5LM1bIHYJM8pHzASi0O0Y9U</guid>
      <pubDate>Fri, 28 Jul 2017 10:03:04 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/28/podcasts/the-daily/senate-republicans-obamacare.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/39d7de69-bf98-4a40-9ac8-79369ec90fb2.mp3" type="audio/mpeg" length="22806360"/>
    </item>
    <item>
      <title>Thursday, July 27, 2017</title>
      <description>
        <![CDATA[<p>The president says transgender people will not be allowed to serve in the military. The military says that’s news to them. Plus: What exactly Is a ‘skinny repeal’? Guests: Carl Hulse, who covers Congress for The Times; Helene Cooper, a Pentagon correspondent; Staff Sgt. Ashlee Bruce of the Air Force. For more information on today’s episode, visit http://nyti.ms/2f45niU.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, July 27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The president says transgender people will not be allowed to serve in the military. The military says that’s news to them. Plus: What exactly Is a ‘skinny repeal’? Guests: Carl Hulse, who covers Congress for The Times; Helene Cooper, a Pentagon correspondent; Staff Sgt. Ashlee Bruce of the Air Force. For more information on today’s episode, visit http://nyti.ms/2f45niU. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The president says transgender people will not be allowed to serve in the military. The military says that’s news to them. Plus: What exactly Is a ‘skinny repeal’? Guests: Carl Hulse, who covers Congress for The Times; Helene Cooper, a Pentagon correspondent; Staff Sgt. Ashlee Bruce of the Air Force. For more information on today’s episode, visit http://nyti.ms/2f45niU.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-Sx2elT3kqGNd29q7iYiY6CHowyWC6gniuIgsyc-HlE</guid>
      <pubDate>Thu, 27 Jul 2017 09:59:22 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/27/podcasts/the-daily/senate-health-care-military-transgender.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:28</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/561e7c3e-7a83-4d1c-8b0f-ed39761aa6e6.mp3" type="audio/mpeg" length="21575889"/>
    </item>
    <item>
      <title>Wednesday, July 26, 2017</title>
      <description>
        <![CDATA[<p>After the dramatic return of John McCain, the Senate narrowly agrees to begin work on the repeal of Obamacare — then promptly votes down a plan to do exactly that. Plus: The president steps up the attacks on his attorney general. Guest: Jeremy W. Peters, who covers politics from Washington. For more information on today’s episode, visit http://nyti.ms/2vomsLp.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, July 26, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After the dramatic return of John McCain, the Senate narrowly agrees to begin work on the repeal of Obamacare — then promptly votes down a plan to do exactly that. Plus: The president steps up the attacks on his attorney general. Guest: Jeremy W. Peters, who covers politics from Washington. For more information on today’s episode, visit http://nyti.ms/2vomsLp. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>After the dramatic return of John McCain, the Senate narrowly agrees to begin work on the repeal of Obamacare — then promptly votes down a plan to do exactly that. Plus: The president steps up the attacks on his attorney general. Guest: Jeremy W. Peters, who covers politics from Washington. For more information on today’s episode, visit http://nyti.ms/2vomsLp.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KqZ9A-ftUaNeCmU2Z6wLlImMYxM1HcUjrPURYCXb2QE</guid>
      <pubDate>Wed, 26 Jul 2017 09:32:55 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/26/podcasts/the-daily/john-mccain-senate-vote-obamacare.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:45</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c34d74e9-9e3c-4951-9fcc-2a630280f041.mp3" type="audio/mpeg" length="17050644"/>
    </item>
    <item>
      <title>Tuesday, July 25, 2017</title>
      <description>
        <![CDATA[<p>“I did not collude,” Jared Kushner said after meeting with Senate investigators on Monday. And Betsy DeVos, the education secretary, has signaled that she intends to take a hard look at whether college campuses have gone too far in cracking down on sexual assault. Guests: Matt Apuzzo, who has been covering the Trump-Russia investigation; Sheryl Gay Stolberg, who has written about Ms. DeVos’s promise to revisit the Obama administration’s sexual assault policies; Tom Rossley Sr., the father of a student accused of sexual assault. For more information on today’s episode, visit http://nyti.ms/2w0MiST.</p>]]>
      </description>
      <itunes:title>Tuesday, July 25, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>“I did not collude,” Jared Kushner said after meeting with Senate investigators on Monday. And Betsy DeVos, the education secretary, has signaled that she intends to take a hard look at whether college campuses have gone too far in cracking down on sexual assault. Guests: Matt Apuzzo, who has been covering the Trump-Russia investigation; Sheryl Gay Stolberg, who has written about Ms. DeVos’s promise to revisit the Obama administration’s sexual assault policies; Tom Rossley Sr., the father of a student accused of sexual assault. For more information on today’s episode, visit http://nyti.ms/2w0MiST.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>“I did not collude,” Jared Kushner said after meeting with Senate investigators on Monday. And Betsy DeVos, the education secretary, has signaled that she intends to take a hard look at whether college campuses have gone too far in cracking down on sexual assault. Guests: Matt Apuzzo, who has been covering the Trump-Russia investigation; Sheryl Gay Stolberg, who has written about Ms. DeVos’s promise to revisit the Obama administration’s sexual assault policies; Tom Rossley Sr., the father of a student accused of sexual assault. For more information on today’s episode, visit http://nyti.ms/2w0MiST.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Izmn10_Nz2gmYs9U4Jrzcer69QMDYqEt5v0LTjIIm78</guid>
      <pubDate>Tue, 25 Jul 2017 09:55:07 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/25/podcasts/the-daily/jared-kushner-betsy-devos.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c9301ac2-6706-4c40-834f-478529df2d08.mp3" type="audio/mpeg" length="25205864"/>
    </item>
    <item>
      <title>Monday, July 24, 2017</title>
      <description>
        <![CDATA[<p>Congress revolts and approves sanctions against Russia. The press secretary quits. The White House looks to discredit the special prosecutor investigating the president. And the president says he has complete power to pardon family, aides and maybe even himself. We make sense of the news from this weekend. Guest: Glenn Thrush, a White House correspondent. For more information on today’s episode, visit http://nyti.ms/2uTKz1k.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, July 24, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Congress revolts and approves sanctions against Russia. The press secretary quits. The White House looks to discredit the special prosecutor investigating the president. And the president says he has complete power to pardon family, aides and maybe even himself. We make sense of the news from this weekend. Guest: Glenn Thrush, a White House correspondent. For more information on today’s episode, visit http://nyti.ms/2uTKz1k. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Congress revolts and approves sanctions against Russia. The press secretary quits. The White House looks to discredit the special prosecutor investigating the president. And the president says he has complete power to pardon family, aides and maybe even himself. We make sense of the news from this weekend. Guest: Glenn Thrush, a White House correspondent. For more information on today’s episode, visit http://nyti.ms/2uTKz1k.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1pYOkVMt8TOYCx3S6Bnu7zzPHcwM4AGF3449svFsTGg</guid>
      <pubDate>Mon, 24 Jul 2017 09:35:55 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/24/podcasts/the-daily/the-daily-spicer-out-sanctions-approved-pardons-for-all.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:42</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5b6c32a5-2169-4453-8f79-5e3546f58ea7.mp3" type="audio/mpeg" length="18917668"/>
    </item>
    <item>
      <title>Friday, July 21, 2017</title>
      <description>
        <![CDATA[<p>After Mosul, Iraq, was liberated, two Times reporters encountered a group of women who had been enslaved by the Islamic State for years. Days after the city’s fall, they still believed that the militant group had taken over the world. Guests: Rukmini Callimachi, who covers terrorism and the Islamic State for The Times, and Andy Mills, a producer for “The Daily” who is in Iraq with her. For more information on today’s episode, visit http://nyti.ms/2vovtEe.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, July 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>After Mosul, Iraq, was liberated, two Times reporters encountered a group of women who had been enslaved by the Islamic State for years. Days after the city’s fall, they still believed that the militant group had taken over the world. Guests: Rukmini Callimachi, who covers terrorism and the Islamic State for The Times, and Andy Mills, a producer for “The Daily” who is in Iraq with her. For more information on today’s episode, visit http://nyti.ms/2vovtEe. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>After Mosul, Iraq, was liberated, two Times reporters encountered a group of women who had been enslaved by the Islamic State for years. Days after the city’s fall, they still believed that the militant group had taken over the world. Guests: Rukmini Callimachi, who covers terrorism and the Islamic State for The Times, and Andy Mills, a producer for “The Daily” who is in Iraq with her. For more information on today’s episode, visit http://nyti.ms/2vovtEe.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CwiggGhdnqCo-4e9vR_eklA_yVjWefNFc423m19M_sQ</guid>
      <pubDate>Fri, 21 Jul 2017 10:03:42 -0000</pubDate>
      <link>http://nyti.ms/2vovtEe</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:03</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e114cb98-5fa1-401b-a2be-db11004425fa.mp3" type="audio/mpeg" length="19252035"/>
    </item>
    <item>
      <title>Thursday, July 20, 2017</title>
      <description>
        <![CDATA[<p>Today, exclusive audio from The Times’s wide-ranging interview with the president. Speaking with three New York Times reporters in the Oval Office, Mr. Trump discussed his conversation with President Vladimir Putin and expressed his anger toward major figures in the Russia investigation — including his own attorney general. Guests: Michael S. Schmidt and Maggie Haberman, who, along with Peter Baker, interviewed the president on Wednesday. For more information on today’s episode, visit http://nyti.ms/2hjqSNx.&nbsp;</p>]]>
      </description>
      <itunes:title>Thursday, July 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Today, exclusive audio from The Times’s wide-ranging interview with the president. Speaking with three New York Times reporters in the Oval Office, Mr. Trump discussed his conversation with President Vladimir Putin and expressed his anger toward major figures in the Russia investigation — including his own attorney general. Guests: Michael S. Schmidt and Maggie Haberman, who, along with Peter Baker, interviewed the president on Wednesday. For more information on today’s episode, visit http://nyti.ms/2hjqSNx. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Today, exclusive audio from The Times’s wide-ranging interview with the president. Speaking with three New York Times reporters in the Oval Office, Mr. Trump discussed his conversation with President Vladimir Putin and expressed his anger toward major figures in the Russia investigation — including his own attorney general. Guests: Michael S. Schmidt and Maggie Haberman, who, along with Peter Baker, interviewed the president on Wednesday. For more information on today’s episode, visit http://nyti.ms/2hjqSNx.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/K_qBeclvw1Za8uF5UGjRk70zf9jL8eR_RmSWSPHhNTE</guid>
      <pubDate>Thu, 20 Jul 2017 09:40:28 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/20/podcasts/the-daily/donald-trump-interview.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d9001932-0362-4c4c-8fd4-beef3b5f2662.mp3" type="audio/mpeg" length="19143784"/>
    </item>
    <item>
      <title>Wednesday, July 19, 2017</title>
      <description>
        <![CDATA[<p>What’s it like to be a Republican lawmaker in Washington in the Trump era? A frank discussion about being a congressman when the House, Senate, and presidency are controlled by your party — but just about nothing is getting done and all the usual rules have been broken. Guest: Tom Rooney, a Republican congressman from Florida. For more information on today’s episode, visit http://nyti.ms/2uLom8B.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, July 19, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What’s it like to be a Republican lawmaker in Washington in the Trump era? A frank discussion about being a congressman when the House, Senate, and presidency are controlled by your party — but just about nothing is getting done and all the usual rules have been broken. Guest: Tom Rooney, a Republican congressman from Florida. For more information on today’s episode, visit http://nyti.ms/2uLom8B. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>What’s it like to be a Republican lawmaker in Washington in the Trump era? A frank discussion about being a congressman when the House, Senate, and presidency are controlled by your party — but just about nothing is getting done and all the usual rules have been broken. Guest: Tom Rooney, a Republican congressman from Florida. For more information on today’s episode, visit http://nyti.ms/2uLom8B.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2ENPFFvrMgvNC-Nnq7TDqdXsPEwLC8qQZmk1J9FY-qA</guid>
      <pubDate>Wed, 19 Jul 2017 09:39:12 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/19/podcasts/the-daily/tom-rooney-trump-washington.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:24:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5b6695fc-2d94-4481-81dd-48c0e8b58385.mp3" type="audio/mpeg" length="23351379"/>
    </item>
    <item>
      <title>Tuesday, July 18, 2017</title>
      <description>
        <![CDATA[<p>On Monday night, two more Republican senators came out against the health care bill. Is that the fatal blow? Guests: Carl Hulse, who covers Congress for The Times; Maggie Haberman, who traveled with President Trump to France last week. For more information on today’s episode, visit http://nyti.ms/2uC0Zhh.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, July 18, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On Monday night, two more Republican senators came out against the health care bill. Is that the fatal blow? Guests: Carl Hulse, who covers Congress for The Times; Maggie Haberman, who traveled with President Trump to France last week. For more information on today’s episode, visit http://nyti.ms/2uC0Zhh. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>On Monday night, two more Republican senators came out against the health care bill. Is that the fatal blow? Guests: Carl Hulse, who covers Congress for The Times; Maggie Haberman, who traveled with President Trump to France last week. For more information on today’s episode, visit http://nyti.ms/2uC0Zhh.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PoH138km_XXl-kOyfHvzjARsbm0CfvglCR0NxZqQwbM</guid>
      <pubDate>Tue, 18 Jul 2017 09:46:40 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/18/podcasts/the-daily/congress-health-care.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:44</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/67e86290-801a-4469-8a2f-3522b4577c42.mp3" type="audio/mpeg" length="16065933"/>
    </item>
    <item>
      <title>Monday, July 17, 2017</title>
      <description>
        <![CDATA[<p>Early in his presidency, Donald J. Trump called for a federal commission to investigate an issue that was personal for him: voter fraud in the 2016 election. The de facto leader of that commission is Kris Kobach, the Kansas secretary of state and a leading advocate of restrictive voting laws. Here’s what you need to know about Mr. Kobach, his beliefs and what he has accomplished in Kansas. Guests: Michael Wines, a Times correspondent who has written about the president’s commission; Elaine Bowers, a Republican state senator in Kansas. For more information on today’s episode, visit http://nyti.ms/2gMxzr0.&nbsp;</p>]]>
      </description>
      <itunes:title>Monday, July 17, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Early in his presidency, Donald J. Trump called for a federal commission to investigate an issue that was personal for him: voter fraud in the 2016 election. The de facto leader of that commission is Kris Kobach, the Kansas secretary of state and a leading advocate of restrictive voting laws. Here’s what you need to know about Mr. Kobach, his beliefs and what he has accomplished in Kansas. Guests: Michael Wines, a Times correspondent who has written about the president’s commission; Elaine Bowers, a Republican state senator in Kansas. For more information on today’s episode, visit http://nyti.ms/2gMxzr0. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Early in his presidency, Donald J. Trump called for a federal commission to investigate an issue that was personal for him: voter fraud in the 2016 election. The de facto leader of that commission is Kris Kobach, the Kansas secretary of state and a leading advocate of restrictive voting laws. Here’s what you need to know about Mr. Kobach, his beliefs and what he has accomplished in Kansas. Guests: Michael Wines, a Times correspondent who has written about the president’s commission; Elaine Bowers, a Republican state senator in Kansas. For more information on today’s episode, visit http://nyti.ms/2gMxzr0.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/rJYJx7TQVJH6d-CuKRBW36aegp-1SWTA576TLB4v_mM</guid>
      <pubDate>Mon, 17 Jul 2017 10:28:38 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/17/podcasts/the-daily/kris-kobach-voter-fraud-trump.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/692916ab-559d-4b98-8c63-cc95c0afcfb5.mp3" type="audio/mpeg" length="19797472"/>
    </item>
    <item>
      <title>Friday, July 14, 2017</title>
      <description>
        <![CDATA[<p>Donald Trump Jr. sends an email. Hours later, his father gives a speech. Conspiracy or coincidence? We unpack the timeline of events in June 2016. Plus: A group of international scientists plans to send messages into space to see if we’re alone. But what if we’re not? Guests: Peter Baker, our chief White House correspondent; Douglas Vakoch, the leader of a new group that will beam messages into space; Steven Johnson, who wrote about Mr. Vakoch’s efforts for The New York Times Magazine. For more information on today’s episode, visit http://nyti.ms/2uFcX9q.&nbsp;</p>]]>
      </description>
      <itunes:title>Friday, July 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Donald Trump Jr. sends an email. Hours later, his father gives a speech. Conspiracy or coincidence? We unpack the timeline of events in June 2016. Plus: A group of international scientists plans to send messages into space to see if we’re alone. But what if we’re not? Guests: Peter Baker, our chief White House correspondent; Douglas Vakoch, the leader of a new group that will beam messages into space; Steven Johnson, who wrote about Mr. Vakoch’s efforts for The New York Times Magazine. For more information on today’s episode, visit http://nyti.ms/2uFcX9q. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>Donald Trump Jr. sends an email. Hours later, his father gives a speech. Conspiracy or coincidence? We unpack the timeline of events in June 2016. Plus: A group of international scientists plans to send messages into space to see if we’re alone. But what if we’re not? Guests: Peter Baker, our chief White House correspondent; Douglas Vakoch, the leader of a new group that will beam messages into space; Steven Johnson, who wrote about Mr. Vakoch’s efforts for The New York Times Magazine. For more information on today’s episode, visit http://nyti.ms/2uFcX9q.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bCbTt66ICkz-YaJMNfG7LA0UGIpyWh1Aff8WZX-aGfg</guid>
      <pubDate>Fri, 14 Jul 2017 09:34:37 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/14/podcasts/the-daily/timeline-trump-russia-june-7-2016.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/1ddfbe62-d6bf-46b6-ac5f-d70bf03a3745.mp3" type="audio/mpeg" length="21605564"/>
    </item>
    <item>
      <title>Thursday, July 13, 2017</title>
      <description>
        <![CDATA[<p>It was the secret force behind stories about John Edwards’s $400 haircut and Mitt Romney’s decision to put the family dog on the roof of his car. Donald Trump Jr. says it motivated him to meet with a Russian lawyer. We discuss the dark art of opposition research. Guests: Jonathan Martin, a national political correspondent for The Times; Ben LaBolt, the national press secretary for President Barack Obama’s re-election campaign. For more information on today’s episode, visit http://nyti.ms/2vF4L6w.</p>]]>
      </description>
      <itunes:title>Thursday, July 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>It was the secret force behind stories about John Edwards’s $400 haircut and Mitt Romney’s decision to put the family dog on the roof of his car. Donald Trump Jr. says it motivated him to meet with a Russian lawyer. We discuss the dark art of opposition research. Guests: Jonathan Martin, a national political correspondent for The Times; Ben LaBolt, the national press secretary for President Barack Obama’s re-election campaign. For more information on today’s episode, visit http://nyti.ms/2vF4L6w.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>It was the secret force behind stories about John Edwards’s $400 haircut and Mitt Romney’s decision to put the family dog on the roof of his car. Donald Trump Jr. says it motivated him to meet with a Russian lawyer. We discuss the dark art of opposition research. Guests: Jonathan Martin, a national political correspondent for The Times; Ben LaBolt, the national press secretary for President Barack Obama’s re-election campaign. For more information on today’s episode, visit http://nyti.ms/2vF4L6w.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/YhnQiaYrHpHPKCGBh3Cihi3pM6MLaMWhNRPa1Y9f2PE</guid>
      <pubDate>Thu, 13 Jul 2017 09:42:35 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/13/podcasts/the-daily/oppo-donald-trump-jr-russia.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:15:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2cf59c9a-8559-4a52-a406-532433addff1.mp3" type="audio/mpeg" length="15006824"/>
    </item>
    <item>
      <title>Wednesday, July 12, 2017</title>
      <description>
        <![CDATA[<p>The Times obtains Donald Trump Jr.’s emails about an offer of help from the Russian government. “I love it,” he wrote. The story behind the story, and what we mean when we talk about “collusion.” And the scene from the Iraqi city of Mosul: What Islamic State militants left behind. Guests: Matt Apuzzo, one of the reporters who broke the story about Donald Trump Jr.’s emails; Rukmini Callimachi, who covers the Islamic State, and Andy Mills, a producer with her in Mosul. For more information on today’s episode, visit http://nyti.ms/2sPxzbb.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, July 12, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Times obtains Donald Trump Jr.’s emails about an offer of help from the Russian government. “I love it,” he wrote. The story behind the story, and what we mean when we talk about “collusion.” And the scene from the Iraqi city of Mosul: What Islamic State militants left behind. Guests: Matt Apuzzo, one of the reporters who broke the story about Donald Trump Jr.’s emails; Rukmini Callimachi, who covers the Islamic State, and Andy Mills, a producer with her in Mosul. For more information on today’s episode, visit http://nyti.ms/2sPxzbb. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Times obtains Donald Trump Jr.’s emails about an offer of help from the Russian government. “I love it,” he wrote. The story behind the story, and what we mean when we talk about “collusion.” And the scene from the Iraqi city of Mosul: What Islamic State militants left behind. Guests: Matt Apuzzo, one of the reporters who broke the story about Donald Trump Jr.’s emails; Rukmini Callimachi, who covers the Islamic State, and Andy Mills, a producer with her in Mosul. For more information on today’s episode, visit http://nyti.ms/2sPxzbb.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3wousGknRFIwl_11tB5aqe_Jxl-mpWqwJdQbx_sTV3E</guid>
      <pubDate>Wed, 12 Jul 2017 09:44:25 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/12/podcasts/the-daily/the-daily-donald-trump-jrs-deadline.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/893e813d-04f9-4762-95ac-b324827b280f.mp3" type="audio/mpeg" length="22383804"/>
    </item>
    <item>
      <title>Tuesday, July 11, 2017</title>
      <description>
        <![CDATA[<p>A music producer. A lawyer from Moscow. The Miss Universe pageant. And now: the promise of help from the Russian government. We connect the dots on Donald Trump Jr.’s communications last summer. And what happens when thousands of rebel fighters try to re-enter society as civilians? Guests: Mark Mazzetti, our Washington investigations editor; Nicholas Casey, a correspondent based in South America. For more information on today’s episode, visit http://nyti.ms/2uddQ9d.&nbsp;</p>]]>
      </description>
      <itunes:title>Tuesday, July 11, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A music producer. A lawyer from Moscow. The Miss Universe pageant. And now: the promise of help from the Russian government. We connect the dots on Donald Trump Jr.’s communications last summer. And what happens when thousands of rebel fighters try to re-enter society as civilians? Guests: Mark Mazzetti, our Washington investigations editor; Nicholas Casey, a correspondent based in South America. For more information on today’s episode, visit http://nyti.ms/2uddQ9d. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>A music producer. A lawyer from Moscow. The Miss Universe pageant. And now: the promise of help from the Russian government. We connect the dots on Donald Trump Jr.’s communications last summer. And what happens when thousands of rebel fighters try to re-enter society as civilians? Guests: Mark Mazzetti, our Washington investigations editor; Nicholas Casey, a correspondent based in South America. For more information on today’s episode, visit http://nyti.ms/2uddQ9d.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/gwDPfzthS_RyI0bJ6QOJJkJJuUXMPSpYr8EgnEmm6TQ</guid>
      <pubDate>Tue, 11 Jul 2017 09:54:51 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/11/podcasts/the-daily/donald-trump-jr-email-russian-lawyer-meeting.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:14</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cc8bad5c-518b-4a10-a312-fcbfc01cf67c.mp3" type="audio/mpeg" length="21346847"/>
    </item>
    <item>
      <title>Monday, July 10, 2017</title>
      <description>
        <![CDATA[<p>What we know about a newly revealed meeting between Donald Trump Jr. and a Russian lawyer. Plus, the view from the ground in the Iraqi city of Mosul. Guests: Adam Goldman, one of the reporters behind the revelations about the meeting at Trump Tower in June 2016; Rukmini Callimachi, who is in Mosul reporting on the fall of the Islamic State militant group there. For more information on today’s episode, visit http://nyti.ms/2uHO4r6.</p>]]>
      </description>
      <itunes:title>Monday, July 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What we know about a newly revealed meeting between Donald Trump Jr. and a Russian lawyer. Plus, the view from the ground in the Iraqi city of Mosul. Guests: Adam Goldman, one of the reporters behind the revelations about the meeting at Trump Tower in June 2016; Rukmini Callimachi, who is in Mosul reporting on the fall of the Islamic State militant group there. For more information on today’s episode, visit http://nyti.ms/2uHO4r6.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>What we know about a newly revealed meeting between Donald Trump Jr. and a Russian lawyer. Plus, the view from the ground in the Iraqi city of Mosul. Guests: Adam Goldman, one of the reporters behind the revelations about the meeting at Trump Tower in June 2016; Rukmini Callimachi, who is in Mosul reporting on the fall of the Islamic State militant group there. For more information on today’s episode, visit http://nyti.ms/2uHO4r6.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Cuzz2aZ71qa0nMgm8ReWisKi3TC8XFaQVF9tVy0sw1M</guid>
      <pubDate>Mon, 10 Jul 2017 09:38:46 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/10/podcasts/the-daily/the-daily-donald-trump-jrs-russia-meeting.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/23dc2002-5011-45e6-9b49-7efec3dc63e4.mp3" type="audio/mpeg" length="18319986"/>
    </item>
    <item>
      <title>Friday, July 7, 2017</title>
      <description>
        <![CDATA[<p>Donald J. Trump’s life and career have been defined by his legal battles. But what will they mean for his presidency? Guest: Jonathan Mahler, staff writer for The New York Times Magazine; Jay Goldberg, Mr. Trump’s exclusive litigator from 1990 to 2005. For more information on today’s episode, visit http://nyti.ms/2tHoXq1.</p>]]>
      </description>
      <itunes:title>Friday, July 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Donald J. Trump’s life and career have been defined by his legal battles. But what will they mean for his presidency? Guest: Jonathan Mahler, staff writer for The New York Times Magazine; Jay Goldberg, Mr. Trump’s exclusive litigator from 1990 to 2005. For more information on today’s episode, visit http://nyti.ms/2tHoXq1.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Donald J. Trump’s life and career have been defined by his legal battles. But what will they mean for his presidency? Guest: Jonathan Mahler, staff writer for The New York Times Magazine; Jay Goldberg, Mr. Trump’s exclusive litigator from 1990 to 2005. For more information on today’s episode, visit http://nyti.ms/2tHoXq1.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ZW7en6CHsG7XtFZDZxCesDuSxScfgn39h8wv0ohtOo8</guid>
      <pubDate>Fri, 07 Jul 2017 10:02:48 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/07/podcasts/the-daily/donald-trump-lawyers-lawsuits.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c34ee6e7-115e-4bcf-adbb-1750174babbc.mp3" type="audio/mpeg" length="21098161"/>
    </item>
    <item>
      <title>Thursday, July 6, 2017</title>
      <description>
        <![CDATA[<p>North Korea’s test of a missile that could potentially strike Alaska has crossed a line, and underscores a dilemma for President Trump and his national security team. Also, how the battle over health care is playing out in Kentucky. Guests: David E. Sanger, chief Washington correspondent for The New York Times; Sheryl Gay Stolberg, domestic affairs correspondent; Kathy Collins, a Kentucky resident who relies on Medicaid. For more information on today’s episode, visit http://nyti.ms/2ssEaII.</p>]]>
      </description>
      <itunes:title>Thursday, July 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>North Korea’s test of a missile that could potentially strike Alaska has crossed a line, and underscores a dilemma for President Trump and his national security team. Also, how the battle over health care is playing out in Kentucky. Guests: David E. Sanger, chief Washington correspondent for The New York Times; Sheryl Gay Stolberg, domestic affairs correspondent; Kathy Collins, a Kentucky resident who relies on Medicaid. For more information on today’s episode, visit http://nyti.ms/2ssEaII.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>North Korea’s test of a missile that could potentially strike Alaska has crossed a line, and underscores a dilemma for President Trump and his national security team. Also, how the battle over health care is playing out in Kentucky. Guests: David E. Sanger, chief Washington correspondent for The New York Times; Sheryl Gay Stolberg, domestic affairs correspondent; Kathy Collins, a Kentucky resident who relies on Medicaid. For more information on today’s episode, visit http://nyti.ms/2ssEaII.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QdVtRS5Q4wi--AuiG0poECrCnETi3vdUj-qk22RnqHA</guid>
      <pubDate>Thu, 06 Jul 2017 09:13:37 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/06/podcasts/the-daily/trump-north-korea-medicaid-kentucky.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/77c819d5-4efa-4771-b0c5-ec82cd6338ab.mp3" type="audio/mpeg" length="19521619"/>
    </item>
    <item>
      <title>Wednesday, July 5, 2017</title>
      <description>
        <![CDATA[<p>When Medicaid was created in 1965, it was barely discussed. But now it’s so big — and so popular — that a proposal to roll it back could sink the Republican plan to repeal the Affordable Care Act. Guests: Kate Zernike, a Times reporter. For more information on today’s episode, visit http://nyti.ms/2tdjJ1C.</p>]]>
      </description>
      <itunes:title>Wednesday, July 5, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>When Medicaid was created in 1965, it was barely discussed. But now it’s so big — and so popular — that a proposal to roll it back could sink the Republican plan to repeal the Affordable Care Act. Guests: Kate Zernike, a Times reporter. For more information on today’s episode, visit http://nyti.ms/2tdjJ1C.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>When Medicaid was created in 1965, it was barely discussed. But now it’s so big — and so popular — that a proposal to roll it back could sink the Republican plan to repeal the Affordable Care Act. Guests: Kate Zernike, a Times reporter. For more information on today’s episode, visit http://nyti.ms/2tdjJ1C.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/J-Ce7fNBuUAJIyZ1Wc3dvZad86Lxc_EuQbsAHGebskI</guid>
      <pubDate>Wed, 05 Jul 2017 09:20:10 -0000</pubDate>
      <link>https://www.nytimes.com/2017/07/05/podcasts/the-daily/medicaid-republican-party-obamacare.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:15:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/559f8751-ac5b-47c5-a11b-6df319e0b8f5.mp3" type="audio/mpeg" length="14703386"/>
    </item>
    <item>
      <title>Friday, June 30, 2017</title>
      <description>
        <![CDATA[<p>As a limited travel ban goes into effect, the Trump administration has defined what constitutes a “bona fide” relationship: who’s close family, and who’s not, for visitors from six predominantly Muslim nations. Guests: Michael D. Shear, White House correspondent for The New York Times, and Suzanne Ramazani, who is planning a wedding and worries that her Iranian relatives won’t be able to attend. For more information on today’s episode, visit http://nyti.ms/2udDieF.</p>]]>
      </description>
      <itunes:title>Friday, June 30, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As a limited travel ban goes into effect, the Trump administration has defined what constitutes a “bona fide” relationship: who’s close family, and who’s not, for visitors from six predominantly Muslim nations. Guests: Michael D. Shear, White House correspondent for The New York Times, and Suzanne Ramazani, who is planning a wedding and worries that her Iranian relatives won’t be able to attend. For more information on today’s episode, visit http://nyti.ms/2udDieF.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>As a limited travel ban goes into effect, the Trump administration has defined what constitutes a “bona fide” relationship: who’s close family, and who’s not, for visitors from six predominantly Muslim nations. Guests: Michael D. Shear, White House correspondent for The New York Times, and Suzanne Ramazani, who is planning a wedding and worries that her Iranian relatives won’t be able to attend. For more information on today’s episode, visit http://nyti.ms/2udDieF.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/PTDwWvN4Wx7efgBZiRtVlb3BN_Y4M6jq1JmiCwWis4E</guid>
      <pubDate>Fri, 30 Jun 2017 09:38:05 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/30/podcasts/the-daily/the-daily-bona-fide-trump-travel-ban.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9ea8f2e0-2847-4ed8-a7e0-a50450970021.mp3" type="audio/mpeg" length="18654772"/>
    </item>
    <item>
      <title>Thursday, June 29, 2017</title>
      <description>
        <![CDATA[<p>The United States says its goal in Syria is to help its allies defeat the Islamic State, not to fight the government. But it’s getting harder stay out of the civil war. Guests: Helene Cooper, the Pentagon correspondent for The New York Times; Jennifer Steinhauer, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2tdgVBP.</p>]]>
      </description>
      <itunes:title>Thursday, June 29, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States says its goal in Syria is to help its allies defeat the Islamic State, not to fight the government. But it’s getting harder stay out of the civil war. Guests: Helene Cooper, the Pentagon correspondent for The New York Times; Jennifer Steinhauer, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2tdgVBP.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The United States says its goal in Syria is to help its allies defeat the Islamic State, not to fight the government. But it’s getting harder stay out of the civil war. Guests: Helene Cooper, the Pentagon correspondent for The New York Times; Jennifer Steinhauer, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2tdgVBP.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7DQ4_KOzRufBe8AKetgZQWFfpRuLQOVfLo7tIOg8NJI</guid>
      <pubDate>Thu, 29 Jun 2017 09:42:07 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/29/podcasts/the-daily/the-daily-is-the-us-at-war-with-syria.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2c5b2af5-a0c6-4954-90be-d717f6ad6127.mp3" type="audio/mpeg" length="20055353"/>
    </item>
    <item>
      <title>Wednesday, June 28, 2017</title>
      <description>
        <![CDATA[<p>The Senate vote on the health care bill is off — for now. We focus on Maine, where Senator Susan Collins has been a vocal opponent of the proposal. And what happens to family members who witness police shootings? Guests: Jennifer Steinhauer, who covers Congress; Lee Umphrey, the chief executive of a health center in Maine; Yamiche Alcindor, who covered the shooting of Philando Castile. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2uo8uVi.&nbsp;</p>]]>
      </description>
      <itunes:title>Wednesday, June 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Senate vote on the health care bill is off — for now. We focus on Maine, where Senator Susan Collins has been a vocal opponent of the proposal. And what happens to family members who witness police shootings? Guests: Jennifer Steinhauer, who covers Congress; Lee Umphrey, the chief executive of a health center in Maine; Yamiche Alcindor, who covered the shooting of Philando Castile. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2uo8uVi. </itunes:summary>
      <content:encoded>
        <![CDATA[<p>The Senate vote on the health care bill is off — for now. We focus on Maine, where Senator Susan Collins has been a vocal opponent of the proposal. And what happens to family members who witness police shootings? Guests: Jennifer Steinhauer, who covers Congress; Lee Umphrey, the chief executive of a health center in Maine; Yamiche Alcindor, who covered the shooting of Philando Castile. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2uo8uVi.&nbsp;</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g-S6MRKofN2bpqMKJoq-FtOYlUtb6ewJdMSwzQoeIe8</guid>
      <pubDate>Wed, 28 Jun 2017 09:49:46 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/28/podcasts/the-daily/the-daily-what-the-health-bill-means-for-maine.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/27b3f5e2-db50-4b3c-8b90-3b32efa2dc88.mp3" type="audio/mpeg" length="18758426"/>
    </item>
    <item>
      <title>Tuesday, June 27, 2017</title>
      <description>
        <![CDATA[<p>On the last day of its term, the Supreme Court said it would take the case about the legality of President Trump’s travel ban. We discuss the path of the travel ban through the lower courts, the key role of two justices in determining the outcome and what this means for refugees. Guests: Adam Liptak, who covers the Supreme Court; Nicholas Kulish, who covers immigration. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2tMr8XN.</p>]]>
      </description>
      <itunes:title>Tuesday, June 27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On the last day of its term, the Supreme Court said it would take the case about the legality of President Trump’s travel ban. We discuss the path of the travel ban through the lower courts, the key role of two justices in determining the outcome and what this means for refugees. Guests: Adam Liptak, who covers the Supreme Court; Nicholas Kulish, who covers immigration. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2tMr8XN.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>On the last day of its term, the Supreme Court said it would take the case about the legality of President Trump’s travel ban. We discuss the path of the travel ban through the lower courts, the key role of two justices in determining the outcome and what this means for refugees. Guests: Adam Liptak, who covers the Supreme Court; Nicholas Kulish, who covers immigration. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2tMr8XN.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CbJeyAfu6KbD-33oXq4mGB8M480YYvHSyLwuWfELlUw</guid>
      <pubDate>Tue, 27 Jun 2017 09:52:05 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/27/podcasts/the-daily/the-daily-president-trumps-travel-ban-goes-to-the-top.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/50ca29cb-9a1c-4a46-b5ac-979b1b6b4d13.mp3" type="audio/mpeg" length="16748042"/>
    </item>
    <item>
      <title>Monday, June 26, 2017</title>
      <description>
        <![CDATA[<p>President Trump’s promise to repeal Obamacare could come down to one issue: abortion. And how the families of people killed by undocumented immigrants have become an emotional cornerstone of another signature issue for the Trump administration.&nbsp;Guests: Sheryl Gay Stolberg, a White House correspondent for The Times; Vivian Yee, who covers immigration for The Times; and Steve Ronnebeck, whose 21-year-old son, Grant, was shot and killed by an illegal immigrant. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2u80Xxf.</p>]]>
      </description>
      <itunes:title>Monday, June 26, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s promise to repeal Obamacare could come down to one issue: abortion. And how the families of people killed by undocumented immigrants have become an emotional cornerstone of another signature issue for the Trump administration. Guests: Sheryl Gay Stolberg, a White House correspondent for The Times; Vivian Yee, who covers immigration for The Times; and Steve Ronnebeck, whose 21-year-old son, Grant, was shot and killed by an illegal immigrant. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2u80Xxf.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>President Trump’s promise to repeal Obamacare could come down to one issue: abortion. And how the families of people killed by undocumented immigrants have become an emotional cornerstone of another signature issue for the Trump administration.&nbsp;Guests: Sheryl Gay Stolberg, a White House correspondent for The Times; Vivian Yee, who covers immigration for The Times; and Steve Ronnebeck, whose 21-year-old son, Grant, was shot and killed by an illegal immigrant. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2u80Xxf.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sEFeIMlWeiSVrBaAhW9zyt805RIfVmXAgvXZdTfqL4s</guid>
      <pubDate>Mon, 26 Jun 2017 09:43:52 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/26/podcasts/the-daily/obamacare-planned-parenthood.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3cfea486-9169-4a25-a0cd-10d267a9f237.mp3" type="audio/mpeg" length="18887157"/>
    </item>
    <item>
      <title>Friday, June 23, 2017</title>
      <description>
        <![CDATA[<p>The secret is out. The Senate has unveiled its health care bill. And after all the waiting, what was promised to be a drastic revamp of the House bill looks a lot like the House bill. Plus: The second in our two-part series on the opioid crisis. Guests: Jennifer Steinhauer, who covers Congress; Nathaniel Popper, a reporter for The Times; Joe Pinjuh, chief of the organized crime task force in the United States attorney’s office in Cleveland; and Josh Lytle, a recovering fentanyl addict who works in East Liverpool, Ohio. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2vbkHgj.</p>]]>
      </description>
      <itunes:title>Friday, June 23, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The secret is out. The Senate has unveiled its health care bill. And after all the waiting, what was promised to be a drastic revamp of the House bill looks a lot like the House bill. Plus: The second in our two-part series on the opioid crisis. Guests: Jennifer Steinhauer, who covers Congress; Nathaniel Popper, a reporter for The Times; Joe Pinjuh, chief of the organized crime task force in the United States attorney’s office in Cleveland; and Josh Lytle, a recovering fentanyl addict who works in East Liverpool, Ohio. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2vbkHgj.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>The secret is out. The Senate has unveiled its health care bill. And after all the waiting, what was promised to be a drastic revamp of the House bill looks a lot like the House bill. Plus: The second in our two-part series on the opioid crisis. Guests: Jennifer Steinhauer, who covers Congress; Nathaniel Popper, a reporter for The Times; Joe Pinjuh, chief of the organized crime task force in the United States attorney’s office in Cleveland; and Josh Lytle, a recovering fentanyl addict who works in East Liverpool, Ohio. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2vbkHgj.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/TDy81sn7h3s_nQ5GL50anGu6gTQDT9XG33ngMoZ26LQ</guid>
      <pubDate>Fri, 23 Jun 2017 09:41:09 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/23/podcasts/the-daily/the-daily-the-senates-health-care-bill-unveiled.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ecbf317d-e382-4090-9cfc-03a600e81cc0.mp3" type="audio/mpeg" length="22270119"/>
    </item>
    <item>
      <title>Thursday, June 22, 2017</title>
      <description>
        <![CDATA[<p>We replay the dramatic hours at a hotel room in Chicago leading up to Travis Kalanick’s resignation as the chief executive of Uber. Plus: Part I of a two-part series on the opioid crisis ravaging American cities, which has escalated to a whole new level with the spread of a drug 50 times more powerful than heroin. Guests: Mike Isaac, who has been writing about Mr. Kalanick for the last three years; and Nathaniel Popper, who covers finance and technology for The Times. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2sFqeM1.</p>]]>
      </description>
      <itunes:title>Thursday, June 22, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>We replay the dramatic hours at a hotel room in Chicago leading up to Travis Kalanick’s resignation as the chief executive of Uber. Plus: Part I of a two-part series on the opioid crisis ravaging American cities, which has escalated to a whole new level with the spread of a drug 50 times more powerful than heroin. Guests: Mike Isaac, who has been writing about Mr. Kalanick for the last three years; and Nathaniel Popper, who covers finance and technology for The Times. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2sFqeM1.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>We replay the dramatic hours at a hotel room in Chicago leading up to Travis Kalanick’s resignation as the chief executive of Uber. Plus: Part I of a two-part series on the opioid crisis ravaging American cities, which has escalated to a whole new level with the spread of a drug 50 times more powerful than heroin. Guests: Mike Isaac, who has been writing about Mr. Kalanick for the last three years; and Nathaniel Popper, who covers finance and technology for The Times. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2sFqeM1.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Syy9Jb73WPdR0dbGw0pCRqr1s-5APFcfsvF6TSPCWTw</guid>
      <pubDate>Thu, 22 Jun 2017 09:39:02 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/22/podcasts/the-daily/the-daily-travis-kalanicks-final-hours-with-uber.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/39460525-5ec0-48b1-8e68-af54089e8fd8.mp3" type="audio/mpeg" length="18131905"/>
    </item>
    <item>
      <title>Wednesday, June 21, 2017</title>
      <description>
        <![CDATA[Former prisoners subjected to “enhanced interrogation” techniques developed after Sept. 11 have filed a lawsuit — not against the C.I.A., which is protected, but against two psychologists. We discuss what has been revealed by the depositions. Guest: Sheri Fink, who has written about the lawsuit. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2sYeas8. ]]>
      </description>
      <itunes:title>Wednesday, June 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Former prisoners subjected to “enhanced interrogation” techniques developed after Sept. 11 have filed a lawsuit — not against the C.I.A., which is protected, but against two psychologists. We discuss what has been revealed by the depositions. Guest: Sheri Fink, who has written about the lawsuit. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2sYeas8. </itunes:summary>
      <content:encoded>
        <![CDATA[Former prisoners subjected to “enhanced interrogation” techniques developed after Sept. 11 have filed a lawsuit — not against the C.I.A., which is protected, but against two psychologists. We discuss what has been revealed by the depositions. Guest: Sheri Fink, who has written about the lawsuit. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2sYeas8. ]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NLEw_vapq3GDUxGwVZy3dV7F5FIoM-FV-0W5YkUNQqQ</guid>
      <pubDate>Wed, 21 Jun 2017 09:53:53 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/21/podcasts/the-daily/the-daily-interrogation-on-trial.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6a2073fc-e7fd-4e88-aa38-4687e91d457a.mp3" type="audio/mpeg" length="22021851"/>
    </item>
    <item>
      <title>Tuesday, June 20, 2017</title>
      <description>
        <![CDATA[The battle for Mosul is entering its final and most challenging phase, with Iraqi forces there engaged in the most intensive urban warfare since World War II. The Times embeds with one Iraqi unit. Guests: Ben C. Solomon, a video journalist who has been following Iraqi fighters in Mosul; Adam Liptak, who discusses the Supreme Court’s decision to consider whether partisan gerrymandering violates the Constitution. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2twhjwL. ]]>
      </description>
      <itunes:title>Tuesday, June 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The battle for Mosul is entering its final and most challenging phase, with Iraqi forces there engaged in the most intensive urban warfare since World War II. The Times embeds with one Iraqi unit. Guests: Ben C. Solomon, a video journalist who has been following Iraqi fighters in Mosul; Adam Liptak, who discusses the Supreme Court’s decision to consider whether partisan gerrymandering violates the Constitution. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2twhjwL. </itunes:summary>
      <content:encoded>
        <![CDATA[The battle for Mosul is entering its final and most challenging phase, with Iraqi forces there engaged in the most intensive urban warfare since World War II. The Times embeds with one Iraqi unit. Guests: Ben C. Solomon, a video journalist who has been following Iraqi fighters in Mosul; Adam Liptak, who discusses the Supreme Court’s decision to consider whether partisan gerrymandering violates the Constitution. Caitlin Dickerson is our host; Michael Barbaro is on vacation. For more information on today’s episode, visit http://nyti.ms/2twhjwL. ]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/f6fG06Do_Pp_NDvNY_htoOOa8uxJzcm998YjX5Rpsao</guid>
      <pubDate>Tue, 20 Jun 2017 09:43:53 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/20/podcasts/the-daily/the-daily-a-major-in-mosul.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/88b3756b-99b0-42e8-83bd-1b176d40594d.mp3" type="audio/mpeg" length="20231314"/>
    </item>
    <item>
      <title>Monday, June 19, 2017</title>
      <description>
        <![CDATA[Why Senate leaders are crafting the most important legislation of the Trump presidency in secret. Guest: Carl Hulse, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2rIs7dC.]]>
      </description>
      <itunes:title>Monday, June 19, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Why Senate leaders are crafting the most important legislation of the Trump presidency in secret. Guest: Carl Hulse, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2rIs7dC.</itunes:summary>
      <content:encoded>
        <![CDATA[Why Senate leaders are crafting the most important legislation of the Trump presidency in secret. Guest: Carl Hulse, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2rIs7dC.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/u9kA9YD_VWpbfwpwV_JCnFPae-hrkj77hfmxkW8kKG0</guid>
      <pubDate>Mon, 19 Jun 2017 09:39:54 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/19/podcasts/the-daily/the-daily-the-secret-health-care-overhaul.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:01</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e78700c2-39d9-450c-a797-57643f2ef058.mp3" type="audio/mpeg" length="17306017"/>
    </item>
    <item>
      <title>Friday, June 16, 2017</title>
      <description>
        <![CDATA[Two closely watched trials are heading toward a verdict. We discuss the complexities of both cases. Guests: Katharine Q. Seelye, who has been covering a manslaughter case in Taunton, Mass., involving texts between two teenagers; Lili Bernard, one of Bill Cosby’s accusers who has been attending his now-deadlocked trial in Norristown, Pa. For more information on today’s episode, visit http://nyti.ms/2rFwYIE. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Friday, June 16, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Two closely watched trials are heading toward a verdict. We discuss the complexities of both cases. Guests: Katharine Q. Seelye, who has been covering a manslaughter case in Taunton, Mass., involving texts between two teenagers; Lili Bernard, one of Bill Cosby’s accusers who has been attending his now-deadlocked trial in Norristown, Pa. For more information on today’s episode, visit http://nyti.ms/2rFwYIE. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[Two closely watched trials are heading toward a verdict. We discuss the complexities of both cases. Guests: Katharine Q. Seelye, who has been covering a manslaughter case in Taunton, Mass., involving texts between two teenagers; Lili Bernard, one of Bill Cosby’s accusers who has been attending his now-deadlocked trial in Norristown, Pa. For more information on today’s episode, visit http://nyti.ms/2rFwYIE. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/em1zd_WRCGZ0W0FQaopA0CqqmajkW7bmFnuEMLWKQ98</guid>
      <pubDate>Fri, 16 Jun 2017 09:51:08 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/16/podcasts/the-daily/michelle-carter-bill-cosby-trials.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4d68c9a9-2399-4b55-8705-35be62c76496.mp3" type="audio/mpeg" length="20660140"/>
    </item>
    <item>
      <title>Thursday, June 15, 2017</title>
      <description>
        <![CDATA[Moments before he opened fire, the gunman asked who was on the baseball field: Democrats or Republicans. And what happens when a 400-year-old play about one of history’s most infamous acts of political violence is adapted for today? We discuss political violence at a time of extreme partisanship. Guests: Michael Shear, who covered Wednesday’s shooting in Alexandria, Va.; Michael Cooper, an arts reporter. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Thursday, June 15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Moments before he opened fire, the gunman asked who was on the baseball field: Democrats or Republicans. And what happens when a 400-year-old play about one of history’s most infamous acts of political violence is adapted for today? We discuss political violence at a time of extreme partisanship. Guests: Michael Shear, who covered Wednesday’s shooting in Alexandria, Va.; Michael Cooper, an arts reporter. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[Moments before he opened fire, the gunman asked who was on the baseball field: Democrats or Republicans. And what happens when a 400-year-old play about one of history’s most infamous acts of political violence is adapted for today? We discuss political violence at a time of extreme partisanship. Guests: Michael Shear, who covered Wednesday’s shooting in Alexandria, Va.; Michael Cooper, an arts reporter. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/s-7Qmql1ESebw8cR_f6X12lDAnF9E31bH1BerPeHVTo</guid>
      <pubDate>Thu, 15 Jun 2017 09:48:05 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/15/podcasts/the-daily/the-daily-political-violence-in-a-time-of-partisanship.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/80b39d87-974a-4a89-9b81-e0c3d15b6845.mp3" type="audio/mpeg" length="22342426"/>
    </item>
    <item>
      <title>Wednesday, June 14, 2017</title>
      <description>
        <![CDATA[Attorney General Jeff Sessions took his turn appearing before the Senate Intelligence Committee investigating Russian interference in the 2016 election. We discuss his testimony. Plus: a dispatch from the courthouse in Norristown, Pa., where after more than 16 hours of deliberation over two days, the jurors in the Bill Cosby sexual assault case have still not been able to reach a verdict. Guests: Matt Apuzzo, who has been covering the investigation into possible ties between the Trump campaign and Russia; Graham Bowley, who is covering Mr. Cosby’s trial. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Wednesday, June 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Attorney General Jeff Sessions took his turn appearing before the Senate Intelligence Committee investigating Russian interference in the 2016 election. We discuss his testimony. Plus: a dispatch from the courthouse in Norristown, Pa., where after more than 16 hours of deliberation over two days, the jurors in the Bill Cosby sexual assault case have still not been able to reach a verdict. Guests: Matt Apuzzo, who has been covering the investigation into possible ties between the Trump campaign and Russia; Graham Bowley, who is covering Mr. Cosby’s trial. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[Attorney General Jeff Sessions took his turn appearing before the Senate Intelligence Committee investigating Russian interference in the 2016 election. We discuss his testimony. Plus: a dispatch from the courthouse in Norristown, Pa., where after more than 16 hours of deliberation over two days, the jurors in the Bill Cosby sexual assault case have still not been able to reach a verdict. Guests: Matt Apuzzo, who has been covering the investigation into possible ties between the Trump campaign and Russia; Graham Bowley, who is covering Mr. Cosby’s trial. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MIjCS4En6o1mFPSRMdSxVEB0gw89kLZkRLX8cvE4RfE</guid>
      <pubDate>Wed, 14 Jun 2017 10:05:37 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/14/podcasts/the-daily/jeff-sessions-testimony-bill-cosby-trial.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f3a8cc18-d4b7-4dee-b76e-4cfaae9bf6fc.mp3" type="audio/mpeg" length="21499402"/>
    </item>
    <item>
      <title>Tuesday, June 13, 2017</title>
      <description>
        <![CDATA[Her disclosure of classified documents in 2010 ushered in the age of leaks. Now Chelsea Manning has been freed from prison and talks about why she did it — and everything that followed. Guest: Matt Shaer, a contributing writer for the magazine, who narrates the tapes from his conversation with Ms. Manning, her first in-person, on-the-record interview in almost a decade. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Tuesday, June 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Her disclosure of classified documents in 2010 ushered in the age of leaks. Now Chelsea Manning has been freed from prison and talks about why she did it — and everything that followed. Guest: Matt Shaer, a contributing writer for the magazine, who narrates the tapes from his conversation with Ms. Manning, her first in-person, on-the-record interview in almost a decade. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[Her disclosure of classified documents in 2010 ushered in the age of leaks. Now Chelsea Manning has been freed from prison and talks about why she did it — and everything that followed. Guest: Matt Shaer, a contributing writer for the magazine, who narrates the tapes from his conversation with Ms. Manning, her first in-person, on-the-record interview in almost a decade. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RojGoA-F_AbU4CqMgfSx6COgpxMXUdJc5KwPqh7wwak</guid>
      <pubDate>Tue, 13 Jun 2017 10:03:00 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/13/podcasts/the-daily/the-daily-the-chelsea-manning-interview.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/54cd7734-a8ed-461c-b526-563cb00ea9f6.mp3" type="audio/mpeg" length="24738586"/>
    </item>
    <item>
      <title>Monday, June 12, 2017</title>
      <description>
        <![CDATA[James Comey says he took it as a command. President Trump says he never even said it. We discuss the one word that an obstruction of justice case could turn on: “hope.” Guests: Adam Liptak, who covers the Supreme Court; David E. Sanger, who has been reporting on U.S. cyberattacks. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Monday, June 12, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>James Comey says he took it as a command. President Trump says he never even said it. We discuss the one word that an obstruction of justice case could turn on: “hope.” Guests: Adam Liptak, who covers the Supreme Court; David E. Sanger, who has been reporting on U.S. cyberattacks. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[James Comey says he took it as a command. President Trump says he never even said it. We discuss the one word that an obstruction of justice case could turn on: “hope.” Guests: Adam Liptak, who covers the Supreme Court; David E. Sanger, who has been reporting on U.S. cyberattacks. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/m_n9bzO3LkB8Y2GMqCRVz5zq2uuDwLH8iSOLrFtxHq0</guid>
      <pubDate>Mon, 12 Jun 2017 09:44:24 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/12/podcasts/the-daily/hope-obstruction-of-justice.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5c3564b8-e0e5-4246-af65-6703ea8d4140.mp3" type="audio/mpeg" length="20649273"/>
    </item>
    <item>
      <title>Friday, June 9, 2017</title>
      <description>
        <![CDATA[James Comey’s testimony on Thursday reveals that the leak of a James Comey memo was orchestrated by ... James Comey. We discuss why the former F.B.I. director leaked the memo, and the sequence of events he intentionally set in motion to get it to The Times. Guests: Matt Apuzzo and Michael Schmidt, who cover national security for The Times. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Friday, June 9, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>James Comey’s testimony on Thursday reveals that the leak of a James Comey memo was orchestrated by ... James Comey. We discuss why the former F.B.I. director leaked the memo, and the sequence of events he intentionally set in motion to get it to The Times. Guests: Matt Apuzzo and Michael Schmidt, who cover national security for The Times. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[James Comey’s testimony on Thursday reveals that the leak of a James Comey memo was orchestrated by ... James Comey. We discuss why the former F.B.I. director leaked the memo, and the sequence of events he intentionally set in motion to get it to The Times. Guests: Matt Apuzzo and Michael Schmidt, who cover national security for The Times. For more information on today’s episode, visit nytimes.com/thedaily. For two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qCmtJaqrl9sThuHIq0tZqJYRg2bcNySVuLxbxtyXY-I</guid>
      <pubDate>Fri, 09 Jun 2017 09:42:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:28</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/28f73257-4e3e-4b06-83f7-5d0c5feaf594.mp3" type="audio/mpeg" length="22539702"/>
    </item>
    <item>
      <title>Thursday, June 8, 2017</title>
      <description>
        <![CDATA[James Comey goes before the Senate Intelligence Committee today. We talk through his prepared remarks, and look at what President Trump might have meant when he said “we had that thing you know.” And why would Islamic State militants be targeting Iran? Guests: Michael S. Schmidt, who has broken several stories about encounters between President Trump and Mr. Comey; Thomas Erdbrink, The Times’s Tehran bureau chief. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Thursday, June 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>James Comey goes before the Senate Intelligence Committee today. We talk through his prepared remarks, and look at what President Trump might have meant when he said “we had that thing you know.” And why would Islamic State militants be targeting Iran? Guests: Michael S. Schmidt, who has broken several stories about encounters between President Trump and Mr. Comey; Thomas Erdbrink, The Times’s Tehran bureau chief. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[James Comey goes before the Senate Intelligence Committee today. We talk through his prepared remarks, and look at what President Trump might have meant when he said “we had that thing you know.” And why would Islamic State militants be targeting Iran? Guests: Michael S. Schmidt, who has broken several stories about encounters between President Trump and Mr. Comey; Thomas Erdbrink, The Times’s Tehran bureau chief. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_V89fF610P9wWCd5icn6zTtmGfr3c6BJkLv19R6JbS4</guid>
      <pubDate>Thu, 08 Jun 2017 09:53:24 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/08/podcasts/the-daily/the-daily-james-comey-explains-his-memos.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cda2aa94-3e9e-4435-9ede-62c9e6e74274.mp3" type="audio/mpeg" length="19297175"/>
    </item>
    <item>
      <title>Wednesday, June 7, 2017</title>
      <description>
        <![CDATA[Afghanistan was barely mentioned in last year’s election. But while U.S. attention has turned from the Taliban to the Islamic State, the Taliban are back, stronger than ever, and the government is on the brink of collapse. Guests: Mujib Mashal, our senior correspondent in Afghanistan; Helene Cooper, who covers the Pentagon. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Wednesday, June 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Afghanistan was barely mentioned in last year’s election. But while U.S. attention has turned from the Taliban to the Islamic State, the Taliban are back, stronger than ever, and the government is on the brink of collapse. Guests: Mujib Mashal, our senior correspondent in Afghanistan; Helene Cooper, who covers the Pentagon. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[Afghanistan was barely mentioned in last year’s election. But while U.S. attention has turned from the Taliban to the Islamic State, the Taliban are back, stronger than ever, and the government is on the brink of collapse. Guests: Mujib Mashal, our senior correspondent in Afghanistan; Helene Cooper, who covers the Pentagon. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CU-FWLvmIgJO6yDl-ywUcyxmYcuKLgFb1XdXkLo0_KA</guid>
      <pubDate>Wed, 07 Jun 2017 11:10:33 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/07/podcasts/the-daily/the-daily-the-view-from-kabul.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3015f26b-aeca-43a9-9ab3-32e4e73c99ba.mp3" type="audio/mpeg" length="19153397"/>
    </item>
    <item>
      <title>Tuesday, June 6, 2017</title>
      <description>
        <![CDATA[We go back to 2008, when the Republican candidate for president campaigned on a plan to fight global warming. How, in just nine years, did the G.O.P. go from combating climate change to arguing it doesn’t exist? And several mayors and governors have come forward in recent days to say that their cities and states would meet the Paris commitment, with or without Washington. We talk with one of them. Guests: Carol Davenport, who covers the environment; Jerry Brown, the governor of California. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </description>
      <itunes:title>Tuesday, June 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>We go back to 2008, when the Republican candidate for president campaigned on a plan to fight global warming. How, in just nine years, did the G.O.P. go from combating climate change to arguing it doesn’t exist? And several mayors and governors have come forward in recent days to say that their cities and states would meet the Paris commitment, with or without Washington. We talk with one of them. Guests: Carol Davenport, who covers the environment; Jerry Brown, the governor of California. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.</itunes:summary>
      <content:encoded>
        <![CDATA[We go back to 2008, when the Republican candidate for president campaigned on a plan to fight global warming. How, in just nine years, did the G.O.P. go from combating climate change to arguing it doesn’t exist? And several mayors and governors have come forward in recent days to say that their cities and states would meet the Paris commitment, with or without Washington. We talk with one of them. Guests: Carol Davenport, who covers the environment; Jerry Brown, the governor of California. For more information on today’s episode, visit nytimes.com/thedaily. For the next two weeks, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/D6d26_-5O7b-SUG-9r4VT8A-GhEA9MEZuwkpRvW3XIs</guid>
      <pubDate>Tue, 06 Jun 2017 09:45:08 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/06/podcasts/the-daily/the-daily-jerry-browns-carbon-pledge.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6e7cef5c-48ef-4799-b2a9-5d770df74ac4.mp3" type="audio/mpeg" length="18591242"/>
    </item>
    <item>
      <title>Monday, June 5, 2017</title>
      <description>
        <![CDATA[What we know and don’t know about the attack in London on Saturday; a discussion of the political context; and what role the Islamic State might have played. Plus: a brief history of back channels. Guests: Rukmini Callimachi, who covers the Islamic State for The Times; Katrin Bennhold, a reporter based in London; David E. Sanger, chief Washington correspondent. For more information on today’s episode, visit nytimes.com/thedaily. And as mentioned on today’s show, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up. ]]>
      </description>
      <itunes:title>Monday, June 5, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What we know and don’t know about the attack in London on Saturday; a discussion of the political context; and what role the Islamic State might have played. Plus: a brief history of back channels. Guests: Rukmini Callimachi, who covers the Islamic State for The Times; Katrin Bennhold, a reporter based in London; David E. Sanger, chief Washington correspondent. For more information on today’s episode, visit nytimes.com/thedaily. And as mentioned on today’s show, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up. </itunes:summary>
      <content:encoded>
        <![CDATA[What we know and don’t know about the attack in London on Saturday; a discussion of the political context; and what role the Islamic State might have played. Plus: a brief history of back channels. Guests: Rukmini Callimachi, who covers the Islamic State for The Times; Katrin Bennhold, a reporter based in London; David E. Sanger, chief Washington correspondent. For more information on today’s episode, visit nytimes.com/thedaily. And as mentioned on today’s show, we’re offering listeners a free trial of a New York Times digital subscription. Visit nytimes.com/dailytrial to sign up. ]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/JborxXGSMBdcvXTT3yyUazJF2qYVf9Ormq8EFhJBDDo</guid>
      <pubDate>Mon, 05 Jun 2017 09:39:53 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/05/podcasts/the-daily/theresa-may-enough-is-enough.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e0129f4b-976d-49c4-9105-e88408f76806.mp3" type="audio/mpeg" length="20467879"/>
    </item>
    <item>
      <title>Friday, June 2, 2017</title>
      <description>
        <![CDATA[The president says he’s putting Pittsburgh ahead of Paris, and announced the withdrawal of the United States from the global climate agreement. We discuss the months leading up to that remarkable decision — and what happens next. Guests: Michael D. Shear, a White House reporter; Brad Plumer, who covers the climate. For more information on today’s episode, visit http://nyti.ms/2rMsWBj.]]>
      </description>
      <itunes:title>Friday, June 2, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The president says he’s putting Pittsburgh ahead of Paris, and announced the withdrawal of the United States from the global climate agreement. We discuss the months leading up to that remarkable decision — and what happens next. Guests: Michael D. Shear, a White House reporter; Brad Plumer, who covers the climate. For more information on today’s episode, visit http://nyti.ms/2rMsWBj.</itunes:summary>
      <content:encoded>
        <![CDATA[The president says he’s putting Pittsburgh ahead of Paris, and announced the withdrawal of the United States from the global climate agreement. We discuss the months leading up to that remarkable decision — and what happens next. Guests: Michael D. Shear, a White House reporter; Brad Plumer, who covers the climate. For more information on today’s episode, visit http://nyti.ms/2rMsWBj.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DQ7jHnQDU1GN5Hz-fl_F4hb8NReuiZu2RD1Fz_9-1BI</guid>
      <pubDate>Fri, 02 Jun 2017 09:31:04 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/02/podcasts/the-daily/the-daily-pittsburgh-before-paris.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/06165ee6-068c-44a4-8d38-7fc461705b3a.mp3" type="audio/mpeg" length="22750772"/>
    </item>
    <item>
      <title>Thursday, June 1, 2017</title>
      <description>
        <![CDATA[President Trump is to announce today whether he’ll withdraw the United States from the Paris climate agreement. What would it mean for the biggest carbon polluter in history to abandon the most ambitious effort to fight climate change? Guests: Justin Gillis, who covers the science and policy implications of climate change; Max Fisher and Amanda Taub, who write the Interpreter column. For more information on today’s episode, visit http://nyti.ms/2qIOb7K.]]>
      </description>
      <itunes:title>Thursday, June 1, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump is to announce today whether he’ll withdraw the United States from the Paris climate agreement. What would it mean for the biggest carbon polluter in history to abandon the most ambitious effort to fight climate change? Guests: Justin Gillis, who covers the science and policy implications of climate change; Max Fisher and Amanda Taub, who write the Interpreter column. For more information on today’s episode, visit http://nyti.ms/2qIOb7K.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump is to announce today whether he’ll withdraw the United States from the Paris climate agreement. What would it mean for the biggest carbon polluter in history to abandon the most ambitious effort to fight climate change? Guests: Justin Gillis, who covers the science and policy implications of climate change; Max Fisher and Amanda Taub, who write the Interpreter column. For more information on today’s episode, visit http://nyti.ms/2qIOb7K.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/N6hxOOgiwJu5PGdPYVBHD_bFeqcK8F5-C5r1OC6DqM4</guid>
      <pubDate>Thu, 01 Jun 2017 09:42:33 -0000</pubDate>
      <link>https://www.nytimes.com/2017/06/01/podcasts/the-daily/the-daily-understanding-the-paris-climate-deal.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/037fba81-f89b-45dd-ae22-af59d397766f.mp3" type="audio/mpeg" length="20340819"/>
    </item>
    <item>
      <title>Wednesday, May 31, 2017</title>
      <description>
        <![CDATA[How noncompete clauses — once limited to senior executives — are gaining power over American workers. Plus: The president returns to Washington with family business to attend to. Guests: Conor Dougherty, who covers economics for The Times; Peter Baker, chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2sp8Wlf.]]>
      </description>
      <itunes:title>Wednesday, May 31, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How noncompete clauses — once limited to senior executives — are gaining power over American workers. Plus: The president returns to Washington with family business to attend to. Guests: Conor Dougherty, who covers economics for The Times; Peter Baker, chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2sp8Wlf.</itunes:summary>
      <content:encoded>
        <![CDATA[How noncompete clauses — once limited to senior executives — are gaining power over American workers. Plus: The president returns to Washington with family business to attend to. Guests: Conor Dougherty, who covers economics for The Times; Peter Baker, chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2sp8Wlf.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qH2Sbhlwfrfvg6gJH4RjigTSR_jFtNI-1U67ffkRCF8</guid>
      <pubDate>Wed, 31 May 2017 09:39:11 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/31/podcasts/the-daily/non-compete-clauses.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:51</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/33e40063-99c4-4daf-9d8e-9bcedc80d0dc.mp3" type="audio/mpeg" length="16187141"/>
    </item>
    <item>
      <title>Tuesday, May 30, 2017</title>
      <description>
        <![CDATA[A profile of five of the people responsible for figuring out Russia’s role in the 2016 election: the new special counsel, and four Senate Republicans who say they will follow evidence wherever it leads. Guests: Matt Apuzzo, who reports on law enforcement and security matters; Carl Hulse, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2qzVjPC.]]>
      </description>
      <itunes:title>Tuesday, May 30, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A profile of five of the people responsible for figuring out Russia’s role in the 2016 election: the new special counsel, and four Senate Republicans who say they will follow evidence wherever it leads. Guests: Matt Apuzzo, who reports on law enforcement and security matters; Carl Hulse, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2qzVjPC.</itunes:summary>
      <content:encoded>
        <![CDATA[A profile of five of the people responsible for figuring out Russia’s role in the 2016 election: the new special counsel, and four Senate Republicans who say they will follow evidence wherever it leads. Guests: Matt Apuzzo, who reports on law enforcement and security matters; Carl Hulse, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2qzVjPC.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xqMeeRcNHbmiNh7NMGeTmNRZBVGjvhxp5TH2qzv9HPA</guid>
      <pubDate>Tue, 30 May 2017 09:40:29 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/30/podcasts/the-daily/the-daily-the-investigators.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:23</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b335f4bd-ffd6-42ce-8213-2c1cb230cae2.mp3" type="audio/mpeg" length="22449423"/>
    </item>
    <item>
      <title>Friday, May 26, 2017</title>
      <description>
        <![CDATA[How John Shields planned his perfect death, and what Canada has learned by allowing 1,300 terminally ill people to do the same. Guest: Catherine Porter, who has been following one man seeking control of his death. For more information on today’s episode, visit http://nyti.ms/2rzIGIg.]]>
      </description>
      <itunes:title>Friday, May 26, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How John Shields planned his perfect death, and what Canada has learned by allowing 1,300 terminally ill people to do the same. Guest: Catherine Porter, who has been following one man seeking control of his death. For more information on today’s episode, visit http://nyti.ms/2rzIGIg.</itunes:summary>
      <content:encoded>
        <![CDATA[How John Shields planned his perfect death, and what Canada has learned by allowing 1,300 terminally ill people to do the same. Guest: Catherine Porter, who has been following one man seeking control of his death. For more information on today’s episode, visit http://nyti.ms/2rzIGIg.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/eTTyoxjbtNBUaWbvIYW4CS32YUMF-hj6Il9g0Osujd8</guid>
      <pubDate>Fri, 26 May 2017 09:56:06 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/26/podcasts/the-daily/the-daily-planning-the-perfect-death.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:49</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d8fe9414-667e-48b0-b659-23b0fe5b5471.mp3" type="audio/mpeg" length="21905658"/>
    </item>
    <item>
      <title>Thursday, May 25, 2017</title>
      <description>
        <![CDATA[How the unsolved murder of Seth Rich has become a case study of how and why fake news endures. And a look at the two members of the Trump campaign who Russia identified as its best chance of influencing Donald Trump. Guests: Michael Grynbaum, a media correspondent for The New York Times; Matthew Rosenberg, who covers intelligence and national security. For more information on today’s episode, visit http://nyti.ms/2riBDTE.]]>
      </description>
      <itunes:title>Thursday, May 25, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How the unsolved murder of Seth Rich has become a case study of how and why fake news endures. And a look at the two members of the Trump campaign who Russia identified as its best chance of influencing Donald Trump. Guests: Michael Grynbaum, a media correspondent for The New York Times; Matthew Rosenberg, who covers intelligence and national security. For more information on today’s episode, visit http://nyti.ms/2riBDTE.</itunes:summary>
      <content:encoded>
        <![CDATA[How the unsolved murder of Seth Rich has become a case study of how and why fake news endures. And a look at the two members of the Trump campaign who Russia identified as its best chance of influencing Donald Trump. Guests: Michael Grynbaum, a media correspondent for The New York Times; Matthew Rosenberg, who covers intelligence and national security. For more information on today’s episode, visit http://nyti.ms/2riBDTE.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2LAJTMDqlzxwek8UP8xJo9TGxCKLgvxiexTjXRPHxR8</guid>
      <pubDate>Thu, 25 May 2017 09:55:05 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/25/podcasts/the-daily/seth-rich-fake-news.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6d6c3e7c-5585-4b52-8d70-4b2b0be6597a.mp3" type="audio/mpeg" length="19825057"/>
    </item>
    <item>
      <title>Wednesday, May 24, 2017</title>
      <description>
        <![CDATA[The Islamic State has now claimed credit for the attack in Manchester, England. What happens in the hours between an act of terror and the claiming of responsibility? Plus: highlights from the latest testimony of a U.S. official about ties between Russia and the Trump campaign. Guests: Rukmini Callimachi, who covers the Islamic State; Matt Apuzzo, who covers the C.I.A. For more information on today’s episode, visit http://nyti.ms/2rD5ve0.]]>
      </description>
      <itunes:title>Wednesday, May 24, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Islamic State has now claimed credit for the attack in Manchester, England. What happens in the hours between an act of terror and the claiming of responsibility? Plus: highlights from the latest testimony of a U.S. official about ties between Russia and the Trump campaign. Guests: Rukmini Callimachi, who covers the Islamic State; Matt Apuzzo, who covers the C.I.A. For more information on today’s episode, visit http://nyti.ms/2rD5ve0.</itunes:summary>
      <content:encoded>
        <![CDATA[The Islamic State has now claimed credit for the attack in Manchester, England. What happens in the hours between an act of terror and the claiming of responsibility? Plus: highlights from the latest testimony of a U.S. official about ties between Russia and the Trump campaign. Guests: Rukmini Callimachi, who covers the Islamic State; Matt Apuzzo, who covers the C.I.A. For more information on today’s episode, visit http://nyti.ms/2rD5ve0.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/x7Lqv86ai1QYMUBwXm8Tc_pm43fEshWyfYesJodQMcc</guid>
      <pubDate>Wed, 24 May 2017 09:50:35 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/24/podcasts/the-daily/manchester-isis.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/36e4e709-a24c-4dfc-916a-f876c6e8df4c.mp3" type="audio/mpeg" length="20409364"/>
    </item>
    <item>
      <title>Tuesday, May 23, 2017</title>
      <description>
        <![CDATA[President Trump arrived in Israel with a message from the Muslim world: If Israel wants peace with its Arab neighbors, it’ll have to compromise with the Palestinians. And Michael Flynn has been out of the White House for three months. But his saga continues. Guests: Peter Baker, who is traveling with the president; Matthew Rosenberg, who has been reporting on Mr. Flynn. For more information on today’s episode, visit http://nyti.ms/2qOCsTu.]]>
      </description>
      <itunes:title>Tuesday, May 23, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump arrived in Israel with a message from the Muslim world: If Israel wants peace with its Arab neighbors, it’ll have to compromise with the Palestinians. And Michael Flynn has been out of the White House for three months. But his saga continues. Guests: Peter Baker, who is traveling with the president; Matthew Rosenberg, who has been reporting on Mr. Flynn. For more information on today’s episode, visit http://nyti.ms/2qOCsTu.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump arrived in Israel with a message from the Muslim world: If Israel wants peace with its Arab neighbors, it’ll have to compromise with the Palestinians. And Michael Flynn has been out of the White House for three months. But his saga continues. Guests: Peter Baker, who is traveling with the president; Matthew Rosenberg, who has been reporting on Mr. Flynn. For more information on today’s episode, visit http://nyti.ms/2qOCsTu.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/x6RLL9rLEurHB3NwmsY9e_3TYS48UD_T-hq5YwgP1eg</guid>
      <pubDate>Tue, 23 May 2017 09:58:07 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/23/podcasts/the-daily/trump-in-israel.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/584b2fb4-1309-4370-a810-7e98e7c9d59b.mp3" type="audio/mpeg" length="21587591"/>
    </item>
    <item>
      <title>Monday, May 22, 2017</title>
      <description>
        <![CDATA[We turn our focus away from Washington intrigue and go to Saudi Arabia, where President Trump was welcomed this weekend, and to China, whose government intentionally crippled American spying operations by killing C.I.A. informants, a Times investigation shows. Guests: Peter Baker, who is in Saudi Arabia with the president; Mark Mazzetti, who has been investigating the mysterious deaths in China. For more information on today’s episode, visit http://nyti.ms/2qfbgtv.]]>
      </description>
      <itunes:title>Monday, May 22, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>We turn our focus away from Washington intrigue and go to Saudi Arabia, where President Trump was welcomed this weekend, and to China, whose government intentionally crippled American spying operations by killing C.I.A. informants, a Times investigation shows. Guests: Peter Baker, who is in Saudi Arabia with the president; Mark Mazzetti, who has been investigating the mysterious deaths in China. For more information on today’s episode, visit http://nyti.ms/2qfbgtv.</itunes:summary>
      <content:encoded>
        <![CDATA[We turn our focus away from Washington intrigue and go to Saudi Arabia, where President Trump was welcomed this weekend, and to China, whose government intentionally crippled American spying operations by killing C.I.A. informants, a Times investigation shows. Guests: Peter Baker, who is in Saudi Arabia with the president; Mark Mazzetti, who has been investigating the mysterious deaths in China. For more information on today’s episode, visit http://nyti.ms/2qfbgtv.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XlRtV0dk-3n-nV9hzmf62zJ1SkbC2rDmHEGitrfo69c</guid>
      <pubDate>Mon, 22 May 2017 09:42:23 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/22/podcasts/the-daily/trump-saudi-arabia-speech.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2adc94d2-4392-48ef-a10d-9ec666811f51.mp3" type="audio/mpeg" length="22546390"/>
    </item>
    <item>
      <title>Special Edition: ‘Nut Job’</title>
      <description>
        <![CDATA[The day after President Trump fired James Comey, the president told top Russian officials that in dismissing the F.B.I. director, whom he called a “nut job,” the pressure was “taken off.” Guests: Maggie Haberman and Matt Apuzzo, who broke the story. For more information on today’s episode, visit http://nyti.ms/2q2jcD5.]]>
      </description>
      <itunes:title>Special Edition: ‘Nut Job’</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The day after President Trump fired James Comey, the president told top Russian officials that in dismissing the F.B.I. director, whom he called a “nut job,” the pressure was “taken off.” Guests: Maggie Haberman and Matt Apuzzo, who broke the story. For more information on today’s episode, visit http://nyti.ms/2q2jcD5.</itunes:summary>
      <content:encoded>
        <![CDATA[The day after President Trump fired James Comey, the president told top Russian officials that in dismissing the F.B.I. director, whom he called a “nut job,” the pressure was “taken off.” Guests: Maggie Haberman and Matt Apuzzo, who broke the story. For more information on today’s episode, visit http://nyti.ms/2q2jcD5.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kjKLbTUWc1WFApNtZja2IaY-3GOyM0mywx_-wNXi1qM</guid>
      <pubDate>Fri, 19 May 2017 22:50:52 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/19/podcasts/the-daily/the-daily-special-edition-what-trump-told-the-russians-about-firing-comey.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:12:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/3afeec89-2f18-4cab-94d5-6947049365bf.mp3" type="audio/mpeg" length="12017998"/>
    </item>
    <item>
      <title>Friday, May 19, 2017</title>
      <description>
        <![CDATA[The latest revelations from the Comey memos and from James Comey’s confidant, who talked on the record — and on tape — to The New York Times. Guest: Michael S. Schmidt, who has broken several stories in the last two weeks about encounters between President Trump and Mr. Comey. For more information on today’s episode, visit http://nyti.ms/2qLMCVk.]]>
      </description>
      <itunes:title>Friday, May 19, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The latest revelations from the Comey memos and from James Comey’s confidant, who talked on the record — and on tape — to The New York Times. Guest: Michael S. Schmidt, who has broken several stories in the last two weeks about encounters between President Trump and Mr. Comey. For more information on today’s episode, visit http://nyti.ms/2qLMCVk.</itunes:summary>
      <content:encoded>
        <![CDATA[The latest revelations from the Comey memos and from James Comey’s confidant, who talked on the record — and on tape — to The New York Times. Guest: Michael S. Schmidt, who has broken several stories in the last two weeks about encounters between President Trump and Mr. Comey. For more information on today’s episode, visit http://nyti.ms/2qLMCVk.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/P5yyXF4CWmbl6uo0YikpaMECJEollbQs2HJQjvLHIP4</guid>
      <pubDate>Fri, 19 May 2017 09:46:16 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/19/podcasts/the-daily/the-daily-more-comey-memos-more-revelations.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:52</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2c6fa026-b315-4881-8fba-35414d709ccd.mp3" type="audio/mpeg" length="17154716"/>
    </item>
    <item>
      <title>Thursday, May 18, 2017</title>
      <description>
        <![CDATA[Who are Robert Mueller and Rod Rosenstein? A closer look at two of the players at the center of the investigation into ties between President Trump’s campaign and Russian officials. Guests: Matt Apuzzo, who covers the F.B.I. for The Times; Glenn Thrush, who covers the White House; Megan Brown, a lawyer in Maryland who first met Mr. Rosenstein back in 2000 when he hired her for her first law internship. For more information on today’s episode, visit http://nyti.ms/2ry4DUZ.]]>
      </description>
      <itunes:title>Thursday, May 18, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Who are Robert Mueller and Rod Rosenstein? A closer look at two of the players at the center of the investigation into ties between President Trump’s campaign and Russian officials. Guests: Matt Apuzzo, who covers the F.B.I. for The Times; Glenn Thrush, who covers the White House; Megan Brown, a lawyer in Maryland who first met Mr. Rosenstein back in 2000 when he hired her for her first law internship. For more information on today’s episode, visit http://nyti.ms/2ry4DUZ.</itunes:summary>
      <content:encoded>
        <![CDATA[Who are Robert Mueller and Rod Rosenstein? A closer look at two of the players at the center of the investigation into ties between President Trump’s campaign and Russian officials. Guests: Matt Apuzzo, who covers the F.B.I. for The Times; Glenn Thrush, who covers the White House; Megan Brown, a lawyer in Maryland who first met Mr. Rosenstein back in 2000 when he hired her for her first law internship. For more information on today’s episode, visit http://nyti.ms/2ry4DUZ.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3yEGhoUQ-NUtPe0mqaqhp2rJwOwJq8Hy5ALhrrAf0Yo</guid>
      <pubDate>Thu, 18 May 2017 09:50:43 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/18/podcasts/the-daily/robert-mueller-rod-rosenstein.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:48</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/8ded3a5c-5959-4593-8639-e7c0d3522366.mp3" type="audio/mpeg" length="20938919"/>
    </item>
    <item>
      <title>Wednesday, May 17, 2017</title>
      <description>
        <![CDATA[James Comey’s secret memos: We discuss the latest revelations about President Trump, Mr. Comey, Russia and Israel. Guests: Michael S. Schmidt, who broke the story about the former F.B.I. director’s memo detailing a conversation with President Trump; Adam Liptak, who explains obstruction of justice; Adam Goldman, who discusses Israel’s role. For more information on today’s episode, visit http://nyti.ms/2rujm3q.]]>
      </description>
      <itunes:title>Wednesday, May 17, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>James Comey’s secret memos: We discuss the latest revelations about President Trump, Mr. Comey, Russia and Israel. Guests: Michael S. Schmidt, who broke the story about the former F.B.I. director’s memo detailing a conversation with President Trump; Adam Liptak, who explains obstruction of justice; Adam Goldman, who discusses Israel’s role. For more information on today’s episode, visit http://nyti.ms/2rujm3q.</itunes:summary>
      <content:encoded>
        <![CDATA[James Comey’s secret memos: We discuss the latest revelations about President Trump, Mr. Comey, Russia and Israel. Guests: Michael S. Schmidt, who broke the story about the former F.B.I. director’s memo detailing a conversation with President Trump; Adam Liptak, who explains obstruction of justice; Adam Goldman, who discusses Israel’s role. For more information on today’s episode, visit http://nyti.ms/2rujm3q.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/yNuzLoiW4PPZI6M5xFQHhQyqICBvnWmP5EjAE4c0KAU</guid>
      <pubDate>Wed, 17 May 2017 10:00:47 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/17/podcasts/the-daily/the-daily-the-secret-memos-of-james-comey.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f2b89f51-ba55-4c8a-bc0d-1dae1a0816ea.mp3" type="audio/mpeg" length="19097391"/>
    </item>
    <item>
      <title>Tuesday, May 16, 2017</title>
      <description>
        <![CDATA[What we’ve learned about President Trump’s Oval Office meeting with top Russian officials the day after he fired James Comey, the F.B.I. director investigating his campaign’s ties to Russia. Plus: how efforts by the U.S. government to protect against a cyberattack may have enabled one. Guests: Matthew Rosenberg, who covers intelligence and national security; David E. Sanger, the chief Washington correspondent for The Times. For more information on today’s episode, visit http://nyti.ms/2pVBUrl.]]>
      </description>
      <itunes:title>Tuesday, May 16, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What we’ve learned about President Trump’s Oval Office meeting with top Russian officials the day after he fired James Comey, the F.B.I. director investigating his campaign’s ties to Russia. Plus: how efforts by the U.S. government to protect against a cyberattack may have enabled one. Guests: Matthew Rosenberg, who covers intelligence and national security; David E. Sanger, the chief Washington correspondent for The Times. For more information on today’s episode, visit http://nyti.ms/2pVBUrl.</itunes:summary>
      <content:encoded>
        <![CDATA[What we’ve learned about President Trump’s Oval Office meeting with top Russian officials the day after he fired James Comey, the F.B.I. director investigating his campaign’s ties to Russia. Plus: how efforts by the U.S. government to protect against a cyberattack may have enabled one. Guests: Matthew Rosenberg, who covers intelligence and national security; David E. Sanger, the chief Washington correspondent for The Times. For more information on today’s episode, visit http://nyti.ms/2pVBUrl.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aO-9X3oIjGinrIhu2QFLBK9G-FAsbqSWX1j6z9_CgKI</guid>
      <pubDate>Tue, 16 May 2017 09:36:22 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/16/podcasts/the-daily/trump-classified-information-russia.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:06</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/dfabd08a-8886-4267-b039-eb7df9140713.mp3" type="audio/mpeg" length="22176914"/>
    </item>
    <item>
      <title>Monday, May 15, 2017</title>
      <description>
        <![CDATA[James Comey’s firing has raised questions of a White House cover-up and drawn comparisons to Nixon’s midnight massacre. But is there a version of this story that suggests it amounts to little? Plus: the case for and against politics from the pulpit. Guests: Jeremy W. Peters, who has been covering the reaction to Mr. Comey’s firing in the conservative news media; Laurie Goodstein, the religion correspondent for The Times. For more information on today’s episode, visit http://nyti.ms/2pRTvAg.]]>
      </description>
      <itunes:title>Monday, May 15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>James Comey’s firing has raised questions of a White House cover-up and drawn comparisons to Nixon’s midnight massacre. But is there a version of this story that suggests it amounts to little? Plus: the case for and against politics from the pulpit. Guests: Jeremy W. Peters, who has been covering the reaction to Mr. Comey’s firing in the conservative news media; Laurie Goodstein, the religion correspondent for The Times. For more information on today’s episode, visit http://nyti.ms/2pRTvAg.</itunes:summary>
      <content:encoded>
        <![CDATA[James Comey’s firing has raised questions of a White House cover-up and drawn comparisons to Nixon’s midnight massacre. But is there a version of this story that suggests it amounts to little? Plus: the case for and against politics from the pulpit. Guests: Jeremy W. Peters, who has been covering the reaction to Mr. Comey’s firing in the conservative news media; Laurie Goodstein, the religion correspondent for The Times. For more information on today’s episode, visit http://nyti.ms/2pRTvAg.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7kstBnBPDZqSTRtyPNqjmkKxEA5_27ibW6IPh-XUEtQ</guid>
      <pubDate>Mon, 15 May 2017 09:46:28 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/15/podcasts/the-daily/the-daily-outrage-over-outrage.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:25:04</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9df5d4fd-21d7-4e73-8bb3-6db0dadff236.mp3" type="audio/mpeg" length="24069851"/>
    </item>
    <item>
      <title>Friday, May 12, 2017</title>
      <description>
        <![CDATA[The White House’s story about James Comey’s firing is unraveling. Among those contradicting the president is the president. Guests: Michael S. Schmidt, who has been reporting on the secret conversation that may have doomed Mr. Comey; Matthew Rosenberg, who followed Thursday’s testimony by Andrew G. McCabe, the acting director of the F.B.I. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </description>
      <itunes:title>Friday, May 12, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The White House’s story about James Comey’s firing is unraveling. Among those contradicting the president is the president. Guests: Michael S. Schmidt, who has been reporting on the secret conversation that may have doomed Mr. Comey; Matthew Rosenberg, who followed Thursday’s testimony by Andrew G. McCabe, the acting director of the F.B.I. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[The White House’s story about James Comey’s firing is unraveling. Among those contradicting the president is the president. Guests: Michael S. Schmidt, who has been reporting on the secret conversation that may have doomed Mr. Comey; Matthew Rosenberg, who followed Thursday’s testimony by Andrew G. McCabe, the acting director of the F.B.I. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/oUZs2couWgpEqoGNaFfXSaa0ECkuEuVZGqfNrdliL5A</guid>
      <pubDate>Fri, 12 May 2017 09:50:02 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/12/podcasts/the-daily/comey-trump-loyalty-versus-honesty.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/781f1c7a-fd6e-4bf3-9311-3b5423fb07f6.mp3" type="audio/mpeg" length="22162285"/>
    </item>
    <item>
      <title>Thursday, May 11, 2017</title>
      <description>
        <![CDATA[Was James Comey’s fate decided two days ago, or two months ago? The Times follows the path to what now looks like his inevitable dismissal as F.B.I. director. Plus: the view from inside an F.B.I. that has just lost its leader. Guests: Peter Baker, chief White House correspondent for The Times; Adam Goldman, who covers the F.B.I.; Frank Montoya, Jr., who spent 26 years working in the F.B.I. before retiring last year. For more information on today’s episode, visit http://nyti.ms/2prYBrB.]]>
      </description>
      <itunes:title>Thursday, May 11, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Was James Comey’s fate decided two days ago, or two months ago? The Times follows the path to what now looks like his inevitable dismissal as F.B.I. director. Plus: the view from inside an F.B.I. that has just lost its leader. Guests: Peter Baker, chief White House correspondent for The Times; Adam Goldman, who covers the F.B.I.; Frank Montoya, Jr., who spent 26 years working in the F.B.I. before retiring last year. For more information on today’s episode, visit http://nyti.ms/2prYBrB.</itunes:summary>
      <content:encoded>
        <![CDATA[Was James Comey’s fate decided two days ago, or two months ago? The Times follows the path to what now looks like his inevitable dismissal as F.B.I. director. Plus: the view from inside an F.B.I. that has just lost its leader. Guests: Peter Baker, chief White House correspondent for The Times; Adam Goldman, who covers the F.B.I.; Frank Montoya, Jr., who spent 26 years working in the F.B.I. before retiring last year. For more information on today’s episode, visit http://nyti.ms/2prYBrB.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/QkL95j4SEDer0_OjGfHF4QfMyJaY56cI8SJ5Ir2u7Pk</guid>
      <pubDate>Thu, 11 May 2017 09:49:30 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/11/podcasts/the-daily/comey-fbi-view-from-inside.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/56162212-ab92-41a6-aaa9-fb821d0b108b.mp3" type="audio/mpeg" length="22024359"/>
    </item>
    <item>
      <title>Refresher: James Comey and the 2016 Election</title>
      <description>
        <![CDATA[On Tuesday evening, President Trump fired the director of the F.B.I., citing his handling of the inquiry into Hillary Clinton’s emails. In case you missed it, here’s our earlier episode on how Mr. Comey handled investigations into Mrs. Clinton’s conduct and Mr. Trump’s associates, and powerfully shaped the 2016 election. For more information on today’s episode, visit http://nyti.ms/2pvfyRr.]]>
      </description>
      <itunes:title>Refresher: James Comey and the 2016 Election</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On Tuesday evening, President Trump fired the director of the F.B.I., citing his handling of the inquiry into Hillary Clinton’s emails. In case you missed it, here’s our earlier episode on how Mr. Comey handled investigations into Mrs. Clinton’s conduct and Mr. Trump’s associates, and powerfully shaped the 2016 election. For more information on today’s episode, visit http://nyti.ms/2pvfyRr.</itunes:summary>
      <content:encoded>
        <![CDATA[On Tuesday evening, President Trump fired the director of the F.B.I., citing his handling of the inquiry into Hillary Clinton’s emails. In case you missed it, here’s our earlier episode on how Mr. Comey handled investigations into Mrs. Clinton’s conduct and Mr. Trump’s associates, and powerfully shaped the 2016 election. For more information on today’s episode, visit http://nyti.ms/2pvfyRr.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XL9ePZVp56ScHD4vDmN5Dml53WziPp7BVdeLYL-uvJU</guid>
      <pubDate>Wed, 10 May 2017 21:41:24 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/24/podcasts/the-daily/the-daily-james-comey-and-the-2016-election.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:27:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4fd3dd63-928a-416f-bdf9-ef47d72abf69.mp3" type="audio/mpeg" length="26848444"/>
    </item>
    <item>
      <title>Wednesday, May 10, 2017</title>
      <description>
        <![CDATA[James Comey, the director of the F.B.I., oversaw two major investigations involving the presidential election: one into Hillary Clinton’s emails, and the other into possible collusion between the Trump campaign and Russian officials. The question now is, which inquiry got him fired? Guests: Michael Schmidt, who pieced together how Mr. Comey learned of his ouster; Matt Apuzzo, a Times reporter based in Washington. For more information on today’s episode, visit http://nyti.ms/2pFCJoT.]]>
      </description>
      <itunes:title>Wednesday, May 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>James Comey, the director of the F.B.I., oversaw two major investigations involving the presidential election: one into Hillary Clinton’s emails, and the other into possible collusion between the Trump campaign and Russian officials. The question now is, which inquiry got him fired? Guests: Michael Schmidt, who pieced together how Mr. Comey learned of his ouster; Matt Apuzzo, a Times reporter based in Washington. For more information on today’s episode, visit http://nyti.ms/2pFCJoT.</itunes:summary>
      <content:encoded>
        <![CDATA[James Comey, the director of the F.B.I., oversaw two major investigations involving the presidential election: one into Hillary Clinton’s emails, and the other into possible collusion between the Trump campaign and Russian officials. The question now is, which inquiry got him fired? Guests: Michael Schmidt, who pieced together how Mr. Comey learned of his ouster; Matt Apuzzo, a Times reporter based in Washington. For more information on today’s episode, visit http://nyti.ms/2pFCJoT.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/TGY1PLu8Qz9D3CNRJcdVoH8UTqE121N-8PPeBz5S8F4</guid>
      <pubDate>Wed, 10 May 2017 09:50:29 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/10/podcasts/the-daily/james-comey-fired.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0951ef7c-87a3-4a83-8570-4ad1e00397a8.mp3" type="audio/mpeg" length="17440600"/>
    </item>
    <item>
      <title>Tuesday, May 9, 2017</title>
      <description>
        <![CDATA[President Barack Obama said not to hire him. The attorney general said he was susceptible to blackmail. We discuss two new accounts of when Donald J. Trump was warned about Michael T. Flynn — and didn’t act. Plus: What is life like under Boko Haram? Guests: Matt Apuzzo, a Times reporter based in Washington; Dionne Searcey, the West Africa bureau chief. For more information on today’s episode, visit http://nyti.ms/2q9Yxvo.]]>
      </description>
      <itunes:title>Tuesday, May 9, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Barack Obama said not to hire him. The attorney general said he was susceptible to blackmail. We discuss two new accounts of when Donald J. Trump was warned about Michael T. Flynn — and didn’t act. Plus: What is life like under Boko Haram? Guests: Matt Apuzzo, a Times reporter based in Washington; Dionne Searcey, the West Africa bureau chief. For more information on today’s episode, visit http://nyti.ms/2q9Yxvo.</itunes:summary>
      <content:encoded>
        <![CDATA[President Barack Obama said not to hire him. The attorney general said he was susceptible to blackmail. We discuss two new accounts of when Donald J. Trump was warned about Michael T. Flynn — and didn’t act. Plus: What is life like under Boko Haram? Guests: Matt Apuzzo, a Times reporter based in Washington; Dionne Searcey, the West Africa bureau chief. For more information on today’s episode, visit http://nyti.ms/2q9Yxvo.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RD5SlMHebYCwUupvVUYoT0JaLykl0unyhbUk80BSXAI</guid>
      <pubDate>Tue, 09 May 2017 09:35:39 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/09/podcasts/the-daily/michael-flynn-boko-haram.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:55</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c647069a-6de4-477c-bfad-65e00c96d7f1.mp3" type="audio/mpeg" length="20091715"/>
    </item>
    <item>
      <title>Monday, May 8, 2017</title>
      <description>
        <![CDATA[Free speech on college campuses: why conservatives say they’re the ones being silenced. Plus: Why Marine Le Pen’s resounding defeat in the French presidential election could be seen as a victory for her right-wing party. Guests: Jeremy W. Peters, who has been reporting on the free speech battle on college campuses; Alissa J. Rubin, the New York Times bureau chief in Paris. For more information on today’s episode, visit http://nyti.ms/2q1B0ef.]]>
      </description>
      <itunes:title>Monday, May 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Free speech on college campuses: why conservatives say they’re the ones being silenced. Plus: Why Marine Le Pen’s resounding defeat in the French presidential election could be seen as a victory for her right-wing party. Guests: Jeremy W. Peters, who has been reporting on the free speech battle on college campuses; Alissa J. Rubin, the New York Times bureau chief in Paris. For more information on today’s episode, visit http://nyti.ms/2q1B0ef.</itunes:summary>
      <content:encoded>
        <![CDATA[Free speech on college campuses: why conservatives say they’re the ones being silenced. Plus: Why Marine Le Pen’s resounding defeat in the French presidential election could be seen as a victory for her right-wing party. Guests: Jeremy W. Peters, who has been reporting on the free speech battle on college campuses; Alissa J. Rubin, the New York Times bureau chief in Paris. For more information on today’s episode, visit http://nyti.ms/2q1B0ef.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/HFD-o5pXgO0iYXdOqsH32ITmY6Qi6OiSFsyz2lif_qs</guid>
      <pubDate>Mon, 08 May 2017 09:54:42 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/08/podcasts/the-daily/free-speech-campus-conservatives.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:00</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/2a5f5adf-7326-49ca-bc36-650d37ff899a.mp3" type="audio/mpeg" length="20160679"/>
    </item>
    <item>
      <title>Friday, May 5, 2017</title>
      <description>
        <![CDATA[To win France’s presidential election on Sunday, Marine Le Pen must show she has rejected the man who founded her party. The problem is, it’s her father. Plus: Thursday’s health care vote, explained. Guests: Jennifer Steinhauer, who covers Congress; Adam Nossiter, who is covering the French election from Paris; Aurore Lahondes, a 19-year-old National Front voter. For more information on today’s episode, visit http://nyti.ms/2qlxz59.]]>
      </description>
      <itunes:title>Friday, May 5, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>To win France’s presidential election on Sunday, Marine Le Pen must show she has rejected the man who founded her party. The problem is, it’s her father. Plus: Thursday’s health care vote, explained. Guests: Jennifer Steinhauer, who covers Congress; Adam Nossiter, who is covering the French election from Paris; Aurore Lahondes, a 19-year-old National Front voter. For more information on today’s episode, visit http://nyti.ms/2qlxz59.</itunes:summary>
      <content:encoded>
        <![CDATA[To win France’s presidential election on Sunday, Marine Le Pen must show she has rejected the man who founded her party. The problem is, it’s her father. Plus: Thursday’s health care vote, explained. Guests: Jennifer Steinhauer, who covers Congress; Adam Nossiter, who is covering the French election from Paris; Aurore Lahondes, a 19-year-old National Front voter. For more information on today’s episode, visit http://nyti.ms/2qlxz59.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NSDAntxH25a_p0po_Ojg-L9GONcr_9_i7eR4K6kIooU</guid>
      <pubDate>Fri, 05 May 2017 09:59:12 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/05/podcasts/the-daily/health-care-vote-french-elections.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0a524aee-2e03-4dee-95c7-83a25a85fde4.mp3" type="audio/mpeg" length="22476173"/>
    </item>
    <item>
      <title>Thursday, May 4, 2017</title>
      <description>
        <![CDATA[Our reporter describes being inside the room as James B. Comey, the director of the F.B.I., gave his first public remarks about his handling of Hillary Clinton’s emails, saying he was “mildly nauseous” over the idea that he might have tipped the presidential election. And with a fiercely conservative governor leading the fight, is Kentucky about to become the only state in America without a single abortion clinic? Guests: Matt Apuzzo; Sheryl Gay Stolberg. For more information on today’s episode, visit http://nyti.ms/2pgdxVy.]]>
      </description>
      <itunes:title>Thursday, May 4, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Our reporter describes being inside the room as James B. Comey, the director of the F.B.I., gave his first public remarks about his handling of Hillary Clinton’s emails, saying he was “mildly nauseous” over the idea that he might have tipped the presidential election. And with a fiercely conservative governor leading the fight, is Kentucky about to become the only state in America without a single abortion clinic? Guests: Matt Apuzzo; Sheryl Gay Stolberg. For more information on today’s episode, visit http://nyti.ms/2pgdxVy.</itunes:summary>
      <content:encoded>
        <![CDATA[Our reporter describes being inside the room as James B. Comey, the director of the F.B.I., gave his first public remarks about his handling of Hillary Clinton’s emails, saying he was “mildly nauseous” over the idea that he might have tipped the presidential election. And with a fiercely conservative governor leading the fight, is Kentucky about to become the only state in America without a single abortion clinic? Guests: Matt Apuzzo; Sheryl Gay Stolberg. For more information on today’s episode, visit http://nyti.ms/2pgdxVy.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/T6D8UgEdyESxF-wB88daDP-uDkpm5OrZCKxBObZCFWQ</guid>
      <pubDate>Thu, 04 May 2017 09:33:34 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/04/podcasts/the-daily/the-daily-comey-mildly-nauseous-over-idea-he-swayed-votes.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5d2932c8-9e0f-4bac-83ce-a5033a5f3988.mp3" type="audio/mpeg" length="15970220"/>
    </item>
    <item>
      <title>Wednesday, May 3, 2017</title>
      <description>
        <![CDATA[The lines being drawn in Washington aren’t entirely partisan. Are Democrats and Republicans in Congress banding together to block the president? Plus: We discuss the White House’s on-again off-again relationship with Russia. Guests: Carl Hulse, who covers Congress; Julie Davis, a White House correspondent; Peter Baker, a White House correspondent. For more information on today’s episode, visit http://nyti.ms/2pNzK0u.]]>
      </description>
      <itunes:title>Wednesday, May 3, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The lines being drawn in Washington aren’t entirely partisan. Are Democrats and Republicans in Congress banding together to block the president? Plus: We discuss the White House’s on-again off-again relationship with Russia. Guests: Carl Hulse, who covers Congress; Julie Davis, a White House correspondent; Peter Baker, a White House correspondent. For more information on today’s episode, visit http://nyti.ms/2pNzK0u.</itunes:summary>
      <content:encoded>
        <![CDATA[The lines being drawn in Washington aren’t entirely partisan. Are Democrats and Republicans in Congress banding together to block the president? Plus: We discuss the White House’s on-again off-again relationship with Russia. Guests: Carl Hulse, who covers Congress; Julie Davis, a White House correspondent; Peter Baker, a White House correspondent. For more information on today’s episode, visit http://nyti.ms/2pNzK0u.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/YRtkAUnaksOfvRur_8e0cztWyT7vEf-AdOrKLB8ofOQ</guid>
      <pubDate>Wed, 03 May 2017 09:52:47 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/03/podcasts/the-daily/the-daily-who-won-on-the-bipartisan-budget-deal.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c44148a8-8b21-4f2c-91d9-7d81d071a800.mp3" type="audio/mpeg" length="18750902"/>
    </item>
    <item>
      <title>Tuesday, May 2, 2017</title>
      <description>
        <![CDATA[President Trump shocked his own team when he invited the authoritarian leader of the Philippines to visit the White House. Now he says he’s open to meeting the leader of North Korea. Why does he do it? Plus: The Times interviews Ivanka Trump. Guests: Maggie Haberman; Jodi Kantor and Rachel Abrams. For more information on today’s episode, visit http://nyti.ms/2qz8Czd.]]>
      </description>
      <itunes:title>Tuesday, May 2, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump shocked his own team when he invited the authoritarian leader of the Philippines to visit the White House. Now he says he’s open to meeting the leader of North Korea. Why does he do it? Plus: The Times interviews Ivanka Trump. Guests: Maggie Haberman; Jodi Kantor and Rachel Abrams. For more information on today’s episode, visit http://nyti.ms/2qz8Czd.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump shocked his own team when he invited the authoritarian leader of the Philippines to visit the White House. Now he says he’s open to meeting the leader of North Korea. Why does he do it? Plus: The Times interviews Ivanka Trump. Guests: Maggie Haberman; Jodi Kantor and Rachel Abrams. For more information on today’s episode, visit http://nyti.ms/2qz8Czd.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/hxvJl2yWNfHsTsJ2zWvQYAjtL501HlA01TvELB3zm5E</guid>
      <pubDate>Tue, 02 May 2017 09:59:58 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/02/podcasts/the-daily/ivanka-trump-duterte.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/71b254b3-2340-4b48-91e5-19810f148af9.mp3" type="audio/mpeg" length="20777586"/>
    </item>
    <item>
      <title>Monday, May 1, 2017</title>
      <description>
        <![CDATA[My colleague gives the view from inside Venezuela and describes his cross-country road trip there that captures the story of a country on the brink of collapse. Guest: Nicholas Casey, an international correspondent for The New York Times. For more information on today’s episode, visit http://nyti.ms/2qz8Czd.]]>
      </description>
      <itunes:title>Monday, May 1, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>My colleague gives the view from inside Venezuela and describes his cross-country road trip there that captures the story of a country on the brink of collapse. Guest: Nicholas Casey, an international correspondent for The New York Times. For more information on today’s episode, visit http://nyti.ms/2qz8Czd.</itunes:summary>
      <content:encoded>
        <![CDATA[My colleague gives the view from inside Venezuela and describes his cross-country road trip there that captures the story of a country on the brink of collapse. Guest: Nicholas Casey, an international correspondent for The New York Times. For more information on today’s episode, visit http://nyti.ms/2qz8Czd.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9uncZgZwWzMha53NVEvaeL5PjPpqUolTGuCQ_hUT4Pk</guid>
      <pubDate>Mon, 01 May 2017 09:59:07 -0000</pubDate>
      <link>https://www.nytimes.com/2017/05/01/podcasts/the-daily/venezuela-road-trip.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:56</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/23dd3c39-13bb-4d9a-b9a3-bbe58d4d1d41.mp3" type="audio/mpeg" length="21061799"/>
    </item>
    <item>
      <title>Friday, April 28, 2017</title>
      <description>
        <![CDATA[What we can learn about this administration from the taxes it hopes to cut. Plus, we look at three big moments from the week. Guests: Jesse Drucker, a business reporter at The Times; Jennifer Steinhauer, who covers Congress; Adam Liptak, who covers the Supreme Court; and Sheryl Sandberg, the chief operating officer of Facebook. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </description>
      <itunes:title>Friday, April 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What we can learn about this administration from the taxes it hopes to cut. Plus, we look at three big moments from the week. Guests: Jesse Drucker, a business reporter at The Times; Jennifer Steinhauer, who covers Congress; Adam Liptak, who covers the Supreme Court; and Sheryl Sandberg, the chief operating officer of Facebook. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[What we can learn about this administration from the taxes it hopes to cut. Plus, we look at three big moments from the week. Guests: Jesse Drucker, a business reporter at The Times; Jennifer Steinhauer, who covers Congress; Adam Liptak, who covers the Supreme Court; and Sheryl Sandberg, the chief operating officer of Facebook. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5uHtH2uXPwuTyEuVUWWRUvWT_aIClpa0Xn2_XM9g3Xg</guid>
      <pubDate>Fri, 28 Apr 2017 09:51:42 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/28/podcasts/the-daily/trump-tax-plan-sheryl-sandberg.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:23:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/308ab521-e3c3-4295-8804-fcafa028c280.mp3" type="audio/mpeg" length="22826422"/>
    </item>
    <item>
      <title>Thursday, April 27, 2017</title>
      <description>
        <![CDATA[One hundred days. It’s undeniably an arbitrary number. But a lot has happened in that time. We check in with past Daily guests about the Trump presidency so far. Guests: David Green, the head of Hobby Lobby, who took a fight over conservative values all the way to the Supreme Court; Dr. Mitch Jacques, a doctor in coal country whose patients hate Obamacare — but may need it most; and Mark Napier, an Arizona sheriff on the Mexican border, where illegal immigration is part of the landscape. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </description>
      <itunes:title>Thursday, April 27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>One hundred days. It’s undeniably an arbitrary number. But a lot has happened in that time. We check in with past Daily guests about the Trump presidency so far. Guests: David Green, the head of Hobby Lobby, who took a fight over conservative values all the way to the Supreme Court; Dr. Mitch Jacques, a doctor in coal country whose patients hate Obamacare — but may need it most; and Mark Napier, an Arizona sheriff on the Mexican border, where illegal immigration is part of the landscape. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[One hundred days. It’s undeniably an arbitrary number. But a lot has happened in that time. We check in with past Daily guests about the Trump presidency so far. Guests: David Green, the head of Hobby Lobby, who took a fight over conservative values all the way to the Supreme Court; Dr. Mitch Jacques, a doctor in coal country whose patients hate Obamacare — but may need it most; and Mark Napier, an Arizona sheriff on the Mexican border, where illegal immigration is part of the landscape. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lWE17xMSn890O9-88mdyUWNWWk2ArkkqOG65Dkkpql8</guid>
      <pubDate>Thu, 27 Apr 2017 09:44:38 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/27/podcasts/the-daily/the-daily-100-days-in.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d4901419-1c2b-4935-8bcd-5e4c00a2a2d9.mp3" type="audio/mpeg" length="19440535"/>
    </item>
    <item>
      <title>Wednesday, April 26, 2017</title>
      <description>
        <![CDATA[A Times investigation into the chief executive of Uber, Travis Kalanick, finds that his drive to win has plunged the company into its most sustained set of crises since its founding. Guest: Mike Isaac, a technology reporter who has exposed many of the recent controversies involving Uber. For more information on today’s episode, visit http://nyti.ms/2p6PmLu.]]>
      </description>
      <itunes:title>Wednesday, April 26, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A Times investigation into the chief executive of Uber, Travis Kalanick, finds that his drive to win has plunged the company into its most sustained set of crises since its founding. Guest: Mike Isaac, a technology reporter who has exposed many of the recent controversies involving Uber. For more information on today’s episode, visit http://nyti.ms/2p6PmLu.</itunes:summary>
      <content:encoded>
        <![CDATA[A Times investigation into the chief executive of Uber, Travis Kalanick, finds that his drive to win has plunged the company into its most sustained set of crises since its founding. Guest: Mike Isaac, a technology reporter who has exposed many of the recent controversies involving Uber. For more information on today’s episode, visit http://nyti.ms/2p6PmLu.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/WCdSDOQbxV50cb2foPIzB2bGWWWOQONb-5nZMbzEqrc</guid>
      <pubDate>Wed, 26 Apr 2017 09:55:26 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/26/podcasts/the-daily/uber-travis-kalanick.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:19</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6f3cff00-c312-4a91-b072-5f497a0bf64a.mp3" type="audio/mpeg" length="20480000"/>
    </item>
    <item>
      <title>Tuesday, April 25, 2017</title>
      <description>
        <![CDATA[Congress needs to pass a budget. President Trump wants to use that budget to finance his signature domestic policy. Is the United States government about to shut down over the border wall? Guests: Jennifer Steinhauer and Jonathan Weisman, reporters at The New York Times. For more information on today’s episode, visit http://nyti.ms/2oL35W1.]]>
      </description>
      <itunes:title>Tuesday, April 25, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Congress needs to pass a budget. President Trump wants to use that budget to finance his signature domestic policy. Is the United States government about to shut down over the border wall? Guests: Jennifer Steinhauer and Jonathan Weisman, reporters at The New York Times. For more information on today’s episode, visit http://nyti.ms/2oL35W1.</itunes:summary>
      <content:encoded>
        <![CDATA[Congress needs to pass a budget. President Trump wants to use that budget to finance his signature domestic policy. Is the United States government about to shut down over the border wall? Guests: Jennifer Steinhauer and Jonathan Weisman, reporters at The New York Times. For more information on today’s episode, visit http://nyti.ms/2oL35W1.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/g10Q61j8LLc_ZX2RODkFS2ZtskBq_Gf_eNJ81O2mf6k</guid>
      <pubDate>Tue, 25 Apr 2017 09:41:17 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/25/podcasts/the-daily/the-daily-the-border-wall-and-the-threat-of-a-government-shutdown.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/adddc837-0b61-45d1-a244-5b12b290adba.mp3" type="audio/mpeg" length="18994155"/>
    </item>
    <item>
      <title>Monday, April 24, 2017</title>
      <description>
        <![CDATA[A special episode: James Comey and the 2016 election. It’s the behind-the-scenes story of how the F.B.I. director handled investigations into Hillary Clinton and Donald Trump and shaped the presidential race. Guest: Matt Apuzzo, one of the reporters behind the Times investigation into Mr. Comey. For more information on today’s episode, visit http://nyti.ms/2pvfyRr.]]>
      </description>
      <itunes:title>Monday, April 24, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A special episode: James Comey and the 2016 election. It’s the behind-the-scenes story of how the F.B.I. director handled investigations into Hillary Clinton and Donald Trump and shaped the presidential race. Guest: Matt Apuzzo, one of the reporters behind the Times investigation into Mr. Comey. For more information on today’s episode, visit http://nyti.ms/2pvfyRr.</itunes:summary>
      <content:encoded>
        <![CDATA[A special episode: James Comey and the 2016 election. It’s the behind-the-scenes story of how the F.B.I. director handled investigations into Hillary Clinton and Donald Trump and shaped the presidential race. Guest: Matt Apuzzo, one of the reporters behind the Times investigation into Mr. Comey. For more information on today’s episode, visit http://nyti.ms/2pvfyRr.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Oav_m4WmVJYmobPkJs39-Au7yQroeOMrfQKtbztw22A</guid>
      <pubDate>Mon, 24 Apr 2017 10:07:38 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/24/podcasts/the-daily/the-daily-james-comey-and-the-2016-election.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:29:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ecb57f2e-11a1-4349-a5a7-d80f3c88d3c6.mp3" type="audio/mpeg" length="28014968"/>
    </item>
    <item>
      <title>Friday, April 21, 2017</title>
      <description>
        <![CDATA[Marine Le Pen wants to “make France French again.” We look at the first round of the country’s presidential election on Sunday, and its many parallels to the presidential election in the United States last year — including signs of meddling by Russia. Guests: Adam Nossiter, a New York Times reporter based in Paris; Andrew Higgins, a Times reporter in Russia. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </description>
      <itunes:title>Friday, April 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Marine Le Pen wants to “make France French again.” We look at the first round of the country’s presidential election on Sunday, and its many parallels to the presidential election in the United States last year — including signs of meddling by Russia. Guests: Adam Nossiter, a New York Times reporter based in Paris; Andrew Higgins, a Times reporter in Russia. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[Marine Le Pen wants to “make France French again.” We look at the first round of the country’s presidential election on Sunday, and its many parallels to the presidential election in the United States last year — including signs of meddling by Russia. Guests: Adam Nossiter, a New York Times reporter based in Paris; Andrew Higgins, a Times reporter in Russia. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1wVkG69IPQzst_oELeE49OMAunMUfz_cxPvai-ONQxA</guid>
      <pubDate>Fri, 21 Apr 2017 09:41:38 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/21/podcasts/the-daily/the-daily-the-french-election-explained.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/198c590c-e786-445e-988f-e8ba955051cb.mp3" type="audio/mpeg" length="17696809"/>
    </item>
    <item>
      <title>Thursday, April 20, 2017</title>
      <description>
        <![CDATA[Fox News’s biggest star is out of a job two and a half weeks after a Times investigation into sexual harassment allegations. We talk to one of the two reporters who are most responsible — perhaps responsible — for Bill O’Reilly’s ouster. Guests: Emily Steel, who spent months investigating allegations against Mr. O’Reilly; and Jim Rutenberg, the media columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </description>
      <itunes:title>Thursday, April 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Fox News’s biggest star is out of a job two and a half weeks after a Times investigation into sexual harassment allegations. We talk to one of the two reporters who are most responsible — perhaps responsible — for Bill O’Reilly’s ouster. Guests: Emily Steel, who spent months investigating allegations against Mr. O’Reilly; and Jim Rutenberg, the media columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[Fox News’s biggest star is out of a job two and a half weeks after a Times investigation into sexual harassment allegations. We talk to one of the two reporters who are most responsible — perhaps responsible — for Bill O’Reilly’s ouster. Guests: Emily Steel, who spent months investigating allegations against Mr. O’Reilly; and Jim Rutenberg, the media columnist for The Times. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LDYdRrkU0ITVGoY48awuQMtaE3rYoidVnXklq01fcrA</guid>
      <pubDate>Thu, 20 Apr 2017 09:40:36 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/20/podcasts/the-daily/the-daily-bill-oreillys-ouster.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/00e522a3-3a50-4b63-b4dd-1944aad9a4fe.mp3" type="audio/mpeg" length="20767137"/>
    </item>
    <item>
      <title>Wednesday, April 19, 2017</title>
      <description>
        <![CDATA[Why so many of President Trump’s advisers are urging him to break a major promise on climate change. And the view from inside Scott Pruitt’s Environmental Protection Agency, where staff members are rebelling against their new boss. Guests: Coral Davenport, who writes about energy and the environment for The New York Times; Mike Cox, a former E.P.A. official. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </description>
      <itunes:title>Wednesday, April 19, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Why so many of President Trump’s advisers are urging him to break a major promise on climate change. And the view from inside Scott Pruitt’s Environmental Protection Agency, where staff members are rebelling against their new boss. Guests: Coral Davenport, who writes about energy and the environment for The New York Times; Mike Cox, a former E.P.A. official. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[Why so many of President Trump’s advisers are urging him to break a major promise on climate change. And the view from inside Scott Pruitt’s Environmental Protection Agency, where staff members are rebelling against their new boss. Guests: Coral Davenport, who writes about energy and the environment for The New York Times; Mike Cox, a former E.P.A. official. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2fqizVbbb5Cfzb_AnOs-PwSPNw1dYH9Cbx9TQe5_36M</guid>
      <pubDate>Wed, 19 Apr 2017 09:43:04 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/19/podcasts/the-daily/trump-paris-climate-accord.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/dba68d92-16bd-4fb0-82d7-0dbbef4386ff.mp3" type="audio/mpeg" length="19764453"/>
    </item>
    <item>
      <title>Tuesday, April 18, 2017</title>
      <description>
        <![CDATA[What did we learn about the newest member of the Supreme Court, Justice Neil Gorsuch, from his first day on the job? And why would a democratic country voluntarily make itself more authoritarian? Guests: Adam Liptak, our Supreme Court reporter; and Patrick Kingsley, a foreign correspondent based in Turkey. For more information on today’s episode, visit http://nyti.ms/2oryRGw.]]>
      </description>
      <itunes:title>Tuesday, April 18, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What did we learn about the newest member of the Supreme Court, Justice Neil Gorsuch, from his first day on the job? And why would a democratic country voluntarily make itself more authoritarian? Guests: Adam Liptak, our Supreme Court reporter; and Patrick Kingsley, a foreign correspondent based in Turkey. For more information on today’s episode, visit http://nyti.ms/2oryRGw.</itunes:summary>
      <content:encoded>
        <![CDATA[What did we learn about the newest member of the Supreme Court, Justice Neil Gorsuch, from his first day on the job? And why would a democratic country voluntarily make itself more authoritarian? Guests: Adam Liptak, our Supreme Court reporter; and Patrick Kingsley, a foreign correspondent based in Turkey. For more information on today’s episode, visit http://nyti.ms/2oryRGw.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bM3RJ24WOq8yQvlCvavsvzAWGo-HABMqLSiATKB4hOI</guid>
      <pubDate>Tue, 18 Apr 2017 09:35:47 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/18/podcasts/the-daily/neil-gorsuchs-first-day.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0979c564-3a04-45b7-b7ab-9b4e2f072315.mp3" type="audio/mpeg" length="16208457"/>
    </item>
    <item>
      <title>Monday, April 17, 2017</title>
      <description>
        <![CDATA[Sabotage and diplomacy. A look at the two ways the United States is dealing with North Korea’s nuclear threat. Guests: David E. Sanger, the chief Washington correspondent for The New York Times who recently returned from Russia; Max Fisher and Amanda Taub, who write the Interpreter column. For more information on today’s episode, visit http://nyti.ms/2pAUgi2.]]>
      </description>
      <itunes:title>Monday, April 17, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Sabotage and diplomacy. A look at the two ways the United States is dealing with North Korea’s nuclear threat. Guests: David E. Sanger, the chief Washington correspondent for The New York Times who recently returned from Russia; Max Fisher and Amanda Taub, who write the Interpreter column. For more information on today’s episode, visit http://nyti.ms/2pAUgi2.</itunes:summary>
      <content:encoded>
        <![CDATA[Sabotage and diplomacy. A look at the two ways the United States is dealing with North Korea’s nuclear threat. Guests: David E. Sanger, the chief Washington correspondent for The New York Times who recently returned from Russia; Max Fisher and Amanda Taub, who write the Interpreter column. For more information on today’s episode, visit http://nyti.ms/2pAUgi2.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_oppQk2u46U6fJKKiKdpmxt6DGviuRK9n1ow8q-vKHE</guid>
      <pubDate>Mon, 17 Apr 2017 09:45:17 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/17/podcasts/the-daily/north-korea-sabotage-and-diplomacy.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:35</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/aa1cf7b7-1d7c-488f-a3e5-faaaa6b09653.mp3" type="audio/mpeg" length="21695007"/>
    </item>
    <item>
      <title>Friday, April 14, 2017</title>
      <description>
        <![CDATA[How do we reconcile unexpected American military action  overseas with President Trump’s isolationist campaign rhetoric? Guests: Helene Cooper, a reporter in Washington who covers the Pentagon; Rick Perlstein, who writes for The Times Magazine. For more information on today’s episode, visit http://nyti.ms/2omilHM.]]>
      </description>
      <itunes:title>Friday, April 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How do we reconcile unexpected American military action  overseas with President Trump’s isolationist campaign rhetoric? Guests: Helene Cooper, a reporter in Washington who covers the Pentagon; Rick Perlstein, who writes for The Times Magazine. For more information on today’s episode, visit http://nyti.ms/2omilHM.</itunes:summary>
      <content:encoded>
        <![CDATA[How do we reconcile unexpected American military action  overseas with President Trump’s isolationist campaign rhetoric? Guests: Helene Cooper, a reporter in Washington who covers the Pentagon; Rick Perlstein, who writes for The Times Magazine. For more information on today’s episode, visit http://nyti.ms/2omilHM.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1zUMAAqI8RlmXBQXG861GuTP8Aq-TKHszgkWNQlJ0YY</guid>
      <pubDate>Fri, 14 Apr 2017 10:00:52 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/14/podcasts/the-daily/the-daily-how-the-us-military-interprets-america-first.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:26:11</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/41d31524-7386-415c-8cc8-1ea4f4da1ad9.mp3" type="audio/mpeg" length="25150693"/>
    </item>
    <item>
      <title>Thursday, April 13, 2017</title>
      <description>
        <![CDATA[A week ago, President Trump was accused of being a tool of President Vladimir V. Putin. Now, he says ties with Moscow are at an all-time low. What is going on between the United States and Russia? Guest: David E. Sanger, who is currently in Moscow. For more information on today’s episode, visit http://nyti.ms/2pp7bqn.]]>
      </description>
      <itunes:title>Thursday, April 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>A week ago, President Trump was accused of being a tool of President Vladimir V. Putin. Now, he says ties with Moscow are at an all-time low. What is going on between the United States and Russia? Guest: David E. Sanger, who is currently in Moscow. For more information on today’s episode, visit http://nyti.ms/2pp7bqn.</itunes:summary>
      <content:encoded>
        <![CDATA[A week ago, President Trump was accused of being a tool of President Vladimir V. Putin. Now, he says ties with Moscow are at an all-time low. What is going on between the United States and Russia? Guest: David E. Sanger, who is currently in Moscow. For more information on today’s episode, visit http://nyti.ms/2pp7bqn.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/erO5Hoe6bPYZtBW-c_BDUp-7_ydjY_7j7yG0V2ON1PI</guid>
      <pubDate>Thu, 13 Apr 2017 09:46:34 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/13/podcasts/the-daily/the-daily-whats-going-on-with-the-us-and-russia.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0043f8e4-391d-4c79-9293-9213fb3e4426.mp3" type="audio/mpeg" length="15564800"/>
    </item>
    <item>
      <title>Wednesday, April 12, 2017</title>
      <description>
        <![CDATA[The relationship between two key figures in the White House, Stephen K. Bannon and Jared Kushner, has deteriorated to the point of breakdown. Is Mr. Bannon in trouble? Guest: Jeremy W. Peters, who has been covering the story from Washington. For more information on today’s episode, visit http://nyti.ms/2osfGj3.]]>
      </description>
      <itunes:title>Wednesday, April 12, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The relationship between two key figures in the White House, Stephen K. Bannon and Jared Kushner, has deteriorated to the point of breakdown. Is Mr. Bannon in trouble? Guest: Jeremy W. Peters, who has been covering the story from Washington. For more information on today’s episode, visit http://nyti.ms/2osfGj3.</itunes:summary>
      <content:encoded>
        <![CDATA[The relationship between two key figures in the White House, Stephen K. Bannon and Jared Kushner, has deteriorated to the point of breakdown. Is Mr. Bannon in trouble? Guest: Jeremy W. Peters, who has been covering the story from Washington. For more information on today’s episode, visit http://nyti.ms/2osfGj3.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/MU82qZsnmeu3XS3VjkOGkFUVLJuuoLEZywBH4bL_K2s</guid>
      <pubDate>Wed, 12 Apr 2017 10:05:08 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/12/podcasts/the-daily/steve-bannon.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/93ca9a31-1bc3-472f-9c4f-9ac198fcc105.mp3" type="audio/mpeg" length="16713351"/>
    </item>
    <item>
      <title>Tuesday, April 11, 2017</title>
      <description>
        <![CDATA[How did Bashar al-Assad, a mild-mannered ophthalmologist, become a ruler who uses chemical weapons against his own people? And why is President Trump rejecting Mr. Assad, even as he is embracing another Middle Eastern leader with a reputation for brutality. Guests: Ben Hubbard, who covers the Middle East for The Times; Rukmini Callimachi, who writes about the Islamic State. For more information on today’s episode, visit http://nyti.ms/2p79Cur.]]>
      </description>
      <itunes:title>Tuesday, April 11, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How did Bashar al-Assad, a mild-mannered ophthalmologist, become a ruler who uses chemical weapons against his own people? And why is President Trump rejecting Mr. Assad, even as he is embracing another Middle Eastern leader with a reputation for brutality. Guests: Ben Hubbard, who covers the Middle East for The Times; Rukmini Callimachi, who writes about the Islamic State. For more information on today’s episode, visit http://nyti.ms/2p79Cur.</itunes:summary>
      <content:encoded>
        <![CDATA[How did Bashar al-Assad, a mild-mannered ophthalmologist, become a ruler who uses chemical weapons against his own people? And why is President Trump rejecting Mr. Assad, even as he is embracing another Middle Eastern leader with a reputation for brutality. Guests: Ben Hubbard, who covers the Middle East for The Times; Rukmini Callimachi, who writes about the Islamic State. For more information on today’s episode, visit http://nyti.ms/2p79Cur.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/K57n8fh25s75uIMcLMnaWp3HSu9n2i90sdROiFMGqKk</guid>
      <pubDate>Tue, 11 Apr 2017 09:54:59 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/11/podcasts/the-daily/bashar-al-assad.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:53</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0e4ac0db-ddac-4f58-9d9d-dde340fcd5d8.mp3" type="audio/mpeg" length="20064548"/>
    </item>
    <item>
      <title>Monday, April 10, 2017</title>
      <description>
        <![CDATA[Why President Trump’s decision to launch missiles into Syria is at odds with nearly everything he has said about Syria. Guest: Peter Baker, the chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2oU6HZq.]]>
      </description>
      <itunes:title>Monday, April 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Why President Trump’s decision to launch missiles into Syria is at odds with nearly everything he has said about Syria. Guest: Peter Baker, the chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2oU6HZq.</itunes:summary>
      <content:encoded>
        <![CDATA[Why President Trump’s decision to launch missiles into Syria is at odds with nearly everything he has said about Syria. Guest: Peter Baker, the chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2oU6HZq.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/LwtksnxvYustGmbl0VMFgPeBzEFDQyImW1Yas0p8Jbs</guid>
      <pubDate>Mon, 10 Apr 2017 09:51:08 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/10/podcasts/the-daily/the-daily-trumps-syria-evolution.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:12:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/85638caf-e34d-4864-84de-64100c3f7c53.mp3" type="audio/mpeg" length="12102844"/>
    </item>
    <item>
      <title>Friday, April 7, 2017</title>
      <description>
        <![CDATA[The United States has launched 59 tomahawk missiles at an air base in Syria — a swift and decisive response to the Syrian government’s chemical weapons attack this week. And we navigate a historic day in the Senate. Guests: Helene Cooper, the Pentagon correspondent for The New York Times; Jennifer Steinhauer, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2oMOPPR.]]>
      </description>
      <itunes:title>Friday, April 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The United States has launched 59 tomahawk missiles at an air base in Syria — a swift and decisive response to the Syrian government’s chemical weapons attack this week. And we navigate a historic day in the Senate. Guests: Helene Cooper, the Pentagon correspondent for The New York Times; Jennifer Steinhauer, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2oMOPPR.</itunes:summary>
      <content:encoded>
        <![CDATA[The United States has launched 59 tomahawk missiles at an air base in Syria — a swift and decisive response to the Syrian government’s chemical weapons attack this week. And we navigate a historic day in the Senate. Guests: Helene Cooper, the Pentagon correspondent for The New York Times; Jennifer Steinhauer, who covers Congress. For more information on today’s episode, visit http://nyti.ms/2oMOPPR.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/CC2ZUqCswUSHRLVP_x2qDFWLujgKEiemrQxgXA5iGxg</guid>
      <pubDate>Fri, 07 Apr 2017 09:49:39 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/07/podcasts/the-daily/the-daily-syria-strike-and-senate-standoff.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4c6b4b94-5f0e-4aab-b5df-48bbdd993192.mp3" type="audio/mpeg" length="19616078"/>
    </item>
    <item>
      <title>Thursday, April 6, 2017</title>
      <description>
        <![CDATA[President Trump sits down for an exclusive interview with The New York Times. How a conversation about infrastructure veered off into allegations of spying, new thinking on the chemical attacks in Syria and a response to the sexual harassment claims against Bill O’Reilly. Plus: Trump and China. Guests: Maggie Haberman and Glenn Thrush, who interviewed the president; Peter Goodman, a reporter based in London. For more information on today’s episode, visit http://nyti.ms/2oQILG8.]]>
      </description>
      <itunes:title>Thursday, April 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump sits down for an exclusive interview with The New York Times. How a conversation about infrastructure veered off into allegations of spying, new thinking on the chemical attacks in Syria and a response to the sexual harassment claims against Bill O’Reilly. Plus: Trump and China. Guests: Maggie Haberman and Glenn Thrush, who interviewed the president; Peter Goodman, a reporter based in London. For more information on today’s episode, visit http://nyti.ms/2oQILG8.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump sits down for an exclusive interview with The New York Times. How a conversation about infrastructure veered off into allegations of spying, new thinking on the chemical attacks in Syria and a response to the sexual harassment claims against Bill O’Reilly. Plus: Trump and China. Guests: Maggie Haberman and Glenn Thrush, who interviewed the president; Peter Goodman, a reporter based in London. For more information on today’s episode, visit http://nyti.ms/2oQILG8.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/lXboa1Oj09BNo1DmnEHbgOUYJWssV6PfKgj0Zs4BQ6k</guid>
      <pubDate>Thu, 06 Apr 2017 09:35:36 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/06/podcasts/the-daily/the-daily-with-trump-in-the-oval-office.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:41</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9d94f697-a0d4-4f79-802a-30883d299571.mp3" type="audio/mpeg" length="20830249"/>
    </item>
    <item>
      <title>Wednesday, April 5, 2017</title>
      <description>
        <![CDATA[President Trump treats the Syrian president as a potential ally. Will Tuesday’s deadly chemical weapons attack change that? Plus: the story of one village election that has become as much about Mr. Trump as about the candidates on the ballot. Guests: Anne Barnard, the Beirut bureau chief; Julie Bosman, who covers the midwest for the Times. For more information on today’s episode, visit http://nyti.ms/2nf8BmP.]]>
      </description>
      <itunes:title>Wednesday, April 5, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump treats the Syrian president as a potential ally. Will Tuesday’s deadly chemical weapons attack change that? Plus: the story of one village election that has become as much about Mr. Trump as about the candidates on the ballot. Guests: Anne Barnard, the Beirut bureau chief; Julie Bosman, who covers the midwest for the Times. For more information on today’s episode, visit http://nyti.ms/2nf8BmP.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump treats the Syrian president as a potential ally. Will Tuesday’s deadly chemical weapons attack change that? Plus: the story of one village election that has become as much about Mr. Trump as about the candidates on the ballot. Guests: Anne Barnard, the Beirut bureau chief; Julie Bosman, who covers the midwest for the Times. For more information on today’s episode, visit http://nyti.ms/2nf8BmP.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/RwtrxSyfiod7cPhShBFS4ZI11t4rY3M1ofGvKUBE5oo</guid>
      <pubDate>Wed, 05 Apr 2017 09:44:51 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/05/podcasts/the-daily/the-daily-trumps-calculus-on-syria.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c12bb43f-709b-4328-9270-6e97595a0fae.mp3" type="audio/mpeg" length="19284636"/>
    </item>
    <item>
      <title>Tuesday, April 4, 2017</title>
      <description>
        <![CDATA[In 2013, Republicans in the Senate warned Democrats that they would soon regret a decision so extreme that it’s called “going nuclear.” That prediction may prove true this week, as Republicans prepare to go one step further to ensure the confirmation of Judge Neil M. Gorsuch to the Supreme Court. Guests: Jonathan Weisman and Jennifer Steinhauer, reporters at The New York Times. For more information on today’s episode, visit http://nyti.ms/2naaW2G.]]>
      </description>
      <itunes:title>Tuesday, April 4, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In 2013, Republicans in the Senate warned Democrats that they would soon regret a decision so extreme that it’s called “going nuclear.” That prediction may prove true this week, as Republicans prepare to go one step further to ensure the confirmation of Judge Neil M. Gorsuch to the Supreme Court. Guests: Jonathan Weisman and Jennifer Steinhauer, reporters at The New York Times. For more information on today’s episode, visit http://nyti.ms/2naaW2G.</itunes:summary>
      <content:encoded>
        <![CDATA[In 2013, Republicans in the Senate warned Democrats that they would soon regret a decision so extreme that it’s called “going nuclear.” That prediction may prove true this week, as Republicans prepare to go one step further to ensure the confirmation of Judge Neil M. Gorsuch to the Supreme Court. Guests: Jonathan Weisman and Jennifer Steinhauer, reporters at The New York Times. For more information on today’s episode, visit http://nyti.ms/2naaW2G.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/kj3HGYIznOHt7mzxjaT-FXFTMzpGzEdgckrgWsDmeis</guid>
      <pubDate>Tue, 04 Apr 2017 10:19:54 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/04/podcasts/the-daily/the-daily-going-nuclear-on-neil-gorsuch.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:25</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7353b52b-ae0b-4418-ac83-8607c68b80dc.mp3" type="audio/mpeg" length="16720875"/>
    </item>
    <item>
      <title>Monday, April 3, 2017</title>
      <description>
        <![CDATA[Inside the New York Times investigation into accusations of harassment and other inappropriate behavior by Bill O’Reilly, and the lengths to which Fox News went to to keep the allegations quiet. Guest: Emily Steel, who has spent the last few months investigating this story. For more information on today’s episode, visit http://nyti.ms/2oHxCV8.]]>
      </description>
      <itunes:title>Monday, April 3, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Inside the New York Times investigation into accusations of harassment and other inappropriate behavior by Bill O’Reilly, and the lengths to which Fox News went to to keep the allegations quiet. Guest: Emily Steel, who has spent the last few months investigating this story. For more information on today’s episode, visit http://nyti.ms/2oHxCV8.</itunes:summary>
      <content:encoded>
        <![CDATA[Inside the New York Times investigation into accusations of harassment and other inappropriate behavior by Bill O’Reilly, and the lengths to which Fox News went to to keep the allegations quiet. Guest: Emily Steel, who has spent the last few months investigating this story. For more information on today’s episode, visit http://nyti.ms/2oHxCV8.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aF7wCEf8StGRvwpCTZRmw4ZwZ_hli354V8J_yPwSqaQ</guid>
      <pubDate>Mon, 03 Apr 2017 09:44:20 -0000</pubDate>
      <link>https://www.nytimes.com/2017/04/03/podcasts/the-daily/bill-oreilly-investigation.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:38</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/0a431754-2653-439e-80b6-4176bd8f1a1e.mp3" type="audio/mpeg" length="17895340"/>
    </item>
    <item>
      <title>Friday, March 31, 2017</title>
      <description>
        <![CDATA[The latest twist in a bizarre Washington drama that began 10 days ago, and what a technological development tells us about progress and repression in India. Guests: Matt Rosenberg, who is tracking the developments with Representative Devin Nunes; Ellen Barry, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit http://nyti.ms/2n3yoyv.]]>
      </description>
      <itunes:title>Friday, March 31, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The latest twist in a bizarre Washington drama that began 10 days ago, and what a technological development tells us about progress and repression in India. Guests: Matt Rosenberg, who is tracking the developments with Representative Devin Nunes; Ellen Barry, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit http://nyti.ms/2n3yoyv.</itunes:summary>
      <content:encoded>
        <![CDATA[The latest twist in a bizarre Washington drama that began 10 days ago, and what a technological development tells us about progress and repression in India. Guests: Matt Rosenberg, who is tracking the developments with Representative Devin Nunes; Ellen Barry, the South Asia bureau chief for The New York Times. For more information on today’s episode, visit http://nyti.ms/2n3yoyv.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_uFTLdgYepL8kr6ngz7ImNm2s91AgoMDgyhVvPpYQYc</guid>
      <pubDate>Fri, 31 Mar 2017 10:02:19 -0000</pubDate>
      <link>https://www.nytimes.com/2017/03/31/podcasts/the-daily/phone-romeos-devin-nunes.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ea086bb4-787e-419b-adfb-c49ad2e7c92b.mp3" type="audio/mpeg" length="20483761"/>
    </item>
    <item>
      <title>Thursday, March 30, 2017</title>
      <description>
        <![CDATA[The climate change battle through one coal miner's eyes. And why Scott Pruitt, President Trump's E.P.A. chief, confounds both sides. Guests: Coral Davenport, who covers energy and the environment for The New York Times; Mark Gray, who spent 38 years working in the coal mines of Kentucky. For more information on today’s episode, visit http://nyti.ms/2nPhB1g.]]>
      </description>
      <itunes:title>Thursday, March 30, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The climate change battle through one coal miner's eyes. And why Scott Pruitt, President Trump's E.P.A. chief, confounds both sides. Guests: Coral Davenport, who covers energy and the environment for The New York Times; Mark Gray, who spent 38 years working in the coal mines of Kentucky. For more information on today’s episode, visit http://nyti.ms/2nPhB1g.</itunes:summary>
      <content:encoded>
        <![CDATA[The climate change battle through one coal miner's eyes. And why Scott Pruitt, President Trump's E.P.A. chief, confounds both sides. Guests: Coral Davenport, who covers energy and the environment for The New York Times; Mark Gray, who spent 38 years working in the coal mines of Kentucky. For more information on today’s episode, visit http://nyti.ms/2nPhB1g.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/yVOyEX1NsrFs8-F7IT2kbHMuT17HPmVCZujekqgxd-I</guid>
      <pubDate>Thu, 30 Mar 2017 09:32:58 -0000</pubDate>
      <link>https://www.nytimes.com/2017/03/30/podcasts/the-daily/scott-pruitt-coal-mining.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:20</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f656f9e1-ddf0-49f3-9fe9-5e091c6f0b7a.mp3" type="audio/mpeg" length="21452173"/>
    </item>
    <item>
      <title>Wednesday, March 29, 2017</title>
      <description>
        <![CDATA[The message was hardly subtle: coal miners at the Environmental Protection Agency. How President Trump is promising to do away with Obama’s legacy on climate change. Plus: the latest “Brexit” news. Guests: Coral Davenport, who covers energy and the environment for The Times; Peter Goodman, a Times reporter in London. For more information on today’s episode, visit http://nyti.ms/2odWwys.]]>
      </description>
      <itunes:title>Wednesday, March 29, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The message was hardly subtle: coal miners at the Environmental Protection Agency. How President Trump is promising to do away with Obama’s legacy on climate change. Plus: the latest “Brexit” news. Guests: Coral Davenport, who covers energy and the environment for The Times; Peter Goodman, a Times reporter in London. For more information on today’s episode, visit http://nyti.ms/2odWwys.</itunes:summary>
      <content:encoded>
        <![CDATA[The message was hardly subtle: coal miners at the Environmental Protection Agency. How President Trump is promising to do away with Obama’s legacy on climate change. Plus: the latest “Brexit” news. Guests: Coral Davenport, who covers energy and the environment for The Times; Peter Goodman, a Times reporter in London. For more information on today’s episode, visit http://nyti.ms/2odWwys.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Ic9ouRyBUsbaFz5wbPXFuX1uCAwOACo-ywSkQ6m-VZw</guid>
      <pubDate>Wed, 29 Mar 2017 09:51:43 -0000</pubDate>
      <link>http://nyti.ms/2odWwys</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cdb0d9da-0912-4e3f-a5cc-8ed49707834f.mp3" type="audio/mpeg" length="19960476"/>
    </item>
    <item>
      <title>Tuesday, March 28, 2017</title>
      <description>
        <![CDATA[President Trump wanted a faster battle plan. Iraqi leaders wanted quicker airstrikes. Is that why about 200 civilians are now dead in Mosul? Guests: Tim Arango and Rukmini Callimachi, New York Times reporters who have reported from Iraq. For more information on today’s episode, visit http://nyti.ms/2obiy4v.]]>
      </description>
      <itunes:title>Tuesday, March 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump wanted a faster battle plan. Iraqi leaders wanted quicker airstrikes. Is that why about 200 civilians are now dead in Mosul? Guests: Tim Arango and Rukmini Callimachi, New York Times reporters who have reported from Iraq. For more information on today’s episode, visit http://nyti.ms/2obiy4v.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump wanted a faster battle plan. Iraqi leaders wanted quicker airstrikes. Is that why about 200 civilians are now dead in Mosul? Guests: Tim Arango and Rukmini Callimachi, New York Times reporters who have reported from Iraq. For more information on today’s episode, visit http://nyti.ms/2obiy4v.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/BgPNSQmyWLqJy9xS_0J16ZoCXWjTb_ZkUd-9M66HjMM</guid>
      <pubDate>Tue, 28 Mar 2017 09:46:54 -0000</pubDate>
      <link>https://www.nytimes.com/2017/03/28/podcasts/the-daily/the-daily-mosul.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:14:36</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6f63e09c-766c-473b-9a16-21cea749bdc9.mp3" type="audio/mpeg" length="14018769"/>
    </item>
    <item>
      <title>Monday, March 27, 2017</title>
      <description>
        <![CDATA[Now that the Republican health care bill is dead, what is the future of the Democratic plan it was supposed to replace? And we talk with one of the ordinary Canadians who signed on for a grand social experiment: adopting Syrian refugees for one year. What happens as that year ends? Guests: Margot Sanger-Katz, who has been reporting on our health care system for years; Jodi Kantor and Catrin Einhorn, who have been writing about Syrian refugees in Canada; Peggy Karas, a Canadian sponsor of a refugee family. For more information on today’s episode, visit http://nyti.ms/2odVsdT.]]>
      </description>
      <itunes:title>Monday, March 27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Now that the Republican health care bill is dead, what is the future of the Democratic plan it was supposed to replace? And we talk with one of the ordinary Canadians who signed on for a grand social experiment: adopting Syrian refugees for one year. What happens as that year ends? Guests: Margot Sanger-Katz, who has been reporting on our health care system for years; Jodi Kantor and Catrin Einhorn, who have been writing about Syrian refugees in Canada; Peggy Karas, a Canadian sponsor of a refugee family. For more information on today’s episode, visit http://nyti.ms/2odVsdT.</itunes:summary>
      <content:encoded>
        <![CDATA[Now that the Republican health care bill is dead, what is the future of the Democratic plan it was supposed to replace? And we talk with one of the ordinary Canadians who signed on for a grand social experiment: adopting Syrian refugees for one year. What happens as that year ends? Guests: Margot Sanger-Katz, who has been reporting on our health care system for years; Jodi Kantor and Catrin Einhorn, who have been writing about Syrian refugees in Canada; Peggy Karas, a Canadian sponsor of a refugee family. For more information on today’s episode, visit http://nyti.ms/2odVsdT.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/scrXBVgYrIjjB5OFgDc-rvBGsg_tZCoIkQ1HGZVcx1s</guid>
      <pubDate>Mon, 27 Mar 2017 10:04:18 -0000</pubDate>
      <link>https://www.nytimes.com/2017/03/27/podcasts/the-daily/canada-refugees-health-care-bill.html</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:39</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/37966132-d38a-4247-a5f8-43ac71471dbf.mp3" type="audio/mpeg" length="21747670"/>
    </item>
    <item>
      <title>Friday, March 24, 2017</title>
      <description>
        <![CDATA[It was supposed to be a historic day for Republicans, with the House voting to repeal President Obama’s health care law. At least that was the idea. What went awry? And we look at a battle over school choice in Iowa that may be a preview for a larger national fight over the White House’s vision for American education. Guests: Jennifer Steinhauer, who has been tracking the House health care vote; Dana Goldstein, who covers education for the Times. For more information on today’s episode, visit http://nyti.ms/2nmKKOS.]]>
      </description>
      <itunes:title>Friday, March 24, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>It was supposed to be a historic day for Republicans, with the House voting to repeal President Obama’s health care law. At least that was the idea. What went awry? And we look at a battle over school choice in Iowa that may be a preview for a larger national fight over the White House’s vision for American education. Guests: Jennifer Steinhauer, who has been tracking the House health care vote; Dana Goldstein, who covers education for the Times. For more information on today’s episode, visit http://nyti.ms/2nmKKOS.</itunes:summary>
      <content:encoded>
        <![CDATA[It was supposed to be a historic day for Republicans, with the House voting to repeal President Obama’s health care law. At least that was the idea. What went awry? And we look at a battle over school choice in Iowa that may be a preview for a larger national fight over the White House’s vision for American education. Guests: Jennifer Steinhauer, who has been tracking the House health care vote; Dana Goldstein, who covers education for the Times. For more information on today’s episode, visit http://nyti.ms/2nmKKOS.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/U_za7MhPEhLK0_2q2ntGqx81gLvgpFAnLZUWefNsjBY</guid>
      <pubDate>Fri, 24 Mar 2017 09:58:25 -0000</pubDate>
      <link>http://nyti.ms/2nmKKOS</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:29</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/30fac83c-3e17-4203-83a3-420418440fc8.mp3" type="audio/mpeg" length="21599294"/>
    </item>
    <item>
      <title>Thursday, March 23, 2017</title>
      <description>
        <![CDATA[Republicans control the government  So why, as they head to a vote on the Republican health care plan, is the bill so disliked — and the party so divided? Plus: a view from the scene of yesterday’s deadly attacks in London. Guests: Jennifer Steinhauer, who is covering the health care debate for The New York Times; Katrin Bennhold, who lives in London and is reporting on the attack there. For more information on today’s episode, visit http://nyti.ms/2nXmcib.]]>
      </description>
      <itunes:title>Thursday, March 23, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Republicans control the government  So why, as they head to a vote on the Republican health care plan, is the bill so disliked — and the party so divided? Plus: a view from the scene of yesterday’s deadly attacks in London. Guests: Jennifer Steinhauer, who is covering the health care debate for The New York Times; Katrin Bennhold, who lives in London and is reporting on the attack there. For more information on today’s episode, visit http://nyti.ms/2nXmcib.</itunes:summary>
      <content:encoded>
        <![CDATA[Republicans control the government  So why, as they head to a vote on the Republican health care plan, is the bill so disliked — and the party so divided? Plus: a view from the scene of yesterday’s deadly attacks in London. Guests: Jennifer Steinhauer, who is covering the health care debate for The New York Times; Katrin Bennhold, who lives in London and is reporting on the attack there. For more information on today’s episode, visit http://nyti.ms/2nXmcib.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/_cPw9igDChSXFCBf1iWCBL8c-ZWGup8-D_XtU9303nA</guid>
      <pubDate>Thu, 23 Mar 2017 09:44:03 -0000</pubDate>
      <link>http://nyti.ms/2nXmcib</link>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:15</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/877fd655-6b0c-487e-869d-ea14efb2999f.mp3" type="audio/mpeg" length="19443043"/>
    </item>
    <item>
      <title>Wednesday, March 22, 2017</title>
      <description>
        <![CDATA[On the second day of the confirmation hearings for Judge Neil M. Gorsuch, senators want to know about his independence from the man who nominated him. Guests: Adam Liptak, who covers the Supreme Court for The New York Times; Cynthia Orr, the plaintiff in an important case that Judge Gorsuch decided. For more information on today’s episode, visit http://nyti.ms/2nrXHsE.]]>
      </description>
      <itunes:title>Wednesday, March 22, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>On the second day of the confirmation hearings for Judge Neil M. Gorsuch, senators want to know about his independence from the man who nominated him. Guests: Adam Liptak, who covers the Supreme Court for The New York Times; Cynthia Orr, the plaintiff in an important case that Judge Gorsuch decided. For more information on today’s episode, visit http://nyti.ms/2nrXHsE.</itunes:summary>
      <content:encoded>
        <![CDATA[On the second day of the confirmation hearings for Judge Neil M. Gorsuch, senators want to know about his independence from the man who nominated him. Guests: Adam Liptak, who covers the Supreme Court for The New York Times; Cynthia Orr, the plaintiff in an important case that Judge Gorsuch decided. For more information on today’s episode, visit http://nyti.ms/2nrXHsE.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sDarNTDUyLW2OOlj3BQeSasSTeP-cDEaACabz88iPdM</guid>
      <pubDate>Wed, 22 Mar 2017 09:59:25 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:50</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/4b058d8d-70cb-46bb-a7aa-bc71eca9d9e3.mp3" type="audio/mpeg" length="18091781"/>
    </item>
    <item>
      <title>Tuesday, March 21, 2017</title>
      <description>
        <![CDATA[He said it under oath. James Comey, the head of the F.B.I., confirms at a House hearing that his agency is investigating the Trump campaign’s ties to Russia, and says it will pursue it “no matter how long that takes.” And why the president’s Supreme Court nominee is likely to say almost nothing of substance at his confirmation hearings this week. Guests: Matt Apuzzo, who covers the F.B.I. for The Times; Barbara Dury, a producer at Retro Report. For more information on today’s episode, visit http://nyti.ms/2n5WeGA.]]>
      </description>
      <itunes:title>Tuesday, March 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>He said it under oath. James Comey, the head of the F.B.I., confirms at a House hearing that his agency is investigating the Trump campaign’s ties to Russia, and says it will pursue it “no matter how long that takes.” And why the president’s Supreme Court nominee is likely to say almost nothing of substance at his confirmation hearings this week. Guests: Matt Apuzzo, who covers the F.B.I. for The Times; Barbara Dury, a producer at Retro Report. For more information on today’s episode, visit http://nyti.ms/2n5WeGA.</itunes:summary>
      <content:encoded>
        <![CDATA[He said it under oath. James Comey, the head of the F.B.I., confirms at a House hearing that his agency is investigating the Trump campaign’s ties to Russia, and says it will pursue it “no matter how long that takes.” And why the president’s Supreme Court nominee is likely to say almost nothing of substance at his confirmation hearings this week. Guests: Matt Apuzzo, who covers the F.B.I. for The Times; Barbara Dury, a producer at Retro Report. For more information on today’s episode, visit http://nyti.ms/2n5WeGA.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/9c7yIO-PCMdJdnxF7CmwMte7LvpfLLXk15O0Kl1v6Ek</guid>
      <pubDate>Tue, 21 Mar 2017 10:00:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:21:18</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/9917590c-687c-4cb3-8f11-6d69e69c0e3d.mp3" type="audio/mpeg" length="20456594"/>
    </item>
    <item>
      <title>Monday, March 20, 2017</title>
      <description>
        <![CDATA[There is no knock on the door, just the sound of a SWAT team smashing through it. Times reporter Kevin Sack talks about his year-long investigation into a controversial police tactic. For more information on today’s episode, visit http://nyti.ms/2nAHfHi.]]>
      </description>
      <itunes:title>Monday, March 20, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>There is no knock on the door, just the sound of a SWAT team smashing through it. Times reporter Kevin Sack talks about his year-long investigation into a controversial police tactic. For more information on today’s episode, visit http://nyti.ms/2nAHfHi.</itunes:summary>
      <content:encoded>
        <![CDATA[There is no knock on the door, just the sound of a SWAT team smashing through it. Times reporter Kevin Sack talks about his year-long investigation into a controversial police tactic. For more information on today’s episode, visit http://nyti.ms/2nAHfHi.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-w5LiqvcwmSZwz_Se61TzzCv4Nrw9h6R-7Un2hCRHJU</guid>
      <pubDate>Mon, 20 Mar 2017 09:53:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/25893b02-7923-4dd2-9c69-0110e00c3807.mp3" type="audio/mpeg" length="16307931"/>
    </item>
    <item>
      <title>Friday, March 17, 2017</title>
      <description>
        <![CDATA[As a candidate, Donald J. Trump called for a total Muslim ban. Now that he’s president, the courts won’t let him forget it. And as the White House fights to protect the travel ban, we discuss the immigration story of our vice president, Mike Pence. Guests: Adam Liptak, the Supreme Court reporter for The New York Times; Sheryl Gay Stolberg, The Times’s domestic affairs correspondent. For more information on today’s episode, visit http://nyti.ms/2nQS8lw.]]>
      </description>
      <itunes:title>Friday, March 17, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As a candidate, Donald J. Trump called for a total Muslim ban. Now that he’s president, the courts won’t let him forget it. And as the White House fights to protect the travel ban, we discuss the immigration story of our vice president, Mike Pence. Guests: Adam Liptak, the Supreme Court reporter for The New York Times; Sheryl Gay Stolberg, The Times’s domestic affairs correspondent. For more information on today’s episode, visit http://nyti.ms/2nQS8lw.</itunes:summary>
      <content:encoded>
        <![CDATA[As a candidate, Donald J. Trump called for a total Muslim ban. Now that he’s president, the courts won’t let him forget it. And as the White House fights to protect the travel ban, we discuss the immigration story of our vice president, Mike Pence. Guests: Adam Liptak, the Supreme Court reporter for The New York Times; Sheryl Gay Stolberg, The Times’s domestic affairs correspondent. For more information on today’s episode, visit http://nyti.ms/2nQS8lw.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NlrZ3d9GVWNof5apGEBOxcTJauRtbyJmekEIxuuxGGY</guid>
      <pubDate>Fri, 17 Mar 2017 10:11:53 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/13d17503-8bef-4d11-bbc4-832294983a9d.mp3" type="audio/mpeg" length="22072424"/>
    </item>
    <item>
      <title>Thursday, March 16, 2017</title>
      <description>
        <![CDATA[President Trump’s plan to deregulate America is underway. He’s starting in the heart of America, with one of Barack Obama’s most cherished regulations. And Mr. Trump will soon meet with Chancellor Angela Merkel of Germany for the first time. Guests: Eric Lipton, an investigative reporter for The Times who’s tracking every regulatory change under the Trump administration; and Alison Smale, The Times’s Berlin bureau chief. For more information on today’s episode, visit http://nyti.ms/2nM3R4b.]]>
      </description>
      <itunes:title>Thursday, March 16, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s plan to deregulate America is underway. He’s starting in the heart of America, with one of Barack Obama’s most cherished regulations. And Mr. Trump will soon meet with Chancellor Angela Merkel of Germany for the first time. Guests: Eric Lipton, an investigative reporter for The Times who’s tracking every regulatory change under the Trump administration; and Alison Smale, The Times’s Berlin bureau chief. For more information on today’s episode, visit http://nyti.ms/2nM3R4b.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump’s plan to deregulate America is underway. He’s starting in the heart of America, with one of Barack Obama’s most cherished regulations. And Mr. Trump will soon meet with Chancellor Angela Merkel of Germany for the first time. Guests: Eric Lipton, an investigative reporter for The Times who’s tracking every regulatory change under the Trump administration; and Alison Smale, The Times’s Berlin bureau chief. For more information on today’s episode, visit http://nyti.ms/2nM3R4b.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/ufZAXCIt_lV0pwq4HAwqfwaLVflTh_LLGyVpGO4qkAU</guid>
      <pubDate>Thu, 16 Mar 2017 10:11:08 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:33</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/b0bcfc56-a8ff-4470-a7c5-7062687427ce.mp3" type="audio/mpeg" length="19743137"/>
    </item>
    <item>
      <title>Wednesday, March 15, 2017</title>
      <description>
        <![CDATA[Eight men. Ten days. An extraordinary plan to rush a series of executions on Arkansas’ death row. Guest: Alan Blinder, the New York Times reporter who is tracking the case. For more information on today’s episode, visit http://nyti.ms/2mwxoym.]]>
      </description>
      <itunes:title>Wednesday, March 15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Eight men. Ten days. An extraordinary plan to rush a series of executions on Arkansas’ death row. Guest: Alan Blinder, the New York Times reporter who is tracking the case. For more information on today’s episode, visit http://nyti.ms/2mwxoym.</itunes:summary>
      <content:encoded>
        <![CDATA[Eight men. Ten days. An extraordinary plan to rush a series of executions on Arkansas’ death row. Guest: Alan Blinder, the New York Times reporter who is tracking the case. For more information on today’s episode, visit http://nyti.ms/2mwxoym.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/F5zE190BXAEx1dHAyjL0zsPCPGgSVrwK2F4Ss7VVR5A</guid>
      <pubDate>Wed, 15 Mar 2017 09:55:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:24</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/907d85ac-0ac2-498e-88c9-8d52d26e2a16.mp3" type="audio/mpeg" length="18625097"/>
    </item>
    <item>
      <title>Tuesday, March 14, 2017</title>
      <description>
        <![CDATA[The rise of the far right in Europe. Why the populism that put Donald J. Trump in the White House is starting to sweep across the Continent, as voters there confront similar questions of national identity and immigration. Guests: Amanda Taub and Max Fisher, who write the Interpreter column for The New York Times. For more information on today’s episode, visit http://nyti.ms/2n9sMC1.]]>
      </description>
      <itunes:title>Tuesday, March 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The rise of the far right in Europe. Why the populism that put Donald J. Trump in the White House is starting to sweep across the Continent, as voters there confront similar questions of national identity and immigration. Guests: Amanda Taub and Max Fisher, who write the Interpreter column for The New York Times. For more information on today’s episode, visit http://nyti.ms/2n9sMC1.</itunes:summary>
      <content:encoded>
        <![CDATA[The rise of the far right in Europe. Why the populism that put Donald J. Trump in the White House is starting to sweep across the Continent, as voters there confront similar questions of national identity and immigration. Guests: Amanda Taub and Max Fisher, who write the Interpreter column for The New York Times. For more information on today’s episode, visit http://nyti.ms/2n9sMC1.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/FB6yfv2K8I87HHPwbbN3d3kIU0pysk1n8MBuXaCuS9s</guid>
      <pubDate>Tue, 14 Mar 2017 09:57:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/f62060ca-d534-47b9-a5fb-1d3bfb5b27b7.mp3" type="audio/mpeg" length="17393371"/>
    </item>
    <item>
      <title>Monday, March 13, 2017</title>
      <description>
        <![CDATA[What the F.B.I.’s most wanted cybercriminal can tell us about how the Russian government has created such a sophisticated hacking program. Guests: Michael Schwirtz, a reporter for The New York Times, and Arkady Bukh, a lawyer who defends accused Russian hackers. For more information on today’s episode, visit http://nyti.ms/2mmTd3i.]]>
      </description>
      <itunes:title>Monday, March 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What the F.B.I.’s most wanted cybercriminal can tell us about how the Russian government has created such a sophisticated hacking program. Guests: Michael Schwirtz, a reporter for The New York Times, and Arkady Bukh, a lawyer who defends accused Russian hackers. For more information on today’s episode, visit http://nyti.ms/2mmTd3i.</itunes:summary>
      <content:encoded>
        <![CDATA[What the F.B.I.’s most wanted cybercriminal can tell us about how the Russian government has created such a sophisticated hacking program. Guests: Michael Schwirtz, a reporter for The New York Times, and Arkady Bukh, a lawyer who defends accused Russian hackers. For more information on today’s episode, visit http://nyti.ms/2mmTd3i.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Frmggj_B7V9Yv2mtYequQ4jV1c_lFsSeBR98MXQfQv8</guid>
      <pubDate>Mon, 13 Mar 2017 09:59:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a11b3a3b-2d82-4e67-84e9-829c3279d5e2.mp3" type="audio/mpeg" length="18378919"/>
    </item>
    <item>
      <title>Friday, March 10, 2017</title>
      <description>
        <![CDATA[As the Republican answer to the Affordable Care Act moves rapidly through Congress, we look at what the repeal of Obamacare might mean for a rural community in West Virginia. And we sample music from “The EP,” a multitrack collection from The New York Times Magazine of songs that help tell us about this moment in time. Guest: Mitch Jacques, a doctor at a rural clinic. For more information on today’s episode, visit http://nyti.ms/2mRziwH.]]>
      </description>
      <itunes:title>Friday, March 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>As the Republican answer to the Affordable Care Act moves rapidly through Congress, we look at what the repeal of Obamacare might mean for a rural community in West Virginia. And we sample music from “The EP,” a multitrack collection from The New York Times Magazine of songs that help tell us about this moment in time. Guest: Mitch Jacques, a doctor at a rural clinic. For more information on today’s episode, visit http://nyti.ms/2mRziwH.</itunes:summary>
      <content:encoded>
        <![CDATA[As the Republican answer to the Affordable Care Act moves rapidly through Congress, we look at what the repeal of Obamacare might mean for a rural community in West Virginia. And we sample music from “The EP,” a multitrack collection from The New York Times Magazine of songs that help tell us about this moment in time. Guest: Mitch Jacques, a doctor at a rural clinic. For more information on today’s episode, visit http://nyti.ms/2mRziwH.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xKQbPKPNeodFW6yZZCPInStkgnydQmMRQvCDl2LwoBE</guid>
      <pubDate>Fri, 10 Mar 2017 10:46:29 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/93b86939-8577-448b-9c32-88cb449d18ac.mp3" type="audio/mpeg" length="21765224"/>
    </item>
    <item>
      <title>Thursday, March 9, 2017</title>
      <description>
        <![CDATA[The sanctuary city movement can be traced to a single Presbyterian minister in 1980s Arizona. We tell the story. Guests: Scott Michels, a producer at Retro Report. For more information on today’s episode, visit http://nyti.ms/2mqkDX9.]]>
      </description>
      <itunes:title>Thursday, March 9, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The sanctuary city movement can be traced to a single Presbyterian minister in 1980s Arizona. We tell the story. Guests: Scott Michels, a producer at Retro Report. For more information on today’s episode, visit http://nyti.ms/2mqkDX9.</itunes:summary>
      <content:encoded>
        <![CDATA[The sanctuary city movement can be traced to a single Presbyterian minister in 1980s Arizona. We tell the story. Guests: Scott Michels, a producer at Retro Report. For more information on today’s episode, visit http://nyti.ms/2mqkDX9.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/FyaeN6SQ68-HvQuVsrsRWo4X7GQIYeExbFlXgKHLk3c</guid>
      <pubDate>Thu, 09 Mar 2017 10:33:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:57</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/18b44c17-9abd-443d-8326-0eefa076a19a.mp3" type="audio/mpeg" length="18194599"/>
    </item>
    <item>
      <title>Wednesday, March 8, 2017</title>
      <description>
        <![CDATA[Why are Republicans revolting against the plan to replace the Affordable Care Act they so hated? We look to history. Then we call Newt Gingrich. Guests: Margot Sanger-Katz, who has been reporting on our health care system for years; Newt Gingrich, a former Republican speaker of the House. For more information on today’s episode, visit http://nyti.ms/2mm4LVi.]]>
      </description>
      <itunes:title>Wednesday, March 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Why are Republicans revolting against the plan to replace the Affordable Care Act they so hated? We look to history. Then we call Newt Gingrich. Guests: Margot Sanger-Katz, who has been reporting on our health care system for years; Newt Gingrich, a former Republican speaker of the House. For more information on today’s episode, visit http://nyti.ms/2mm4LVi.</itunes:summary>
      <content:encoded>
        <![CDATA[Why are Republicans revolting against the plan to replace the Affordable Care Act they so hated? We look to history. Then we call Newt Gingrich. Guests: Margot Sanger-Katz, who has been reporting on our health care system for years; Newt Gingrich, a former Republican speaker of the House. For more information on today’s episode, visit http://nyti.ms/2mm4LVi.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zrXEf6nq7AFy4aauxEK363zqTtKwpS_P2M4B13sCJVc</guid>
      <pubDate>Wed, 08 Mar 2017 10:41:17 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:47</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/04077d51-31c6-40cc-aa4d-92197a9195cd.mp3" type="audio/mpeg" length="18994155"/>
    </item>
    <item>
      <title>Tuesday, March 7, 2017</title>
      <description>
        <![CDATA[The Trump administration issued a new ban on travel from predominantly Muslim countries. Has the policy changed — or just the message? And a slow-paced television drama about a bygone era in Russian-American relations has suddenly taken on a whole new urgency and relevance. Guests: Nicholas Kulish, Maggie Haberman and James Poniewozik, a reporter for the Arts section. For more information on today’s episode, visit http://nyti.ms/2mmbD5c.]]>
      </description>
      <itunes:title>Tuesday, March 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The Trump administration issued a new ban on travel from predominantly Muslim countries. Has the policy changed — or just the message? And a slow-paced television drama about a bygone era in Russian-American relations has suddenly taken on a whole new urgency and relevance. Guests: Nicholas Kulish, Maggie Haberman and James Poniewozik, a reporter for the Arts section. For more information on today’s episode, visit http://nyti.ms/2mmbD5c.</itunes:summary>
      <content:encoded>
        <![CDATA[The Trump administration issued a new ban on travel from predominantly Muslim countries. Has the policy changed — or just the message? And a slow-paced television drama about a bygone era in Russian-American relations has suddenly taken on a whole new urgency and relevance. Guests: Nicholas Kulish, Maggie Haberman and James Poniewozik, a reporter for the Arts section. For more information on today’s episode, visit http://nyti.ms/2mmbD5c.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/jc-7iOEDFqhiCDlhUdiRw6yaqCd-3d9gYxltdw2oIEQ</guid>
      <pubDate>Tue, 07 Mar 2017 10:46:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d9f32186-f721-45df-aa5e-b335b23b29c9.mp3" type="audio/mpeg" length="19948773"/>
    </item>
    <item>
      <title>Monday, March 6, 2017</title>
      <description>
        <![CDATA[We bring you two newly revealed stories about the transition of power from one president to the next. One is a story of warning; the other a story of accusation. Guests: David E. Sanger and William J. Broad, who have reported together on nuclear arms and missile defense for decades. For more information on today’s episode, visit http://nyti.ms/2lRvGXb.]]>
      </description>
      <itunes:title>Monday, March 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>We bring you two newly revealed stories about the transition of power from one president to the next. One is a story of warning; the other a story of accusation. Guests: David E. Sanger and William J. Broad, who have reported together on nuclear arms and missile defense for decades. For more information on today’s episode, visit http://nyti.ms/2lRvGXb.</itunes:summary>
      <content:encoded>
        <![CDATA[We bring you two newly revealed stories about the transition of power from one president to the next. One is a story of warning; the other a story of accusation. Guests: David E. Sanger and William J. Broad, who have reported together on nuclear arms and missile defense for decades. For more information on today’s episode, visit http://nyti.ms/2lRvGXb.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dNE_YSYQzBBY6pNlE1nZL4H0jJDli90fcD5tfxO5cHk</guid>
      <pubDate>Mon, 06 Mar 2017 10:44:07 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:46</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/6b860ce1-e58d-4689-9a48-39313164b708.mp3" type="audio/mpeg" length="21868878"/>
    </item>
    <item>
      <title>Friday, March 3, 2017</title>
      <description>
        <![CDATA[What was Jeff Sessions, the new attorney general, doing meeting with the Russian ambassador two months before election day? And who is this mysterious Russian ambassador who has caused so much trouble for not one but two senior officials in the Trump White House? Guests: Matthew Rosenberg, a national security reporter for The New  York Times; Peter Baker, our chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2mRrvQa.]]>
      </description>
      <itunes:title>Friday, March 3, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What was Jeff Sessions, the new attorney general, doing meeting with the Russian ambassador two months before election day? And who is this mysterious Russian ambassador who has caused so much trouble for not one but two senior officials in the Trump White House? Guests: Matthew Rosenberg, a national security reporter for The New  York Times; Peter Baker, our chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2mRrvQa.</itunes:summary>
      <content:encoded>
        <![CDATA[What was Jeff Sessions, the new attorney general, doing meeting with the Russian ambassador two months before election day? And who is this mysterious Russian ambassador who has caused so much trouble for not one but two senior officials in the Trump White House? Guests: Matthew Rosenberg, a national security reporter for The New  York Times; Peter Baker, our chief White House correspondent. For more information on today’s episode, visit http://nyti.ms/2mRrvQa.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/qOTBZQuwEynoifEvRC1DYwR_FR6umkru3B8F0-pO53s</guid>
      <pubDate>Fri, 03 Mar 2017 10:54:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:59</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/82edb8b7-d9dc-4677-8a5e-a7778e42463e.mp3" type="audio/mpeg" length="20154409"/>
    </item>
    <item>
      <title>Thursday, March 2, 2017</title>
      <description>
        <![CDATA[Public assassinations. Chemical weapons in international airports. Open threats of nuclear war. Is North Korea’s strategy so crazy that it just might work? And what we know about President Trump’s plan for “merit-based” immigration. Guests: Max Fisher and Amanda Taub, who write the Interpreter column for The New York Times; Julie Hirschfeld Davis, a White House reporter. For more information on today’s episode, visit http://nyti.ms/2mmdxFp.]]>
      </description>
      <itunes:title>Thursday, March 2, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Public assassinations. Chemical weapons in international airports. Open threats of nuclear war. Is North Korea’s strategy so crazy that it just might work? And what we know about President Trump’s plan for “merit-based” immigration. Guests: Max Fisher and Amanda Taub, who write the Interpreter column for The New York Times; Julie Hirschfeld Davis, a White House reporter. For more information on today’s episode, visit http://nyti.ms/2mmdxFp.</itunes:summary>
      <content:encoded>
        <![CDATA[Public assassinations. Chemical weapons in international airports. Open threats of nuclear war. Is North Korea’s strategy so crazy that it just might work? And what we know about President Trump’s plan for “merit-based” immigration. Guests: Max Fisher and Amanda Taub, who write the Interpreter column for The New York Times; Julie Hirschfeld Davis, a White House reporter. For more information on today’s episode, visit http://nyti.ms/2mmdxFp.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/6DKYxAg27nfq09fMQ9FYDr9uc9hTXUqHeydmkFb5APg</guid>
      <pubDate>Thu, 02 Mar 2017 10:40:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:05</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/671712c8-d806-4bb1-9212-b82468fdda74.mp3" type="audio/mpeg" length="21201815"/>
    </item>
    <item>
      <title>Wednesday, Mar. 1, 2017</title>
      <description>
        <![CDATA[In his speech to Congress on Tuesday night, President Trump tells the story of America. It’s a story that looks back, but it also looks forward with an optimistic view of where we’ll be nine years from now, on our 250th anniversary. Guests: Patrick Healy, the deputy culture editor and a former political reporter for The New York Times; Carl Hulse, The Times’s chief Washington correspondent. For more information on today’s episode, visit http://nyti.ms/2mes1ab.]]>
      </description>
      <itunes:title>Wednesday, Mar. 1, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In his speech to Congress on Tuesday night, President Trump tells the story of America. It’s a story that looks back, but it also looks forward with an optimistic view of where we’ll be nine years from now, on our 250th anniversary. Guests: Patrick Healy, the deputy culture editor and a former political reporter for The New York Times; Carl Hulse, The Times’s chief Washington correspondent. For more information on today’s episode, visit http://nyti.ms/2mes1ab.</itunes:summary>
      <content:encoded>
        <![CDATA[In his speech to Congress on Tuesday night, President Trump tells the story of America. It’s a story that looks back, but it also looks forward with an optimistic view of where we’ll be nine years from now, on our 250th anniversary. Guests: Patrick Healy, the deputy culture editor and a former political reporter for The New York Times; Carl Hulse, The Times’s chief Washington correspondent. For more information on today’s episode, visit http://nyti.ms/2mes1ab.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/XK9dgSou_rrPAQEnUKeVoYoWrnr2I2etBNDDjK6Wzuw</guid>
      <pubDate>Wed, 01 Mar 2017 10:55:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/377e203d-534c-4192-bc6d-a632433a6636.mp3" type="audio/mpeg" length="18731258"/>
    </item>
    <item>
      <title>Tuesday, Feb. 28, 2017</title>
      <description>
        <![CDATA[How a dinner party in Washington held months before Donald Trump announced his run for president laid the groundwork for his sweeping immigration plans today. Guests: Emily Bazelon, a staff writer for The New York Times Magazine; Joe Cochrane, a correspondent for the International New York Times. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </description>
      <itunes:title>Tuesday, Feb. 28, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>How a dinner party in Washington held months before Donald Trump announced his run for president laid the groundwork for his sweeping immigration plans today. Guests: Emily Bazelon, a staff writer for The New York Times Magazine; Joe Cochrane, a correspondent for the International New York Times. For more information on today’s episode, visit nytimes.com/thedaily.</itunes:summary>
      <content:encoded>
        <![CDATA[How a dinner party in Washington held months before Donald Trump announced his run for president laid the groundwork for his sweeping immigration plans today. Guests: Emily Bazelon, a staff writer for The New York Times Magazine; Joe Cochrane, a correspondent for the International New York Times. For more information on today’s episode, visit nytimes.com/thedaily.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/zup9Ak9VtSl4A9lpeUKt-XNNs_qFWbPEuPbJcckMaks</guid>
      <pubDate>Tue, 28 Feb 2017 10:38:14 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:34</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/7cfb64f6-ae80-48ab-837a-a0da254c076d.mp3" type="audio/mpeg" length="19747317"/>
    </item>
    <item>
      <title>Monday, Feb. 27, 2017</title>
      <description>
        <![CDATA[What happened when Immigration and Customs Enforcement agents showed up in a small town that voted overwhelmingly for President Trump, transforming his campaign rhetoric into reality. Guests: Monica Davey, the Chicago bureau chief for The New York Times; Tim Grigsby, a print shop owner in West Frankfort, Ill.; Nicholas Kulish, an investigative reporter for The Times. For more information on today’s episode, visit http://nyti.ms/2lr2eI6.]]>
      </description>
      <itunes:title>Monday, Feb. 27, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What happened when Immigration and Customs Enforcement agents showed up in a small town that voted overwhelmingly for President Trump, transforming his campaign rhetoric into reality. Guests: Monica Davey, the Chicago bureau chief for The New York Times; Tim Grigsby, a print shop owner in West Frankfort, Ill.; Nicholas Kulish, an investigative reporter for The Times. For more information on today’s episode, visit http://nyti.ms/2lr2eI6.</itunes:summary>
      <content:encoded>
        <![CDATA[What happened when Immigration and Customs Enforcement agents showed up in a small town that voted overwhelmingly for President Trump, transforming his campaign rhetoric into reality. Guests: Monica Davey, the Chicago bureau chief for The New York Times; Tim Grigsby, a print shop owner in West Frankfort, Ill.; Nicholas Kulish, an investigative reporter for The Times. For more information on today’s episode, visit http://nyti.ms/2lr2eI6.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/3C4CHvEVSd1VipYGHAFYhPJY07ST9VrwOXfVWdGBST4</guid>
      <pubDate>Mon, 27 Feb 2017 10:34:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/956f9534-ccbf-41f5-ac49-c49988b3e875.mp3" type="audio/mpeg" length="21714233"/>
    </item>
    <item>
      <title>Friday, Feb. 24, 2017</title>
      <description>
        <![CDATA[President Trump’s top deputies delivered a blunt message to the party faithful on Thursday: the Republicans are winning the fight — and it is a fight. Plus a conversation with the director of “Moonlight.” Guests: Jonathan Martin, who has covered the inside story of both political parties for years; Nikole Hannah-Jones, a staff writer for the New York Times Magazine. For more information on today’s episode, visit http://nyti.ms/2lLN9U9.]]>
      </description>
      <itunes:title>Friday, Feb. 24, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s top deputies delivered a blunt message to the party faithful on Thursday: the Republicans are winning the fight — and it is a fight. Plus a conversation with the director of “Moonlight.” Guests: Jonathan Martin, who has covered the inside story of both political parties for years; Nikole Hannah-Jones, a staff writer for the New York Times Magazine. For more information on today’s episode, visit http://nyti.ms/2lLN9U9.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump’s top deputies delivered a blunt message to the party faithful on Thursday: the Republicans are winning the fight — and it is a fight. Plus a conversation with the director of “Moonlight.” Guests: Jonathan Martin, who has covered the inside story of both political parties for years; Nikole Hannah-Jones, a staff writer for the New York Times Magazine. For more information on today’s episode, visit http://nyti.ms/2lLN9U9.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/bDOQ1KFOghQPpcFpubGgY3Unf1Gg5HNUdfJ2XOzcYSI</guid>
      <pubDate>Fri, 24 Feb 2017 10:36:36 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:12</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/feb233f2-d4ab-4f51-9577-f171a87ee334.mp3" type="audio/mpeg" length="19406680"/>
    </item>
    <item>
      <title>Thursday, Feb. 23, 2017</title>
      <description>
        <![CDATA[Rukmini Callimachi takes us into Iraq to see if a major victory over the Islamic State is really at hand in the streets of Mosul. Guests: Ms. Callimachi, a New York Times correspondent covering terrorism; Nathaniel Popper, a Times reporter covering finance and technology. For more information on today’s episode, visit http://nyti.ms/2lvdohI.]]>
      </description>
      <itunes:title>Thursday, Feb. 23, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Rukmini Callimachi takes us into Iraq to see if a major victory over the Islamic State is really at hand in the streets of Mosul. Guests: Ms. Callimachi, a New York Times correspondent covering terrorism; Nathaniel Popper, a Times reporter covering finance and technology. For more information on today’s episode, visit http://nyti.ms/2lvdohI.</itunes:summary>
      <content:encoded>
        <![CDATA[Rukmini Callimachi takes us into Iraq to see if a major victory over the Islamic State is really at hand in the streets of Mosul. Guests: Ms. Callimachi, a New York Times correspondent covering terrorism; Nathaniel Popper, a Times reporter covering finance and technology. For more information on today’s episode, visit http://nyti.ms/2lvdohI.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Vy9wlIk6fJTjm-YUACte06G9AObkd3Tpz-srfuMHAP4</guid>
      <pubDate>Thu, 23 Feb 2017 10:48:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:21</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/e8024a6d-5614-4a38-9047-9c986226ee7e.mp3" type="audio/mpeg" length="19550458"/>
    </item>
    <item>
      <title>Wednesday, Feb. 22, 2017</title>
      <description>
        <![CDATA[Are 11 million people suddenly facing deportation? What we know and don’t know about the Trump administration’s new plan for undocumented immigrants. Guests: Michael D. Shear, a White House reporter at The New York Times, and Caitlin Dickerson, a national reporter who writes about immigration; Sheriff Mark Napier of Pima County, Ariz. For more information on today’s episode, visit http://nyti.ms/2lc3H5e.]]>
      </description>
      <itunes:title>Wednesday, Feb. 22, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Are 11 million people suddenly facing deportation? What we know and don’t know about the Trump administration’s new plan for undocumented immigrants. Guests: Michael D. Shear, a White House reporter at The New York Times, and Caitlin Dickerson, a national reporter who writes about immigration; Sheriff Mark Napier of Pima County, Ariz. For more information on today’s episode, visit http://nyti.ms/2lc3H5e.</itunes:summary>
      <content:encoded>
        <![CDATA[Are 11 million people suddenly facing deportation? What we know and don’t know about the Trump administration’s new plan for undocumented immigrants. Guests: Michael D. Shear, a White House reporter at The New York Times, and Caitlin Dickerson, a national reporter who writes about immigration; Sheriff Mark Napier of Pima County, Ariz. For more information on today’s episode, visit http://nyti.ms/2lc3H5e.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/wUOpy690919u1U2lIGedoL0FbUKdSU51SvxLr8w5J_4</guid>
      <pubDate>Wed, 22 Feb 2017 10:30:41 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:58</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/fe9e8bcc-1997-4879-a096-5e3620c4d602.mp3" type="audio/mpeg" length="20128914"/>
    </item>
    <item>
      <title>Tuesday, Feb. 21, 2017</title>
      <description>
        <![CDATA[Who are the 500 private citizens with unprecedented access to President Trump on the weekends? And what is the “deep state”? Guests: Scott Shane, who has covered national security and the U.S. intelligence community for The Times for decades, and Nicholas Confessore and Maggie Haberman, who unmasked the secret list of Mar-a-Lago members. For more information on today’s episode, visit http://nyti.ms/2lEWRbt.]]>
      </description>
      <itunes:title>Tuesday, Feb. 21, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Who are the 500 private citizens with unprecedented access to President Trump on the weekends? And what is the “deep state”? Guests: Scott Shane, who has covered national security and the U.S. intelligence community for The Times for decades, and Nicholas Confessore and Maggie Haberman, who unmasked the secret list of Mar-a-Lago members. For more information on today’s episode, visit http://nyti.ms/2lEWRbt.</itunes:summary>
      <content:encoded>
        <![CDATA[Who are the 500 private citizens with unprecedented access to President Trump on the weekends? And what is the “deep state”? Guests: Scott Shane, who has covered national security and the U.S. intelligence community for The Times for decades, and Nicholas Confessore and Maggie Haberman, who unmasked the secret list of Mar-a-Lago members. For more information on today’s episode, visit http://nyti.ms/2lEWRbt.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/KJvpIL69-VdlSBv3E9StMw430XUuhfT462crTe040L8</guid>
      <pubDate>Tue, 21 Feb 2017 10:38:43 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:08</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/51ac348f-b323-4257-94df-2e357abf7a92.mp3" type="audio/mpeg" length="19337299"/>
    </item>
    <item>
      <title>Friday, Feb. 17, 2017</title>
      <description>
        <![CDATA[President Trump’s sprawling surprise news conference and the view from Russia. Guests: Jim Rutenberg, the media columnist for The New York Times; Neil MacFarquhar, The Times’s Moscow bureau chief. For more information on today’s episode, visit http://nyti.ms/2m6gM0O.]]>
      </description>
      <itunes:title>Friday, Feb. 17, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump’s sprawling surprise news conference and the view from Russia. Guests: Jim Rutenberg, the media columnist for The New York Times; Neil MacFarquhar, The Times’s Moscow bureau chief. For more information on today’s episode, visit http://nyti.ms/2m6gM0O.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump’s sprawling surprise news conference and the view from Russia. Guests: Jim Rutenberg, the media columnist for The New York Times; Neil MacFarquhar, The Times’s Moscow bureau chief. For more information on today’s episode, visit http://nyti.ms/2m6gM0O.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/UCpmoU7gVt0XB3OyNN1zqkwzevjcrhVp4tP8sPRUATw</guid>
      <pubDate>Fri, 17 Feb 2017 10:30:04 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:37</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/cc8cdc0b-2c86-4514-bbcc-8d81bdbf0437.mp3" type="audio/mpeg" length="17876532"/>
    </item>
    <item>
      <title>Thursday, Feb. 16, 2017</title>
      <description>
        <![CDATA[President Trump says peace in the Middle East does not require a two-state deal. What we know and what we don’t about the Trump campaign’s communication with Russia. And why did Republicans turn on Andrew Puzder? Guests: Mark Mazzetti; Alan Rappeport. For more information on today’s episode, visit http://nyti.ms/2m1BDRS.]]>
      </description>
      <itunes:title>Thursday, Feb. 16, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>President Trump says peace in the Middle East does not require a two-state deal. What we know and what we don’t about the Trump campaign’s communication with Russia. And why did Republicans turn on Andrew Puzder? Guests: Mark Mazzetti; Alan Rappeport. For more information on today’s episode, visit http://nyti.ms/2m1BDRS.</itunes:summary>
      <content:encoded>
        <![CDATA[President Trump says peace in the Middle East does not require a two-state deal. What we know and what we don’t about the Trump campaign’s communication with Russia. And why did Republicans turn on Andrew Puzder? Guests: Mark Mazzetti; Alan Rappeport. For more information on today’s episode, visit http://nyti.ms/2m1BDRS.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/z3bS51HQ6ERCqzXU0VO0rX-zBOj6ZFIO2SsynwIIF18</guid>
      <pubDate>Thu, 16 Feb 2017 10:43:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/455175b9-11de-44bd-b96d-6e643749af5c.mp3" type="audio/mpeg" length="16964545"/>
    </item>
    <item>
      <title>Wednesday, Feb. 15, 2017</title>
      <description>
        <![CDATA[From fateful call to resignation, the 47-day fall of President Trump’s national security adviser, Michael T. Flynn. We tell the whole story. Guest: Matthew Rosenberg, a national security reporter for The New York Times who has known Mr. Flynn for years. For more information on today’s episode, visit http://nyti.ms/2l7w8ls.]]>
      </description>
      <itunes:title>Wednesday, Feb. 15, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>From fateful call to resignation, the 47-day fall of President Trump’s national security adviser, Michael T. Flynn. We tell the whole story. Guest: Matthew Rosenberg, a national security reporter for The New York Times who has known Mr. Flynn for years. For more information on today’s episode, visit http://nyti.ms/2l7w8ls.</itunes:summary>
      <content:encoded>
        <![CDATA[From fateful call to resignation, the 47-day fall of President Trump’s national security adviser, Michael T. Flynn. We tell the whole story. Guest: Matthew Rosenberg, a national security reporter for The New York Times who has known Mr. Flynn for years. For more information on today’s episode, visit http://nyti.ms/2l7w8ls.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/2fs-pbYURmWFXUsBfX6HddFLC6_IyUTHk3c6n3wJfLw</guid>
      <pubDate>Wed, 15 Feb 2017 10:33:03 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:17:40</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/5493e11b-0851-4bbe-9920-649357acdc8f.mp3" type="audio/mpeg" length="16975412"/>
    </item>
    <item>
      <title>Tuesday, Feb. 14, 2017</title>
      <description>
        <![CDATA[America and the Middle East in the Trump administration: deep, personal ties and an emerging plan for peace. Guests: Jodi Kantor, a reporter for The New York Times; Amanda Taub and Max Fisher, who write The Times’ Interpreter column. For more information on today’s episode, visit http://nyti.ms/2kFDqvC.]]>
      </description>
      <itunes:title>Tuesday, Feb. 14, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>America and the Middle East in the Trump administration: deep, personal ties and an emerging plan for peace. Guests: Jodi Kantor, a reporter for The New York Times; Amanda Taub and Max Fisher, who write The Times’ Interpreter column. For more information on today’s episode, visit http://nyti.ms/2kFDqvC.</itunes:summary>
      <content:encoded>
        <![CDATA[America and the Middle East in the Trump administration: deep, personal ties and an emerging plan for peace. Guests: Jodi Kantor, a reporter for The New York Times; Amanda Taub and Max Fisher, who write The Times’ Interpreter column. For more information on today’s episode, visit http://nyti.ms/2kFDqvC.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/EN9b3LJs9reZAslEfusIArvzd3RfsGBBm9VyCLeQZKI</guid>
      <pubDate>Tue, 14 Feb 2017 10:32:34 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/ebc5b634-2d11-4e99-a904-aa407e6a3143.mp3" type="audio/mpeg" length="19617332"/>
    </item>
    <item>
      <title>Monday, Feb. 13, 2017</title>
      <description>
        <![CDATA[Where did Stephen Miller come from, and how will his views on immigration influence the presidency? Also, farmers torn between support for President Trump and fear that he might deport their employees. Guests: Glenn Thrush, White House correspondent for The New York Times; Caitlin Dickerson, a reporter for The Times; and Jeff Marchini, a radicchio farmer in California. For more information on today’s episode, visit http://nyti.ms/2kiWbsF.]]>
      </description>
      <itunes:title>Monday, Feb. 13, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Where did Stephen Miller come from, and how will his views on immigration influence the presidency? Also, farmers torn between support for President Trump and fear that he might deport their employees. Guests: Glenn Thrush, White House correspondent for The New York Times; Caitlin Dickerson, a reporter for The Times; and Jeff Marchini, a radicchio farmer in California. For more information on today’s episode, visit http://nyti.ms/2kiWbsF.</itunes:summary>
      <content:encoded>
        <![CDATA[Where did Stephen Miller come from, and how will his views on immigration influence the presidency? Also, farmers torn between support for President Trump and fear that he might deport their employees. Guests: Glenn Thrush, White House correspondent for The New York Times; Caitlin Dickerson, a reporter for The Times; and Jeff Marchini, a radicchio farmer in California. For more information on today’s episode, visit http://nyti.ms/2kiWbsF.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/-23EqylIE_5oQGkq6-ZN6GbOrRJMoY9VdY5mtphRtRw</guid>
      <pubDate>Mon, 13 Feb 2017 10:57:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:07</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/044215c8-3861-4be0-a827-9f0e14dda020.mp3" type="audio/mpeg" length="19316819"/>
    </item>
    <item>
      <title>Friday, Feb. 10, 2017</title>
      <description>
        <![CDATA[Is President Trump’s travel ban headed to the Supreme Court? Did the boy in the photograph make it to America? Plus: your stories about living through history.]]>
      </description>
      <itunes:title>Friday, Feb. 10, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Is President Trump’s travel ban headed to the Supreme Court? Did the boy in the photograph make it to America? Plus: your stories about living through history.</itunes:summary>
      <content:encoded>
        <![CDATA[Is President Trump’s travel ban headed to the Supreme Court? Did the boy in the photograph make it to America? Plus: your stories about living through history.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/FMfoVHWTM_YpF8ywcSpBnzDAWvwV4uKPkXqk6cavLIM</guid>
      <pubDate>Fri, 10 Feb 2017 10:21:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:26</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/deffb675-c456-4b7c-b050-4d2e57cecff6.mp3" type="audio/mpeg" length="19617750"/>
    </item>
    <item>
      <title>Thursday, Feb. 9. 2017</title>
      <description>
        <![CDATA[Is Senator Warren actually a danger to the Democratic party? And what does Trump’s election mean for the markets? We discuss.]]>
      </description>
      <itunes:title>Thursday, Feb. 9. 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Is Senator Warren actually a danger to the Democratic party? And what does Trump’s election mean for the markets? We discuss.</itunes:summary>
      <content:encoded>
        <![CDATA[Is Senator Warren actually a danger to the Democratic party? And what does Trump’s election mean for the markets? We discuss.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/uHs_jiaMWUE9jZMqBAVUJscGbYIDt1C3jY_ftJ9BBNI</guid>
      <pubDate>Thu, 09 Feb 2017 10:23:23 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:18:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/945d19c6-ce29-4cb3-b536-30adcf0b09ad.mp3" type="audio/mpeg" length="17453557"/>
    </item>
    <item>
      <title>Wednesday, Feb. 8, 2017</title>
      <description>
        <![CDATA[The travel ban litigation, live-streamed. And why the 60-year-old words of the novelist James Baldwin captured in the film “I Am Not Your Negro” are so resonant right now. ]]>
      </description>
      <itunes:title>Wednesday, Feb. 8, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The travel ban litigation, live-streamed. And why the 60-year-old words of the novelist James Baldwin captured in the film “I Am Not Your Negro” are so resonant right now. </itunes:summary>
      <content:encoded>
        <![CDATA[The travel ban litigation, live-streamed. And why the 60-year-old words of the novelist James Baldwin captured in the film “I Am Not Your Negro” are so resonant right now. ]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/862LUqNxEC2NYdxo9BFr3sBlEUk6hMsD2CF0B9gq7MQ</guid>
      <pubDate>Wed, 08 Feb 2017 10:50:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:20:16</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/88f28d2d-f185-4ad5-98dc-8ac3befccb7b.mp3" type="audio/mpeg" length="19461851"/>
    </item>
    <item>
      <title>Tuesday, Feb. 7, 2017</title>
      <description>
        <![CDATA[Why the nomination of Betsy DeVos for secretary of education is President Trump’s most controversial appointment in an already controversial cabinet. Plus: the meaning of four hardback chairs in the Oval Office.]]>
      </description>
      <itunes:title>Tuesday, Feb. 7, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Why the nomination of Betsy DeVos for secretary of education is President Trump’s most controversial appointment in an already controversial cabinet. Plus: the meaning of four hardback chairs in the Oval Office.</itunes:summary>
      <content:encoded>
        <![CDATA[Why the nomination of Betsy DeVos for secretary of education is President Trump’s most controversial appointment in an already controversial cabinet. Plus: the meaning of four hardback chairs in the Oval Office.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/DgBxO8lgDxEly7y-NGqPHEfiHqMUcPe_ja1BYr03y_I</guid>
      <pubDate>Tue, 07 Feb 2017 10:20:05 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:22</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/00ee7174-2344-4002-a62f-a5b6cbacf1af.mp3" type="audio/mpeg" length="18598347"/>
    </item>
    <item>
      <title>Monday, Feb. 6, 2017</title>
      <description>
        <![CDATA[What single figure connects the 2008 financial crisis, the creation of the 2010 Dodd-Frank Act, the Tea Party movement, Donald J. Trump’s election and, now, the potential dismantling of the biggest safeguard against America’s economic ruin? His name is Gary D. Cohn. Also, a Times investigation goes inside the world of the Islamic State and finds that terrorists no longer have to cross borders to carry out their attacks.]]>
      </description>
      <itunes:title>Monday, Feb. 6, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>What single figure connects the 2008 financial crisis, the creation of the 2010 Dodd-Frank Act, the Tea Party movement, Donald J. Trump’s election and, now, the potential dismantling of the biggest safeguard against America’s economic ruin? His name is Gary D. Cohn. Also, a Times investigation goes inside the world of the Islamic State and finds that terrorists no longer have to cross borders to carry out their attacks.</itunes:summary>
      <content:encoded>
        <![CDATA[What single figure connects the 2008 financial crisis, the creation of the 2010 Dodd-Frank Act, the Tea Party movement, Donald J. Trump’s election and, now, the potential dismantling of the biggest safeguard against America’s economic ruin? His name is Gary D. Cohn. Also, a Times investigation goes inside the world of the Islamic State and finds that terrorists no longer have to cross borders to carry out their attacks.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/hEU3jczQz949KcmfOMTd7d2yvdJ5aGQQaHIoS6zEgFE</guid>
      <pubDate>Mon, 06 Feb 2017 10:21:45 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:31</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/c0916c6b-61b3-4d13-9dfa-96afaeb3fde1.mp3" type="audio/mpeg" length="18749231"/>
    </item>
    <item>
      <title>Friday, Feb. 3, 2017</title>
      <description>
        <![CDATA[The biggest story in sports meets the biggest story in politics. And a bloody mission in Yemen reminds us that a new administration doesn’t always mean a new start. ]]>
      </description>
      <itunes:title>Friday, Feb. 3, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>The biggest story in sports meets the biggest story in politics. And a bloody mission in Yemen reminds us that a new administration doesn’t always mean a new start. </itunes:summary>
      <content:encoded>
        <![CDATA[The biggest story in sports meets the biggest story in politics. And a bloody mission in Yemen reminds us that a new administration doesn’t always mean a new start. ]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/In2dGOFxV52Kl-p_LKaL64v8e7aFqvwKXfLpt-KDc2Y</guid>
      <pubDate>Fri, 03 Feb 2017 10:31:13 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:16:30</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d0cf93ee-d476-4e01-acb8-38c25a4f4a63.mp3" type="audio/mpeg" length="15843160"/>
    </item>
    <item>
      <title>Thursday, Feb. 2, 2017</title>
      <description>
        <![CDATA[Who is influencing our new president’s views of Islam and radical Islamic terrorism? Are we seeing the beginning of a Tea Party for the Left? And why are its leaders looking to Republicans for inspiration? More on that — plus Beyoncé — on today’s show.]]>
      </description>
      <itunes:title>Thursday, Feb. 2, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Who is influencing our new president’s views of Islam and radical Islamic terrorism? Are we seeing the beginning of a Tea Party for the Left? And why are its leaders looking to Republicans for inspiration? More on that — plus Beyoncé — on today’s show.</itunes:summary>
      <content:encoded>
        <![CDATA[Who is influencing our new president’s views of Islam and radical Islamic terrorism? Are we seeing the beginning of a Tea Party for the Left? And why are its leaders looking to Republicans for inspiration? More on that — plus Beyoncé — on today’s show.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/1ft_DGtLLsokwij1HwsWsLEGxwVHdD_TZN8quEGB77Y</guid>
      <pubDate>Thu, 02 Feb 2017 10:40:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:22:10</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/a5161046-eda3-4fac-9653-01b5f12d38e0.mp3" type="audio/mpeg" length="21289169"/>
    </item>
    <item>
      <title>Wednesday, Feb. 1, 2017</title>
      <description>
        <![CDATA[In a ceremony made for prime-time television, President Trump announced his Supreme Court nominee: Neil M. Gorsuch, a conservative judge with a sterling résumé. We spent the night at The New York Times talking with some of our most insightful colleagues about what the nomination means. We also get on the phone with the chief executive of Hobby Lobby, a company at the center of one of Judge Gorsuch’s most important cases.]]>
      </description>
      <itunes:title>Wednesday, Feb. 1, 2017</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>In a ceremony made for prime-time television, President Trump announced his Supreme Court nominee: Neil M. Gorsuch, a conservative judge with a sterling résumé. We spent the night at The New York Times talking with some of our most insightful colleagues about what the nomination means. We also get on the phone with the chief executive of Hobby Lobby, a company at the center of one of Judge Gorsuch’s most important cases.</itunes:summary>
      <content:encoded>
        <![CDATA[In a ceremony made for prime-time television, President Trump announced his Supreme Court nominee: Neil M. Gorsuch, a conservative judge with a sterling résumé. We spent the night at The New York Times talking with some of our most insightful colleagues about what the nomination means. We also get on the phone with the chief executive of Hobby Lobby, a company at the center of one of Judge Gorsuch’s most important cases.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/8fJKNp6i648MNqY585bYwmeqWbklSt3qUuh0mzpMetA</guid>
      <pubDate>Wed, 01 Feb 2017 10:18:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:19:32</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/d5e71a9d-3b08-4b2c-b948-453ca66c4eba.mp3" type="audio/mpeg" length="18763441"/>
    </item>
    <item>
      <title>Coming Soon: “The Daily”</title>
      <description>
        <![CDATA[This is how the news should sound. Fifteen minutes a day. Five days a week. Hosted by Michael Barbaro. Powered by New York Times journalism. Starting Feb. 1.]]>
      </description>
      <itunes:title>Coming Soon: “The Daily”</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>This is how the news should sound. Fifteen minutes a day. Five days a week. Hosted by Michael Barbaro. Powered by New York Times journalism. Starting Feb. 1.</itunes:summary>
      <content:encoded>
        <![CDATA[This is how the news should sound. Fifteen minutes a day. Five days a week. Hosted by Michael Barbaro. Powered by New York Times journalism. Starting Feb. 1.]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/dBmW5PqKxnbikwBHJNneTyAG_-Em4dVvrXuGQCBRNIw</guid>
      <pubDate>Tue, 17 Jan 2017 21:19:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/01/1b/f3/d6/011bf3d6-a448-4533-967b-e2f19e376480/7fdd4469c1b5cb3b66aa7dcc9fa21f138efe9a0310a8a269f3dcd07c83a552844fcc445ea2d53db1e55d6fb077aeaa8a1566851f8f2d8ac4349d9d23a87a69f5.jpeg"/>
      <itunes:duration>00:03:09</itunes:duration>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/rss.art19.com/episodes/74b36865-c761-4c81-9df4-11cd76915ec6.mp3" type="audio/mpeg" length="3039399"/>
    </item>
  </channel>
</rss>

    http_version: 
  recorded_at: Thu, 06 Feb 2020 09:19:41 GMT
recorded_with: VCR 5.0.0
